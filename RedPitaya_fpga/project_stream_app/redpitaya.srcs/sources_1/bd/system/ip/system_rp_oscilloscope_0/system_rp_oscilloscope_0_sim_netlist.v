// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2020.1 (lin64) Build 2902540 Wed May 27 19:54:35 MDT 2020
// Date        : Wed Sep 28 16:46:59 2022
// Host        : pinceta-MS-7B98 running 64-bit Ubuntu 20.04.5 LTS
// Command     : write_verilog -force -mode funcsim
//               /home/pinceta/RedPitaya/RedPitaya/fpga/classic/prj/stream_app/project/redpitaya.srcs/sources_1/bd/system/ip/system_rp_oscilloscope_0/system_rp_oscilloscope_0_sim_netlist.v
// Design      : system_rp_oscilloscope_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7z010clg400-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "system_rp_oscilloscope_0,rp_oscilloscope,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* IP_DEFINITION_SOURCE = "package_project" *) 
(* X_CORE_INFO = "rp_oscilloscope,Vivado 2020.1" *) 
(* NotValidForBitStream *)
module system_rp_oscilloscope_0
   (clk,
    rst_n,
    intr,
    adc_data_ch1,
    adc_data_ch2,
    event_ip_trig,
    event_ip_stop,
    event_ip_start,
    event_ip_reset,
    trig_ip,
    trig_out,
    osc1_event_op,
    osc1_trig_op,
    osc2_event_op,
    osc2_trig_op,
    loopback_sel,
    s_axi_reg_aclk,
    s_axi_reg_aresetn,
    s_axi_reg_awaddr,
    s_axi_reg_awprot,
    s_axi_reg_awvalid,
    s_axi_reg_awready,
    s_axi_reg_wdata,
    s_axi_reg_wstrb,
    s_axi_reg_wvalid,
    s_axi_reg_wready,
    s_axi_reg_bresp,
    s_axi_reg_bvalid,
    s_axi_reg_bready,
    s_axi_reg_araddr,
    s_axi_reg_arprot,
    s_axi_reg_arvalid,
    s_axi_reg_arready,
    s_axi_reg_rdata,
    s_axi_reg_rresp,
    s_axi_reg_rvalid,
    s_axi_reg_rready,
    m_axi_osc1_aclk,
    m_axi_osc1_aresetn,
    m_axi_osc1_awaddr,
    m_axi_osc1_awlen,
    m_axi_osc1_awsize,
    m_axi_osc1_awburst,
    m_axi_osc1_awprot,
    m_axi_osc1_awcache,
    m_axi_osc1_awvalid,
    m_axi_osc1_awready,
    m_axi_osc1_wdata,
    m_axi_osc1_wstrb,
    m_axi_osc1_wlast,
    m_axi_osc1_wvalid,
    m_axi_osc1_wready,
    m_axi_osc1_bresp,
    m_axi_osc1_bvalid,
    m_axi_osc1_bready,
    m_axi_osc2_aclk,
    m_axi_osc2_aresetn,
    m_axi_osc2_awaddr,
    m_axi_osc2_awlen,
    m_axi_osc2_awsize,
    m_axi_osc2_awburst,
    m_axi_osc2_awprot,
    m_axi_osc2_awcache,
    m_axi_osc2_awvalid,
    m_axi_osc2_awready,
    m_axi_osc2_wdata,
    m_axi_osc2_wstrb,
    m_axi_osc2_wlast,
    m_axi_osc2_wvalid,
    m_axi_osc2_wready,
    m_axi_osc2_bresp,
    m_axi_osc2_bvalid,
    m_axi_osc2_bready);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk, FREQ_HZ 125000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_gen_clk_out1, INSERT_VIP 0" *) input clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 rst_n RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME rst_n, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input rst_n;
  (* X_INTERFACE_INFO = "xilinx.com:signal:interrupt:1.0 intr INTERRUPT" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME intr, SENSITIVITY LEVEL_HIGH, PortWidth 1" *) output intr;
  input [13:0]adc_data_ch1;
  input [13:0]adc_data_ch2;
  input [4:0]event_ip_trig;
  input [4:0]event_ip_stop;
  input [4:0]event_ip_start;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 event_ip_reset RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME event_ip_reset, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input [4:0]event_ip_reset;
  input [5:0]trig_ip;
  output trig_out;
  output [3:0]osc1_event_op;
  output osc1_trig_op;
  output [3:0]osc2_event_op;
  output osc2_trig_op;
  output [7:0]loopback_sel;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_axi_reg_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_reg_aclk, ASSOCIATED_BUSIF s_axi_reg, ASSOCIATED_RESET s_axi_reg_aresetn, FREQ_HZ 125000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_gen_clk_out1, INSERT_VIP 0" *) input s_axi_reg_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 s_axi_reg_aresetn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_reg_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_axi_reg_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg AWADDR" *) input [11:0]s_axi_reg_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg AWPROT" *) input [2:0]s_axi_reg_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg AWVALID" *) input s_axi_reg_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg AWREADY" *) output s_axi_reg_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg WDATA" *) input [31:0]s_axi_reg_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg WSTRB" *) input [3:0]s_axi_reg_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg WVALID" *) input s_axi_reg_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg WREADY" *) output s_axi_reg_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg BRESP" *) output [1:0]s_axi_reg_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg BVALID" *) output s_axi_reg_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg BREADY" *) input s_axi_reg_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg ARADDR" *) input [11:0]s_axi_reg_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg ARPROT" *) input [2:0]s_axi_reg_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg ARVALID" *) input s_axi_reg_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg ARREADY" *) output s_axi_reg_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg RDATA" *) output [31:0]s_axi_reg_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg RRESP" *) output [1:0]s_axi_reg_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg RVALID" *) output s_axi_reg_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_reg RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_reg, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 125000000, ID_WIDTH 0, ADDR_WIDTH 12, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /clk_gen_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_reg_rready;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 m_axi_osc1_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axi_osc1_aclk, ASSOCIATED_BUSIF m_axi_osc1, ASSOCIATED_RESET m_axi_osc1_aresetn, FREQ_HZ 125000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_gen_clk_out1, INSERT_VIP 0" *) input m_axi_osc1_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 m_axi_osc1_aresetn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axi_osc1_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input m_axi_osc1_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 AWADDR" *) output [31:0]m_axi_osc1_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 AWLEN" *) output [7:0]m_axi_osc1_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 AWSIZE" *) output [2:0]m_axi_osc1_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 AWBURST" *) output [1:0]m_axi_osc1_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 AWPROT" *) output [2:0]m_axi_osc1_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 AWCACHE" *) output [3:0]m_axi_osc1_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 AWVALID" *) output m_axi_osc1_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 AWREADY" *) input m_axi_osc1_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 WDATA" *) output [63:0]m_axi_osc1_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 WSTRB" *) output [7:0]m_axi_osc1_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 WLAST" *) output m_axi_osc1_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 WVALID" *) output m_axi_osc1_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 WREADY" *) input m_axi_osc1_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 BRESP" *) input [1:0]m_axi_osc1_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 BVALID" *) input m_axi_osc1_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc1 BREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axi_osc1, DATA_WIDTH 64, PROTOCOL AXI4, FREQ_HZ 125000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE WRITE_ONLY, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 0, SUPPORTS_NARROW_BURST 1, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 256, PHASE 0.0, CLK_DOMAIN /clk_gen_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) output m_axi_osc1_bready;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 m_axi_osc2_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axi_osc2_aclk, ASSOCIATED_BUSIF m_axi_osc2, ASSOCIATED_RESET m_axi_osc2_aresetn, FREQ_HZ 125000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_gen_clk_out1, INSERT_VIP 0" *) input m_axi_osc2_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 m_axi_osc2_aresetn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axi_osc2_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input m_axi_osc2_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 AWADDR" *) output [31:0]m_axi_osc2_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 AWLEN" *) output [7:0]m_axi_osc2_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 AWSIZE" *) output [2:0]m_axi_osc2_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 AWBURST" *) output [1:0]m_axi_osc2_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 AWPROT" *) output [2:0]m_axi_osc2_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 AWCACHE" *) output [3:0]m_axi_osc2_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 AWVALID" *) output m_axi_osc2_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 AWREADY" *) input m_axi_osc2_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 WDATA" *) output [63:0]m_axi_osc2_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 WSTRB" *) output [7:0]m_axi_osc2_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 WLAST" *) output m_axi_osc2_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 WVALID" *) output m_axi_osc2_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 WREADY" *) input m_axi_osc2_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 BRESP" *) input [1:0]m_axi_osc2_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 BVALID" *) input m_axi_osc2_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_osc2 BREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axi_osc2, DATA_WIDTH 64, PROTOCOL AXI4, FREQ_HZ 125000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE WRITE_ONLY, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 0, SUPPORTS_NARROW_BURST 1, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 256, PHASE 0.0, CLK_DOMAIN /clk_gen_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) output m_axi_osc2_bready;

  wire \<const0> ;
  wire \<const1> ;
  wire [13:0]adc_data_ch1;
  wire [13:0]adc_data_ch2;
  wire clk;
  wire [4:0]event_ip_reset;
  wire [4:0]event_ip_start;
  wire [4:0]event_ip_stop;
  wire [4:0]event_ip_trig;
  wire intr;
  wire [7:0]loopback_sel;
  wire m_axi_osc1_aclk;
  wire m_axi_osc1_aresetn;
  wire [31:0]m_axi_osc1_awaddr;
  wire [7:0]m_axi_osc1_awlen;
  wire m_axi_osc1_awready;
  wire m_axi_osc1_awvalid;
  wire m_axi_osc1_bvalid;
  wire [63:0]m_axi_osc1_wdata;
  wire m_axi_osc1_wlast;
  wire m_axi_osc1_wready;
  wire m_axi_osc1_wvalid;
  wire m_axi_osc2_aclk;
  wire m_axi_osc2_aresetn;
  wire [31:0]m_axi_osc2_awaddr;
  wire [7:0]m_axi_osc2_awlen;
  wire m_axi_osc2_awready;
  wire m_axi_osc2_awvalid;
  wire m_axi_osc2_bvalid;
  wire [63:0]m_axi_osc2_wdata;
  wire m_axi_osc2_wlast;
  wire m_axi_osc2_wready;
  wire m_axi_osc2_wvalid;
  wire [3:0]osc1_event_op;
  wire osc1_trig_op;
  wire [3:0]osc2_event_op;
  wire osc2_trig_op;
  wire s_axi_reg_aclk;
  wire [11:0]s_axi_reg_araddr;
  wire s_axi_reg_aresetn;
  wire [2:0]s_axi_reg_arprot;
  wire s_axi_reg_arready;
  wire s_axi_reg_arvalid;
  wire [11:0]s_axi_reg_awaddr;
  wire [2:0]s_axi_reg_awprot;
  wire s_axi_reg_awready;
  wire s_axi_reg_awvalid;
  wire s_axi_reg_bready;
  wire [1:0]s_axi_reg_bresp;
  wire s_axi_reg_bvalid;
  wire [31:0]s_axi_reg_rdata;
  wire s_axi_reg_rready;
  wire [1:0]s_axi_reg_rresp;
  wire s_axi_reg_rvalid;
  wire [31:0]s_axi_reg_wdata;
  wire s_axi_reg_wready;
  wire [3:0]s_axi_reg_wstrb;
  wire s_axi_reg_wvalid;
  wire [5:0]trig_ip;
  wire trig_out;

  assign m_axi_osc1_awburst[1] = \<const0> ;
  assign m_axi_osc1_awburst[0] = \<const1> ;
  assign m_axi_osc1_awcache[3] = \<const0> ;
  assign m_axi_osc1_awcache[2] = \<const0> ;
  assign m_axi_osc1_awcache[1] = \<const1> ;
  assign m_axi_osc1_awcache[0] = \<const1> ;
  assign m_axi_osc1_awprot[2] = \<const0> ;
  assign m_axi_osc1_awprot[1] = \<const0> ;
  assign m_axi_osc1_awprot[0] = \<const0> ;
  assign m_axi_osc1_awsize[2] = \<const0> ;
  assign m_axi_osc1_awsize[1] = \<const1> ;
  assign m_axi_osc1_awsize[0] = \<const1> ;
  assign m_axi_osc1_bready = m_axi_osc1_bvalid;
  assign m_axi_osc1_wstrb[7] = \<const1> ;
  assign m_axi_osc1_wstrb[6] = \<const1> ;
  assign m_axi_osc1_wstrb[5] = \<const1> ;
  assign m_axi_osc1_wstrb[4] = \<const1> ;
  assign m_axi_osc1_wstrb[3] = \<const1> ;
  assign m_axi_osc1_wstrb[2] = \<const1> ;
  assign m_axi_osc1_wstrb[1] = \<const1> ;
  assign m_axi_osc1_wstrb[0] = \<const1> ;
  assign m_axi_osc2_awburst[1] = \<const0> ;
  assign m_axi_osc2_awburst[0] = \<const1> ;
  assign m_axi_osc2_awcache[3] = \<const0> ;
  assign m_axi_osc2_awcache[2] = \<const0> ;
  assign m_axi_osc2_awcache[1] = \<const1> ;
  assign m_axi_osc2_awcache[0] = \<const1> ;
  assign m_axi_osc2_awprot[2] = \<const0> ;
  assign m_axi_osc2_awprot[1] = \<const0> ;
  assign m_axi_osc2_awprot[0] = \<const0> ;
  assign m_axi_osc2_awsize[2] = \<const0> ;
  assign m_axi_osc2_awsize[1] = \<const1> ;
  assign m_axi_osc2_awsize[0] = \<const1> ;
  assign m_axi_osc2_bready = m_axi_osc2_bvalid;
  assign m_axi_osc2_wstrb[7] = \<const1> ;
  assign m_axi_osc2_wstrb[6] = \<const1> ;
  assign m_axi_osc2_wstrb[5] = \<const1> ;
  assign m_axi_osc2_wstrb[4] = \<const1> ;
  assign m_axi_osc2_wstrb[3] = \<const1> ;
  assign m_axi_osc2_wstrb[2] = \<const1> ;
  assign m_axi_osc2_wstrb[1] = \<const1> ;
  assign m_axi_osc2_wstrb[0] = \<const1> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  system_rp_oscilloscope_0_rp_oscilloscope inst
       (.adc_data_ch1(adc_data_ch1),
        .adc_data_ch2(adc_data_ch2),
        .clk(clk),
        .event_ip_reset(event_ip_reset),
        .event_ip_start(event_ip_start),
        .event_ip_stop(event_ip_stop),
        .event_ip_trig(event_ip_trig),
        .intr(intr),
        .loopback_sel(loopback_sel),
        .m_axi_awaddr(m_axi_osc1_awaddr),
        .m_axi_osc1_aclk(m_axi_osc1_aclk),
        .m_axi_osc1_aresetn(m_axi_osc1_aresetn),
        .m_axi_osc1_awlen(m_axi_osc1_awlen),
        .m_axi_osc1_awready(m_axi_osc1_awready),
        .m_axi_osc1_awvalid(m_axi_osc1_awvalid),
        .m_axi_osc1_wdata(m_axi_osc1_wdata),
        .m_axi_osc1_wready(m_axi_osc1_wready),
        .m_axi_osc2_aclk(m_axi_osc2_aclk),
        .m_axi_osc2_aresetn(m_axi_osc2_aresetn),
        .m_axi_osc2_awlen(m_axi_osc2_awlen),
        .m_axi_osc2_awready(m_axi_osc2_awready),
        .m_axi_osc2_awvalid(m_axi_osc2_awvalid),
        .m_axi_osc2_wdata(m_axi_osc2_wdata),
        .m_axi_osc2_wready(m_axi_osc2_wready),
        .m_axi_wlast_reg(m_axi_osc1_wlast),
        .m_axi_wlast_reg_0(m_axi_osc2_wlast),
        .m_axi_wvalid_reg(m_axi_osc1_wvalid),
        .m_axi_wvalid_reg_0(m_axi_osc2_wvalid),
        .osc1_event_op(osc1_event_op),
        .osc1_trig_op(osc1_trig_op),
        .osc2_event_op(osc2_event_op),
        .osc2_trig_op(osc2_trig_op),
        .\req_addr_reg[31] (m_axi_osc2_awaddr),
        .s_axi_reg_aclk(s_axi_reg_aclk),
        .s_axi_reg_araddr(s_axi_reg_araddr),
        .s_axi_reg_aresetn(s_axi_reg_aresetn),
        .s_axi_reg_arprot(s_axi_reg_arprot),
        .s_axi_reg_arready(s_axi_reg_arready),
        .s_axi_reg_arvalid(s_axi_reg_arvalid),
        .s_axi_reg_awaddr(s_axi_reg_awaddr),
        .s_axi_reg_awprot(s_axi_reg_awprot),
        .s_axi_reg_awready(s_axi_reg_awready),
        .s_axi_reg_awvalid(s_axi_reg_awvalid),
        .s_axi_reg_bready(s_axi_reg_bready),
        .s_axi_reg_bresp(s_axi_reg_bresp),
        .s_axi_reg_bvalid(s_axi_reg_bvalid),
        .s_axi_reg_rdata(s_axi_reg_rdata),
        .s_axi_reg_rready(s_axi_reg_rready),
        .s_axi_reg_rresp(s_axi_reg_rresp),
        .s_axi_reg_rvalid(s_axi_reg_rvalid),
        .s_axi_reg_wdata(s_axi_reg_wdata),
        .s_axi_reg_wready(s_axi_reg_wready),
        .s_axi_reg_wstrb(s_axi_reg_wstrb),
        .s_axi_reg_wvalid(s_axi_reg_wvalid),
        .trig_ip(trig_ip),
        .trig_out(trig_out));
endmodule

(* ORIG_REF_NAME = "axi_bram_ctrl" *) 
module system_rp_oscilloscope_0_axi_bram_ctrl
   (s_axi_reg_aresetn,
    bram_en_a,
    bram_we_a,
    s_axi_bvalid,
    bram_addr_a,
    s_axi_rvalid,
    s_axi_arready,
    s_axi_wready,
    s_axi_arvalid,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_wstrb,
    s_axi_awvalid,
    s_axi_wvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_awaddr,
    s_axi_rready);
  output s_axi_reg_aresetn;
  output bram_en_a;
  output [3:0]bram_we_a;
  output s_axi_bvalid;
  output [9:0]bram_addr_a;
  output s_axi_rvalid;
  output s_axi_arready;
  output s_axi_wready;
  input s_axi_arvalid;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [3:0]s_axi_wstrb;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input s_axi_bready;
  input [9:0]s_axi_araddr;
  input [9:0]s_axi_awaddr;
  input s_axi_rready;

  wire [9:0]bram_addr_a;
  wire bram_en_a;
  wire [3:0]bram_we_a;
  wire s_axi_aclk;
  wire [9:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [9:0]s_axi_awaddr;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire s_axi_reg_aresetn;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;

  system_rp_oscilloscope_0_axi_bram_ctrl_top \gext_inst.abcv4_0_ext_inst 
       (.bram_addr_a(bram_addr_a),
        .bram_en_a(bram_en_a),
        .bram_we_a(bram_we_a),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_reg_aresetn(s_axi_reg_aresetn),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "axi_bram_ctrl_top" *) 
module system_rp_oscilloscope_0_axi_bram_ctrl_top
   (s_axi_reg_aresetn,
    bram_en_a,
    bram_we_a,
    s_axi_bvalid,
    bram_addr_a,
    s_axi_rvalid,
    s_axi_arready,
    s_axi_wready,
    s_axi_arvalid,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_wstrb,
    s_axi_awvalid,
    s_axi_wvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_awaddr,
    s_axi_rready);
  output s_axi_reg_aresetn;
  output bram_en_a;
  output [3:0]bram_we_a;
  output s_axi_bvalid;
  output [9:0]bram_addr_a;
  output s_axi_rvalid;
  output s_axi_arready;
  output s_axi_wready;
  input s_axi_arvalid;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [3:0]s_axi_wstrb;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input s_axi_bready;
  input [9:0]s_axi_araddr;
  input [9:0]s_axi_awaddr;
  input s_axi_rready;

  wire [9:0]bram_addr_a;
  wire bram_en_a;
  wire [3:0]bram_we_a;
  wire s_axi_aclk;
  wire [9:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [9:0]s_axi_awaddr;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire s_axi_reg_aresetn;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;

  system_rp_oscilloscope_0_axi_lite \GEN_AXI4LITE.I_AXI_LITE 
       (.bram_addr_a(bram_addr_a),
        .bram_en_a(bram_en_a),
        .bram_we_a(bram_we_a),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_reg_aresetn(s_axi_reg_aresetn),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "axi_lite" *) 
module system_rp_oscilloscope_0_axi_lite
   (s_axi_reg_aresetn,
    bram_en_a,
    bram_we_a,
    s_axi_bvalid,
    bram_addr_a,
    s_axi_rvalid,
    s_axi_arready,
    s_axi_wready,
    s_axi_arvalid,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_wstrb,
    s_axi_awvalid,
    s_axi_wvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_awaddr,
    s_axi_rready);
  output s_axi_reg_aresetn;
  output bram_en_a;
  output [3:0]bram_we_a;
  output s_axi_bvalid;
  output [9:0]bram_addr_a;
  output s_axi_rvalid;
  output s_axi_arready;
  output s_axi_wready;
  input s_axi_arvalid;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [3:0]s_axi_wstrb;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input s_axi_bready;
  input [9:0]s_axi_araddr;
  input [9:0]s_axi_awaddr;
  input s_axi_rready;

  wire \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs[0]_i_1_n_0 ;
  wire \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs[4]_i_1_n_0 ;
  wire \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs[5]_i_1_n_0 ;
  wire \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ;
  wire \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ;
  wire \GEN_NO_RD_CMD_OPT.GEN_ARREADY.axi_arready_int_i_1_n_0 ;
  wire \GEN_NO_RD_CMD_OPT.GEN_ARREADY.axi_arready_int_i_2_n_0 ;
  wire \GEN_NO_RD_CMD_OPT.GEN_R.axi_rvalid_int_i_1_n_0 ;
  wire \GEN_NO_RD_CMD_OPT.axi_bvalid_int_i_1_n_0 ;
  wire \GEN_NO_RD_CMD_OPT.axi_wready_int_i_1_n_0 ;
  wire \GEN_NO_RD_CMD_OPT.bvalid_cnt[0]_i_1_n_0 ;
  wire \GEN_NO_RD_CMD_OPT.bvalid_cnt[1]_i_1_n_0 ;
  wire \GEN_NO_RD_CMD_OPT.bvalid_cnt[2]_i_1_n_0 ;
  wire axi_aresetn_d1;
  wire axi_aresetn_d2;
  wire [9:0]bram_addr_a;
  wire bram_en_a;
  wire bram_en_a_INST_0_i_1_n_0;
  wire [3:0]bram_we_a;
  wire [2:0]bvalid_cnt;
  wire bvalid_cnt_dec2_out;
  wire p_0_in;
  wire s_axi_aclk;
  wire [9:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [9:0]s_axi_awaddr;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire s_axi_reg_aresetn;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;

  LUT6 #(
    .INIT(64'hCCCCCC4CFFEEFF4C)) 
    \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs[0]_i_1 
       (.I0(bram_en_a_INST_0_i_1_n_0),
        .I1(p_0_in),
        .I2(\GEN_NO_RD_CMD_OPT.GEN_ARREADY.axi_arready_int_i_2_n_0 ),
        .I3(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .I4(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I5(s_axi_arvalid),
        .O(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF8000800080)) 
    \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs[4]_i_1 
       (.I0(bram_en_a_INST_0_i_1_n_0),
        .I1(p_0_in),
        .I2(\GEN_NO_RD_CMD_OPT.GEN_ARREADY.axi_arready_int_i_2_n_0 ),
        .I3(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .I4(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I5(s_axi_arvalid),
        .O(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FF5D0000)) 
    \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs[5]_i_1 
       (.I0(bram_en_a_INST_0_i_1_n_0),
        .I1(p_0_in),
        .I2(\GEN_NO_RD_CMD_OPT.GEN_ARREADY.axi_arready_int_i_2_n_0 ),
        .I3(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .I4(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I5(s_axi_arvalid),
        .O(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs[5]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "rmw_rd_data:001000,rmw_mod_data:000100,rmw_wr_data:000010,sng_wr_data:100000,idle:000001,rd_data:010000" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs[0]_i_1_n_0 ),
        .Q(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .S(s_axi_reg_aresetn));
  (* FSM_ENCODED_STATES = "rmw_rd_data:001000,rmw_mod_data:000100,rmw_wr_data:000010,sng_wr_data:100000,idle:000001,rd_data:010000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs[4]_i_1_n_0 ),
        .Q(p_0_in),
        .R(s_axi_reg_aresetn));
  (* FSM_ENCODED_STATES = "rmw_rd_data:001000,rmw_mod_data:000100,rmw_wr_data:000010,sng_wr_data:100000,idle:000001,rd_data:010000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs[5]_i_1_n_0 ),
        .Q(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .R(s_axi_reg_aresetn));
  LUT6 #(
    .INIT(64'h0000AAAA22A222A2)) 
    \GEN_NO_RD_CMD_OPT.GEN_ARREADY.axi_arready_int_i_1 
       (.I0(s_axi_aresetn),
        .I1(\GEN_NO_RD_CMD_OPT.GEN_ARREADY.axi_arready_int_i_2_n_0 ),
        .I2(axi_aresetn_d1),
        .I3(axi_aresetn_d2),
        .I4(s_axi_arvalid),
        .I5(s_axi_arready),
        .O(\GEN_NO_RD_CMD_OPT.GEN_ARREADY.axi_arready_int_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \GEN_NO_RD_CMD_OPT.GEN_ARREADY.axi_arready_int_i_2 
       (.I0(s_axi_rvalid),
        .I1(s_axi_rready),
        .O(\GEN_NO_RD_CMD_OPT.GEN_ARREADY.axi_arready_int_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_NO_RD_CMD_OPT.GEN_ARREADY.axi_arready_int_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_NO_RD_CMD_OPT.GEN_ARREADY.axi_arready_int_i_1_n_0 ),
        .Q(s_axi_arready),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000AAAA88808880)) 
    \GEN_NO_RD_CMD_OPT.GEN_R.axi_rvalid_int_i_1 
       (.I0(s_axi_aresetn),
        .I1(s_axi_arvalid),
        .I2(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .I3(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I4(s_axi_rready),
        .I5(s_axi_rvalid),
        .O(\GEN_NO_RD_CMD_OPT.GEN_R.axi_rvalid_int_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_NO_RD_CMD_OPT.GEN_R.axi_rvalid_int_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_NO_RD_CMD_OPT.GEN_R.axi_rvalid_int_i_1_n_0 ),
        .Q(s_axi_rvalid),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_NO_RD_CMD_OPT.axi_aresetn_d1_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_aresetn),
        .Q(axi_aresetn_d1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_NO_RD_CMD_OPT.axi_aresetn_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(axi_aresetn_d1),
        .Q(axi_aresetn_d2),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAA88AAA8AAA8AAA8)) 
    \GEN_NO_RD_CMD_OPT.axi_bvalid_int_i_1 
       (.I0(s_axi_aresetn),
        .I1(bvalid_cnt[1]),
        .I2(bvalid_cnt[0]),
        .I3(bvalid_cnt[2]),
        .I4(s_axi_bready),
        .I5(s_axi_bvalid),
        .O(\GEN_NO_RD_CMD_OPT.axi_bvalid_int_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_NO_RD_CMD_OPT.axi_bvalid_int_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_NO_RD_CMD_OPT.axi_bvalid_int_i_1_n_0 ),
        .Q(s_axi_bvalid),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \GEN_NO_RD_CMD_OPT.axi_wready_int_i_1 
       (.I0(bram_en_a_INST_0_i_1_n_0),
        .I1(s_axi_arvalid),
        .I2(s_axi_aresetn),
        .O(\GEN_NO_RD_CMD_OPT.axi_wready_int_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_NO_RD_CMD_OPT.axi_wready_int_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_NO_RD_CMD_OPT.axi_wready_int_i_1_n_0 ),
        .Q(s_axi_wready),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h1EE1)) 
    \GEN_NO_RD_CMD_OPT.bvalid_cnt[0]_i_1 
       (.I0(s_axi_arvalid),
        .I1(bram_en_a_INST_0_i_1_n_0),
        .I2(bvalid_cnt_dec2_out),
        .I3(bvalid_cnt[0]),
        .O(\GEN_NO_RD_CMD_OPT.bvalid_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'hBBBD4442)) 
    \GEN_NO_RD_CMD_OPT.bvalid_cnt[1]_i_1 
       (.I0(bvalid_cnt[0]),
        .I1(bvalid_cnt_dec2_out),
        .I2(bram_en_a_INST_0_i_1_n_0),
        .I3(s_axi_arvalid),
        .I4(bvalid_cnt[1]),
        .O(\GEN_NO_RD_CMD_OPT.bvalid_cnt[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFEFEFF710101008)) 
    \GEN_NO_RD_CMD_OPT.bvalid_cnt[2]_i_1 
       (.I0(bvalid_cnt[1]),
        .I1(bvalid_cnt[0]),
        .I2(bvalid_cnt_dec2_out),
        .I3(bram_en_a_INST_0_i_1_n_0),
        .I4(s_axi_arvalid),
        .I5(bvalid_cnt[2]),
        .O(\GEN_NO_RD_CMD_OPT.bvalid_cnt[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h88888880)) 
    \GEN_NO_RD_CMD_OPT.bvalid_cnt[2]_i_2 
       (.I0(s_axi_bvalid),
        .I1(s_axi_bready),
        .I2(bvalid_cnt[2]),
        .I3(bvalid_cnt[1]),
        .I4(bvalid_cnt[0]),
        .O(bvalid_cnt_dec2_out));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_NO_RD_CMD_OPT.bvalid_cnt_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_NO_RD_CMD_OPT.bvalid_cnt[0]_i_1_n_0 ),
        .Q(bvalid_cnt[0]),
        .R(s_axi_reg_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_NO_RD_CMD_OPT.bvalid_cnt_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_NO_RD_CMD_OPT.bvalid_cnt[1]_i_1_n_0 ),
        .Q(bvalid_cnt[1]),
        .R(s_axi_reg_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_NO_RD_CMD_OPT.bvalid_cnt_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_NO_RD_CMD_OPT.bvalid_cnt[2]_i_1_n_0 ),
        .Q(bvalid_cnt[2]),
        .R(s_axi_reg_aresetn));
  LUT6 #(
    .INIT(64'hAAAABBBFAAAA8880)) 
    \bram_addr_a[10]_INST_0 
       (.I0(s_axi_araddr[8]),
        .I1(s_axi_arvalid),
        .I2(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .I3(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I4(p_0_in),
        .I5(s_axi_awaddr[8]),
        .O(bram_addr_a[8]));
  LUT6 #(
    .INIT(64'hAAAABBBFAAAA8880)) 
    \bram_addr_a[11]_INST_0 
       (.I0(s_axi_araddr[9]),
        .I1(s_axi_arvalid),
        .I2(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .I3(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I4(p_0_in),
        .I5(s_axi_awaddr[9]),
        .O(bram_addr_a[9]));
  LUT6 #(
    .INIT(64'hAAAABBBFAAAA8880)) 
    \bram_addr_a[2]_INST_0 
       (.I0(s_axi_araddr[0]),
        .I1(s_axi_arvalid),
        .I2(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .I3(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I4(p_0_in),
        .I5(s_axi_awaddr[0]),
        .O(bram_addr_a[0]));
  LUT6 #(
    .INIT(64'hAAAABBBFAAAA8880)) 
    \bram_addr_a[3]_INST_0 
       (.I0(s_axi_araddr[1]),
        .I1(s_axi_arvalid),
        .I2(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .I3(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I4(p_0_in),
        .I5(s_axi_awaddr[1]),
        .O(bram_addr_a[1]));
  LUT6 #(
    .INIT(64'hAAAABBBFAAAA8880)) 
    \bram_addr_a[4]_INST_0 
       (.I0(s_axi_araddr[2]),
        .I1(s_axi_arvalid),
        .I2(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .I3(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I4(p_0_in),
        .I5(s_axi_awaddr[2]),
        .O(bram_addr_a[2]));
  LUT6 #(
    .INIT(64'hAAAABBBFAAAA8880)) 
    \bram_addr_a[5]_INST_0 
       (.I0(s_axi_araddr[3]),
        .I1(s_axi_arvalid),
        .I2(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .I3(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I4(p_0_in),
        .I5(s_axi_awaddr[3]),
        .O(bram_addr_a[3]));
  LUT6 #(
    .INIT(64'hAAAABBBFAAAA8880)) 
    \bram_addr_a[6]_INST_0 
       (.I0(s_axi_araddr[4]),
        .I1(s_axi_arvalid),
        .I2(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .I3(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I4(p_0_in),
        .I5(s_axi_awaddr[4]),
        .O(bram_addr_a[4]));
  LUT6 #(
    .INIT(64'hAAAABBBFAAAA8880)) 
    \bram_addr_a[7]_INST_0 
       (.I0(s_axi_araddr[5]),
        .I1(s_axi_arvalid),
        .I2(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .I3(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I4(p_0_in),
        .I5(s_axi_awaddr[5]),
        .O(bram_addr_a[5]));
  LUT6 #(
    .INIT(64'hAAAABBBFAAAA8880)) 
    \bram_addr_a[8]_INST_0 
       (.I0(s_axi_araddr[6]),
        .I1(s_axi_arvalid),
        .I2(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .I3(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I4(p_0_in),
        .I5(s_axi_awaddr[6]),
        .O(bram_addr_a[6]));
  LUT6 #(
    .INIT(64'hAAAABBBFAAAA8880)) 
    \bram_addr_a[9]_INST_0 
       (.I0(s_axi_araddr[7]),
        .I1(s_axi_arvalid),
        .I2(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .I3(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I4(p_0_in),
        .I5(s_axi_awaddr[7]),
        .O(bram_addr_a[7]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'hE0FF0000)) 
    bram_en_a_INST_0
       (.I0(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I1(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[5] ),
        .I2(s_axi_arvalid),
        .I3(bram_en_a_INST_0_i_1_n_0),
        .I4(s_axi_aresetn),
        .O(bram_en_a));
  LUT6 #(
    .INIT(64'hD555FFFFFFFFFFFF)) 
    bram_en_a_INST_0_i_1
       (.I0(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg_n_0_[0] ),
        .I1(bvalid_cnt[0]),
        .I2(bvalid_cnt[1]),
        .I3(bvalid_cnt[2]),
        .I4(s_axi_awvalid),
        .I5(s_axi_wvalid),
        .O(bram_en_a_INST_0_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    bram_rst_a_INST_0
       (.I0(s_axi_aresetn),
        .O(s_axi_reg_aresetn));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \bram_we_a[0]_INST_0 
       (.I0(s_axi_wstrb[0]),
        .I1(s_axi_arvalid),
        .I2(bram_en_a_INST_0_i_1_n_0),
        .O(bram_we_a[0]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \bram_we_a[1]_INST_0 
       (.I0(s_axi_wstrb[1]),
        .I1(s_axi_arvalid),
        .I2(bram_en_a_INST_0_i_1_n_0),
        .O(bram_we_a[1]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \bram_we_a[2]_INST_0 
       (.I0(s_axi_wstrb[2]),
        .I1(s_axi_arvalid),
        .I2(bram_en_a_INST_0_i_1_n_0),
        .O(bram_we_a[2]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \bram_we_a[3]_INST_0 
       (.I0(s_axi_wstrb[3]),
        .I1(s_axi_arvalid),
        .I2(bram_en_a_INST_0_i_1_n_0),
        .O(bram_we_a[3]));
endmodule

(* ORIG_REF_NAME = "div_add_sub_rad2" *) 
module system_rp_oscilloscope_0_div_add_sub_rad2
   (D,
    \R_reg[0][17] ,
    \R_reg[0][17]_0 ,
    \R_reg[0][17]_1 ,
    Q,
    \reg_Q_reg[0][0] ,
    S,
    \R_reg[0][15] ,
    \pipe_loop[1].R_reg[1][17] ,
    O,
    \pipe_loop[1].R_reg[1][15] ,
    \pipe_loop[1].R_reg[1][11] ,
    \pipe_loop[1].R_reg[1][7] ,
    \pipe_loop[1].R_reg[1][3] );
  output [17:0]D;
  output [0:0]\R_reg[0][17] ;
  output [17:0]\R_reg[0][17]_0 ;
  output [0:0]\R_reg[0][17]_1 ;
  input [0:0]Q;
  input [16:0]\reg_Q_reg[0][0] ;
  input [2:0]S;
  input [15:0]\R_reg[0][15] ;
  input \pipe_loop[1].R_reg[1][17] ;
  input [2:0]O;
  input [3:0]\pipe_loop[1].R_reg[1][15] ;
  input [3:0]\pipe_loop[1].R_reg[1][11] ;
  input [3:0]\pipe_loop[1].R_reg[1][7] ;
  input [3:0]\pipe_loop[1].R_reg[1][3] ;

  wire [17:0]D;
  wire [2:0]O;
  wire [0:0]Q;
  wire [15:0]\R_reg[0][15] ;
  wire [0:0]\R_reg[0][17] ;
  wire [17:0]\R_reg[0][17]_0 ;
  wire [0:0]\R_reg[0][17]_1 ;
  wire [2:0]S;
  wire \_inferred__1/i__carry__0_n_0 ;
  wire \_inferred__1/i__carry__0_n_1 ;
  wire \_inferred__1/i__carry__0_n_2 ;
  wire \_inferred__1/i__carry__0_n_3 ;
  wire \_inferred__1/i__carry__1_n_0 ;
  wire \_inferred__1/i__carry__1_n_1 ;
  wire \_inferred__1/i__carry__1_n_2 ;
  wire \_inferred__1/i__carry__1_n_3 ;
  wire \_inferred__1/i__carry__2_n_0 ;
  wire \_inferred__1/i__carry__2_n_1 ;
  wire \_inferred__1/i__carry__2_n_2 ;
  wire \_inferred__1/i__carry__2_n_3 ;
  wire \_inferred__1/i__carry__3_n_2 ;
  wire \_inferred__1/i__carry__3_n_3 ;
  wire \_inferred__1/i__carry_n_0 ;
  wire \_inferred__1/i__carry_n_1 ;
  wire \_inferred__1/i__carry_n_2 ;
  wire \_inferred__1/i__carry_n_3 ;
  wire i__carry__0_i_1__7_n_0;
  wire i__carry__0_i_2__7_n_0;
  wire i__carry__0_i_3__7_n_0;
  wire i__carry__0_i_4__7_n_0;
  wire i__carry__1_i_1__7_n_0;
  wire i__carry__1_i_2__7_n_0;
  wire i__carry__1_i_3__7_n_0;
  wire i__carry__1_i_4__5_n_0;
  wire i__carry__2_i_1__5_n_0;
  wire i__carry__2_i_2__5_n_0;
  wire i__carry__2_i_3__4_n_0;
  wire i__carry__2_i_4__4_n_0;
  wire i__carry_i_1__6_n_0;
  wire i__carry_i_2__7_n_0;
  wire i__carry_i_3__7_n_0;
  wire i__carry_i_4__6_n_0;
  wire i__carry_i_5__3_n_0;
  wire [3:0]\pipe_loop[1].R_reg[1][11] ;
  wire [3:0]\pipe_loop[1].R_reg[1][15] ;
  wire \pipe_loop[1].R_reg[1][17] ;
  wire [3:0]\pipe_loop[1].R_reg[1][3] ;
  wire [3:0]\pipe_loop[1].R_reg[1][7] ;
  wire [16:0]\reg_Q_reg[0][0] ;
  wire [3:2]\NLW__inferred__1/i__carry__3_CO_UNCONNECTED ;
  wire [3:3]\NLW__inferred__1/i__carry__3_O_UNCONNECTED ;

  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({\_inferred__1/i__carry_n_0 ,\_inferred__1/i__carry_n_1 ,\_inferred__1/i__carry_n_2 ,\_inferred__1/i__carry_n_3 }),
        .CYINIT(Q),
        .DI({\reg_Q_reg[0][0] [2:0],i__carry_i_1__6_n_0}),
        .O(D[3:0]),
        .S({i__carry_i_2__7_n_0,i__carry_i_3__7_n_0,i__carry_i_4__6_n_0,i__carry_i_5__3_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__0 
       (.CI(\_inferred__1/i__carry_n_0 ),
        .CO({\_inferred__1/i__carry__0_n_0 ,\_inferred__1/i__carry__0_n_1 ,\_inferred__1/i__carry__0_n_2 ,\_inferred__1/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_Q_reg[0][0] [6:3]),
        .O(D[7:4]),
        .S({i__carry__0_i_1__7_n_0,i__carry__0_i_2__7_n_0,i__carry__0_i_3__7_n_0,i__carry__0_i_4__7_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__1 
       (.CI(\_inferred__1/i__carry__0_n_0 ),
        .CO({\_inferred__1/i__carry__1_n_0 ,\_inferred__1/i__carry__1_n_1 ,\_inferred__1/i__carry__1_n_2 ,\_inferred__1/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_Q_reg[0][0] [10:7]),
        .O(D[11:8]),
        .S({i__carry__1_i_1__7_n_0,i__carry__1_i_2__7_n_0,i__carry__1_i_3__7_n_0,i__carry__1_i_4__5_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__2 
       (.CI(\_inferred__1/i__carry__1_n_0 ),
        .CO({\_inferred__1/i__carry__2_n_0 ,\_inferred__1/i__carry__2_n_1 ,\_inferred__1/i__carry__2_n_2 ,\_inferred__1/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_Q_reg[0][0] [14:11]),
        .O(D[15:12]),
        .S({i__carry__2_i_1__5_n_0,i__carry__2_i_2__5_n_0,i__carry__2_i_3__4_n_0,i__carry__2_i_4__4_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__3 
       (.CI(\_inferred__1/i__carry__2_n_0 ),
        .CO({\NLW__inferred__1/i__carry__3_CO_UNCONNECTED [3:2],\_inferred__1/i__carry__3_n_2 ,\_inferred__1/i__carry__3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\reg_Q_reg[0][0] [16:15]}),
        .O({\NLW__inferred__1/i__carry__3_O_UNCONNECTED [3],\R_reg[0][17] ,D[17:16]}),
        .S({1'b0,S}));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_1__7
       (.I0(\R_reg[0][15] [7]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [6]),
        .O(i__carry__0_i_1__7_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_2__7
       (.I0(\R_reg[0][15] [6]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [5]),
        .O(i__carry__0_i_2__7_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_3__7
       (.I0(\R_reg[0][15] [5]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [4]),
        .O(i__carry__0_i_3__7_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_4__7
       (.I0(\R_reg[0][15] [4]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [3]),
        .O(i__carry__0_i_4__7_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_1__7
       (.I0(\R_reg[0][15] [11]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [10]),
        .O(i__carry__1_i_1__7_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_2__7
       (.I0(\R_reg[0][15] [10]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [9]),
        .O(i__carry__1_i_2__7_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_3__7
       (.I0(\R_reg[0][15] [9]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [8]),
        .O(i__carry__1_i_3__7_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_4__5
       (.I0(\R_reg[0][15] [8]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [7]),
        .O(i__carry__1_i_4__5_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_1__5
       (.I0(\R_reg[0][15] [15]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [14]),
        .O(i__carry__2_i_1__5_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_2__5
       (.I0(\R_reg[0][15] [14]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [13]),
        .O(i__carry__2_i_2__5_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_3__4
       (.I0(\R_reg[0][15] [13]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [12]),
        .O(i__carry__2_i_3__4_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_4__4
       (.I0(\R_reg[0][15] [12]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [11]),
        .O(i__carry__2_i_4__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1__6
       (.I0(\reg_Q_reg[0][0] [16]),
        .O(i__carry_i_1__6_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry_i_2__7
       (.I0(\R_reg[0][15] [3]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [2]),
        .O(i__carry_i_2__7_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry_i_3__7
       (.I0(\R_reg[0][15] [2]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [1]),
        .O(i__carry_i_3__7_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry_i_4__6
       (.I0(\R_reg[0][15] [1]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [0]),
        .O(i__carry_i_4__6_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry_i_5__3
       (.I0(\R_reg[0][15] [0]),
        .O(i__carry_i_5__3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][0]_i_1__0 
       (.I0(D[0]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][3] [0]),
        .O(\R_reg[0][17]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][10]_i_1__0 
       (.I0(D[10]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][11] [2]),
        .O(\R_reg[0][17]_0 [10]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][11]_i_1__0 
       (.I0(D[11]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][11] [3]),
        .O(\R_reg[0][17]_0 [11]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][12]_i_1__0 
       (.I0(D[12]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][15] [0]),
        .O(\R_reg[0][17]_0 [12]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][13]_i_1__0 
       (.I0(D[13]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][15] [1]),
        .O(\R_reg[0][17]_0 [13]));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][14]_i_1__0 
       (.I0(D[14]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][15] [2]),
        .O(\R_reg[0][17]_0 [14]));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][15]_i_1__0 
       (.I0(D[15]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][15] [3]),
        .O(\R_reg[0][17]_0 [15]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][16]_i_1__0 
       (.I0(D[16]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(O[0]),
        .O(\R_reg[0][17]_0 [16]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][17]_i_1__0 
       (.I0(D[17]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(O[1]),
        .O(\R_reg[0][17]_0 [17]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][1]_i_1__0 
       (.I0(D[1]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][3] [1]),
        .O(\R_reg[0][17]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][2]_i_1__0 
       (.I0(D[2]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][3] [2]),
        .O(\R_reg[0][17]_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][3]_i_1__0 
       (.I0(D[3]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][3] [3]),
        .O(\R_reg[0][17]_0 [3]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][4]_i_1__0 
       (.I0(D[4]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][7] [0]),
        .O(\R_reg[0][17]_0 [4]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][5]_i_1__0 
       (.I0(D[5]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][7] [1]),
        .O(\R_reg[0][17]_0 [5]));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][6]_i_1__0 
       (.I0(D[6]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][7] [2]),
        .O(\R_reg[0][17]_0 [6]));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][7]_i_1__0 
       (.I0(D[7]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][7] [3]),
        .O(\R_reg[0][17]_0 [7]));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][8]_i_1__0 
       (.I0(D[8]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][11] [0]),
        .O(\R_reg[0][17]_0 [8]));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][9]_i_1__0 
       (.I0(D[9]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][11] [1]),
        .O(\R_reg[0][17]_0 [9]));
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][0]_i_1__0 
       (.I0(\R_reg[0][17] ),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(O[2]),
        .O(\R_reg[0][17]_1 ));
endmodule

(* ORIG_REF_NAME = "div_add_sub_rad2" *) 
module system_rp_oscilloscope_0_div_add_sub_rad2_0
   (\pipe_loop[1].reg_X_reg[1][31] ,
    \pipe_loop[1].R_reg[1][6] ,
    \pipe_loop[1].R_reg[1][10] ,
    \pipe_loop[1].R_reg[1][14] ,
    O,
    D,
    w_2r,
    S,
    Q);
  output [3:0]\pipe_loop[1].reg_X_reg[1][31] ;
  output [3:0]\pipe_loop[1].R_reg[1][6] ;
  output [3:0]\pipe_loop[1].R_reg[1][10] ;
  output [3:0]\pipe_loop[1].R_reg[1][14] ;
  output [2:0]O;
  output [0:0]D;
  input [17:0]w_2r;
  input [2:0]S;
  input [15:0]Q;

  wire [0:0]D;
  wire [2:0]O;
  wire [15:0]Q;
  wire [2:0]S;
  wire \_inferred__1/i__carry__0_n_0 ;
  wire \_inferred__1/i__carry__0_n_1 ;
  wire \_inferred__1/i__carry__0_n_2 ;
  wire \_inferred__1/i__carry__0_n_3 ;
  wire \_inferred__1/i__carry__1_n_0 ;
  wire \_inferred__1/i__carry__1_n_1 ;
  wire \_inferred__1/i__carry__1_n_2 ;
  wire \_inferred__1/i__carry__1_n_3 ;
  wire \_inferred__1/i__carry__2_n_0 ;
  wire \_inferred__1/i__carry__2_n_1 ;
  wire \_inferred__1/i__carry__2_n_2 ;
  wire \_inferred__1/i__carry__2_n_3 ;
  wire \_inferred__1/i__carry__3_n_2 ;
  wire \_inferred__1/i__carry__3_n_3 ;
  wire \_inferred__1/i__carry_n_0 ;
  wire \_inferred__1/i__carry_n_1 ;
  wire \_inferred__1/i__carry_n_2 ;
  wire \_inferred__1/i__carry_n_3 ;
  wire i__carry__0_i_1__8_n_0;
  wire i__carry__0_i_2__8_n_0;
  wire i__carry__0_i_3__8_n_0;
  wire i__carry__0_i_4__8_n_0;
  wire i__carry__1_i_1__8_n_0;
  wire i__carry__1_i_2__8_n_0;
  wire i__carry__1_i_3__8_n_0;
  wire i__carry__1_i_4__6_n_0;
  wire i__carry__2_i_1__6_n_0;
  wire i__carry__2_i_2__6_n_0;
  wire i__carry__2_i_3__5_n_0;
  wire i__carry__2_i_4__5_n_0;
  wire i__carry_i_1__7_n_0;
  wire i__carry_i_2__8_n_0;
  wire i__carry_i_3__8_n_0;
  wire i__carry_i_4__7_n_0;
  wire i__carry_i_5__4_n_0;
  wire [3:0]\pipe_loop[1].R_reg[1][10] ;
  wire [3:0]\pipe_loop[1].R_reg[1][14] ;
  wire [3:0]\pipe_loop[1].R_reg[1][6] ;
  wire [3:0]\pipe_loop[1].reg_X_reg[1][31] ;
  wire [17:0]w_2r;
  wire [3:2]\NLW__inferred__1/i__carry__3_CO_UNCONNECTED ;
  wire [3:3]\NLW__inferred__1/i__carry__3_O_UNCONNECTED ;

  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({\_inferred__1/i__carry_n_0 ,\_inferred__1/i__carry_n_1 ,\_inferred__1/i__carry_n_2 ,\_inferred__1/i__carry_n_3 }),
        .CYINIT(w_2r[0]),
        .DI({w_2r[3:1],i__carry_i_1__7_n_0}),
        .O(\pipe_loop[1].reg_X_reg[1][31] ),
        .S({i__carry_i_2__8_n_0,i__carry_i_3__8_n_0,i__carry_i_4__7_n_0,i__carry_i_5__4_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__0 
       (.CI(\_inferred__1/i__carry_n_0 ),
        .CO({\_inferred__1/i__carry__0_n_0 ,\_inferred__1/i__carry__0_n_1 ,\_inferred__1/i__carry__0_n_2 ,\_inferred__1/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI(w_2r[7:4]),
        .O(\pipe_loop[1].R_reg[1][6] ),
        .S({i__carry__0_i_1__8_n_0,i__carry__0_i_2__8_n_0,i__carry__0_i_3__8_n_0,i__carry__0_i_4__8_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__1 
       (.CI(\_inferred__1/i__carry__0_n_0 ),
        .CO({\_inferred__1/i__carry__1_n_0 ,\_inferred__1/i__carry__1_n_1 ,\_inferred__1/i__carry__1_n_2 ,\_inferred__1/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI(w_2r[11:8]),
        .O(\pipe_loop[1].R_reg[1][10] ),
        .S({i__carry__1_i_1__8_n_0,i__carry__1_i_2__8_n_0,i__carry__1_i_3__8_n_0,i__carry__1_i_4__6_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__2 
       (.CI(\_inferred__1/i__carry__1_n_0 ),
        .CO({\_inferred__1/i__carry__2_n_0 ,\_inferred__1/i__carry__2_n_1 ,\_inferred__1/i__carry__2_n_2 ,\_inferred__1/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI(w_2r[15:12]),
        .O(\pipe_loop[1].R_reg[1][14] ),
        .S({i__carry__2_i_1__6_n_0,i__carry__2_i_2__6_n_0,i__carry__2_i_3__5_n_0,i__carry__2_i_4__5_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__3 
       (.CI(\_inferred__1/i__carry__2_n_0 ),
        .CO({\NLW__inferred__1/i__carry__3_CO_UNCONNECTED [3:2],\_inferred__1/i__carry__3_n_2 ,\_inferred__1/i__carry__3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,w_2r[17:16]}),
        .O({\NLW__inferred__1/i__carry__3_O_UNCONNECTED [3],O}),
        .S({1'b0,S}));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_1__8
       (.I0(Q[7]),
        .I1(w_2r[17]),
        .I2(w_2r[7]),
        .O(i__carry__0_i_1__8_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_2__8
       (.I0(Q[6]),
        .I1(w_2r[17]),
        .I2(w_2r[6]),
        .O(i__carry__0_i_2__8_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_3__8
       (.I0(Q[5]),
        .I1(w_2r[17]),
        .I2(w_2r[5]),
        .O(i__carry__0_i_3__8_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_4__8
       (.I0(Q[4]),
        .I1(w_2r[17]),
        .I2(w_2r[4]),
        .O(i__carry__0_i_4__8_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_1__8
       (.I0(Q[11]),
        .I1(w_2r[17]),
        .I2(w_2r[11]),
        .O(i__carry__1_i_1__8_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_2__8
       (.I0(Q[10]),
        .I1(w_2r[17]),
        .I2(w_2r[10]),
        .O(i__carry__1_i_2__8_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_3__8
       (.I0(Q[9]),
        .I1(w_2r[17]),
        .I2(w_2r[9]),
        .O(i__carry__1_i_3__8_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_4__6
       (.I0(Q[8]),
        .I1(w_2r[17]),
        .I2(w_2r[8]),
        .O(i__carry__1_i_4__6_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_1__6
       (.I0(Q[15]),
        .I1(w_2r[17]),
        .I2(w_2r[15]),
        .O(i__carry__2_i_1__6_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_2__6
       (.I0(Q[14]),
        .I1(w_2r[17]),
        .I2(w_2r[14]),
        .O(i__carry__2_i_2__6_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_3__5
       (.I0(Q[13]),
        .I1(w_2r[17]),
        .I2(w_2r[13]),
        .O(i__carry__2_i_3__5_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_4__5
       (.I0(Q[12]),
        .I1(w_2r[17]),
        .I2(w_2r[12]),
        .O(i__carry__2_i_4__5_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1__7
       (.I0(w_2r[17]),
        .O(i__carry_i_1__7_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry_i_2__8
       (.I0(Q[3]),
        .I1(w_2r[17]),
        .I2(w_2r[3]),
        .O(i__carry_i_2__8_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry_i_3__8
       (.I0(Q[2]),
        .I1(w_2r[17]),
        .I2(w_2r[2]),
        .O(i__carry_i_3__8_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry_i_4__7
       (.I0(Q[1]),
        .I1(w_2r[17]),
        .I2(w_2r[1]),
        .O(i__carry_i_4__7_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry_i_5__4
       (.I0(Q[0]),
        .O(i__carry_i_5__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[0]_i_1__0 
       (.I0(O[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "div_add_sub_rad2" *) 
module system_rp_oscilloscope_0_div_add_sub_rad2_19
   (D,
    \R_reg[0][17] ,
    \R_reg[0][17]_0 ,
    \R_reg[0][17]_1 ,
    Q,
    \reg_Q_reg[0][0] ,
    S,
    \R_reg[0][15] ,
    \pipe_loop[1].R_reg[1][17] ,
    O,
    \pipe_loop[1].R_reg[1][15] ,
    \pipe_loop[1].R_reg[1][11] ,
    \pipe_loop[1].R_reg[1][7] ,
    \pipe_loop[1].R_reg[1][3] );
  output [17:0]D;
  output [0:0]\R_reg[0][17] ;
  output [17:0]\R_reg[0][17]_0 ;
  output [0:0]\R_reg[0][17]_1 ;
  input [0:0]Q;
  input [16:0]\reg_Q_reg[0][0] ;
  input [2:0]S;
  input [15:0]\R_reg[0][15] ;
  input \pipe_loop[1].R_reg[1][17] ;
  input [2:0]O;
  input [3:0]\pipe_loop[1].R_reg[1][15] ;
  input [3:0]\pipe_loop[1].R_reg[1][11] ;
  input [3:0]\pipe_loop[1].R_reg[1][7] ;
  input [3:0]\pipe_loop[1].R_reg[1][3] ;

  wire [17:0]D;
  wire [2:0]O;
  wire [0:0]Q;
  wire [15:0]\R_reg[0][15] ;
  wire [0:0]\R_reg[0][17] ;
  wire [17:0]\R_reg[0][17]_0 ;
  wire [0:0]\R_reg[0][17]_1 ;
  wire [2:0]S;
  wire \_inferred__1/i__carry__0_n_0 ;
  wire \_inferred__1/i__carry__0_n_1 ;
  wire \_inferred__1/i__carry__0_n_2 ;
  wire \_inferred__1/i__carry__0_n_3 ;
  wire \_inferred__1/i__carry__1_n_0 ;
  wire \_inferred__1/i__carry__1_n_1 ;
  wire \_inferred__1/i__carry__1_n_2 ;
  wire \_inferred__1/i__carry__1_n_3 ;
  wire \_inferred__1/i__carry__2_n_0 ;
  wire \_inferred__1/i__carry__2_n_1 ;
  wire \_inferred__1/i__carry__2_n_2 ;
  wire \_inferred__1/i__carry__2_n_3 ;
  wire \_inferred__1/i__carry__3_n_2 ;
  wire \_inferred__1/i__carry__3_n_3 ;
  wire \_inferred__1/i__carry_n_0 ;
  wire \_inferred__1/i__carry_n_1 ;
  wire \_inferred__1/i__carry_n_2 ;
  wire \_inferred__1/i__carry_n_3 ;
  wire i__carry__0_i_1__1_n_0;
  wire i__carry__0_i_2__1_n_0;
  wire i__carry__0_i_3__1_n_0;
  wire i__carry__0_i_4__1_n_0;
  wire i__carry__1_i_1__1_n_0;
  wire i__carry__1_i_2__1_n_0;
  wire i__carry__1_i_3__1_n_0;
  wire i__carry__1_i_4__0_n_0;
  wire i__carry__2_i_1__0_n_0;
  wire i__carry__2_i_2__0_n_0;
  wire i__carry__2_i_3__0_n_0;
  wire i__carry__2_i_4__0_n_0;
  wire i__carry_i_1_n_0;
  wire i__carry_i_2__1_n_0;
  wire i__carry_i_3__1_n_0;
  wire i__carry_i_4__1_n_0;
  wire i__carry_i_5__1_n_0;
  wire [3:0]\pipe_loop[1].R_reg[1][11] ;
  wire [3:0]\pipe_loop[1].R_reg[1][15] ;
  wire \pipe_loop[1].R_reg[1][17] ;
  wire [3:0]\pipe_loop[1].R_reg[1][3] ;
  wire [3:0]\pipe_loop[1].R_reg[1][7] ;
  wire [16:0]\reg_Q_reg[0][0] ;
  wire [3:2]\NLW__inferred__1/i__carry__3_CO_UNCONNECTED ;
  wire [3:3]\NLW__inferred__1/i__carry__3_O_UNCONNECTED ;

  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({\_inferred__1/i__carry_n_0 ,\_inferred__1/i__carry_n_1 ,\_inferred__1/i__carry_n_2 ,\_inferred__1/i__carry_n_3 }),
        .CYINIT(Q),
        .DI({\reg_Q_reg[0][0] [2:0],i__carry_i_1_n_0}),
        .O(D[3:0]),
        .S({i__carry_i_2__1_n_0,i__carry_i_3__1_n_0,i__carry_i_4__1_n_0,i__carry_i_5__1_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__0 
       (.CI(\_inferred__1/i__carry_n_0 ),
        .CO({\_inferred__1/i__carry__0_n_0 ,\_inferred__1/i__carry__0_n_1 ,\_inferred__1/i__carry__0_n_2 ,\_inferred__1/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_Q_reg[0][0] [6:3]),
        .O(D[7:4]),
        .S({i__carry__0_i_1__1_n_0,i__carry__0_i_2__1_n_0,i__carry__0_i_3__1_n_0,i__carry__0_i_4__1_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__1 
       (.CI(\_inferred__1/i__carry__0_n_0 ),
        .CO({\_inferred__1/i__carry__1_n_0 ,\_inferred__1/i__carry__1_n_1 ,\_inferred__1/i__carry__1_n_2 ,\_inferred__1/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_Q_reg[0][0] [10:7]),
        .O(D[11:8]),
        .S({i__carry__1_i_1__1_n_0,i__carry__1_i_2__1_n_0,i__carry__1_i_3__1_n_0,i__carry__1_i_4__0_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__2 
       (.CI(\_inferred__1/i__carry__1_n_0 ),
        .CO({\_inferred__1/i__carry__2_n_0 ,\_inferred__1/i__carry__2_n_1 ,\_inferred__1/i__carry__2_n_2 ,\_inferred__1/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_Q_reg[0][0] [14:11]),
        .O(D[15:12]),
        .S({i__carry__2_i_1__0_n_0,i__carry__2_i_2__0_n_0,i__carry__2_i_3__0_n_0,i__carry__2_i_4__0_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__3 
       (.CI(\_inferred__1/i__carry__2_n_0 ),
        .CO({\NLW__inferred__1/i__carry__3_CO_UNCONNECTED [3:2],\_inferred__1/i__carry__3_n_2 ,\_inferred__1/i__carry__3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\reg_Q_reg[0][0] [16:15]}),
        .O({\NLW__inferred__1/i__carry__3_O_UNCONNECTED [3],\R_reg[0][17] ,D[17:16]}),
        .S({1'b0,S}));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_1__1
       (.I0(\R_reg[0][15] [7]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [6]),
        .O(i__carry__0_i_1__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_2__1
       (.I0(\R_reg[0][15] [6]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [5]),
        .O(i__carry__0_i_2__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_3__1
       (.I0(\R_reg[0][15] [5]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [4]),
        .O(i__carry__0_i_3__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_4__1
       (.I0(\R_reg[0][15] [4]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [3]),
        .O(i__carry__0_i_4__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_1__1
       (.I0(\R_reg[0][15] [11]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [10]),
        .O(i__carry__1_i_1__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_2__1
       (.I0(\R_reg[0][15] [10]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [9]),
        .O(i__carry__1_i_2__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_3__1
       (.I0(\R_reg[0][15] [9]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [8]),
        .O(i__carry__1_i_3__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_4__0
       (.I0(\R_reg[0][15] [8]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [7]),
        .O(i__carry__1_i_4__0_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_1__0
       (.I0(\R_reg[0][15] [15]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [14]),
        .O(i__carry__2_i_1__0_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_2__0
       (.I0(\R_reg[0][15] [14]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [13]),
        .O(i__carry__2_i_2__0_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_3__0
       (.I0(\R_reg[0][15] [13]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [12]),
        .O(i__carry__2_i_3__0_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_4__0
       (.I0(\R_reg[0][15] [12]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [11]),
        .O(i__carry__2_i_4__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1
       (.I0(\reg_Q_reg[0][0] [16]),
        .O(i__carry_i_1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry_i_2__1
       (.I0(\R_reg[0][15] [3]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [2]),
        .O(i__carry_i_2__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry_i_3__1
       (.I0(\R_reg[0][15] [2]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [1]),
        .O(i__carry_i_3__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry_i_4__1
       (.I0(\R_reg[0][15] [1]),
        .I1(\reg_Q_reg[0][0] [16]),
        .I2(\reg_Q_reg[0][0] [0]),
        .O(i__carry_i_4__1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry_i_5__1
       (.I0(\R_reg[0][15] [0]),
        .O(i__carry_i_5__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][0]_i_1 
       (.I0(D[0]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][3] [0]),
        .O(\R_reg[0][17]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][10]_i_1 
       (.I0(D[10]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][11] [2]),
        .O(\R_reg[0][17]_0 [10]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][11]_i_1 
       (.I0(D[11]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][11] [3]),
        .O(\R_reg[0][17]_0 [11]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][12]_i_1 
       (.I0(D[12]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][15] [0]),
        .O(\R_reg[0][17]_0 [12]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][13]_i_1 
       (.I0(D[13]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][15] [1]),
        .O(\R_reg[0][17]_0 [13]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][14]_i_1 
       (.I0(D[14]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][15] [2]),
        .O(\R_reg[0][17]_0 [14]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][15]_i_1 
       (.I0(D[15]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][15] [3]),
        .O(\R_reg[0][17]_0 [15]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][16]_i_1 
       (.I0(D[16]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(O[0]),
        .O(\R_reg[0][17]_0 [16]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][17]_i_1 
       (.I0(D[17]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(O[1]),
        .O(\R_reg[0][17]_0 [17]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][1]_i_1 
       (.I0(D[1]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][3] [1]),
        .O(\R_reg[0][17]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][2]_i_1 
       (.I0(D[2]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][3] [2]),
        .O(\R_reg[0][17]_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][3]_i_1 
       (.I0(D[3]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][3] [3]),
        .O(\R_reg[0][17]_0 [3]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][4]_i_1 
       (.I0(D[4]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][7] [0]),
        .O(\R_reg[0][17]_0 [4]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][5]_i_1 
       (.I0(D[5]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][7] [1]),
        .O(\R_reg[0][17]_0 [5]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][6]_i_1 
       (.I0(D[6]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][7] [2]),
        .O(\R_reg[0][17]_0 [6]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][7]_i_1 
       (.I0(D[7]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][7] [3]),
        .O(\R_reg[0][17]_0 [7]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][8]_i_1 
       (.I0(D[8]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][11] [0]),
        .O(\R_reg[0][17]_0 [8]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].R[1][9]_i_1 
       (.I0(D[9]),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(\pipe_loop[1].R_reg[1][11] [1]),
        .O(\R_reg[0][17]_0 [9]));
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][0]_i_1 
       (.I0(\R_reg[0][17] ),
        .I1(\pipe_loop[1].R_reg[1][17] ),
        .I2(O[2]),
        .O(\R_reg[0][17]_1 ));
endmodule

(* ORIG_REF_NAME = "div_add_sub_rad2" *) 
module system_rp_oscilloscope_0_div_add_sub_rad2_20
   (\pipe_loop[1].reg_X_reg[1][31] ,
    \pipe_loop[1].R_reg[1][6] ,
    \pipe_loop[1].R_reg[1][10] ,
    \pipe_loop[1].R_reg[1][14] ,
    O,
    D,
    w_2r,
    S,
    Q);
  output [3:0]\pipe_loop[1].reg_X_reg[1][31] ;
  output [3:0]\pipe_loop[1].R_reg[1][6] ;
  output [3:0]\pipe_loop[1].R_reg[1][10] ;
  output [3:0]\pipe_loop[1].R_reg[1][14] ;
  output [2:0]O;
  output [0:0]D;
  input [17:0]w_2r;
  input [2:0]S;
  input [15:0]Q;

  wire [0:0]D;
  wire [2:0]O;
  wire [15:0]Q;
  wire [2:0]S;
  wire \_inferred__1/i__carry__0_n_0 ;
  wire \_inferred__1/i__carry__0_n_1 ;
  wire \_inferred__1/i__carry__0_n_2 ;
  wire \_inferred__1/i__carry__0_n_3 ;
  wire \_inferred__1/i__carry__1_n_0 ;
  wire \_inferred__1/i__carry__1_n_1 ;
  wire \_inferred__1/i__carry__1_n_2 ;
  wire \_inferred__1/i__carry__1_n_3 ;
  wire \_inferred__1/i__carry__2_n_0 ;
  wire \_inferred__1/i__carry__2_n_1 ;
  wire \_inferred__1/i__carry__2_n_2 ;
  wire \_inferred__1/i__carry__2_n_3 ;
  wire \_inferred__1/i__carry__3_n_2 ;
  wire \_inferred__1/i__carry__3_n_3 ;
  wire \_inferred__1/i__carry_n_0 ;
  wire \_inferred__1/i__carry_n_1 ;
  wire \_inferred__1/i__carry_n_2 ;
  wire \_inferred__1/i__carry_n_3 ;
  wire i__carry__0_i_1__2_n_0;
  wire i__carry__0_i_2__2_n_0;
  wire i__carry__0_i_3__2_n_0;
  wire i__carry__0_i_4__2_n_0;
  wire i__carry__1_i_1__2_n_0;
  wire i__carry__1_i_2__2_n_0;
  wire i__carry__1_i_3__2_n_0;
  wire i__carry__1_i_4__1_n_0;
  wire i__carry__2_i_1__1_n_0;
  wire i__carry__2_i_2__1_n_0;
  wire i__carry__2_i_3__1_n_0;
  wire i__carry__2_i_4__1_n_0;
  wire i__carry_i_1__0_n_0;
  wire i__carry_i_2__2_n_0;
  wire i__carry_i_3__2_n_0;
  wire i__carry_i_4__2_n_0;
  wire i__carry_i_5__2_n_0;
  wire [3:0]\pipe_loop[1].R_reg[1][10] ;
  wire [3:0]\pipe_loop[1].R_reg[1][14] ;
  wire [3:0]\pipe_loop[1].R_reg[1][6] ;
  wire [3:0]\pipe_loop[1].reg_X_reg[1][31] ;
  wire [17:0]w_2r;
  wire [3:2]\NLW__inferred__1/i__carry__3_CO_UNCONNECTED ;
  wire [3:3]\NLW__inferred__1/i__carry__3_O_UNCONNECTED ;

  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({\_inferred__1/i__carry_n_0 ,\_inferred__1/i__carry_n_1 ,\_inferred__1/i__carry_n_2 ,\_inferred__1/i__carry_n_3 }),
        .CYINIT(w_2r[0]),
        .DI({w_2r[3:1],i__carry_i_1__0_n_0}),
        .O(\pipe_loop[1].reg_X_reg[1][31] ),
        .S({i__carry_i_2__2_n_0,i__carry_i_3__2_n_0,i__carry_i_4__2_n_0,i__carry_i_5__2_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__0 
       (.CI(\_inferred__1/i__carry_n_0 ),
        .CO({\_inferred__1/i__carry__0_n_0 ,\_inferred__1/i__carry__0_n_1 ,\_inferred__1/i__carry__0_n_2 ,\_inferred__1/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI(w_2r[7:4]),
        .O(\pipe_loop[1].R_reg[1][6] ),
        .S({i__carry__0_i_1__2_n_0,i__carry__0_i_2__2_n_0,i__carry__0_i_3__2_n_0,i__carry__0_i_4__2_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__1 
       (.CI(\_inferred__1/i__carry__0_n_0 ),
        .CO({\_inferred__1/i__carry__1_n_0 ,\_inferred__1/i__carry__1_n_1 ,\_inferred__1/i__carry__1_n_2 ,\_inferred__1/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI(w_2r[11:8]),
        .O(\pipe_loop[1].R_reg[1][10] ),
        .S({i__carry__1_i_1__2_n_0,i__carry__1_i_2__2_n_0,i__carry__1_i_3__2_n_0,i__carry__1_i_4__1_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__2 
       (.CI(\_inferred__1/i__carry__1_n_0 ),
        .CO({\_inferred__1/i__carry__2_n_0 ,\_inferred__1/i__carry__2_n_1 ,\_inferred__1/i__carry__2_n_2 ,\_inferred__1/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI(w_2r[15:12]),
        .O(\pipe_loop[1].R_reg[1][14] ),
        .S({i__carry__2_i_1__1_n_0,i__carry__2_i_2__1_n_0,i__carry__2_i_3__1_n_0,i__carry__2_i_4__1_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \_inferred__1/i__carry__3 
       (.CI(\_inferred__1/i__carry__2_n_0 ),
        .CO({\NLW__inferred__1/i__carry__3_CO_UNCONNECTED [3:2],\_inferred__1/i__carry__3_n_2 ,\_inferred__1/i__carry__3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,w_2r[17:16]}),
        .O({\NLW__inferred__1/i__carry__3_O_UNCONNECTED [3],O}),
        .S({1'b0,S}));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_1__2
       (.I0(Q[7]),
        .I1(w_2r[17]),
        .I2(w_2r[7]),
        .O(i__carry__0_i_1__2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_2__2
       (.I0(Q[6]),
        .I1(w_2r[17]),
        .I2(w_2r[6]),
        .O(i__carry__0_i_2__2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_3__2
       (.I0(Q[5]),
        .I1(w_2r[17]),
        .I2(w_2r[5]),
        .O(i__carry__0_i_3__2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__0_i_4__2
       (.I0(Q[4]),
        .I1(w_2r[17]),
        .I2(w_2r[4]),
        .O(i__carry__0_i_4__2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_1__2
       (.I0(Q[11]),
        .I1(w_2r[17]),
        .I2(w_2r[11]),
        .O(i__carry__1_i_1__2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_2__2
       (.I0(Q[10]),
        .I1(w_2r[17]),
        .I2(w_2r[10]),
        .O(i__carry__1_i_2__2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_3__2
       (.I0(Q[9]),
        .I1(w_2r[17]),
        .I2(w_2r[9]),
        .O(i__carry__1_i_3__2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__1_i_4__1
       (.I0(Q[8]),
        .I1(w_2r[17]),
        .I2(w_2r[8]),
        .O(i__carry__1_i_4__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_1__1
       (.I0(Q[15]),
        .I1(w_2r[17]),
        .I2(w_2r[15]),
        .O(i__carry__2_i_1__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_2__1
       (.I0(Q[14]),
        .I1(w_2r[17]),
        .I2(w_2r[14]),
        .O(i__carry__2_i_2__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_3__1
       (.I0(Q[13]),
        .I1(w_2r[17]),
        .I2(w_2r[13]),
        .O(i__carry__2_i_3__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__2_i_4__1
       (.I0(Q[12]),
        .I1(w_2r[17]),
        .I2(w_2r[12]),
        .O(i__carry__2_i_4__1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1__0
       (.I0(w_2r[17]),
        .O(i__carry_i_1__0_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry_i_2__2
       (.I0(Q[3]),
        .I1(w_2r[17]),
        .I2(w_2r[3]),
        .O(i__carry_i_2__2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry_i_3__2
       (.I0(Q[2]),
        .I1(w_2r[17]),
        .I2(w_2r[2]),
        .O(i__carry_i_3__2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry_i_4__2
       (.I0(Q[1]),
        .I1(w_2r[17]),
        .I2(w_2r[1]),
        .O(i__carry_i_4__2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry_i_5__2
       (.I0(Q[0]),
        .O(i__carry_i_5__2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[0]_i_1 
       (.I0(O[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "divide" *) 
module system_rp_oscilloscope_0_divide
   (SR,
    dv_o,
    D,
    \q_o_reg[15]_0 ,
    m_axi_osc2_aclk,
    m_axi_osc2_aresetn,
    div_go,
    Q,
    \dat_div_reg[3] ,
    S,
    \dat_div_reg[7] ,
    \dat_div_reg[11] ,
    \dat_div_reg[15] ,
    \reg_Y_reg[0][16]_0 );
  output [0:0]SR;
  output dv_o;
  output [15:0]D;
  output [14:0]\q_o_reg[15]_0 ;
  input m_axi_osc2_aclk;
  input m_axi_osc2_aresetn;
  input div_go;
  input [31:0]Q;
  input [0:0]\dat_div_reg[3] ;
  input [2:0]S;
  input [3:0]\dat_div_reg[7] ;
  input [3:0]\dat_div_reg[11] ;
  input [3:0]\dat_div_reg[15] ;
  input [16:0]\reg_Y_reg[0][16]_0 ;

  wire [15:0]D;
  wire [31:0]Q;
  wire [17:0]R;
  wire \R_reg_n_0_[0][0] ;
  wire \R_reg_n_0_[0][10] ;
  wire \R_reg_n_0_[0][11] ;
  wire \R_reg_n_0_[0][12] ;
  wire \R_reg_n_0_[0][13] ;
  wire \R_reg_n_0_[0][14] ;
  wire \R_reg_n_0_[0][15] ;
  wire \R_reg_n_0_[0][16] ;
  wire \R_reg_n_0_[0][1] ;
  wire \R_reg_n_0_[0][2] ;
  wire \R_reg_n_0_[0][3] ;
  wire \R_reg_n_0_[0][4] ;
  wire \R_reg_n_0_[0][5] ;
  wire \R_reg_n_0_[0][6] ;
  wire \R_reg_n_0_[0][7] ;
  wire \R_reg_n_0_[0][8] ;
  wire \R_reg_n_0_[0][9] ;
  wire [2:0]S;
  wire [0:0]SR;
  wire cnt;
  wire [5:0]\cnt_reg[0]_16 ;
  wire \dat_div[3]_i_5__0_n_0 ;
  wire [3:0]\dat_div_reg[11] ;
  wire \dat_div_reg[11]_i_1__0_n_0 ;
  wire \dat_div_reg[11]_i_1__0_n_1 ;
  wire \dat_div_reg[11]_i_1__0_n_2 ;
  wire \dat_div_reg[11]_i_1__0_n_3 ;
  wire [3:0]\dat_div_reg[15] ;
  wire \dat_div_reg[15]_i_1__0_n_1 ;
  wire \dat_div_reg[15]_i_1__0_n_2 ;
  wire \dat_div_reg[15]_i_1__0_n_3 ;
  wire [0:0]\dat_div_reg[3] ;
  wire \dat_div_reg[3]_i_1__0_n_0 ;
  wire \dat_div_reg[3]_i_1__0_n_1 ;
  wire \dat_div_reg[3]_i_1__0_n_2 ;
  wire \dat_div_reg[3]_i_1__0_n_3 ;
  wire [3:0]\dat_div_reg[7] ;
  wire \dat_div_reg[7]_i_1__0_n_0 ;
  wire \dat_div_reg[7]_i_1__0_n_1 ;
  wire \dat_div_reg[7]_i_1__0_n_2 ;
  wire \dat_div_reg[7]_i_1__0_n_3 ;
  wire [31:0]data0;
  wire data00;
  wire div_go;
  wire dv_o;
  wire dv_o0;
  wire i__carry__3_i_1__4_n_0;
  wire i__carry__3_i_1__5_n_0;
  wire i__carry__3_i_2__4_n_0;
  wire i__carry__3_i_2__5_n_0;
  wire i__carry__3_i_3__4_n_0;
  wire i__carry__3_i_3__5_n_0;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_0 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_1 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_10 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_11 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_12 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_13 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_14 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_15 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_16 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_17 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_2 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_3 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_4 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_5 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_6 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_7 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_8 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_9 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_0 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_1 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_10 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_11 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_12 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_13 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_14 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_15 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_17 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_18 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_19 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_2 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_3 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_4 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_5 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_6 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_7 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_8 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_9 ;
  wire m_axi_osc2_aclk;
  wire m_axi_osc2_aresetn;
  wire [5:0]p_0_in;
  wire p_0_in0;
  wire \pipe_dv[0]_i_1__0_n_0 ;
  wire \pipe_dv[0]_i_2__0_n_0 ;
  wire \pipe_dv_reg[0]__0 ;
  wire \pipe_loop[1].cnt[1][0]_i_1__0_n_0 ;
  wire \pipe_loop[1].cnt[1][1]_i_1__0_n_0 ;
  wire \pipe_loop[1].cnt[1][2]_i_1__0_n_0 ;
  wire \pipe_loop[1].cnt[1][3]_i_1__0_n_0 ;
  wire \pipe_loop[1].cnt[1][4]_i_1__0_n_0 ;
  wire \pipe_loop[1].cnt[1][5]_i_1__0_n_0 ;
  wire \pipe_loop[1].cnt[1][5]_i_2__0_n_0 ;
  wire \pipe_loop[1].cnt_reg_n_0_[1][0] ;
  wire \pipe_loop[1].cnt_reg_n_0_[1][1] ;
  wire \pipe_loop[1].cnt_reg_n_0_[1][2] ;
  wire \pipe_loop[1].cnt_reg_n_0_[1][3] ;
  wire \pipe_loop[1].cnt_reg_n_0_[1][4] ;
  wire \pipe_loop[1].cnt_reg_n_0_[1][5] ;
  wire \pipe_loop[1].pipe_dv[1]_i_1__0_n_0 ;
  wire \pipe_loop[1].pipe_dv[1]_i_2__0_n_0 ;
  wire \pipe_loop[1].pipe_dv_reg[1]__0 ;
  wire [14:0]\pipe_loop[1].reg_Q_reg[1]_15 ;
  wire \pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][0] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][10] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][11] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][12] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][13] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][14] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][15] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][16] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][17] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][18] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][19] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][1] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][20] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][21] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][22] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][23] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][24] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][25] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][26] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][27] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][28] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][29] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][2] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][30] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][3] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][4] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][5] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][6] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][7] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][8] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][9] ;
  wire \pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ;
  wire [16:0]\pipe_loop[1].reg_Y_reg[1]_13 ;
  wire [0:0]q_o;
  wire \q_o[10]_i_1__0_n_0 ;
  wire \q_o[11]_i_1__0_n_0 ;
  wire \q_o[12]_i_1__0_n_0 ;
  wire \q_o[13]_i_1__0_n_0 ;
  wire \q_o[14]_i_1__0_n_0 ;
  wire \q_o[15]_i_1__0_n_0 ;
  wire \q_o[1]_i_1__0_n_0 ;
  wire \q_o[2]_i_1__0_n_0 ;
  wire \q_o[3]_i_1__0_n_0 ;
  wire \q_o[4]_i_1__0_n_0 ;
  wire \q_o[5]_i_1__0_n_0 ;
  wire \q_o[6]_i_1__0_n_0 ;
  wire \q_o[7]_i_1__0_n_0 ;
  wire \q_o[8]_i_1__0_n_0 ;
  wire \q_o[9]_i_1__0_n_0 ;
  wire [14:0]\q_o_reg[15]_0 ;
  wire r_sign;
  wire [14:0]reg_Q;
  wire \reg_Q[0][13]_i_1__0_n_0 ;
  wire [13:0]\reg_Q_reg[0]_14 ;
  wire [31:0]reg_X;
  wire \reg_X[0][0]_i_1__0_n_0 ;
  wire \reg_X[0][10]_i_1__0_n_0 ;
  wire \reg_X[0][11]_i_1__0_n_0 ;
  wire \reg_X[0][12]_i_1__0_n_0 ;
  wire \reg_X[0][13]_i_1__0_n_0 ;
  wire \reg_X[0][14]_i_1__0_n_0 ;
  wire \reg_X[0][15]_i_1__0_n_0 ;
  wire \reg_X[0][16]_i_1__0_n_0 ;
  wire \reg_X[0][17]_i_1__0_n_0 ;
  wire \reg_X[0][18]_i_1__0_n_0 ;
  wire \reg_X[0][19]_i_1__0_n_0 ;
  wire \reg_X[0][1]_i_1__0_n_0 ;
  wire \reg_X[0][20]_i_1__0_n_0 ;
  wire \reg_X[0][21]_i_1__0_n_0 ;
  wire \reg_X[0][22]_i_1__0_n_0 ;
  wire \reg_X[0][23]_i_1__0_n_0 ;
  wire \reg_X[0][24]_i_1__0_n_0 ;
  wire \reg_X[0][25]_i_1__0_n_0 ;
  wire \reg_X[0][26]_i_1__0_n_0 ;
  wire \reg_X[0][27]_i_1__0_n_0 ;
  wire \reg_X[0][28]_i_1__0_n_0 ;
  wire \reg_X[0][29]_i_1__0_n_0 ;
  wire \reg_X[0][2]_i_1__0_n_0 ;
  wire \reg_X[0][30]_i_1__0_n_0 ;
  wire \reg_X[0][31]_i_1__0_n_0 ;
  wire \reg_X[0][31]_i_2__0_n_0 ;
  wire \reg_X[0][3]_i_1__0_n_0 ;
  wire \reg_X[0][4]_i_1__0_n_0 ;
  wire \reg_X[0][5]_i_1__0_n_0 ;
  wire \reg_X[0][6]_i_1__0_n_0 ;
  wire \reg_X[0][7]_i_1__0_n_0 ;
  wire \reg_X[0][8]_i_1__0_n_0 ;
  wire \reg_X[0][9]_i_1__0_n_0 ;
  wire reg_Y;
  wire [16:0]\reg_Y_reg[0][16]_0 ;
  wire [16:0]\reg_Y_reg[0]_12 ;
  wire [18:0]w_2r;
  wire [3:3]\NLW_dat_div_reg[15]_i_1__0_CO_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h8)) 
    \R[0][17]_i_1__0 
       (.I0(m_axi_osc2_aresetn),
        .I1(div_go),
        .O(reg_Y));
  LUT2 #(
    .INIT(4'h8)) 
    \R[0][17]_i_2__0 
       (.I0(\pipe_dv_reg[0]__0 ),
        .I1(m_axi_osc2_aresetn),
        .O(cnt));
  FDRE \R_reg[0][0] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_17 ),
        .Q(\R_reg_n_0_[0][0] ),
        .R(reg_Y));
  FDRE \R_reg[0][10] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_7 ),
        .Q(\R_reg_n_0_[0][10] ),
        .R(reg_Y));
  FDRE \R_reg[0][11] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_6 ),
        .Q(\R_reg_n_0_[0][11] ),
        .R(reg_Y));
  FDRE \R_reg[0][12] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_5 ),
        .Q(\R_reg_n_0_[0][12] ),
        .R(reg_Y));
  FDRE \R_reg[0][13] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_4 ),
        .Q(\R_reg_n_0_[0][13] ),
        .R(reg_Y));
  FDRE \R_reg[0][14] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_3 ),
        .Q(\R_reg_n_0_[0][14] ),
        .R(reg_Y));
  FDRE \R_reg[0][15] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_2 ),
        .Q(\R_reg_n_0_[0][15] ),
        .R(reg_Y));
  FDRE \R_reg[0][16] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_1 ),
        .Q(\R_reg_n_0_[0][16] ),
        .R(reg_Y));
  FDRE \R_reg[0][17] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_0 ),
        .Q(r_sign),
        .R(reg_Y));
  FDRE \R_reg[0][1] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_16 ),
        .Q(\R_reg_n_0_[0][1] ),
        .R(reg_Y));
  FDRE \R_reg[0][2] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_15 ),
        .Q(\R_reg_n_0_[0][2] ),
        .R(reg_Y));
  FDRE \R_reg[0][3] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_14 ),
        .Q(\R_reg_n_0_[0][3] ),
        .R(reg_Y));
  FDRE \R_reg[0][4] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_13 ),
        .Q(\R_reg_n_0_[0][4] ),
        .R(reg_Y));
  FDRE \R_reg[0][5] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_12 ),
        .Q(\R_reg_n_0_[0][5] ),
        .R(reg_Y));
  FDRE \R_reg[0][6] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_11 ),
        .Q(\R_reg_n_0_[0][6] ),
        .R(reg_Y));
  FDRE \R_reg[0][7] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_10 ),
        .Q(\R_reg_n_0_[0][7] ),
        .R(reg_Y));
  FDRE \R_reg[0][8] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_9 ),
        .Q(\R_reg_n_0_[0][8] ),
        .R(reg_Y));
  FDRE \R_reg[0][9] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_8 ),
        .Q(\R_reg_n_0_[0][9] ),
        .R(reg_Y));
  LUT1 #(
    .INIT(2'h1)) 
    \cnt[0][0]_i_1__0 
       (.I0(\cnt_reg[0]_16 [0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \cnt[0][1]_i_1__0 
       (.I0(\cnt_reg[0]_16 [0]),
        .I1(\cnt_reg[0]_16 [1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \cnt[0][2]_i_1__0 
       (.I0(\cnt_reg[0]_16 [2]),
        .I1(\cnt_reg[0]_16 [1]),
        .I2(\cnt_reg[0]_16 [0]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \cnt[0][3]_i_1__0 
       (.I0(\cnt_reg[0]_16 [3]),
        .I1(\cnt_reg[0]_16 [0]),
        .I2(\cnt_reg[0]_16 [1]),
        .I3(\cnt_reg[0]_16 [2]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \cnt[0][4]_i_1__0 
       (.I0(\cnt_reg[0]_16 [4]),
        .I1(\cnt_reg[0]_16 [2]),
        .I2(\cnt_reg[0]_16 [1]),
        .I3(\cnt_reg[0]_16 [0]),
        .I4(\cnt_reg[0]_16 [3]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \cnt[0][5]_i_1__0 
       (.I0(\cnt_reg[0]_16 [5]),
        .I1(\cnt_reg[0]_16 [3]),
        .I2(\cnt_reg[0]_16 [0]),
        .I3(\cnt_reg[0]_16 [1]),
        .I4(\cnt_reg[0]_16 [2]),
        .I5(\cnt_reg[0]_16 [4]),
        .O(p_0_in[5]));
  FDSE \cnt_reg[0][0] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(p_0_in[0]),
        .Q(\cnt_reg[0]_16 [0]),
        .S(reg_Y));
  FDRE \cnt_reg[0][1] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(p_0_in[1]),
        .Q(\cnt_reg[0]_16 [1]),
        .R(reg_Y));
  FDRE \cnt_reg[0][2] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(p_0_in[2]),
        .Q(\cnt_reg[0]_16 [2]),
        .R(reg_Y));
  FDRE \cnt_reg[0][3] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(p_0_in[3]),
        .Q(\cnt_reg[0]_16 [3]),
        .R(reg_Y));
  FDRE \cnt_reg[0][4] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(p_0_in[4]),
        .Q(\cnt_reg[0]_16 [4]),
        .R(reg_Y));
  FDRE \cnt_reg[0][5] 
       (.C(m_axi_osc2_aclk),
        .CE(cnt),
        .D(p_0_in[5]),
        .Q(\cnt_reg[0]_16 [5]),
        .R(reg_Y));
  LUT1 #(
    .INIT(2'h2)) 
    \dat_div[3]_i_5__0 
       (.I0(q_o),
        .O(\dat_div[3]_i_5__0_n_0 ));
  CARRY4 \dat_div_reg[11]_i_1__0 
       (.CI(\dat_div_reg[7]_i_1__0_n_0 ),
        .CO({\dat_div_reg[11]_i_1__0_n_0 ,\dat_div_reg[11]_i_1__0_n_1 ,\dat_div_reg[11]_i_1__0_n_2 ,\dat_div_reg[11]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(D[11:8]),
        .S(\dat_div_reg[11] ));
  CARRY4 \dat_div_reg[15]_i_1__0 
       (.CI(\dat_div_reg[11]_i_1__0_n_0 ),
        .CO({\NLW_dat_div_reg[15]_i_1__0_CO_UNCONNECTED [3],\dat_div_reg[15]_i_1__0_n_1 ,\dat_div_reg[15]_i_1__0_n_2 ,\dat_div_reg[15]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(D[15:12]),
        .S(\dat_div_reg[15] ));
  CARRY4 \dat_div_reg[3]_i_1__0 
       (.CI(1'b0),
        .CO({\dat_div_reg[3]_i_1__0_n_0 ,\dat_div_reg[3]_i_1__0_n_1 ,\dat_div_reg[3]_i_1__0_n_2 ,\dat_div_reg[3]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\dat_div_reg[3] }),
        .O(D[3:0]),
        .S({S,\dat_div[3]_i_5__0_n_0 }));
  CARRY4 \dat_div_reg[7]_i_1__0 
       (.CI(\dat_div_reg[3]_i_1__0_n_0 ),
        .CO({\dat_div_reg[7]_i_1__0_n_0 ,\dat_div_reg[7]_i_1__0_n_1 ,\dat_div_reg[7]_i_1__0_n_2 ,\dat_div_reg[7]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(D[7:4]),
        .S(\dat_div_reg[7] ));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    dv_o_i_1__0
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .I1(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][4] ),
        .I3(\pipe_loop[1].pipe_dv[1]_i_2__0_n_0 ),
        .O(dv_o0));
  FDRE dv_o_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(dv_o0),
        .Q(dv_o),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    event_op_reset_i_1__0
       (.I0(m_axi_osc2_aresetn),
        .O(SR));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__3_i_1__4
       (.I0(r_sign),
        .I1(\R_reg_n_0_[0][16] ),
        .O(i__carry__3_i_1__4_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__3_i_1__5
       (.I0(w_2r[18]),
        .I1(w_2r[17]),
        .O(i__carry__3_i_1__5_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__3_i_2__4
       (.I0(\R_reg_n_0_[0][16] ),
        .I1(r_sign),
        .O(i__carry__3_i_2__4_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__3_i_2__5
       (.I0(w_2r[17]),
        .I1(w_2r[18]),
        .O(i__carry__3_i_2__5_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__3_i_3__4
       (.I0(\reg_Y_reg[0]_12 [16]),
        .I1(r_sign),
        .I2(\R_reg_n_0_[0][15] ),
        .O(i__carry__3_i_3__4_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__3_i_3__5
       (.I0(\pipe_loop[1].reg_Y_reg[1]_13 [16]),
        .I1(w_2r[18]),
        .I2(w_2r[16]),
        .O(i__carry__3_i_3__5_n_0));
  system_rp_oscilloscope_0_div_add_sub_rad2 \inst_loop[0].radix2_inst_blk.i_div_add_sub 
       (.D({\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_0 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_1 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_2 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_3 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_4 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_5 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_6 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_7 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_8 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_9 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_10 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_11 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_12 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_13 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_14 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_15 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_16 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_17 }),
        .O({p_0_in0,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_17 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_18 }),
        .Q(data0[0]),
        .\R_reg[0][15] (\reg_Y_reg[0]_12 [15:0]),
        .\R_reg[0][17] (data00),
        .\R_reg[0][17]_0 (R),
        .\R_reg[0][17]_1 (reg_Q[0]),
        .S({i__carry__3_i_1__4_n_0,i__carry__3_i_2__4_n_0,i__carry__3_i_3__4_n_0}),
        .\pipe_loop[1].R_reg[1][11] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_8 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_9 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_10 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_11 }),
        .\pipe_loop[1].R_reg[1][15] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_12 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_13 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_14 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_15 }),
        .\pipe_loop[1].R_reg[1][17] (\pipe_dv[0]_i_2__0_n_0 ),
        .\pipe_loop[1].R_reg[1][3] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_0 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_1 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_2 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_3 }),
        .\pipe_loop[1].R_reg[1][7] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_4 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_5 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_6 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_7 }),
        .\reg_Q_reg[0][0] ({r_sign,\R_reg_n_0_[0][15] ,\R_reg_n_0_[0][14] ,\R_reg_n_0_[0][13] ,\R_reg_n_0_[0][12] ,\R_reg_n_0_[0][11] ,\R_reg_n_0_[0][10] ,\R_reg_n_0_[0][9] ,\R_reg_n_0_[0][8] ,\R_reg_n_0_[0][7] ,\R_reg_n_0_[0][6] ,\R_reg_n_0_[0][5] ,\R_reg_n_0_[0][4] ,\R_reg_n_0_[0][3] ,\R_reg_n_0_[0][2] ,\R_reg_n_0_[0][1] ,\R_reg_n_0_[0][0] }));
  system_rp_oscilloscope_0_div_add_sub_rad2_0 \inst_loop[1].radix2_inst_blk.i_div_add_sub 
       (.D(\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_19 ),
        .O({p_0_in0,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_17 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_18 }),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [15:0]),
        .S({i__carry__3_i_1__5_n_0,i__carry__3_i_2__5_n_0,i__carry__3_i_3__5_n_0}),
        .\pipe_loop[1].R_reg[1][10] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_8 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_9 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_10 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_11 }),
        .\pipe_loop[1].R_reg[1][14] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_12 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_13 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_14 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_15 }),
        .\pipe_loop[1].R_reg[1][6] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_4 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_5 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_6 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_7 }),
        .\pipe_loop[1].reg_X_reg[1][31] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_0 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_1 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_2 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_3 }),
        .w_2r({w_2r[18],w_2r[16:0]}));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \pipe_dv[0]_i_1__0 
       (.I0(\pipe_dv[0]_i_2__0_n_0 ),
        .I1(\pipe_dv_reg[0]__0 ),
        .I2(div_go),
        .O(\pipe_dv[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \pipe_dv[0]_i_2__0 
       (.I0(\cnt_reg[0]_16 [1]),
        .I1(\cnt_reg[0]_16 [0]),
        .I2(\cnt_reg[0]_16 [2]),
        .I3(\cnt_reg[0]_16 [4]),
        .I4(\cnt_reg[0]_16 [3]),
        .I5(\cnt_reg[0]_16 [5]),
        .O(\pipe_dv[0]_i_2__0_n_0 ));
  FDRE \pipe_dv_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\pipe_dv[0]_i_1__0_n_0 ),
        .Q(\pipe_dv_reg[0]__0 ),
        .R(SR));
  FDRE \pipe_loop[1].R_reg[1][0] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[0]),
        .Q(w_2r[1]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][10] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[10]),
        .Q(w_2r[11]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][11] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[11]),
        .Q(w_2r[12]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][12] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[12]),
        .Q(w_2r[13]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][13] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[13]),
        .Q(w_2r[14]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][14] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[14]),
        .Q(w_2r[15]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][15] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[15]),
        .Q(w_2r[16]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][16] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[16]),
        .Q(w_2r[17]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][17] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[17]),
        .Q(w_2r[18]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][1] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[1]),
        .Q(w_2r[2]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][2] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[2]),
        .Q(w_2r[3]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][3] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[3]),
        .Q(w_2r[4]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][4] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[4]),
        .Q(w_2r[5]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][5] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[5]),
        .Q(w_2r[6]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][6] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[6]),
        .Q(w_2r[7]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][7] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[7]),
        .Q(w_2r[8]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][8] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[8]),
        .Q(w_2r[9]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][9] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(R[9]),
        .Q(w_2r[10]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT3 #(
    .INIT(8'hDE)) 
    \pipe_loop[1].cnt[1][0]_i_1__0 
       (.I0(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .O(\pipe_loop[1].cnt[1][0]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \pipe_loop[1].cnt[1][1]_i_1__0 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .I1(\pipe_loop[1].cnt_reg_n_0_[1][1] ),
        .O(\pipe_loop[1].cnt[1][1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \pipe_loop[1].cnt[1][2]_i_1__0 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .I1(\pipe_loop[1].cnt_reg_n_0_[1][1] ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .O(\pipe_loop[1].cnt[1][2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \pipe_loop[1].cnt[1][3]_i_1__0 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][3] ),
        .I1(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][1] ),
        .I3(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .O(\pipe_loop[1].cnt[1][3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \pipe_loop[1].cnt[1][4]_i_1__0 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][4] ),
        .I1(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][1] ),
        .I3(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .I4(\pipe_loop[1].cnt_reg_n_0_[1][3] ),
        .O(\pipe_loop[1].cnt[1][4]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \pipe_loop[1].cnt[1][5]_i_1__0 
       (.I0(\pipe_dv[0]_i_2__0_n_0 ),
        .I1(m_axi_osc2_aresetn),
        .O(\pipe_loop[1].cnt[1][5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \pipe_loop[1].cnt[1][5]_i_2__0 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][5] ),
        .I1(\pipe_loop[1].cnt_reg_n_0_[1][3] ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .I3(\pipe_loop[1].cnt_reg_n_0_[1][1] ),
        .I4(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .I5(\pipe_loop[1].cnt_reg_n_0_[1][4] ),
        .O(\pipe_loop[1].cnt[1][5]_i_2__0_n_0 ));
  FDRE \pipe_loop[1].cnt_reg[1][0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\pipe_loop[1].cnt[1][0]_i_1__0_n_0 ),
        .Q(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .R(SR));
  FDRE \pipe_loop[1].cnt_reg[1][1] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .D(\pipe_loop[1].cnt[1][1]_i_1__0_n_0 ),
        .Q(\pipe_loop[1].cnt_reg_n_0_[1][1] ),
        .R(\pipe_loop[1].cnt[1][5]_i_1__0_n_0 ));
  FDRE \pipe_loop[1].cnt_reg[1][2] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .D(\pipe_loop[1].cnt[1][2]_i_1__0_n_0 ),
        .Q(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .R(\pipe_loop[1].cnt[1][5]_i_1__0_n_0 ));
  FDRE \pipe_loop[1].cnt_reg[1][3] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .D(\pipe_loop[1].cnt[1][3]_i_1__0_n_0 ),
        .Q(\pipe_loop[1].cnt_reg_n_0_[1][3] ),
        .R(\pipe_loop[1].cnt[1][5]_i_1__0_n_0 ));
  FDRE \pipe_loop[1].cnt_reg[1][4] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .D(\pipe_loop[1].cnt[1][4]_i_1__0_n_0 ),
        .Q(\pipe_loop[1].cnt_reg_n_0_[1][4] ),
        .R(\pipe_loop[1].cnt[1][5]_i_1__0_n_0 ));
  FDRE \pipe_loop[1].cnt_reg[1][5] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .D(\pipe_loop[1].cnt[1][5]_i_2__0_n_0 ),
        .Q(\pipe_loop[1].cnt_reg_n_0_[1][5] ),
        .R(\pipe_loop[1].cnt[1][5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT5 #(
    .INIT(32'hFFFFCC8C)) 
    \pipe_loop[1].pipe_dv[1]_i_1__0 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .I1(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][4] ),
        .I3(\pipe_loop[1].pipe_dv[1]_i_2__0_n_0 ),
        .I4(\pipe_dv[0]_i_2__0_n_0 ),
        .O(\pipe_loop[1].pipe_dv[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pipe_loop[1].pipe_dv[1]_i_2__0 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][1] ),
        .I1(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][5] ),
        .I3(\pipe_loop[1].cnt_reg_n_0_[1][3] ),
        .O(\pipe_loop[1].pipe_dv[1]_i_2__0_n_0 ));
  FDRE \pipe_loop[1].pipe_dv_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\pipe_loop[1].pipe_dv[1]_i_1__0_n_0 ),
        .Q(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][10]_i_1__0 
       (.I0(\reg_Q_reg[0]_14 [9]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_15 [9]),
        .O(reg_Q[10]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][11]_i_1__0 
       (.I0(\reg_Q_reg[0]_14 [10]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_15 [10]),
        .O(reg_Q[11]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][12]_i_1__0 
       (.I0(\reg_Q_reg[0]_14 [11]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_15 [11]),
        .O(reg_Q[12]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][13]_i_1__0 
       (.I0(\reg_Q_reg[0]_14 [12]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_15 [12]),
        .O(reg_Q[13]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \pipe_loop[1].reg_Q[1][14]_inv_i_1__0 
       (.I0(\reg_Q_reg[0]_14 [13]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_15 [13]),
        .O(reg_Q[14]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][1]_i_1__0 
       (.I0(\reg_Q_reg[0]_14 [0]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_15 [0]),
        .O(reg_Q[1]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][2]_i_1__0 
       (.I0(\reg_Q_reg[0]_14 [1]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_15 [1]),
        .O(reg_Q[2]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][3]_i_1__0 
       (.I0(\reg_Q_reg[0]_14 [2]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_15 [2]),
        .O(reg_Q[3]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][4]_i_1__0 
       (.I0(\reg_Q_reg[0]_14 [3]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_15 [3]),
        .O(reg_Q[4]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][5]_i_1__0 
       (.I0(\reg_Q_reg[0]_14 [4]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_15 [4]),
        .O(reg_Q[5]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][6]_i_1__0 
       (.I0(\reg_Q_reg[0]_14 [5]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_15 [5]),
        .O(reg_Q[6]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][7]_i_1__0 
       (.I0(\reg_Q_reg[0]_14 [6]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_15 [6]),
        .O(reg_Q[7]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][8]_i_1__0 
       (.I0(\reg_Q_reg[0]_14 [7]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_15 [7]),
        .O(reg_Q[8]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][9]_i_1__0 
       (.I0(\reg_Q_reg[0]_14 [8]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_15 [8]),
        .O(reg_Q[9]));
  FDRE \pipe_loop[1].reg_Q_reg[1][0] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_Q[0]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_15 [0]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][10] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_Q[10]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_15 [10]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][11] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_Q[11]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_15 [11]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][12] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_Q[12]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_15 [12]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][13] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_Q[13]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_15 [13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \pipe_loop[1].reg_Q_reg[1][14]_inv 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_Q[14]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_15 [14]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][1] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_Q[1]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_15 [1]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][2] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_Q[2]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_15 [2]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][3] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_Q[3]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_15 [3]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][4] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_Q[4]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_15 [4]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][5] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_Q[5]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_15 [5]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][6] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_Q[6]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_15 [6]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][7] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_Q[7]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_15 [7]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][8] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_Q[8]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_15 [8]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][9] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_Q[9]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_15 [9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][0]_i_1__0 
       (.I0(data0[0]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(w_2r[0]),
        .O(reg_X[0]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][10]_i_1__0 
       (.I0(data0[10]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][9] ),
        .O(reg_X[10]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][11]_i_1__0 
       (.I0(data0[11]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][10] ),
        .O(reg_X[11]));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][12]_i_1__0 
       (.I0(data0[12]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][11] ),
        .O(reg_X[12]));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][13]_i_1__0 
       (.I0(data0[13]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][12] ),
        .O(reg_X[13]));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][14]_i_1__0 
       (.I0(data0[14]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][13] ),
        .O(reg_X[14]));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][15]_i_1__0 
       (.I0(data0[15]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][14] ),
        .O(reg_X[15]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][16]_i_1__0 
       (.I0(data0[16]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][15] ),
        .O(reg_X[16]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][17]_i_1__0 
       (.I0(data0[17]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][16] ),
        .O(reg_X[17]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][18]_i_1__0 
       (.I0(data0[18]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][17] ),
        .O(reg_X[18]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][19]_i_1__0 
       (.I0(data0[19]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][18] ),
        .O(reg_X[19]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][1]_i_1__0 
       (.I0(data0[1]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][0] ),
        .O(reg_X[1]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][20]_i_1__0 
       (.I0(data0[20]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][19] ),
        .O(reg_X[20]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][21]_i_1__0 
       (.I0(data0[21]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][20] ),
        .O(reg_X[21]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][22]_i_1__0 
       (.I0(data0[22]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][21] ),
        .O(reg_X[22]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][23]_i_1__0 
       (.I0(data0[23]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][22] ),
        .O(reg_X[23]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][24]_i_1__0 
       (.I0(data0[24]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][23] ),
        .O(reg_X[24]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][25]_i_1__0 
       (.I0(data0[25]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][24] ),
        .O(reg_X[25]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][26]_i_1__0 
       (.I0(data0[26]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][25] ),
        .O(reg_X[26]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][27]_i_1__0 
       (.I0(data0[27]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][26] ),
        .O(reg_X[27]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][28]_i_1__0 
       (.I0(data0[28]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][27] ),
        .O(reg_X[28]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][29]_i_1__0 
       (.I0(data0[29]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][28] ),
        .O(reg_X[29]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][2]_i_1__0 
       (.I0(data0[2]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][1] ),
        .O(reg_X[2]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][30]_i_1__0 
       (.I0(data0[30]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][29] ),
        .O(reg_X[30]));
  LUT3 #(
    .INIT(8'hA8)) 
    \pipe_loop[1].reg_X[1][31]_i_1__0 
       (.I0(m_axi_osc2_aresetn),
        .I1(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .I2(\pipe_dv[0]_i_2__0_n_0 ),
        .O(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][31]_i_2__0 
       (.I0(data0[31]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][30] ),
        .O(reg_X[31]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][3]_i_1__0 
       (.I0(data0[3]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][2] ),
        .O(reg_X[3]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][4]_i_1__0 
       (.I0(data0[4]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][3] ),
        .O(reg_X[4]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][5]_i_1__0 
       (.I0(data0[5]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][4] ),
        .O(reg_X[5]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][6]_i_1__0 
       (.I0(data0[6]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][5] ),
        .O(reg_X[6]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][7]_i_1__0 
       (.I0(data0[7]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][6] ),
        .O(reg_X[7]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][8]_i_1__0 
       (.I0(data0[8]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][7] ),
        .O(reg_X[8]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][9]_i_1__0 
       (.I0(data0[9]),
        .I1(\pipe_dv[0]_i_2__0_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][8] ),
        .O(reg_X[9]));
  FDRE \pipe_loop[1].reg_X_reg[1][0] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[0]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][0] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][10] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[10]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][10] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][11] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[11]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][11] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][12] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[12]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][12] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][13] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[13]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][13] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][14] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[14]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][14] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][15] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[15]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][15] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][16] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[16]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][16] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][17] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[17]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][17] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][18] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[18]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][18] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][19] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[19]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][19] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][1] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[1]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][1] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][20] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[20]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][20] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][21] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[21]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][21] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][22] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[22]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][22] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][23] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[23]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][23] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][24] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[24]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][24] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][25] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[25]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][25] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][26] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[26]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][26] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][27] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[27]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][27] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][28] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[28]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][28] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][29] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[29]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][29] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][2] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[2]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][2] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][30] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[30]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][30] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][31] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[31]),
        .Q(w_2r[0]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][3] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[3]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][3] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][4] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[4]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][4] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][5] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[5]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][5] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][6] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[6]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][6] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][7] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[7]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][7] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][8] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[8]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][8] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][9] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1__0_n_0 ),
        .D(reg_X[9]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][9] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    \pipe_loop[1].reg_Y[1][16]_i_1__0 
       (.I0(\pipe_dv[0]_i_2__0_n_0 ),
        .I1(m_axi_osc2_aresetn),
        .O(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ));
  FDRE \pipe_loop[1].reg_Y_reg[1][0] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [0]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [0]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][10] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [10]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [10]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][11] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [11]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [11]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][12] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [12]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [12]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][13] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [13]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [13]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][14] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [14]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [14]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][15] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [15]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [15]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][16] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [16]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [16]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][1] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [1]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [1]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][2] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [2]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [2]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][3] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [3]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [3]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][4] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [4]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [4]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][5] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [5]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [5]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][6] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [6]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [6]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][7] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [7]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [7]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][8] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [8]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [8]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][9] 
       (.C(m_axi_osc2_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1__0_n_0 ),
        .D(\reg_Y_reg[0]_12 [9]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_13 [9]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[10]_i_1__0 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_15 [9]),
        .O(\q_o[10]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[11]_i_1__0 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_15 [10]),
        .O(\q_o[11]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[12]_i_1__0 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_15 [11]),
        .O(\q_o[12]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[13]_i_1__0 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_15 [12]),
        .O(\q_o[13]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[14]_i_1__0 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_15 [13]),
        .O(\q_o[14]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h00400000)) 
    \q_o[15]_i_1__0 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .I1(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][4] ),
        .I3(\pipe_loop[1].pipe_dv[1]_i_2__0_n_0 ),
        .I4(m_axi_osc2_aresetn),
        .O(\q_o[15]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[1]_i_1__0 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_15 [0]),
        .O(\q_o[1]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[2]_i_1__0 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_15 [1]),
        .O(\q_o[2]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[3]_i_1__0 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_15 [2]),
        .O(\q_o[3]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[4]_i_1__0 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_15 [3]),
        .O(\q_o[4]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[5]_i_1__0 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_15 [4]),
        .O(\q_o[5]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[6]_i_1__0 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_15 [5]),
        .O(\q_o[6]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[7]_i_1__0 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_15 [6]),
        .O(\q_o[7]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[8]_i_1__0 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_15 [7]),
        .O(\q_o[8]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[9]_i_1__0 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_15 [8]),
        .O(\q_o[9]_i_1__0_n_0 ));
  FDRE \q_o_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_19 ),
        .Q(q_o),
        .R(1'b0));
  FDRE \q_o_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\q_o[10]_i_1__0_n_0 ),
        .Q(\q_o_reg[15]_0 [9]),
        .R(1'b0));
  FDRE \q_o_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\q_o[11]_i_1__0_n_0 ),
        .Q(\q_o_reg[15]_0 [10]),
        .R(1'b0));
  FDRE \q_o_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\q_o[12]_i_1__0_n_0 ),
        .Q(\q_o_reg[15]_0 [11]),
        .R(1'b0));
  FDRE \q_o_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\q_o[13]_i_1__0_n_0 ),
        .Q(\q_o_reg[15]_0 [12]),
        .R(1'b0));
  FDRE \q_o_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\q_o[14]_i_1__0_n_0 ),
        .Q(\q_o_reg[15]_0 [13]),
        .R(1'b0));
  FDRE \q_o_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\pipe_loop[1].reg_Q_reg[1]_15 [14]),
        .Q(\q_o_reg[15]_0 [14]),
        .R(1'b0));
  FDRE \q_o_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\q_o[1]_i_1__0_n_0 ),
        .Q(\q_o_reg[15]_0 [0]),
        .R(1'b0));
  FDRE \q_o_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\q_o[2]_i_1__0_n_0 ),
        .Q(\q_o_reg[15]_0 [1]),
        .R(1'b0));
  FDRE \q_o_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\q_o[3]_i_1__0_n_0 ),
        .Q(\q_o_reg[15]_0 [2]),
        .R(1'b0));
  FDRE \q_o_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\q_o[4]_i_1__0_n_0 ),
        .Q(\q_o_reg[15]_0 [3]),
        .R(1'b0));
  FDRE \q_o_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\q_o[5]_i_1__0_n_0 ),
        .Q(\q_o_reg[15]_0 [4]),
        .R(1'b0));
  FDRE \q_o_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\q_o[6]_i_1__0_n_0 ),
        .Q(\q_o_reg[15]_0 [5]),
        .R(1'b0));
  FDRE \q_o_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\q_o[7]_i_1__0_n_0 ),
        .Q(\q_o_reg[15]_0 [6]),
        .R(1'b0));
  FDRE \q_o_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\q_o[8]_i_1__0_n_0 ),
        .Q(\q_o_reg[15]_0 [7]),
        .R(1'b0));
  FDRE \q_o_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(\q_o[15]_i_1__0_n_0 ),
        .D(\q_o[9]_i_1__0_n_0 ),
        .Q(\q_o_reg[15]_0 [8]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h08)) 
    \reg_Q[0][13]_i_1__0 
       (.I0(m_axi_osc2_aresetn),
        .I1(\pipe_dv_reg[0]__0 ),
        .I2(div_go),
        .O(\reg_Q[0][13]_i_1__0_n_0 ));
  FDRE \reg_Q_reg[0][0] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_Q[0][13]_i_1__0_n_0 ),
        .D(data00),
        .Q(\reg_Q_reg[0]_14 [0]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][10] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_Q[0][13]_i_1__0_n_0 ),
        .D(\reg_Q_reg[0]_14 [9]),
        .Q(\reg_Q_reg[0]_14 [10]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][11] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_Q[0][13]_i_1__0_n_0 ),
        .D(\reg_Q_reg[0]_14 [10]),
        .Q(\reg_Q_reg[0]_14 [11]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][12] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_Q[0][13]_i_1__0_n_0 ),
        .D(\reg_Q_reg[0]_14 [11]),
        .Q(\reg_Q_reg[0]_14 [12]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][13] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_Q[0][13]_i_1__0_n_0 ),
        .D(\reg_Q_reg[0]_14 [12]),
        .Q(\reg_Q_reg[0]_14 [13]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][1] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_Q[0][13]_i_1__0_n_0 ),
        .D(\reg_Q_reg[0]_14 [0]),
        .Q(\reg_Q_reg[0]_14 [1]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][2] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_Q[0][13]_i_1__0_n_0 ),
        .D(\reg_Q_reg[0]_14 [1]),
        .Q(\reg_Q_reg[0]_14 [2]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][3] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_Q[0][13]_i_1__0_n_0 ),
        .D(\reg_Q_reg[0]_14 [2]),
        .Q(\reg_Q_reg[0]_14 [3]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][4] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_Q[0][13]_i_1__0_n_0 ),
        .D(\reg_Q_reg[0]_14 [3]),
        .Q(\reg_Q_reg[0]_14 [4]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][5] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_Q[0][13]_i_1__0_n_0 ),
        .D(\reg_Q_reg[0]_14 [4]),
        .Q(\reg_Q_reg[0]_14 [5]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][6] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_Q[0][13]_i_1__0_n_0 ),
        .D(\reg_Q_reg[0]_14 [5]),
        .Q(\reg_Q_reg[0]_14 [6]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][7] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_Q[0][13]_i_1__0_n_0 ),
        .D(\reg_Q_reg[0]_14 [6]),
        .Q(\reg_Q_reg[0]_14 [7]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][8] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_Q[0][13]_i_1__0_n_0 ),
        .D(\reg_Q_reg[0]_14 [7]),
        .Q(\reg_Q_reg[0]_14 [8]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][9] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_Q[0][13]_i_1__0_n_0 ),
        .D(\reg_Q_reg[0]_14 [8]),
        .Q(\reg_Q_reg[0]_14 [9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][0]_i_1__0 
       (.I0(Q[0]),
        .I1(div_go),
        .I2(data0[0]),
        .O(\reg_X[0][0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][10]_i_1__0 
       (.I0(Q[10]),
        .I1(div_go),
        .I2(data0[10]),
        .O(\reg_X[0][10]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][11]_i_1__0 
       (.I0(Q[11]),
        .I1(div_go),
        .I2(data0[11]),
        .O(\reg_X[0][11]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][12]_i_1__0 
       (.I0(Q[12]),
        .I1(div_go),
        .I2(data0[12]),
        .O(\reg_X[0][12]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][13]_i_1__0 
       (.I0(Q[13]),
        .I1(div_go),
        .I2(data0[13]),
        .O(\reg_X[0][13]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][14]_i_1__0 
       (.I0(Q[14]),
        .I1(div_go),
        .I2(data0[14]),
        .O(\reg_X[0][14]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][15]_i_1__0 
       (.I0(Q[15]),
        .I1(div_go),
        .I2(data0[15]),
        .O(\reg_X[0][15]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][16]_i_1__0 
       (.I0(Q[16]),
        .I1(div_go),
        .I2(data0[16]),
        .O(\reg_X[0][16]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][17]_i_1__0 
       (.I0(Q[17]),
        .I1(div_go),
        .I2(data0[17]),
        .O(\reg_X[0][17]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][18]_i_1__0 
       (.I0(Q[18]),
        .I1(div_go),
        .I2(data0[18]),
        .O(\reg_X[0][18]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][19]_i_1__0 
       (.I0(Q[19]),
        .I1(div_go),
        .I2(data0[19]),
        .O(\reg_X[0][19]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][1]_i_1__0 
       (.I0(Q[1]),
        .I1(div_go),
        .I2(data0[1]),
        .O(\reg_X[0][1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][20]_i_1__0 
       (.I0(Q[20]),
        .I1(div_go),
        .I2(data0[20]),
        .O(\reg_X[0][20]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][21]_i_1__0 
       (.I0(Q[21]),
        .I1(div_go),
        .I2(data0[21]),
        .O(\reg_X[0][21]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][22]_i_1__0 
       (.I0(Q[22]),
        .I1(div_go),
        .I2(data0[22]),
        .O(\reg_X[0][22]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][23]_i_1__0 
       (.I0(Q[23]),
        .I1(div_go),
        .I2(data0[23]),
        .O(\reg_X[0][23]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][24]_i_1__0 
       (.I0(Q[24]),
        .I1(div_go),
        .I2(data0[24]),
        .O(\reg_X[0][24]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][25]_i_1__0 
       (.I0(Q[25]),
        .I1(div_go),
        .I2(data0[25]),
        .O(\reg_X[0][25]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][26]_i_1__0 
       (.I0(Q[26]),
        .I1(div_go),
        .I2(data0[26]),
        .O(\reg_X[0][26]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][27]_i_1__0 
       (.I0(Q[27]),
        .I1(div_go),
        .I2(data0[27]),
        .O(\reg_X[0][27]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][28]_i_1__0 
       (.I0(Q[28]),
        .I1(div_go),
        .I2(data0[28]),
        .O(\reg_X[0][28]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][29]_i_1__0 
       (.I0(Q[29]),
        .I1(div_go),
        .I2(data0[29]),
        .O(\reg_X[0][29]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][2]_i_1__0 
       (.I0(Q[2]),
        .I1(div_go),
        .I2(data0[2]),
        .O(\reg_X[0][2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][30]_i_1__0 
       (.I0(Q[30]),
        .I1(div_go),
        .I2(data0[30]),
        .O(\reg_X[0][30]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \reg_X[0][31]_i_1__0 
       (.I0(\pipe_dv_reg[0]__0 ),
        .I1(div_go),
        .I2(m_axi_osc2_aresetn),
        .O(\reg_X[0][31]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][31]_i_2__0 
       (.I0(Q[31]),
        .I1(div_go),
        .I2(data0[31]),
        .O(\reg_X[0][31]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][3]_i_1__0 
       (.I0(Q[3]),
        .I1(div_go),
        .I2(data0[3]),
        .O(\reg_X[0][3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][4]_i_1__0 
       (.I0(Q[4]),
        .I1(div_go),
        .I2(data0[4]),
        .O(\reg_X[0][4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][5]_i_1__0 
       (.I0(Q[5]),
        .I1(div_go),
        .I2(data0[5]),
        .O(\reg_X[0][5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][6]_i_1__0 
       (.I0(Q[6]),
        .I1(div_go),
        .I2(data0[6]),
        .O(\reg_X[0][6]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][7]_i_1__0 
       (.I0(Q[7]),
        .I1(div_go),
        .I2(data0[7]),
        .O(\reg_X[0][7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][8]_i_1__0 
       (.I0(Q[8]),
        .I1(div_go),
        .I2(data0[8]),
        .O(\reg_X[0][8]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][9]_i_1__0 
       (.I0(Q[9]),
        .I1(div_go),
        .I2(data0[9]),
        .O(\reg_X[0][9]_i_1__0_n_0 ));
  FDRE \reg_X_reg[0][0] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][0]_i_1__0_n_0 ),
        .Q(data0[1]),
        .R(1'b0));
  FDRE \reg_X_reg[0][10] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][10]_i_1__0_n_0 ),
        .Q(data0[11]),
        .R(1'b0));
  FDRE \reg_X_reg[0][11] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][11]_i_1__0_n_0 ),
        .Q(data0[12]),
        .R(1'b0));
  FDRE \reg_X_reg[0][12] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][12]_i_1__0_n_0 ),
        .Q(data0[13]),
        .R(1'b0));
  FDRE \reg_X_reg[0][13] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][13]_i_1__0_n_0 ),
        .Q(data0[14]),
        .R(1'b0));
  FDRE \reg_X_reg[0][14] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][14]_i_1__0_n_0 ),
        .Q(data0[15]),
        .R(1'b0));
  FDRE \reg_X_reg[0][15] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][15]_i_1__0_n_0 ),
        .Q(data0[16]),
        .R(1'b0));
  FDRE \reg_X_reg[0][16] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][16]_i_1__0_n_0 ),
        .Q(data0[17]),
        .R(1'b0));
  FDRE \reg_X_reg[0][17] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][17]_i_1__0_n_0 ),
        .Q(data0[18]),
        .R(1'b0));
  FDRE \reg_X_reg[0][18] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][18]_i_1__0_n_0 ),
        .Q(data0[19]),
        .R(1'b0));
  FDRE \reg_X_reg[0][19] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][19]_i_1__0_n_0 ),
        .Q(data0[20]),
        .R(1'b0));
  FDRE \reg_X_reg[0][1] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][1]_i_1__0_n_0 ),
        .Q(data0[2]),
        .R(1'b0));
  FDRE \reg_X_reg[0][20] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][20]_i_1__0_n_0 ),
        .Q(data0[21]),
        .R(1'b0));
  FDRE \reg_X_reg[0][21] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][21]_i_1__0_n_0 ),
        .Q(data0[22]),
        .R(1'b0));
  FDRE \reg_X_reg[0][22] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][22]_i_1__0_n_0 ),
        .Q(data0[23]),
        .R(1'b0));
  FDRE \reg_X_reg[0][23] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][23]_i_1__0_n_0 ),
        .Q(data0[24]),
        .R(1'b0));
  FDRE \reg_X_reg[0][24] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][24]_i_1__0_n_0 ),
        .Q(data0[25]),
        .R(1'b0));
  FDRE \reg_X_reg[0][25] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][25]_i_1__0_n_0 ),
        .Q(data0[26]),
        .R(1'b0));
  FDRE \reg_X_reg[0][26] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][26]_i_1__0_n_0 ),
        .Q(data0[27]),
        .R(1'b0));
  FDRE \reg_X_reg[0][27] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][27]_i_1__0_n_0 ),
        .Q(data0[28]),
        .R(1'b0));
  FDRE \reg_X_reg[0][28] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][28]_i_1__0_n_0 ),
        .Q(data0[29]),
        .R(1'b0));
  FDRE \reg_X_reg[0][29] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][29]_i_1__0_n_0 ),
        .Q(data0[30]),
        .R(1'b0));
  FDRE \reg_X_reg[0][2] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][2]_i_1__0_n_0 ),
        .Q(data0[3]),
        .R(1'b0));
  FDRE \reg_X_reg[0][30] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][30]_i_1__0_n_0 ),
        .Q(data0[31]),
        .R(1'b0));
  FDRE \reg_X_reg[0][31] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][31]_i_2__0_n_0 ),
        .Q(data0[0]),
        .R(1'b0));
  FDRE \reg_X_reg[0][3] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][3]_i_1__0_n_0 ),
        .Q(data0[4]),
        .R(1'b0));
  FDRE \reg_X_reg[0][4] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][4]_i_1__0_n_0 ),
        .Q(data0[5]),
        .R(1'b0));
  FDRE \reg_X_reg[0][5] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][5]_i_1__0_n_0 ),
        .Q(data0[6]),
        .R(1'b0));
  FDRE \reg_X_reg[0][6] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][6]_i_1__0_n_0 ),
        .Q(data0[7]),
        .R(1'b0));
  FDRE \reg_X_reg[0][7] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][7]_i_1__0_n_0 ),
        .Q(data0[8]),
        .R(1'b0));
  FDRE \reg_X_reg[0][8] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][8]_i_1__0_n_0 ),
        .Q(data0[9]),
        .R(1'b0));
  FDRE \reg_X_reg[0][9] 
       (.C(m_axi_osc2_aclk),
        .CE(\reg_X[0][31]_i_1__0_n_0 ),
        .D(\reg_X[0][9]_i_1__0_n_0 ),
        .Q(data0[10]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][0] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [0]),
        .Q(\reg_Y_reg[0]_12 [0]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][10] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [10]),
        .Q(\reg_Y_reg[0]_12 [10]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][11] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [11]),
        .Q(\reg_Y_reg[0]_12 [11]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][12] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [12]),
        .Q(\reg_Y_reg[0]_12 [12]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][13] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [13]),
        .Q(\reg_Y_reg[0]_12 [13]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][14] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [14]),
        .Q(\reg_Y_reg[0]_12 [14]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][15] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [15]),
        .Q(\reg_Y_reg[0]_12 [15]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][16] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [16]),
        .Q(\reg_Y_reg[0]_12 [16]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][1] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [1]),
        .Q(\reg_Y_reg[0]_12 [1]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][2] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [2]),
        .Q(\reg_Y_reg[0]_12 [2]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][3] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [3]),
        .Q(\reg_Y_reg[0]_12 [3]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][4] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [4]),
        .Q(\reg_Y_reg[0]_12 [4]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][5] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [5]),
        .Q(\reg_Y_reg[0]_12 [5]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][6] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [6]),
        .Q(\reg_Y_reg[0]_12 [6]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][7] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [7]),
        .Q(\reg_Y_reg[0]_12 [7]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][8] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [8]),
        .Q(\reg_Y_reg[0]_12 [8]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][9] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [9]),
        .Q(\reg_Y_reg[0]_12 [9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "divide" *) 
module system_rp_oscilloscope_0_divide_18
   (SR,
    dv_o,
    D,
    \q_o_reg[15]_0 ,
    m_axi_osc1_aclk,
    m_axi_osc1_aresetn,
    div_go,
    Q,
    \dat_div_reg[3] ,
    S,
    \dat_div_reg[7] ,
    \dat_div_reg[11] ,
    \dat_div_reg[15] ,
    \reg_Y_reg[0][16]_0 );
  output [0:0]SR;
  output dv_o;
  output [15:0]D;
  output [14:0]\q_o_reg[15]_0 ;
  input m_axi_osc1_aclk;
  input m_axi_osc1_aresetn;
  input div_go;
  input [31:0]Q;
  input [0:0]\dat_div_reg[3] ;
  input [2:0]S;
  input [3:0]\dat_div_reg[7] ;
  input [3:0]\dat_div_reg[11] ;
  input [3:0]\dat_div_reg[15] ;
  input [16:0]\reg_Y_reg[0][16]_0 ;

  wire [15:0]D;
  wire [31:0]Q;
  wire [17:0]R;
  wire \R_reg_n_0_[0][0] ;
  wire \R_reg_n_0_[0][10] ;
  wire \R_reg_n_0_[0][11] ;
  wire \R_reg_n_0_[0][12] ;
  wire \R_reg_n_0_[0][13] ;
  wire \R_reg_n_0_[0][14] ;
  wire \R_reg_n_0_[0][15] ;
  wire \R_reg_n_0_[0][16] ;
  wire \R_reg_n_0_[0][1] ;
  wire \R_reg_n_0_[0][2] ;
  wire \R_reg_n_0_[0][3] ;
  wire \R_reg_n_0_[0][4] ;
  wire \R_reg_n_0_[0][5] ;
  wire \R_reg_n_0_[0][6] ;
  wire \R_reg_n_0_[0][7] ;
  wire \R_reg_n_0_[0][8] ;
  wire \R_reg_n_0_[0][9] ;
  wire [2:0]S;
  wire [0:0]SR;
  wire cnt;
  wire [5:0]\cnt_reg[0]_4 ;
  wire \dat_div[3]_i_5_n_0 ;
  wire [3:0]\dat_div_reg[11] ;
  wire \dat_div_reg[11]_i_1_n_0 ;
  wire \dat_div_reg[11]_i_1_n_1 ;
  wire \dat_div_reg[11]_i_1_n_2 ;
  wire \dat_div_reg[11]_i_1_n_3 ;
  wire [3:0]\dat_div_reg[15] ;
  wire \dat_div_reg[15]_i_1_n_1 ;
  wire \dat_div_reg[15]_i_1_n_2 ;
  wire \dat_div_reg[15]_i_1_n_3 ;
  wire [0:0]\dat_div_reg[3] ;
  wire \dat_div_reg[3]_i_1_n_0 ;
  wire \dat_div_reg[3]_i_1_n_1 ;
  wire \dat_div_reg[3]_i_1_n_2 ;
  wire \dat_div_reg[3]_i_1_n_3 ;
  wire [3:0]\dat_div_reg[7] ;
  wire \dat_div_reg[7]_i_1_n_0 ;
  wire \dat_div_reg[7]_i_1_n_1 ;
  wire \dat_div_reg[7]_i_1_n_2 ;
  wire \dat_div_reg[7]_i_1_n_3 ;
  wire [31:0]data0;
  wire data00;
  wire div_go;
  wire dv_o;
  wire dv_o0;
  wire i__carry__3_i_1__1_n_0;
  wire i__carry__3_i_1__2_n_0;
  wire i__carry__3_i_2__1_n_0;
  wire i__carry__3_i_2__2_n_0;
  wire i__carry__3_i_3__0_n_0;
  wire i__carry__3_i_3__1_n_0;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_0 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_1 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_10 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_11 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_12 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_13 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_14 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_15 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_16 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_17 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_2 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_3 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_4 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_5 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_6 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_7 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_8 ;
  wire \inst_loop[0].radix2_inst_blk.i_div_add_sub_n_9 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_0 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_1 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_10 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_11 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_12 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_13 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_14 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_15 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_17 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_18 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_19 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_2 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_3 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_4 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_5 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_6 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_7 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_8 ;
  wire \inst_loop[1].radix2_inst_blk.i_div_add_sub_n_9 ;
  wire m_axi_osc1_aclk;
  wire m_axi_osc1_aresetn;
  wire [5:0]p_0_in;
  wire p_0_in0;
  wire \pipe_dv[0]_i_1_n_0 ;
  wire \pipe_dv[0]_i_2_n_0 ;
  wire \pipe_dv_reg[0]__0 ;
  wire \pipe_loop[1].cnt[1][0]_i_1_n_0 ;
  wire \pipe_loop[1].cnt[1][1]_i_1_n_0 ;
  wire \pipe_loop[1].cnt[1][2]_i_1_n_0 ;
  wire \pipe_loop[1].cnt[1][3]_i_1_n_0 ;
  wire \pipe_loop[1].cnt[1][4]_i_1_n_0 ;
  wire \pipe_loop[1].cnt[1][5]_i_1_n_0 ;
  wire \pipe_loop[1].cnt[1][5]_i_2_n_0 ;
  wire \pipe_loop[1].cnt_reg_n_0_[1][0] ;
  wire \pipe_loop[1].cnt_reg_n_0_[1][1] ;
  wire \pipe_loop[1].cnt_reg_n_0_[1][2] ;
  wire \pipe_loop[1].cnt_reg_n_0_[1][3] ;
  wire \pipe_loop[1].cnt_reg_n_0_[1][4] ;
  wire \pipe_loop[1].cnt_reg_n_0_[1][5] ;
  wire \pipe_loop[1].pipe_dv[1]_i_1_n_0 ;
  wire \pipe_loop[1].pipe_dv[1]_i_2_n_0 ;
  wire \pipe_loop[1].pipe_dv_reg[1]__0 ;
  wire [14:0]\pipe_loop[1].reg_Q_reg[1]_3 ;
  wire \pipe_loop[1].reg_X[1][31]_i_1_n_0 ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][0] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][10] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][11] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][12] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][13] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][14] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][15] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][16] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][17] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][18] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][19] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][1] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][20] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][21] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][22] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][23] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][24] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][25] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][26] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][27] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][28] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][29] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][2] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][30] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][3] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][4] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][5] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][6] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][7] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][8] ;
  wire \pipe_loop[1].reg_X_reg_n_0_[1][9] ;
  wire \pipe_loop[1].reg_Y[1][16]_i_1_n_0 ;
  wire [16:0]\pipe_loop[1].reg_Y_reg[1]_1 ;
  wire [0:0]q_o;
  wire \q_o[10]_i_1_n_0 ;
  wire \q_o[11]_i_1_n_0 ;
  wire \q_o[12]_i_1_n_0 ;
  wire \q_o[13]_i_1_n_0 ;
  wire \q_o[14]_i_1_n_0 ;
  wire \q_o[15]_i_1_n_0 ;
  wire \q_o[1]_i_1_n_0 ;
  wire \q_o[2]_i_1_n_0 ;
  wire \q_o[3]_i_1_n_0 ;
  wire \q_o[4]_i_1_n_0 ;
  wire \q_o[5]_i_1_n_0 ;
  wire \q_o[6]_i_1_n_0 ;
  wire \q_o[7]_i_1_n_0 ;
  wire \q_o[8]_i_1_n_0 ;
  wire \q_o[9]_i_1_n_0 ;
  wire [14:0]\q_o_reg[15]_0 ;
  wire r_sign;
  wire [14:0]reg_Q;
  wire \reg_Q[0][13]_i_1_n_0 ;
  wire [13:0]\reg_Q_reg[0]_2 ;
  wire [31:0]reg_X;
  wire \reg_X[0][0]_i_1_n_0 ;
  wire \reg_X[0][10]_i_1_n_0 ;
  wire \reg_X[0][11]_i_1_n_0 ;
  wire \reg_X[0][12]_i_1_n_0 ;
  wire \reg_X[0][13]_i_1_n_0 ;
  wire \reg_X[0][14]_i_1_n_0 ;
  wire \reg_X[0][15]_i_1_n_0 ;
  wire \reg_X[0][16]_i_1_n_0 ;
  wire \reg_X[0][17]_i_1_n_0 ;
  wire \reg_X[0][18]_i_1_n_0 ;
  wire \reg_X[0][19]_i_1_n_0 ;
  wire \reg_X[0][1]_i_1_n_0 ;
  wire \reg_X[0][20]_i_1_n_0 ;
  wire \reg_X[0][21]_i_1_n_0 ;
  wire \reg_X[0][22]_i_1_n_0 ;
  wire \reg_X[0][23]_i_1_n_0 ;
  wire \reg_X[0][24]_i_1_n_0 ;
  wire \reg_X[0][25]_i_1_n_0 ;
  wire \reg_X[0][26]_i_1_n_0 ;
  wire \reg_X[0][27]_i_1_n_0 ;
  wire \reg_X[0][28]_i_1_n_0 ;
  wire \reg_X[0][29]_i_1_n_0 ;
  wire \reg_X[0][2]_i_1_n_0 ;
  wire \reg_X[0][30]_i_1_n_0 ;
  wire \reg_X[0][31]_i_1_n_0 ;
  wire \reg_X[0][31]_i_2_n_0 ;
  wire \reg_X[0][3]_i_1_n_0 ;
  wire \reg_X[0][4]_i_1_n_0 ;
  wire \reg_X[0][5]_i_1_n_0 ;
  wire \reg_X[0][6]_i_1_n_0 ;
  wire \reg_X[0][7]_i_1_n_0 ;
  wire \reg_X[0][8]_i_1_n_0 ;
  wire \reg_X[0][9]_i_1_n_0 ;
  wire reg_Y;
  wire [16:0]\reg_Y_reg[0][16]_0 ;
  wire [16:0]\reg_Y_reg[0]_0 ;
  wire [18:0]w_2r;
  wire [3:3]\NLW_dat_div_reg[15]_i_1_CO_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h8)) 
    \R[0][17]_i_1 
       (.I0(m_axi_osc1_aresetn),
        .I1(div_go),
        .O(reg_Y));
  LUT2 #(
    .INIT(4'h8)) 
    \R[0][17]_i_2 
       (.I0(\pipe_dv_reg[0]__0 ),
        .I1(m_axi_osc1_aresetn),
        .O(cnt));
  FDRE \R_reg[0][0] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_17 ),
        .Q(\R_reg_n_0_[0][0] ),
        .R(reg_Y));
  FDRE \R_reg[0][10] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_7 ),
        .Q(\R_reg_n_0_[0][10] ),
        .R(reg_Y));
  FDRE \R_reg[0][11] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_6 ),
        .Q(\R_reg_n_0_[0][11] ),
        .R(reg_Y));
  FDRE \R_reg[0][12] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_5 ),
        .Q(\R_reg_n_0_[0][12] ),
        .R(reg_Y));
  FDRE \R_reg[0][13] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_4 ),
        .Q(\R_reg_n_0_[0][13] ),
        .R(reg_Y));
  FDRE \R_reg[0][14] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_3 ),
        .Q(\R_reg_n_0_[0][14] ),
        .R(reg_Y));
  FDRE \R_reg[0][15] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_2 ),
        .Q(\R_reg_n_0_[0][15] ),
        .R(reg_Y));
  FDRE \R_reg[0][16] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_1 ),
        .Q(\R_reg_n_0_[0][16] ),
        .R(reg_Y));
  FDRE \R_reg[0][17] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_0 ),
        .Q(r_sign),
        .R(reg_Y));
  FDRE \R_reg[0][1] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_16 ),
        .Q(\R_reg_n_0_[0][1] ),
        .R(reg_Y));
  FDRE \R_reg[0][2] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_15 ),
        .Q(\R_reg_n_0_[0][2] ),
        .R(reg_Y));
  FDRE \R_reg[0][3] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_14 ),
        .Q(\R_reg_n_0_[0][3] ),
        .R(reg_Y));
  FDRE \R_reg[0][4] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_13 ),
        .Q(\R_reg_n_0_[0][4] ),
        .R(reg_Y));
  FDRE \R_reg[0][5] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_12 ),
        .Q(\R_reg_n_0_[0][5] ),
        .R(reg_Y));
  FDRE \R_reg[0][6] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_11 ),
        .Q(\R_reg_n_0_[0][6] ),
        .R(reg_Y));
  FDRE \R_reg[0][7] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_10 ),
        .Q(\R_reg_n_0_[0][7] ),
        .R(reg_Y));
  FDRE \R_reg[0][8] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_9 ),
        .Q(\R_reg_n_0_[0][8] ),
        .R(reg_Y));
  FDRE \R_reg[0][9] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_8 ),
        .Q(\R_reg_n_0_[0][9] ),
        .R(reg_Y));
  LUT1 #(
    .INIT(2'h1)) 
    \cnt[0][0]_i_1 
       (.I0(\cnt_reg[0]_4 [0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \cnt[0][1]_i_1 
       (.I0(\cnt_reg[0]_4 [0]),
        .I1(\cnt_reg[0]_4 [1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \cnt[0][2]_i_1 
       (.I0(\cnt_reg[0]_4 [2]),
        .I1(\cnt_reg[0]_4 [1]),
        .I2(\cnt_reg[0]_4 [0]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \cnt[0][3]_i_1 
       (.I0(\cnt_reg[0]_4 [3]),
        .I1(\cnt_reg[0]_4 [0]),
        .I2(\cnt_reg[0]_4 [1]),
        .I3(\cnt_reg[0]_4 [2]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \cnt[0][4]_i_1 
       (.I0(\cnt_reg[0]_4 [4]),
        .I1(\cnt_reg[0]_4 [2]),
        .I2(\cnt_reg[0]_4 [1]),
        .I3(\cnt_reg[0]_4 [0]),
        .I4(\cnt_reg[0]_4 [3]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \cnt[0][5]_i_1 
       (.I0(\cnt_reg[0]_4 [5]),
        .I1(\cnt_reg[0]_4 [3]),
        .I2(\cnt_reg[0]_4 [0]),
        .I3(\cnt_reg[0]_4 [1]),
        .I4(\cnt_reg[0]_4 [2]),
        .I5(\cnt_reg[0]_4 [4]),
        .O(p_0_in[5]));
  FDSE \cnt_reg[0][0] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(p_0_in[0]),
        .Q(\cnt_reg[0]_4 [0]),
        .S(reg_Y));
  FDRE \cnt_reg[0][1] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(p_0_in[1]),
        .Q(\cnt_reg[0]_4 [1]),
        .R(reg_Y));
  FDRE \cnt_reg[0][2] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(p_0_in[2]),
        .Q(\cnt_reg[0]_4 [2]),
        .R(reg_Y));
  FDRE \cnt_reg[0][3] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(p_0_in[3]),
        .Q(\cnt_reg[0]_4 [3]),
        .R(reg_Y));
  FDRE \cnt_reg[0][4] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(p_0_in[4]),
        .Q(\cnt_reg[0]_4 [4]),
        .R(reg_Y));
  FDRE \cnt_reg[0][5] 
       (.C(m_axi_osc1_aclk),
        .CE(cnt),
        .D(p_0_in[5]),
        .Q(\cnt_reg[0]_4 [5]),
        .R(reg_Y));
  LUT1 #(
    .INIT(2'h2)) 
    \dat_div[3]_i_5 
       (.I0(q_o),
        .O(\dat_div[3]_i_5_n_0 ));
  CARRY4 \dat_div_reg[11]_i_1 
       (.CI(\dat_div_reg[7]_i_1_n_0 ),
        .CO({\dat_div_reg[11]_i_1_n_0 ,\dat_div_reg[11]_i_1_n_1 ,\dat_div_reg[11]_i_1_n_2 ,\dat_div_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(D[11:8]),
        .S(\dat_div_reg[11] ));
  CARRY4 \dat_div_reg[15]_i_1 
       (.CI(\dat_div_reg[11]_i_1_n_0 ),
        .CO({\NLW_dat_div_reg[15]_i_1_CO_UNCONNECTED [3],\dat_div_reg[15]_i_1_n_1 ,\dat_div_reg[15]_i_1_n_2 ,\dat_div_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(D[15:12]),
        .S(\dat_div_reg[15] ));
  CARRY4 \dat_div_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\dat_div_reg[3]_i_1_n_0 ,\dat_div_reg[3]_i_1_n_1 ,\dat_div_reg[3]_i_1_n_2 ,\dat_div_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\dat_div_reg[3] }),
        .O(D[3:0]),
        .S({S,\dat_div[3]_i_5_n_0 }));
  CARRY4 \dat_div_reg[7]_i_1 
       (.CI(\dat_div_reg[3]_i_1_n_0 ),
        .CO({\dat_div_reg[7]_i_1_n_0 ,\dat_div_reg[7]_i_1_n_1 ,\dat_div_reg[7]_i_1_n_2 ,\dat_div_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(D[7:4]),
        .S(\dat_div_reg[7] ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    dv_o_i_1
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .I1(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][4] ),
        .I3(\pipe_loop[1].pipe_dv[1]_i_2_n_0 ),
        .O(dv_o0));
  FDRE dv_o_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(dv_o0),
        .Q(dv_o),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    event_op_reset_i_1
       (.I0(m_axi_osc1_aresetn),
        .O(SR));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__3_i_1__1
       (.I0(r_sign),
        .I1(\R_reg_n_0_[0][16] ),
        .O(i__carry__3_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__3_i_1__2
       (.I0(w_2r[18]),
        .I1(w_2r[17]),
        .O(i__carry__3_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__3_i_2__1
       (.I0(\R_reg_n_0_[0][16] ),
        .I1(r_sign),
        .O(i__carry__3_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__3_i_2__2
       (.I0(w_2r[17]),
        .I1(w_2r[18]),
        .O(i__carry__3_i_2__2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__3_i_3__0
       (.I0(\reg_Y_reg[0]_0 [16]),
        .I1(r_sign),
        .I2(\R_reg_n_0_[0][15] ),
        .O(i__carry__3_i_3__0_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    i__carry__3_i_3__1
       (.I0(\pipe_loop[1].reg_Y_reg[1]_1 [16]),
        .I1(w_2r[18]),
        .I2(w_2r[16]),
        .O(i__carry__3_i_3__1_n_0));
  system_rp_oscilloscope_0_div_add_sub_rad2_19 \inst_loop[0].radix2_inst_blk.i_div_add_sub 
       (.D({\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_0 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_1 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_2 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_3 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_4 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_5 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_6 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_7 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_8 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_9 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_10 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_11 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_12 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_13 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_14 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_15 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_16 ,\inst_loop[0].radix2_inst_blk.i_div_add_sub_n_17 }),
        .O({p_0_in0,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_17 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_18 }),
        .Q(data0[0]),
        .\R_reg[0][15] (\reg_Y_reg[0]_0 [15:0]),
        .\R_reg[0][17] (data00),
        .\R_reg[0][17]_0 (R),
        .\R_reg[0][17]_1 (reg_Q[0]),
        .S({i__carry__3_i_1__1_n_0,i__carry__3_i_2__1_n_0,i__carry__3_i_3__0_n_0}),
        .\pipe_loop[1].R_reg[1][11] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_8 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_9 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_10 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_11 }),
        .\pipe_loop[1].R_reg[1][15] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_12 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_13 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_14 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_15 }),
        .\pipe_loop[1].R_reg[1][17] (\pipe_dv[0]_i_2_n_0 ),
        .\pipe_loop[1].R_reg[1][3] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_0 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_1 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_2 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_3 }),
        .\pipe_loop[1].R_reg[1][7] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_4 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_5 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_6 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_7 }),
        .\reg_Q_reg[0][0] ({r_sign,\R_reg_n_0_[0][15] ,\R_reg_n_0_[0][14] ,\R_reg_n_0_[0][13] ,\R_reg_n_0_[0][12] ,\R_reg_n_0_[0][11] ,\R_reg_n_0_[0][10] ,\R_reg_n_0_[0][9] ,\R_reg_n_0_[0][8] ,\R_reg_n_0_[0][7] ,\R_reg_n_0_[0][6] ,\R_reg_n_0_[0][5] ,\R_reg_n_0_[0][4] ,\R_reg_n_0_[0][3] ,\R_reg_n_0_[0][2] ,\R_reg_n_0_[0][1] ,\R_reg_n_0_[0][0] }));
  system_rp_oscilloscope_0_div_add_sub_rad2_20 \inst_loop[1].radix2_inst_blk.i_div_add_sub 
       (.D(\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_19 ),
        .O({p_0_in0,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_17 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_18 }),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [15:0]),
        .S({i__carry__3_i_1__2_n_0,i__carry__3_i_2__2_n_0,i__carry__3_i_3__1_n_0}),
        .\pipe_loop[1].R_reg[1][10] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_8 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_9 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_10 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_11 }),
        .\pipe_loop[1].R_reg[1][14] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_12 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_13 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_14 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_15 }),
        .\pipe_loop[1].R_reg[1][6] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_4 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_5 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_6 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_7 }),
        .\pipe_loop[1].reg_X_reg[1][31] ({\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_0 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_1 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_2 ,\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_3 }),
        .w_2r({w_2r[18],w_2r[16:0]}));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \pipe_dv[0]_i_1 
       (.I0(\pipe_dv[0]_i_2_n_0 ),
        .I1(\pipe_dv_reg[0]__0 ),
        .I2(div_go),
        .O(\pipe_dv[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \pipe_dv[0]_i_2 
       (.I0(\cnt_reg[0]_4 [1]),
        .I1(\cnt_reg[0]_4 [0]),
        .I2(\cnt_reg[0]_4 [2]),
        .I3(\cnt_reg[0]_4 [4]),
        .I4(\cnt_reg[0]_4 [3]),
        .I5(\cnt_reg[0]_4 [5]),
        .O(\pipe_dv[0]_i_2_n_0 ));
  FDRE \pipe_dv_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\pipe_dv[0]_i_1_n_0 ),
        .Q(\pipe_dv_reg[0]__0 ),
        .R(SR));
  FDRE \pipe_loop[1].R_reg[1][0] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[0]),
        .Q(w_2r[1]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][10] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[10]),
        .Q(w_2r[11]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][11] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[11]),
        .Q(w_2r[12]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][12] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[12]),
        .Q(w_2r[13]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][13] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[13]),
        .Q(w_2r[14]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][14] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[14]),
        .Q(w_2r[15]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][15] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[15]),
        .Q(w_2r[16]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][16] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[16]),
        .Q(w_2r[17]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][17] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[17]),
        .Q(w_2r[18]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][1] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[1]),
        .Q(w_2r[2]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][2] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[2]),
        .Q(w_2r[3]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][3] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[3]),
        .Q(w_2r[4]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][4] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[4]),
        .Q(w_2r[5]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][5] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[5]),
        .Q(w_2r[6]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][6] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[6]),
        .Q(w_2r[7]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][7] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[7]),
        .Q(w_2r[8]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][8] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[8]),
        .Q(w_2r[9]),
        .R(1'b0));
  FDRE \pipe_loop[1].R_reg[1][9] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(R[9]),
        .Q(w_2r[10]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'hDE)) 
    \pipe_loop[1].cnt[1][0]_i_1 
       (.I0(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .O(\pipe_loop[1].cnt[1][0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \pipe_loop[1].cnt[1][1]_i_1 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .I1(\pipe_loop[1].cnt_reg_n_0_[1][1] ),
        .O(\pipe_loop[1].cnt[1][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \pipe_loop[1].cnt[1][2]_i_1 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .I1(\pipe_loop[1].cnt_reg_n_0_[1][1] ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .O(\pipe_loop[1].cnt[1][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \pipe_loop[1].cnt[1][3]_i_1 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][3] ),
        .I1(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][1] ),
        .I3(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .O(\pipe_loop[1].cnt[1][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \pipe_loop[1].cnt[1][4]_i_1 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][4] ),
        .I1(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][1] ),
        .I3(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .I4(\pipe_loop[1].cnt_reg_n_0_[1][3] ),
        .O(\pipe_loop[1].cnt[1][4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \pipe_loop[1].cnt[1][5]_i_1 
       (.I0(\pipe_dv[0]_i_2_n_0 ),
        .I1(m_axi_osc1_aresetn),
        .O(\pipe_loop[1].cnt[1][5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \pipe_loop[1].cnt[1][5]_i_2 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][5] ),
        .I1(\pipe_loop[1].cnt_reg_n_0_[1][3] ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .I3(\pipe_loop[1].cnt_reg_n_0_[1][1] ),
        .I4(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .I5(\pipe_loop[1].cnt_reg_n_0_[1][4] ),
        .O(\pipe_loop[1].cnt[1][5]_i_2_n_0 ));
  FDRE \pipe_loop[1].cnt_reg[1][0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\pipe_loop[1].cnt[1][0]_i_1_n_0 ),
        .Q(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .R(SR));
  FDRE \pipe_loop[1].cnt_reg[1][1] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .D(\pipe_loop[1].cnt[1][1]_i_1_n_0 ),
        .Q(\pipe_loop[1].cnt_reg_n_0_[1][1] ),
        .R(\pipe_loop[1].cnt[1][5]_i_1_n_0 ));
  FDRE \pipe_loop[1].cnt_reg[1][2] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .D(\pipe_loop[1].cnt[1][2]_i_1_n_0 ),
        .Q(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .R(\pipe_loop[1].cnt[1][5]_i_1_n_0 ));
  FDRE \pipe_loop[1].cnt_reg[1][3] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .D(\pipe_loop[1].cnt[1][3]_i_1_n_0 ),
        .Q(\pipe_loop[1].cnt_reg_n_0_[1][3] ),
        .R(\pipe_loop[1].cnt[1][5]_i_1_n_0 ));
  FDRE \pipe_loop[1].cnt_reg[1][4] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .D(\pipe_loop[1].cnt[1][4]_i_1_n_0 ),
        .Q(\pipe_loop[1].cnt_reg_n_0_[1][4] ),
        .R(\pipe_loop[1].cnt[1][5]_i_1_n_0 ));
  FDRE \pipe_loop[1].cnt_reg[1][5] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .D(\pipe_loop[1].cnt[1][5]_i_2_n_0 ),
        .Q(\pipe_loop[1].cnt_reg_n_0_[1][5] ),
        .R(\pipe_loop[1].cnt[1][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT5 #(
    .INIT(32'hFFFFCC8C)) 
    \pipe_loop[1].pipe_dv[1]_i_1 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .I1(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][4] ),
        .I3(\pipe_loop[1].pipe_dv[1]_i_2_n_0 ),
        .I4(\pipe_dv[0]_i_2_n_0 ),
        .O(\pipe_loop[1].pipe_dv[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pipe_loop[1].pipe_dv[1]_i_2 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][1] ),
        .I1(\pipe_loop[1].cnt_reg_n_0_[1][0] ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][5] ),
        .I3(\pipe_loop[1].cnt_reg_n_0_[1][3] ),
        .O(\pipe_loop[1].pipe_dv[1]_i_2_n_0 ));
  FDRE \pipe_loop[1].pipe_dv_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\pipe_loop[1].pipe_dv[1]_i_1_n_0 ),
        .Q(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][10]_i_1 
       (.I0(\reg_Q_reg[0]_2 [9]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_3 [9]),
        .O(reg_Q[10]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][11]_i_1 
       (.I0(\reg_Q_reg[0]_2 [10]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_3 [10]),
        .O(reg_Q[11]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][12]_i_1 
       (.I0(\reg_Q_reg[0]_2 [11]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_3 [11]),
        .O(reg_Q[12]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][13]_i_1 
       (.I0(\reg_Q_reg[0]_2 [12]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_3 [12]),
        .O(reg_Q[13]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \pipe_loop[1].reg_Q[1][14]_inv_i_1 
       (.I0(\reg_Q_reg[0]_2 [13]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_3 [13]),
        .O(reg_Q[14]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][1]_i_1 
       (.I0(\reg_Q_reg[0]_2 [0]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_3 [0]),
        .O(reg_Q[1]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][2]_i_1 
       (.I0(\reg_Q_reg[0]_2 [1]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_3 [1]),
        .O(reg_Q[2]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][3]_i_1 
       (.I0(\reg_Q_reg[0]_2 [2]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_3 [2]),
        .O(reg_Q[3]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][4]_i_1 
       (.I0(\reg_Q_reg[0]_2 [3]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_3 [3]),
        .O(reg_Q[4]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][5]_i_1 
       (.I0(\reg_Q_reg[0]_2 [4]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_3 [4]),
        .O(reg_Q[5]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][6]_i_1 
       (.I0(\reg_Q_reg[0]_2 [5]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_3 [5]),
        .O(reg_Q[6]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][7]_i_1 
       (.I0(\reg_Q_reg[0]_2 [6]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_3 [6]),
        .O(reg_Q[7]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][8]_i_1 
       (.I0(\reg_Q_reg[0]_2 [7]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_3 [7]),
        .O(reg_Q[8]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_Q[1][9]_i_1 
       (.I0(\reg_Q_reg[0]_2 [8]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_Q_reg[1]_3 [8]),
        .O(reg_Q[9]));
  FDRE \pipe_loop[1].reg_Q_reg[1][0] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_Q[0]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_3 [0]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][10] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_Q[10]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_3 [10]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][11] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_Q[11]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_3 [11]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][12] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_Q[12]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_3 [12]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][13] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_Q[13]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_3 [13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \pipe_loop[1].reg_Q_reg[1][14]_inv 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_Q[14]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_3 [14]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][1] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_Q[1]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_3 [1]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][2] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_Q[2]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_3 [2]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][3] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_Q[3]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_3 [3]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][4] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_Q[4]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_3 [4]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][5] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_Q[5]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_3 [5]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][6] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_Q[6]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_3 [6]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][7] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_Q[7]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_3 [7]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][8] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_Q[8]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_3 [8]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Q_reg[1][9] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_Q[9]),
        .Q(\pipe_loop[1].reg_Q_reg[1]_3 [9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][0]_i_1 
       (.I0(data0[0]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(w_2r[0]),
        .O(reg_X[0]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][10]_i_1 
       (.I0(data0[10]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][9] ),
        .O(reg_X[10]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][11]_i_1 
       (.I0(data0[11]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][10] ),
        .O(reg_X[11]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][12]_i_1 
       (.I0(data0[12]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][11] ),
        .O(reg_X[12]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][13]_i_1 
       (.I0(data0[13]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][12] ),
        .O(reg_X[13]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][14]_i_1 
       (.I0(data0[14]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][13] ),
        .O(reg_X[14]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][15]_i_1 
       (.I0(data0[15]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][14] ),
        .O(reg_X[15]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][16]_i_1 
       (.I0(data0[16]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][15] ),
        .O(reg_X[16]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][17]_i_1 
       (.I0(data0[17]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][16] ),
        .O(reg_X[17]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][18]_i_1 
       (.I0(data0[18]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][17] ),
        .O(reg_X[18]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][19]_i_1 
       (.I0(data0[19]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][18] ),
        .O(reg_X[19]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][1]_i_1 
       (.I0(data0[1]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][0] ),
        .O(reg_X[1]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][20]_i_1 
       (.I0(data0[20]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][19] ),
        .O(reg_X[20]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][21]_i_1 
       (.I0(data0[21]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][20] ),
        .O(reg_X[21]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][22]_i_1 
       (.I0(data0[22]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][21] ),
        .O(reg_X[22]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][23]_i_1 
       (.I0(data0[23]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][22] ),
        .O(reg_X[23]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][24]_i_1 
       (.I0(data0[24]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][23] ),
        .O(reg_X[24]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][25]_i_1 
       (.I0(data0[25]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][24] ),
        .O(reg_X[25]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][26]_i_1 
       (.I0(data0[26]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][25] ),
        .O(reg_X[26]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][27]_i_1 
       (.I0(data0[27]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][26] ),
        .O(reg_X[27]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][28]_i_1 
       (.I0(data0[28]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][27] ),
        .O(reg_X[28]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][29]_i_1 
       (.I0(data0[29]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][28] ),
        .O(reg_X[29]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][2]_i_1 
       (.I0(data0[2]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][1] ),
        .O(reg_X[2]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][30]_i_1 
       (.I0(data0[30]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][29] ),
        .O(reg_X[30]));
  LUT3 #(
    .INIT(8'hA8)) 
    \pipe_loop[1].reg_X[1][31]_i_1 
       (.I0(m_axi_osc1_aresetn),
        .I1(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .I2(\pipe_dv[0]_i_2_n_0 ),
        .O(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][31]_i_2 
       (.I0(data0[31]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][30] ),
        .O(reg_X[31]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][3]_i_1 
       (.I0(data0[3]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][2] ),
        .O(reg_X[3]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][4]_i_1 
       (.I0(data0[4]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][3] ),
        .O(reg_X[4]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][5]_i_1 
       (.I0(data0[5]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][4] ),
        .O(reg_X[5]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][6]_i_1 
       (.I0(data0[6]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][5] ),
        .O(reg_X[6]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][7]_i_1 
       (.I0(data0[7]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][6] ),
        .O(reg_X[7]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][8]_i_1 
       (.I0(data0[8]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][7] ),
        .O(reg_X[8]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pipe_loop[1].reg_X[1][9]_i_1 
       (.I0(data0[9]),
        .I1(\pipe_dv[0]_i_2_n_0 ),
        .I2(\pipe_loop[1].reg_X_reg_n_0_[1][8] ),
        .O(reg_X[9]));
  FDRE \pipe_loop[1].reg_X_reg[1][0] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[0]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][0] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][10] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[10]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][10] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][11] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[11]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][11] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][12] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[12]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][12] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][13] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[13]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][13] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][14] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[14]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][14] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][15] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[15]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][15] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][16] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[16]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][16] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][17] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[17]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][17] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][18] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[18]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][18] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][19] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[19]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][19] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][1] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[1]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][1] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][20] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[20]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][20] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][21] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[21]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][21] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][22] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[22]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][22] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][23] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[23]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][23] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][24] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[24]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][24] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][25] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[25]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][25] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][26] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[26]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][26] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][27] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[27]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][27] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][28] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[28]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][28] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][29] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[29]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][29] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][2] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[2]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][2] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][30] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[30]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][30] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][31] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[31]),
        .Q(w_2r[0]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][3] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[3]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][3] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][4] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[4]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][4] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][5] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[5]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][5] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][6] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[6]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][6] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][7] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[7]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][7] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][8] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[8]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][8] ),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_X_reg[1][9] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_X[1][31]_i_1_n_0 ),
        .D(reg_X[9]),
        .Q(\pipe_loop[1].reg_X_reg_n_0_[1][9] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    \pipe_loop[1].reg_Y[1][16]_i_1 
       (.I0(\pipe_dv[0]_i_2_n_0 ),
        .I1(m_axi_osc1_aresetn),
        .O(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ));
  FDRE \pipe_loop[1].reg_Y_reg[1][0] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [0]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [0]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][10] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [10]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [10]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][11] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [11]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [11]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][12] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [12]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [12]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][13] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [13]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [13]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][14] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [14]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [14]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][15] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [15]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [15]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][16] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [16]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [16]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][1] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [1]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [1]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][2] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [2]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [2]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][3] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [3]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [3]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][4] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [4]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [4]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][5] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [5]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [5]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][6] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [6]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [6]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][7] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [7]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [7]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][8] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [8]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [8]),
        .R(1'b0));
  FDRE \pipe_loop[1].reg_Y_reg[1][9] 
       (.C(m_axi_osc1_aclk),
        .CE(\pipe_loop[1].reg_Y[1][16]_i_1_n_0 ),
        .D(\reg_Y_reg[0]_0 [9]),
        .Q(\pipe_loop[1].reg_Y_reg[1]_1 [9]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[10]_i_1 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_3 [9]),
        .O(\q_o[10]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[11]_i_1 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_3 [10]),
        .O(\q_o[11]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[12]_i_1 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_3 [11]),
        .O(\q_o[12]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[13]_i_1 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_3 [12]),
        .O(\q_o[13]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[14]_i_1 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_3 [13]),
        .O(\q_o[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00400000)) 
    \q_o[15]_i_1 
       (.I0(\pipe_loop[1].cnt_reg_n_0_[1][2] ),
        .I1(\pipe_loop[1].pipe_dv_reg[1]__0 ),
        .I2(\pipe_loop[1].cnt_reg_n_0_[1][4] ),
        .I3(\pipe_loop[1].pipe_dv[1]_i_2_n_0 ),
        .I4(m_axi_osc1_aresetn),
        .O(\q_o[15]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[1]_i_1 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_3 [0]),
        .O(\q_o[1]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[2]_i_1 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_3 [1]),
        .O(\q_o[2]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[3]_i_1 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_3 [2]),
        .O(\q_o[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[4]_i_1 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_3 [3]),
        .O(\q_o[4]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[5]_i_1 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_3 [4]),
        .O(\q_o[5]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[6]_i_1 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_3 [5]),
        .O(\q_o[6]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[7]_i_1 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_3 [6]),
        .O(\q_o[7]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[8]_i_1 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_3 [7]),
        .O(\q_o[8]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q_o[9]_i_1 
       (.I0(\pipe_loop[1].reg_Q_reg[1]_3 [8]),
        .O(\q_o[9]_i_1_n_0 ));
  FDRE \q_o_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\inst_loop[1].radix2_inst_blk.i_div_add_sub_n_19 ),
        .Q(q_o),
        .R(1'b0));
  FDRE \q_o_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\q_o[10]_i_1_n_0 ),
        .Q(\q_o_reg[15]_0 [9]),
        .R(1'b0));
  FDRE \q_o_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\q_o[11]_i_1_n_0 ),
        .Q(\q_o_reg[15]_0 [10]),
        .R(1'b0));
  FDRE \q_o_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\q_o[12]_i_1_n_0 ),
        .Q(\q_o_reg[15]_0 [11]),
        .R(1'b0));
  FDRE \q_o_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\q_o[13]_i_1_n_0 ),
        .Q(\q_o_reg[15]_0 [12]),
        .R(1'b0));
  FDRE \q_o_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\q_o[14]_i_1_n_0 ),
        .Q(\q_o_reg[15]_0 [13]),
        .R(1'b0));
  FDRE \q_o_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\pipe_loop[1].reg_Q_reg[1]_3 [14]),
        .Q(\q_o_reg[15]_0 [14]),
        .R(1'b0));
  FDRE \q_o_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\q_o[1]_i_1_n_0 ),
        .Q(\q_o_reg[15]_0 [0]),
        .R(1'b0));
  FDRE \q_o_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\q_o[2]_i_1_n_0 ),
        .Q(\q_o_reg[15]_0 [1]),
        .R(1'b0));
  FDRE \q_o_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\q_o[3]_i_1_n_0 ),
        .Q(\q_o_reg[15]_0 [2]),
        .R(1'b0));
  FDRE \q_o_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\q_o[4]_i_1_n_0 ),
        .Q(\q_o_reg[15]_0 [3]),
        .R(1'b0));
  FDRE \q_o_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\q_o[5]_i_1_n_0 ),
        .Q(\q_o_reg[15]_0 [4]),
        .R(1'b0));
  FDRE \q_o_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\q_o[6]_i_1_n_0 ),
        .Q(\q_o_reg[15]_0 [5]),
        .R(1'b0));
  FDRE \q_o_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\q_o[7]_i_1_n_0 ),
        .Q(\q_o_reg[15]_0 [6]),
        .R(1'b0));
  FDRE \q_o_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\q_o[8]_i_1_n_0 ),
        .Q(\q_o_reg[15]_0 [7]),
        .R(1'b0));
  FDRE \q_o_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(\q_o[15]_i_1_n_0 ),
        .D(\q_o[9]_i_1_n_0 ),
        .Q(\q_o_reg[15]_0 [8]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h08)) 
    \reg_Q[0][13]_i_1 
       (.I0(m_axi_osc1_aresetn),
        .I1(\pipe_dv_reg[0]__0 ),
        .I2(div_go),
        .O(\reg_Q[0][13]_i_1_n_0 ));
  FDRE \reg_Q_reg[0][0] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_Q[0][13]_i_1_n_0 ),
        .D(data00),
        .Q(\reg_Q_reg[0]_2 [0]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][10] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_Q[0][13]_i_1_n_0 ),
        .D(\reg_Q_reg[0]_2 [9]),
        .Q(\reg_Q_reg[0]_2 [10]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][11] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_Q[0][13]_i_1_n_0 ),
        .D(\reg_Q_reg[0]_2 [10]),
        .Q(\reg_Q_reg[0]_2 [11]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][12] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_Q[0][13]_i_1_n_0 ),
        .D(\reg_Q_reg[0]_2 [11]),
        .Q(\reg_Q_reg[0]_2 [12]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][13] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_Q[0][13]_i_1_n_0 ),
        .D(\reg_Q_reg[0]_2 [12]),
        .Q(\reg_Q_reg[0]_2 [13]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][1] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_Q[0][13]_i_1_n_0 ),
        .D(\reg_Q_reg[0]_2 [0]),
        .Q(\reg_Q_reg[0]_2 [1]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][2] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_Q[0][13]_i_1_n_0 ),
        .D(\reg_Q_reg[0]_2 [1]),
        .Q(\reg_Q_reg[0]_2 [2]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][3] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_Q[0][13]_i_1_n_0 ),
        .D(\reg_Q_reg[0]_2 [2]),
        .Q(\reg_Q_reg[0]_2 [3]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][4] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_Q[0][13]_i_1_n_0 ),
        .D(\reg_Q_reg[0]_2 [3]),
        .Q(\reg_Q_reg[0]_2 [4]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][5] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_Q[0][13]_i_1_n_0 ),
        .D(\reg_Q_reg[0]_2 [4]),
        .Q(\reg_Q_reg[0]_2 [5]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][6] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_Q[0][13]_i_1_n_0 ),
        .D(\reg_Q_reg[0]_2 [5]),
        .Q(\reg_Q_reg[0]_2 [6]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][7] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_Q[0][13]_i_1_n_0 ),
        .D(\reg_Q_reg[0]_2 [6]),
        .Q(\reg_Q_reg[0]_2 [7]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][8] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_Q[0][13]_i_1_n_0 ),
        .D(\reg_Q_reg[0]_2 [7]),
        .Q(\reg_Q_reg[0]_2 [8]),
        .R(1'b0));
  FDRE \reg_Q_reg[0][9] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_Q[0][13]_i_1_n_0 ),
        .D(\reg_Q_reg[0]_2 [8]),
        .Q(\reg_Q_reg[0]_2 [9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][0]_i_1 
       (.I0(Q[0]),
        .I1(div_go),
        .I2(data0[0]),
        .O(\reg_X[0][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][10]_i_1 
       (.I0(Q[10]),
        .I1(div_go),
        .I2(data0[10]),
        .O(\reg_X[0][10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][11]_i_1 
       (.I0(Q[11]),
        .I1(div_go),
        .I2(data0[11]),
        .O(\reg_X[0][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][12]_i_1 
       (.I0(Q[12]),
        .I1(div_go),
        .I2(data0[12]),
        .O(\reg_X[0][12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][13]_i_1 
       (.I0(Q[13]),
        .I1(div_go),
        .I2(data0[13]),
        .O(\reg_X[0][13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][14]_i_1 
       (.I0(Q[14]),
        .I1(div_go),
        .I2(data0[14]),
        .O(\reg_X[0][14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][15]_i_1 
       (.I0(Q[15]),
        .I1(div_go),
        .I2(data0[15]),
        .O(\reg_X[0][15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][16]_i_1 
       (.I0(Q[16]),
        .I1(div_go),
        .I2(data0[16]),
        .O(\reg_X[0][16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][17]_i_1 
       (.I0(Q[17]),
        .I1(div_go),
        .I2(data0[17]),
        .O(\reg_X[0][17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][18]_i_1 
       (.I0(Q[18]),
        .I1(div_go),
        .I2(data0[18]),
        .O(\reg_X[0][18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][19]_i_1 
       (.I0(Q[19]),
        .I1(div_go),
        .I2(data0[19]),
        .O(\reg_X[0][19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][1]_i_1 
       (.I0(Q[1]),
        .I1(div_go),
        .I2(data0[1]),
        .O(\reg_X[0][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][20]_i_1 
       (.I0(Q[20]),
        .I1(div_go),
        .I2(data0[20]),
        .O(\reg_X[0][20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][21]_i_1 
       (.I0(Q[21]),
        .I1(div_go),
        .I2(data0[21]),
        .O(\reg_X[0][21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][22]_i_1 
       (.I0(Q[22]),
        .I1(div_go),
        .I2(data0[22]),
        .O(\reg_X[0][22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][23]_i_1 
       (.I0(Q[23]),
        .I1(div_go),
        .I2(data0[23]),
        .O(\reg_X[0][23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][24]_i_1 
       (.I0(Q[24]),
        .I1(div_go),
        .I2(data0[24]),
        .O(\reg_X[0][24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][25]_i_1 
       (.I0(Q[25]),
        .I1(div_go),
        .I2(data0[25]),
        .O(\reg_X[0][25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][26]_i_1 
       (.I0(Q[26]),
        .I1(div_go),
        .I2(data0[26]),
        .O(\reg_X[0][26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][27]_i_1 
       (.I0(Q[27]),
        .I1(div_go),
        .I2(data0[27]),
        .O(\reg_X[0][27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][28]_i_1 
       (.I0(Q[28]),
        .I1(div_go),
        .I2(data0[28]),
        .O(\reg_X[0][28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][29]_i_1 
       (.I0(Q[29]),
        .I1(div_go),
        .I2(data0[29]),
        .O(\reg_X[0][29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][2]_i_1 
       (.I0(Q[2]),
        .I1(div_go),
        .I2(data0[2]),
        .O(\reg_X[0][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][30]_i_1 
       (.I0(Q[30]),
        .I1(div_go),
        .I2(data0[30]),
        .O(\reg_X[0][30]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \reg_X[0][31]_i_1 
       (.I0(\pipe_dv_reg[0]__0 ),
        .I1(div_go),
        .I2(m_axi_osc1_aresetn),
        .O(\reg_X[0][31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][31]_i_2 
       (.I0(Q[31]),
        .I1(div_go),
        .I2(data0[31]),
        .O(\reg_X[0][31]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][3]_i_1 
       (.I0(Q[3]),
        .I1(div_go),
        .I2(data0[3]),
        .O(\reg_X[0][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][4]_i_1 
       (.I0(Q[4]),
        .I1(div_go),
        .I2(data0[4]),
        .O(\reg_X[0][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][5]_i_1 
       (.I0(Q[5]),
        .I1(div_go),
        .I2(data0[5]),
        .O(\reg_X[0][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][6]_i_1 
       (.I0(Q[6]),
        .I1(div_go),
        .I2(data0[6]),
        .O(\reg_X[0][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][7]_i_1 
       (.I0(Q[7]),
        .I1(div_go),
        .I2(data0[7]),
        .O(\reg_X[0][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][8]_i_1 
       (.I0(Q[8]),
        .I1(div_go),
        .I2(data0[8]),
        .O(\reg_X[0][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_X[0][9]_i_1 
       (.I0(Q[9]),
        .I1(div_go),
        .I2(data0[9]),
        .O(\reg_X[0][9]_i_1_n_0 ));
  FDRE \reg_X_reg[0][0] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][0]_i_1_n_0 ),
        .Q(data0[1]),
        .R(1'b0));
  FDRE \reg_X_reg[0][10] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][10]_i_1_n_0 ),
        .Q(data0[11]),
        .R(1'b0));
  FDRE \reg_X_reg[0][11] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][11]_i_1_n_0 ),
        .Q(data0[12]),
        .R(1'b0));
  FDRE \reg_X_reg[0][12] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][12]_i_1_n_0 ),
        .Q(data0[13]),
        .R(1'b0));
  FDRE \reg_X_reg[0][13] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][13]_i_1_n_0 ),
        .Q(data0[14]),
        .R(1'b0));
  FDRE \reg_X_reg[0][14] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][14]_i_1_n_0 ),
        .Q(data0[15]),
        .R(1'b0));
  FDRE \reg_X_reg[0][15] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][15]_i_1_n_0 ),
        .Q(data0[16]),
        .R(1'b0));
  FDRE \reg_X_reg[0][16] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][16]_i_1_n_0 ),
        .Q(data0[17]),
        .R(1'b0));
  FDRE \reg_X_reg[0][17] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][17]_i_1_n_0 ),
        .Q(data0[18]),
        .R(1'b0));
  FDRE \reg_X_reg[0][18] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][18]_i_1_n_0 ),
        .Q(data0[19]),
        .R(1'b0));
  FDRE \reg_X_reg[0][19] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][19]_i_1_n_0 ),
        .Q(data0[20]),
        .R(1'b0));
  FDRE \reg_X_reg[0][1] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][1]_i_1_n_0 ),
        .Q(data0[2]),
        .R(1'b0));
  FDRE \reg_X_reg[0][20] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][20]_i_1_n_0 ),
        .Q(data0[21]),
        .R(1'b0));
  FDRE \reg_X_reg[0][21] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][21]_i_1_n_0 ),
        .Q(data0[22]),
        .R(1'b0));
  FDRE \reg_X_reg[0][22] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][22]_i_1_n_0 ),
        .Q(data0[23]),
        .R(1'b0));
  FDRE \reg_X_reg[0][23] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][23]_i_1_n_0 ),
        .Q(data0[24]),
        .R(1'b0));
  FDRE \reg_X_reg[0][24] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][24]_i_1_n_0 ),
        .Q(data0[25]),
        .R(1'b0));
  FDRE \reg_X_reg[0][25] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][25]_i_1_n_0 ),
        .Q(data0[26]),
        .R(1'b0));
  FDRE \reg_X_reg[0][26] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][26]_i_1_n_0 ),
        .Q(data0[27]),
        .R(1'b0));
  FDRE \reg_X_reg[0][27] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][27]_i_1_n_0 ),
        .Q(data0[28]),
        .R(1'b0));
  FDRE \reg_X_reg[0][28] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][28]_i_1_n_0 ),
        .Q(data0[29]),
        .R(1'b0));
  FDRE \reg_X_reg[0][29] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][29]_i_1_n_0 ),
        .Q(data0[30]),
        .R(1'b0));
  FDRE \reg_X_reg[0][2] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][2]_i_1_n_0 ),
        .Q(data0[3]),
        .R(1'b0));
  FDRE \reg_X_reg[0][30] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][30]_i_1_n_0 ),
        .Q(data0[31]),
        .R(1'b0));
  FDRE \reg_X_reg[0][31] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][31]_i_2_n_0 ),
        .Q(data0[0]),
        .R(1'b0));
  FDRE \reg_X_reg[0][3] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][3]_i_1_n_0 ),
        .Q(data0[4]),
        .R(1'b0));
  FDRE \reg_X_reg[0][4] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][4]_i_1_n_0 ),
        .Q(data0[5]),
        .R(1'b0));
  FDRE \reg_X_reg[0][5] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][5]_i_1_n_0 ),
        .Q(data0[6]),
        .R(1'b0));
  FDRE \reg_X_reg[0][6] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][6]_i_1_n_0 ),
        .Q(data0[7]),
        .R(1'b0));
  FDRE \reg_X_reg[0][7] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][7]_i_1_n_0 ),
        .Q(data0[8]),
        .R(1'b0));
  FDRE \reg_X_reg[0][8] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][8]_i_1_n_0 ),
        .Q(data0[9]),
        .R(1'b0));
  FDRE \reg_X_reg[0][9] 
       (.C(m_axi_osc1_aclk),
        .CE(\reg_X[0][31]_i_1_n_0 ),
        .D(\reg_X[0][9]_i_1_n_0 ),
        .Q(data0[10]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][0] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [0]),
        .Q(\reg_Y_reg[0]_0 [0]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][10] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [10]),
        .Q(\reg_Y_reg[0]_0 [10]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][11] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [11]),
        .Q(\reg_Y_reg[0]_0 [11]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][12] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [12]),
        .Q(\reg_Y_reg[0]_0 [12]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][13] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [13]),
        .Q(\reg_Y_reg[0]_0 [13]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][14] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [14]),
        .Q(\reg_Y_reg[0]_0 [14]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][15] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [15]),
        .Q(\reg_Y_reg[0]_0 [15]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][16] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [16]),
        .Q(\reg_Y_reg[0]_0 [16]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][1] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [1]),
        .Q(\reg_Y_reg[0]_0 [1]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][2] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [2]),
        .Q(\reg_Y_reg[0]_0 [2]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][3] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [3]),
        .Q(\reg_Y_reg[0]_0 [3]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][4] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [4]),
        .Q(\reg_Y_reg[0]_0 [4]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][5] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [5]),
        .Q(\reg_Y_reg[0]_0 [5]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][6] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [6]),
        .Q(\reg_Y_reg[0]_0 [6]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][7] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [7]),
        .Q(\reg_Y_reg[0]_0 [7]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][8] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [8]),
        .Q(\reg_Y_reg[0]_0 [8]),
        .R(1'b0));
  FDRE \reg_Y_reg[0][9] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_Y),
        .D(\reg_Y_reg[0][16]_0 [9]),
        .Q(\reg_Y_reg[0]_0 [9]),
        .R(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "fifo_axi_data,fifo_generator_v13_2_5,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "fifo_axi_data" *) 
(* X_CORE_INFO = "fifo_generator_v13_2_5,Vivado 2020.1" *) 
module system_rp_oscilloscope_0_fifo_axi_data
   (rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    empty,
    rd_data_count,
    wr_data_count,
    wr_rst_busy,
    rd_rst_busy);
  input rst;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME write_clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, INSERT_VIP 0" *) input wr_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME read_clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, INSERT_VIP 0" *) input rd_clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [63:0]din;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [63:0]dout;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  output wr_rst_busy;
  output rd_rst_busy;

  wire [63:0]din;
  wire [63:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [9:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire wr_clk;
  wire [9:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "9" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "64" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "64" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "1" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "1" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "1" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "511" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "510" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "10" *) 
  (* C_RD_DEPTH = "512" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "9" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "1" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "10" *) 
  (* C_WR_DEPTH = "512" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "9" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  system_rp_oscilloscope_0_fifo_generator_v13_2_5__parameterized1 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CHECK_LICENSE_TYPE = "fifo_axi_data,fifo_generator_v13_2_5,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "fifo_axi_data" *) 
(* X_CORE_INFO = "fifo_generator_v13_2_5,Vivado 2020.1" *) 
module system_rp_oscilloscope_0_fifo_axi_data__xdcDup__1
   (rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    empty,
    rd_data_count,
    wr_data_count,
    wr_rst_busy,
    rd_rst_busy);
  input rst;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME write_clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, INSERT_VIP 0" *) input wr_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME read_clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, INSERT_VIP 0" *) input rd_clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [63:0]din;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [63:0]dout;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  output wr_rst_busy;
  output rd_rst_busy;

  wire [63:0]din;
  wire [63:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [9:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire wr_clk;
  wire [9:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "9" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "64" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "64" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "1" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "1" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "1" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "511" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "510" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "10" *) 
  (* C_RD_DEPTH = "512" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "9" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "1" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "10" *) 
  (* C_WR_DEPTH = "512" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "9" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  system_rp_oscilloscope_0_fifo_generator_v13_2_5__parameterized1__xdcDup__1 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CHECK_LICENSE_TYPE = "fifo_axi_req,fifo_generator_v13_2_5,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "fifo_axi_req" *) 
(* X_CORE_INFO = "fifo_generator_v13_2_5,Vivado 2020.1" *) 
module system_rp_oscilloscope_0_fifo_axi_req
   (rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    empty);
  input rst;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME write_clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, INSERT_VIP 0" *) input wr_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME read_clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, INSERT_VIP 0" *) input rd_clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [7:0]din;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [7:0]dout;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;

  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [3:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [3:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [3:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "4" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "8" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "8" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "2" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "15" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "14" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "4" *) 
  (* C_RD_DEPTH = "16" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "4" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "4" *) 
  (* C_WR_DEPTH = "16" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "4" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  system_rp_oscilloscope_0_fifo_generator_v13_2_5 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[3:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[3:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[3:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "fifo_axi_req,fifo_generator_v13_2_5,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "fifo_axi_req" *) 
(* X_CORE_INFO = "fifo_generator_v13_2_5,Vivado 2020.1" *) 
module system_rp_oscilloscope_0_fifo_axi_req__xdcDup__1
   (rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    empty);
  input rst;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME write_clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, INSERT_VIP 0" *) input wr_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME read_clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, INSERT_VIP 0" *) input rd_clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [7:0]din;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [7:0]dout;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;

  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [3:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [3:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [3:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "4" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "8" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "8" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "2" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "15" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "14" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "4" *) 
  (* C_RD_DEPTH = "16" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "4" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "4" *) 
  (* C_WR_DEPTH = "16" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "4" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  system_rp_oscilloscope_0_fifo_generator_v13_2_5__xdcDup__1 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[3:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[3:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[3:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "fifo_axi_req,fifo_generator_v13_2_5,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "fifo_axi_req" *) 
(* X_CORE_INFO = "fifo_generator_v13_2_5,Vivado 2020.1" *) 
module system_rp_oscilloscope_0_fifo_axi_req__xdcDup__2
   (rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    empty);
  input rst;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME write_clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, INSERT_VIP 0" *) input wr_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME read_clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, INSERT_VIP 0" *) input rd_clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [7:0]din;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [7:0]dout;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;

  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [3:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [3:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [3:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "4" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "8" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "8" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "2" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "15" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "14" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "4" *) 
  (* C_RD_DEPTH = "16" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "4" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "4" *) 
  (* C_WR_DEPTH = "16" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "4" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  system_rp_oscilloscope_0_fifo_generator_v13_2_5__xdcDup__2 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[3:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[3:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[3:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "fifo_axi_req,fifo_generator_v13_2_5,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "fifo_axi_req" *) 
(* X_CORE_INFO = "fifo_generator_v13_2_5,Vivado 2020.1" *) 
module system_rp_oscilloscope_0_fifo_axi_req__xdcDup__3
   (rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    empty);
  input rst;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME write_clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, INSERT_VIP 0" *) input wr_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME read_clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, INSERT_VIP 0" *) input rd_clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [7:0]din;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [7:0]dout;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;

  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [3:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [3:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [3:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "4" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "8" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "8" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "2" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "15" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "14" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "4" *) 
  (* C_RD_DEPTH = "16" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "4" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "4" *) 
  (* C_WR_DEPTH = "16" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "4" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  system_rp_oscilloscope_0_fifo_generator_v13_2_5__xdcDup__3 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[3:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[3:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[3:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "osc_acquire" *) 
module system_rp_oscilloscope_0_osc_acquire
   (acq_tdata,
    acq_tvalid,
    acq_tlast,
    event_num_reset_reg,
    sts_trig_reg_0,
    \FSM_sequential_state_cs_reg[2]_0 ,
    \FSM_sequential_state_cs_reg[1]_0 ,
    \FSM_sequential_state_cs_reg[0]_0 ,
    event_num_trig_reg,
    \cfg_event_sel_reg[0] ,
    \cfg_trig_pre_samp_reg[30] ,
    \cfg_trig_pre_samp_reg[29] ,
    \cfg_trig_pre_samp_reg[28] ,
    \cfg_trig_pre_samp_reg[27] ,
    \cfg_trig_pre_samp_reg[26] ,
    \cfg_trig_pre_samp_reg[25] ,
    \cfg_trig_pre_samp_reg[24] ,
    \cfg_trig_pre_samp_reg[23] ,
    \cfg_trig_pre_samp_reg[22] ,
    \cfg_trig_pre_samp_reg[21] ,
    \cfg_trig_pre_samp_reg[20] ,
    \cfg_trig_pre_samp_reg[19] ,
    \cfg_trig_pre_samp_reg[18] ,
    D,
    \cfg_trig_pre_samp_reg[16] ,
    \cfg_trig_pre_samp_reg[10] ,
    \cfg_trig_pre_samp_reg[8] ,
    \sts_trig_pre_cnt_reg[5]_0 ,
    \sts_trig_pre_cnt_reg[4]_0 ,
    \sts_trig_pre_cnt_reg[3]_0 ,
    \cfg_trig_pre_samp_reg[17] ,
    \cfg_trig_pre_samp_reg[23]_0 ,
    \m_axis_tdata_reg[15]_0 ,
    \m_axis_tdata_reg[15]_1 ,
    \m_axis_tdata_reg[15]_2 ,
    sts_start_reg_0,
    \cfg_trig_pre_samp_reg[31] ,
    sts_acquire_reg_0,
    \m_axis_tdata_reg[15]_3 ,
    m_axi_osc2_aclk,
    \m_axis_tdata_reg[14]_0 ,
    \m_axis_tdata_reg[13]_0 ,
    \m_axis_tdata_reg[12]_0 ,
    \m_axis_tdata_reg[11]_0 ,
    \m_axis_tdata_reg[10]_0 ,
    \m_axis_tdata_reg[9]_0 ,
    \m_axis_tdata_reg[8]_0 ,
    \m_axis_tdata_reg[7]_0 ,
    \m_axis_tdata_reg[6]_0 ,
    \m_axis_tdata_reg[5]_0 ,
    \m_axis_tdata_reg[4]_0 ,
    \m_axis_tdata_reg[3]_0 ,
    \m_axis_tdata_reg[2]_0 ,
    \m_axis_tdata_reg[1]_0 ,
    \m_axis_tdata_reg[0]_0 ,
    clear,
    m_axis_tvalid0,
    Q,
    \reg_rd_data[31]_i_3__0 ,
    sts_trig_reg_1,
    sts_acquire_reg_1,
    \sts_trig_post_cnt_reg[0]_0 ,
    m_axi_osc2_aresetn,
    trig_tvalid,
    event_num_start,
    event_num_stop,
    dma_mode,
    cfg_event_sel,
    \reg_rd_data_reg[5] ,
    \reg_rd_data_reg[17] ,
    \reg_rd_data_reg[17]_0 ,
    \reg_rd_data_reg[17]_1 ,
    \reg_rd_data[30]_i_2__0 ,
    \reg_rd_data_reg[17]_2 ,
    \reg_rd_data_reg[17]_3 ,
    \reg_rd_data_reg[17]_4 ,
    \reg_rd_data_reg[17]_5 ,
    \reg_rd_data_reg[15] ,
    \reg_rd_data_reg[15]_0 ,
    \reg_rd_data_reg[15]_1 ,
    \reg_rd_data_reg[15]_2 ,
    \reg_rd_data_reg[14] ,
    \reg_rd_data_reg[14]_0 ,
    \reg_rd_data_reg[13] ,
    \reg_rd_data_reg[13]_0 ,
    \reg_rd_data_reg[12] ,
    \reg_rd_data_reg[12]_0 ,
    \reg_rd_data_reg[11] ,
    \reg_rd_data_reg[11]_0 ,
    \reg_rd_data_reg[9] ,
    \reg_rd_data_reg[9]_0 ,
    \reg_rd_data_reg[7] ,
    \reg_rd_data_reg[7]_0 ,
    \reg_rd_data_reg[6] ,
    \reg_rd_data_reg[6]_0 ,
    event_num_trig,
    trig_ip,
    \upsize_buf_reg[0][7] ,
    \upsize_buf_reg[7][0] ,
    \upsize_buf_reg[7][0]_0 ,
    \upsize_buf_reg[2][0] ,
    \upsize_buf_reg[7][1] ,
    \upsize_buf_reg[7][2] ,
    \upsize_buf_reg[7][3] ,
    \upsize_buf_reg[7][4] ,
    \upsize_buf_reg[7][5] ,
    \upsize_buf_reg[7][6] ,
    \upsize_buf_reg[7][7] ,
    \reg_rd_data_reg[1] ,
    S,
    \reg_rd_data_reg[1]_0 ,
    \reg_rd_data_reg[1]_1 ,
    \reg_rd_data_reg[1]_2 ,
    \reg_rd_data_reg[1]_3 ,
    \reg_rd_data_reg[1]_4 ,
    \reg_rd_data_reg[2]_i_3__0 ,
    \reg_rd_data_reg[2]_i_3__0_0 );
  output [15:0]acq_tdata;
  output acq_tvalid;
  output acq_tlast;
  output event_num_reset_reg;
  output [0:0]sts_trig_reg_0;
  output \FSM_sequential_state_cs_reg[2]_0 ;
  output \FSM_sequential_state_cs_reg[1]_0 ;
  output \FSM_sequential_state_cs_reg[0]_0 ;
  output event_num_trig_reg;
  output \cfg_event_sel_reg[0] ;
  output \cfg_trig_pre_samp_reg[30] ;
  output \cfg_trig_pre_samp_reg[29] ;
  output \cfg_trig_pre_samp_reg[28] ;
  output \cfg_trig_pre_samp_reg[27] ;
  output \cfg_trig_pre_samp_reg[26] ;
  output \cfg_trig_pre_samp_reg[25] ;
  output \cfg_trig_pre_samp_reg[24] ;
  output \cfg_trig_pre_samp_reg[23] ;
  output \cfg_trig_pre_samp_reg[22] ;
  output \cfg_trig_pre_samp_reg[21] ;
  output \cfg_trig_pre_samp_reg[20] ;
  output \cfg_trig_pre_samp_reg[19] ;
  output \cfg_trig_pre_samp_reg[18] ;
  output [9:0]D;
  output \cfg_trig_pre_samp_reg[16] ;
  output \cfg_trig_pre_samp_reg[10] ;
  output \cfg_trig_pre_samp_reg[8] ;
  output \sts_trig_pre_cnt_reg[5]_0 ;
  output \sts_trig_pre_cnt_reg[4]_0 ;
  output \sts_trig_pre_cnt_reg[3]_0 ;
  output \cfg_trig_pre_samp_reg[17] ;
  output \cfg_trig_pre_samp_reg[23]_0 ;
  output [7:0]\m_axis_tdata_reg[15]_0 ;
  output [7:0]\m_axis_tdata_reg[15]_1 ;
  output [7:0]\m_axis_tdata_reg[15]_2 ;
  output sts_start_reg_0;
  output \cfg_trig_pre_samp_reg[31] ;
  output sts_acquire_reg_0;
  input \m_axis_tdata_reg[15]_3 ;
  input m_axi_osc2_aclk;
  input \m_axis_tdata_reg[14]_0 ;
  input \m_axis_tdata_reg[13]_0 ;
  input \m_axis_tdata_reg[12]_0 ;
  input \m_axis_tdata_reg[11]_0 ;
  input \m_axis_tdata_reg[10]_0 ;
  input \m_axis_tdata_reg[9]_0 ;
  input \m_axis_tdata_reg[8]_0 ;
  input \m_axis_tdata_reg[7]_0 ;
  input \m_axis_tdata_reg[6]_0 ;
  input \m_axis_tdata_reg[5]_0 ;
  input \m_axis_tdata_reg[4]_0 ;
  input \m_axis_tdata_reg[3]_0 ;
  input \m_axis_tdata_reg[2]_0 ;
  input \m_axis_tdata_reg[1]_0 ;
  input \m_axis_tdata_reg[0]_0 ;
  input clear;
  input m_axis_tvalid0;
  input [31:0]Q;
  input [31:0]\reg_rd_data[31]_i_3__0 ;
  input sts_trig_reg_1;
  input sts_acquire_reg_1;
  input \sts_trig_post_cnt_reg[0]_0 ;
  input m_axi_osc2_aresetn;
  input trig_tvalid;
  input event_num_start;
  input event_num_stop;
  input dma_mode;
  input [2:0]cfg_event_sel;
  input [5:0]\reg_rd_data_reg[5] ;
  input \reg_rd_data_reg[17] ;
  input \reg_rd_data_reg[17]_0 ;
  input \reg_rd_data_reg[17]_1 ;
  input \reg_rd_data[30]_i_2__0 ;
  input \reg_rd_data_reg[17]_2 ;
  input \reg_rd_data_reg[17]_3 ;
  input \reg_rd_data_reg[17]_4 ;
  input \reg_rd_data_reg[17]_5 ;
  input \reg_rd_data_reg[15] ;
  input \reg_rd_data_reg[15]_0 ;
  input \reg_rd_data_reg[15]_1 ;
  input \reg_rd_data_reg[15]_2 ;
  input \reg_rd_data_reg[14] ;
  input \reg_rd_data_reg[14]_0 ;
  input \reg_rd_data_reg[13] ;
  input \reg_rd_data_reg[13]_0 ;
  input \reg_rd_data_reg[12] ;
  input \reg_rd_data_reg[12]_0 ;
  input \reg_rd_data_reg[11] ;
  input \reg_rd_data_reg[11]_0 ;
  input \reg_rd_data_reg[9] ;
  input \reg_rd_data_reg[9]_0 ;
  input \reg_rd_data_reg[7] ;
  input \reg_rd_data_reg[7]_0 ;
  input \reg_rd_data_reg[6] ;
  input \reg_rd_data_reg[6]_0 ;
  input event_num_trig;
  input [5:0]trig_ip;
  input \upsize_buf_reg[0][7] ;
  input \upsize_buf_reg[7][0] ;
  input \upsize_buf_reg[7][0]_0 ;
  input \upsize_buf_reg[2][0] ;
  input \upsize_buf_reg[7][1] ;
  input \upsize_buf_reg[7][2] ;
  input \upsize_buf_reg[7][3] ;
  input \upsize_buf_reg[7][4] ;
  input \upsize_buf_reg[7][5] ;
  input \upsize_buf_reg[7][6] ;
  input \upsize_buf_reg[7][7] ;
  input \reg_rd_data_reg[1] ;
  input [0:0]S;
  input \reg_rd_data_reg[1]_0 ;
  input [0:0]\reg_rd_data_reg[1]_1 ;
  input \reg_rd_data_reg[1]_2 ;
  input \reg_rd_data_reg[1]_3 ;
  input \reg_rd_data_reg[1]_4 ;
  input \reg_rd_data_reg[2]_i_3__0 ;
  input \reg_rd_data_reg[2]_i_3__0_0 ;

  wire [9:0]D;
  wire \FSM_sequential_state_cs[0]_i_1__0_n_0 ;
  wire \FSM_sequential_state_cs[1]_i_1__0_n_0 ;
  wire \FSM_sequential_state_cs[1]_i_2__0_n_0 ;
  wire \FSM_sequential_state_cs[2]_i_1__0_n_0 ;
  wire \FSM_sequential_state_cs[2]_i_2__0_n_0 ;
  wire \FSM_sequential_state_cs[2]_i_3__0_n_0 ;
  wire \FSM_sequential_state_cs[2]_i_4__0_n_0 ;
  wire \FSM_sequential_state_cs[2]_i_5__0_n_0 ;
  wire \FSM_sequential_state_cs[2]_i_6__0_n_0 ;
  wire \FSM_sequential_state_cs_reg[0]_0 ;
  wire \FSM_sequential_state_cs_reg[1]_0 ;
  wire \FSM_sequential_state_cs_reg[2]_0 ;
  wire [31:0]Q;
  wire [0:0]S;
  wire [15:0]acq_tdata;
  wire acq_tlast;
  wire acq_tvalid;
  wire [2:0]cfg_event_sel;
  wire \cfg_event_sel_reg[0] ;
  wire \cfg_trig_pre_samp_reg[10] ;
  wire \cfg_trig_pre_samp_reg[16] ;
  wire \cfg_trig_pre_samp_reg[17] ;
  wire \cfg_trig_pre_samp_reg[18] ;
  wire \cfg_trig_pre_samp_reg[19] ;
  wire \cfg_trig_pre_samp_reg[20] ;
  wire \cfg_trig_pre_samp_reg[21] ;
  wire \cfg_trig_pre_samp_reg[22] ;
  wire \cfg_trig_pre_samp_reg[23] ;
  wire \cfg_trig_pre_samp_reg[23]_0 ;
  wire \cfg_trig_pre_samp_reg[24] ;
  wire \cfg_trig_pre_samp_reg[25] ;
  wire \cfg_trig_pre_samp_reg[26] ;
  wire \cfg_trig_pre_samp_reg[27] ;
  wire \cfg_trig_pre_samp_reg[28] ;
  wire \cfg_trig_pre_samp_reg[29] ;
  wire \cfg_trig_pre_samp_reg[30] ;
  wire \cfg_trig_pre_samp_reg[31] ;
  wire \cfg_trig_pre_samp_reg[8] ;
  wire clear;
  wire dma_mode;
  wire event_num_reset_reg;
  wire event_num_start;
  wire event_num_stop;
  wire event_num_trig;
  wire event_num_trig_reg;
  wire i__carry__0_i_1__5_n_0;
  wire i__carry__0_i_1__6_n_0;
  wire i__carry__0_i_2__5_n_0;
  wire i__carry__0_i_2__6_n_0;
  wire i__carry__0_i_3__5_n_0;
  wire i__carry__0_i_3__6_n_0;
  wire i__carry__0_i_4__5_n_0;
  wire i__carry__0_i_4__6_n_0;
  wire i__carry__1_i_1__5_n_0;
  wire i__carry__1_i_1__6_n_0;
  wire i__carry__1_i_2__5_n_0;
  wire i__carry__1_i_2__6_n_0;
  wire i__carry__1_i_3__5_n_0;
  wire i__carry__1_i_3__6_n_0;
  wire i__carry__1_i_4__4_n_0;
  wire i__carry__2_i_1__4_n_0;
  wire i__carry__2_i_2__4_n_0;
  wire i__carry__2_i_3__3_n_0;
  wire i__carry__2_i_4__3_n_0;
  wire i__carry__3_i_1__0_n_0;
  wire i__carry__3_i_2__0_n_0;
  wire i__carry__3_i_3__3_n_0;
  wire i__carry__3_i_4__1_n_0;
  wire i__carry__4_i_1__0_n_0;
  wire i__carry__4_i_2__0_n_0;
  wire i__carry__4_i_3__0_n_0;
  wire i__carry__4_i_4__0_n_0;
  wire i__carry__5_i_1__0_n_0;
  wire i__carry__5_i_2__0_n_0;
  wire i__carry__5_i_3__0_n_0;
  wire i__carry__5_i_4__0_n_0;
  wire i__carry__6_i_1__0_n_0;
  wire i__carry__6_i_2__0_n_0;
  wire i__carry__6_i_3__0_n_0;
  wire i__carry_i_1__8_n_0;
  wire i__carry_i_1__9_n_0;
  wire i__carry_i_2__5_n_0;
  wire i__carry_i_2__6_n_0;
  wire i__carry_i_3__5_n_0;
  wire i__carry_i_3__6_n_0;
  wire i__carry_i_4__4_n_0;
  wire i__carry_i_4__5_n_0;
  wire m_axi_osc2_aclk;
  wire m_axi_osc2_aresetn;
  wire \m_axis_tdata_reg[0]_0 ;
  wire \m_axis_tdata_reg[10]_0 ;
  wire \m_axis_tdata_reg[11]_0 ;
  wire \m_axis_tdata_reg[12]_0 ;
  wire \m_axis_tdata_reg[13]_0 ;
  wire \m_axis_tdata_reg[14]_0 ;
  wire [7:0]\m_axis_tdata_reg[15]_0 ;
  wire [7:0]\m_axis_tdata_reg[15]_1 ;
  wire [7:0]\m_axis_tdata_reg[15]_2 ;
  wire \m_axis_tdata_reg[15]_3 ;
  wire \m_axis_tdata_reg[1]_0 ;
  wire \m_axis_tdata_reg[2]_0 ;
  wire \m_axis_tdata_reg[3]_0 ;
  wire \m_axis_tdata_reg[4]_0 ;
  wire \m_axis_tdata_reg[5]_0 ;
  wire \m_axis_tdata_reg[6]_0 ;
  wire \m_axis_tdata_reg[7]_0 ;
  wire \m_axis_tdata_reg[8]_0 ;
  wire \m_axis_tdata_reg[9]_0 ;
  wire m_axis_tlast_i_1__0_n_0;
  wire m_axis_tvalid0;
  wire [1:1]p_20_in;
  wire \reg_rd_data[0]_i_13__0_n_0 ;
  wire \reg_rd_data[11]_i_2__0_n_0 ;
  wire \reg_rd_data[12]_i_2__0_n_0 ;
  wire \reg_rd_data[13]_i_2__0_n_0 ;
  wire \reg_rd_data[14]_i_2__0_n_0 ;
  wire \reg_rd_data[15]_i_3__0_n_0 ;
  wire \reg_rd_data[17]_i_2__0_n_0 ;
  wire \reg_rd_data[1]_i_2__0_n_0 ;
  wire \reg_rd_data[1]_i_4__0_n_0 ;
  wire \reg_rd_data[1]_i_7_n_0 ;
  wire \reg_rd_data[2]_i_15__0_n_0 ;
  wire \reg_rd_data[30]_i_2__0 ;
  wire [31:0]\reg_rd_data[31]_i_3__0 ;
  wire \reg_rd_data[3]_i_10__0_n_0 ;
  wire \reg_rd_data[3]_i_11_n_0 ;
  wire \reg_rd_data[4]_i_8__0_n_0 ;
  wire \reg_rd_data[5]_i_8__0_n_0 ;
  wire \reg_rd_data[6]_i_2__0_n_0 ;
  wire \reg_rd_data[7]_i_2__0_n_0 ;
  wire \reg_rd_data[9]_i_2__0_n_0 ;
  wire \reg_rd_data_reg[11] ;
  wire \reg_rd_data_reg[11]_0 ;
  wire \reg_rd_data_reg[12] ;
  wire \reg_rd_data_reg[12]_0 ;
  wire \reg_rd_data_reg[13] ;
  wire \reg_rd_data_reg[13]_0 ;
  wire \reg_rd_data_reg[14] ;
  wire \reg_rd_data_reg[14]_0 ;
  wire \reg_rd_data_reg[15] ;
  wire \reg_rd_data_reg[15]_0 ;
  wire \reg_rd_data_reg[15]_1 ;
  wire \reg_rd_data_reg[15]_2 ;
  wire \reg_rd_data_reg[17] ;
  wire \reg_rd_data_reg[17]_0 ;
  wire \reg_rd_data_reg[17]_1 ;
  wire \reg_rd_data_reg[17]_2 ;
  wire \reg_rd_data_reg[17]_3 ;
  wire \reg_rd_data_reg[17]_4 ;
  wire \reg_rd_data_reg[17]_5 ;
  wire \reg_rd_data_reg[1] ;
  wire \reg_rd_data_reg[1]_0 ;
  wire [0:0]\reg_rd_data_reg[1]_1 ;
  wire \reg_rd_data_reg[1]_2 ;
  wire \reg_rd_data_reg[1]_3 ;
  wire \reg_rd_data_reg[1]_4 ;
  wire \reg_rd_data_reg[2]_i_3__0 ;
  wire \reg_rd_data_reg[2]_i_3__0_0 ;
  wire [5:0]\reg_rd_data_reg[5] ;
  wire \reg_rd_data_reg[6] ;
  wire \reg_rd_data_reg[6]_0 ;
  wire \reg_rd_data_reg[7] ;
  wire \reg_rd_data_reg[7]_0 ;
  wire \reg_rd_data_reg[9] ;
  wire \reg_rd_data_reg[9]_0 ;
  wire state_ns1;
  wire state_ns11_out;
  wire state_ns1_carry__0_i_1__0_n_0;
  wire state_ns1_carry__0_i_2__0_n_0;
  wire state_ns1_carry__0_i_3__0_n_0;
  wire state_ns1_carry__0_i_4__0_n_0;
  wire state_ns1_carry__0_n_0;
  wire state_ns1_carry__0_n_1;
  wire state_ns1_carry__0_n_2;
  wire state_ns1_carry__0_n_3;
  wire state_ns1_carry__1_i_1__0_n_0;
  wire state_ns1_carry__1_i_2__0_n_0;
  wire state_ns1_carry__1_i_3__0_n_0;
  wire state_ns1_carry__1_n_2;
  wire state_ns1_carry__1_n_3;
  wire state_ns1_carry_i_1__0_n_0;
  wire state_ns1_carry_i_2__0_n_0;
  wire state_ns1_carry_i_3__0_n_0;
  wire state_ns1_carry_i_4__0_n_0;
  wire state_ns1_carry_n_0;
  wire state_ns1_carry_n_1;
  wire state_ns1_carry_n_2;
  wire state_ns1_carry_n_3;
  wire \state_ns1_inferred__0/i__carry__0_n_0 ;
  wire \state_ns1_inferred__0/i__carry__0_n_1 ;
  wire \state_ns1_inferred__0/i__carry__0_n_2 ;
  wire \state_ns1_inferred__0/i__carry__0_n_3 ;
  wire \state_ns1_inferred__0/i__carry__1_n_2 ;
  wire \state_ns1_inferred__0/i__carry__1_n_3 ;
  wire \state_ns1_inferred__0/i__carry_n_0 ;
  wire \state_ns1_inferred__0/i__carry_n_1 ;
  wire \state_ns1_inferred__0/i__carry_n_2 ;
  wire \state_ns1_inferred__0/i__carry_n_3 ;
  wire [31:1]state_ns2;
  wire [31:1]state_ns20_in;
  wire state_ns2_carry__0_i_1__0_n_0;
  wire state_ns2_carry__0_i_2__0_n_0;
  wire state_ns2_carry__0_i_3__0_n_0;
  wire state_ns2_carry__0_i_4__0_n_0;
  wire state_ns2_carry__0_n_0;
  wire state_ns2_carry__0_n_1;
  wire state_ns2_carry__0_n_2;
  wire state_ns2_carry__0_n_3;
  wire state_ns2_carry__1_i_1__0_n_0;
  wire state_ns2_carry__1_i_2__0_n_0;
  wire state_ns2_carry__1_i_3__0_n_0;
  wire state_ns2_carry__1_i_4__0_n_0;
  wire state_ns2_carry__1_n_0;
  wire state_ns2_carry__1_n_1;
  wire state_ns2_carry__1_n_2;
  wire state_ns2_carry__1_n_3;
  wire state_ns2_carry__2_i_1__0_n_0;
  wire state_ns2_carry__2_i_2__0_n_0;
  wire state_ns2_carry__2_i_3__0_n_0;
  wire state_ns2_carry__2_i_4__0_n_0;
  wire state_ns2_carry__2_n_0;
  wire state_ns2_carry__2_n_1;
  wire state_ns2_carry__2_n_2;
  wire state_ns2_carry__2_n_3;
  wire state_ns2_carry__3_i_1__0_n_0;
  wire state_ns2_carry__3_i_2__0_n_0;
  wire state_ns2_carry__3_i_3__0_n_0;
  wire state_ns2_carry__3_i_4__0_n_0;
  wire state_ns2_carry__3_n_0;
  wire state_ns2_carry__3_n_1;
  wire state_ns2_carry__3_n_2;
  wire state_ns2_carry__3_n_3;
  wire state_ns2_carry__4_i_1__0_n_0;
  wire state_ns2_carry__4_i_2__0_n_0;
  wire state_ns2_carry__4_i_3__0_n_0;
  wire state_ns2_carry__4_i_4__0_n_0;
  wire state_ns2_carry__4_n_0;
  wire state_ns2_carry__4_n_1;
  wire state_ns2_carry__4_n_2;
  wire state_ns2_carry__4_n_3;
  wire state_ns2_carry__5_i_1__0_n_0;
  wire state_ns2_carry__5_i_2__0_n_0;
  wire state_ns2_carry__5_i_3__0_n_0;
  wire state_ns2_carry__5_i_4__0_n_0;
  wire state_ns2_carry__5_n_0;
  wire state_ns2_carry__5_n_1;
  wire state_ns2_carry__5_n_2;
  wire state_ns2_carry__5_n_3;
  wire state_ns2_carry__6_i_1__0_n_0;
  wire state_ns2_carry__6_i_2__0_n_0;
  wire state_ns2_carry__6_i_3__0_n_0;
  wire state_ns2_carry__6_n_2;
  wire state_ns2_carry__6_n_3;
  wire state_ns2_carry_i_1__0_n_0;
  wire state_ns2_carry_i_2__0_n_0;
  wire state_ns2_carry_i_3__0_n_0;
  wire state_ns2_carry_i_4__0_n_0;
  wire state_ns2_carry_n_0;
  wire state_ns2_carry_n_1;
  wire state_ns2_carry_n_2;
  wire state_ns2_carry_n_3;
  wire \state_ns2_inferred__0/i__carry__0_n_0 ;
  wire \state_ns2_inferred__0/i__carry__0_n_1 ;
  wire \state_ns2_inferred__0/i__carry__0_n_2 ;
  wire \state_ns2_inferred__0/i__carry__0_n_3 ;
  wire \state_ns2_inferred__0/i__carry__1_n_0 ;
  wire \state_ns2_inferred__0/i__carry__1_n_1 ;
  wire \state_ns2_inferred__0/i__carry__1_n_2 ;
  wire \state_ns2_inferred__0/i__carry__1_n_3 ;
  wire \state_ns2_inferred__0/i__carry__2_n_0 ;
  wire \state_ns2_inferred__0/i__carry__2_n_1 ;
  wire \state_ns2_inferred__0/i__carry__2_n_2 ;
  wire \state_ns2_inferred__0/i__carry__2_n_3 ;
  wire \state_ns2_inferred__0/i__carry__3_n_0 ;
  wire \state_ns2_inferred__0/i__carry__3_n_1 ;
  wire \state_ns2_inferred__0/i__carry__3_n_2 ;
  wire \state_ns2_inferred__0/i__carry__3_n_3 ;
  wire \state_ns2_inferred__0/i__carry__4_n_0 ;
  wire \state_ns2_inferred__0/i__carry__4_n_1 ;
  wire \state_ns2_inferred__0/i__carry__4_n_2 ;
  wire \state_ns2_inferred__0/i__carry__4_n_3 ;
  wire \state_ns2_inferred__0/i__carry__5_n_0 ;
  wire \state_ns2_inferred__0/i__carry__5_n_1 ;
  wire \state_ns2_inferred__0/i__carry__5_n_2 ;
  wire \state_ns2_inferred__0/i__carry__5_n_3 ;
  wire \state_ns2_inferred__0/i__carry__6_n_2 ;
  wire \state_ns2_inferred__0/i__carry__6_n_3 ;
  wire \state_ns2_inferred__0/i__carry_n_0 ;
  wire \state_ns2_inferred__0/i__carry_n_1 ;
  wire \state_ns2_inferred__0/i__carry_n_2 ;
  wire \state_ns2_inferred__0/i__carry_n_3 ;
  wire sts_acquire;
  wire sts_acquire_i_11__0_n_0;
  wire sts_acquire_i_12__0_n_0;
  wire sts_acquire_i_13__0_n_0;
  wire sts_acquire_i_14__0_n_0;
  wire sts_acquire_i_1__0_n_0;
  wire sts_acquire_i_2__0_n_0;
  wire sts_acquire_i_6__0_n_0;
  wire sts_acquire_i_7__0_n_0;
  wire sts_acquire_reg_0;
  wire sts_acquire_reg_1;
  wire sts_start_i_1__0_n_0;
  wire sts_start_i_2__0_n_0;
  wire sts_start_reg_0;
  wire [30:0]sts_trig_post_cnt;
  wire sts_trig_post_cnt0;
  wire \sts_trig_post_cnt[0]_i_3__0_n_0 ;
  wire \sts_trig_post_cnt_reg[0]_0 ;
  wire \sts_trig_post_cnt_reg[0]_i_2__0_n_0 ;
  wire \sts_trig_post_cnt_reg[0]_i_2__0_n_1 ;
  wire \sts_trig_post_cnt_reg[0]_i_2__0_n_2 ;
  wire \sts_trig_post_cnt_reg[0]_i_2__0_n_3 ;
  wire \sts_trig_post_cnt_reg[0]_i_2__0_n_4 ;
  wire \sts_trig_post_cnt_reg[0]_i_2__0_n_5 ;
  wire \sts_trig_post_cnt_reg[0]_i_2__0_n_6 ;
  wire \sts_trig_post_cnt_reg[0]_i_2__0_n_7 ;
  wire \sts_trig_post_cnt_reg[12]_i_1__0_n_0 ;
  wire \sts_trig_post_cnt_reg[12]_i_1__0_n_1 ;
  wire \sts_trig_post_cnt_reg[12]_i_1__0_n_2 ;
  wire \sts_trig_post_cnt_reg[12]_i_1__0_n_3 ;
  wire \sts_trig_post_cnt_reg[12]_i_1__0_n_4 ;
  wire \sts_trig_post_cnt_reg[12]_i_1__0_n_5 ;
  wire \sts_trig_post_cnt_reg[12]_i_1__0_n_6 ;
  wire \sts_trig_post_cnt_reg[12]_i_1__0_n_7 ;
  wire \sts_trig_post_cnt_reg[16]_i_1__0_n_0 ;
  wire \sts_trig_post_cnt_reg[16]_i_1__0_n_1 ;
  wire \sts_trig_post_cnt_reg[16]_i_1__0_n_2 ;
  wire \sts_trig_post_cnt_reg[16]_i_1__0_n_3 ;
  wire \sts_trig_post_cnt_reg[16]_i_1__0_n_4 ;
  wire \sts_trig_post_cnt_reg[16]_i_1__0_n_5 ;
  wire \sts_trig_post_cnt_reg[16]_i_1__0_n_6 ;
  wire \sts_trig_post_cnt_reg[16]_i_1__0_n_7 ;
  wire \sts_trig_post_cnt_reg[20]_i_1__0_n_0 ;
  wire \sts_trig_post_cnt_reg[20]_i_1__0_n_1 ;
  wire \sts_trig_post_cnt_reg[20]_i_1__0_n_2 ;
  wire \sts_trig_post_cnt_reg[20]_i_1__0_n_3 ;
  wire \sts_trig_post_cnt_reg[20]_i_1__0_n_4 ;
  wire \sts_trig_post_cnt_reg[20]_i_1__0_n_5 ;
  wire \sts_trig_post_cnt_reg[20]_i_1__0_n_6 ;
  wire \sts_trig_post_cnt_reg[20]_i_1__0_n_7 ;
  wire \sts_trig_post_cnt_reg[24]_i_1__0_n_0 ;
  wire \sts_trig_post_cnt_reg[24]_i_1__0_n_1 ;
  wire \sts_trig_post_cnt_reg[24]_i_1__0_n_2 ;
  wire \sts_trig_post_cnt_reg[24]_i_1__0_n_3 ;
  wire \sts_trig_post_cnt_reg[24]_i_1__0_n_4 ;
  wire \sts_trig_post_cnt_reg[24]_i_1__0_n_5 ;
  wire \sts_trig_post_cnt_reg[24]_i_1__0_n_6 ;
  wire \sts_trig_post_cnt_reg[24]_i_1__0_n_7 ;
  wire \sts_trig_post_cnt_reg[28]_i_1__0_n_1 ;
  wire \sts_trig_post_cnt_reg[28]_i_1__0_n_2 ;
  wire \sts_trig_post_cnt_reg[28]_i_1__0_n_3 ;
  wire \sts_trig_post_cnt_reg[28]_i_1__0_n_4 ;
  wire \sts_trig_post_cnt_reg[28]_i_1__0_n_5 ;
  wire \sts_trig_post_cnt_reg[28]_i_1__0_n_6 ;
  wire \sts_trig_post_cnt_reg[28]_i_1__0_n_7 ;
  wire \sts_trig_post_cnt_reg[4]_i_1__0_n_0 ;
  wire \sts_trig_post_cnt_reg[4]_i_1__0_n_1 ;
  wire \sts_trig_post_cnt_reg[4]_i_1__0_n_2 ;
  wire \sts_trig_post_cnt_reg[4]_i_1__0_n_3 ;
  wire \sts_trig_post_cnt_reg[4]_i_1__0_n_4 ;
  wire \sts_trig_post_cnt_reg[4]_i_1__0_n_5 ;
  wire \sts_trig_post_cnt_reg[4]_i_1__0_n_6 ;
  wire \sts_trig_post_cnt_reg[4]_i_1__0_n_7 ;
  wire \sts_trig_post_cnt_reg[8]_i_1__0_n_0 ;
  wire \sts_trig_post_cnt_reg[8]_i_1__0_n_1 ;
  wire \sts_trig_post_cnt_reg[8]_i_1__0_n_2 ;
  wire \sts_trig_post_cnt_reg[8]_i_1__0_n_3 ;
  wire \sts_trig_post_cnt_reg[8]_i_1__0_n_4 ;
  wire \sts_trig_post_cnt_reg[8]_i_1__0_n_5 ;
  wire \sts_trig_post_cnt_reg[8]_i_1__0_n_6 ;
  wire \sts_trig_post_cnt_reg[8]_i_1__0_n_7 ;
  wire \sts_trig_post_cnt_reg_n_0_[31] ;
  wire sts_trig_post_overflow;
  wire sts_trig_post_overflow_i_1__0_n_0;
  wire sts_trig_post_overflow_i_2__0_n_0;
  wire sts_trig_post_overflow_i_3__0_n_0;
  wire sts_trig_post_overflow_i_4__0_n_0;
  wire sts_trig_post_overflow_i_5__0_n_0;
  wire sts_trig_post_overflow_i_6__0_n_0;
  wire sts_trig_post_overflow_i_7__0_n_0;
  wire sts_trig_post_overflow_i_8__0_n_0;
  wire sts_trig_post_overflow_i_9__0_n_0;
  wire [30:0]sts_trig_pre_cnt;
  wire sts_trig_pre_cnt0;
  wire \sts_trig_pre_cnt[0]_i_3__0_n_0 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2__0_n_0 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2__0_n_1 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2__0_n_2 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2__0_n_3 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2__0_n_4 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2__0_n_5 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2__0_n_6 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2__0_n_7 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1__0_n_0 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1__0_n_1 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1__0_n_2 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1__0_n_3 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1__0_n_4 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1__0_n_5 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1__0_n_6 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1__0_n_7 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1__0_n_0 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1__0_n_1 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1__0_n_2 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1__0_n_3 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1__0_n_4 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1__0_n_5 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1__0_n_6 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1__0_n_7 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1__0_n_0 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1__0_n_1 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1__0_n_2 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1__0_n_3 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1__0_n_4 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1__0_n_5 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1__0_n_6 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1__0_n_7 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1__0_n_0 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1__0_n_1 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1__0_n_2 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1__0_n_3 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1__0_n_4 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1__0_n_5 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1__0_n_6 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1__0_n_7 ;
  wire \sts_trig_pre_cnt_reg[28]_i_1__0_n_1 ;
  wire \sts_trig_pre_cnt_reg[28]_i_1__0_n_2 ;
  wire \sts_trig_pre_cnt_reg[28]_i_1__0_n_3 ;
  wire \sts_trig_pre_cnt_reg[28]_i_1__0_n_4 ;
  wire \sts_trig_pre_cnt_reg[28]_i_1__0_n_5 ;
  wire \sts_trig_pre_cnt_reg[28]_i_1__0_n_6 ;
  wire \sts_trig_pre_cnt_reg[28]_i_1__0_n_7 ;
  wire \sts_trig_pre_cnt_reg[3]_0 ;
  wire \sts_trig_pre_cnt_reg[4]_0 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1__0_n_0 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1__0_n_1 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1__0_n_2 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1__0_n_3 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1__0_n_4 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1__0_n_5 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1__0_n_6 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1__0_n_7 ;
  wire \sts_trig_pre_cnt_reg[5]_0 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1__0_n_0 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1__0_n_1 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1__0_n_2 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1__0_n_3 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1__0_n_4 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1__0_n_5 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1__0_n_6 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1__0_n_7 ;
  wire \sts_trig_pre_cnt_reg_n_0_[31] ;
  wire sts_trig_pre_overflow;
  wire sts_trig_pre_overflow_i_1__0_n_0;
  wire sts_trig_pre_overflow_i_2__0_n_0;
  wire sts_trig_pre_overflow_i_3__0_n_0;
  wire sts_trig_pre_overflow_i_4__0_n_0;
  wire sts_trig_pre_overflow_i_5__0_n_0;
  wire sts_trig_pre_overflow_i_6__0_n_0;
  wire sts_trig_pre_overflow_i_7__0_n_0;
  wire sts_trig_pre_overflow_i_8__0_n_0;
  wire sts_trig_pre_overflow_i_9__0_n_0;
  wire [0:0]sts_trig_reg_0;
  wire sts_trig_reg_1;
  wire [5:0]trig_ip;
  wire trig_tvalid;
  wire \upsize_buf_reg[0][7] ;
  wire \upsize_buf_reg[2][0] ;
  wire \upsize_buf_reg[7][0] ;
  wire \upsize_buf_reg[7][0]_0 ;
  wire \upsize_buf_reg[7][1] ;
  wire \upsize_buf_reg[7][2] ;
  wire \upsize_buf_reg[7][3] ;
  wire \upsize_buf_reg[7][4] ;
  wire \upsize_buf_reg[7][5] ;
  wire \upsize_buf_reg[7][6] ;
  wire \upsize_buf_reg[7][7] ;
  wire [3:0]NLW_state_ns1_carry_O_UNCONNECTED;
  wire [3:0]NLW_state_ns1_carry__0_O_UNCONNECTED;
  wire [3:3]NLW_state_ns1_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_state_ns1_carry__1_O_UNCONNECTED;
  wire [3:0]\NLW_state_ns1_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_state_ns1_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_state_ns1_inferred__0/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_state_ns1_inferred__0/i__carry__1_O_UNCONNECTED ;
  wire [3:2]NLW_state_ns2_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_state_ns2_carry__6_O_UNCONNECTED;
  wire [3:2]\NLW_state_ns2_inferred__0/i__carry__6_CO_UNCONNECTED ;
  wire [3:3]\NLW_state_ns2_inferred__0/i__carry__6_O_UNCONNECTED ;
  wire [3:3]\NLW_sts_trig_post_cnt_reg[28]_i_1__0_CO_UNCONNECTED ;
  wire [3:3]\NLW_sts_trig_pre_cnt_reg[28]_i_1__0_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hFFFFFFFF2222666E)) 
    \FSM_sequential_state_cs[0]_i_1__0 
       (.I0(\FSM_sequential_state_cs_reg[0]_0 ),
        .I1(\FSM_sequential_state_cs[2]_i_2__0_n_0 ),
        .I2(dma_mode),
        .I3(\FSM_sequential_state_cs_reg[1]_0 ),
        .I4(\FSM_sequential_state_cs_reg[2]_0 ),
        .I5(\FSM_sequential_state_cs[2]_i_4__0_n_0 ),
        .O(\FSM_sequential_state_cs[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000E2E2EEE2)) 
    \FSM_sequential_state_cs[1]_i_1__0 
       (.I0(\FSM_sequential_state_cs_reg[1]_0 ),
        .I1(\FSM_sequential_state_cs[2]_i_2__0_n_0 ),
        .I2(\FSM_sequential_state_cs[1]_i_2__0_n_0 ),
        .I3(\FSM_sequential_state_cs_reg[0]_0 ),
        .I4(\FSM_sequential_state_cs[2]_i_3__0_n_0 ),
        .I5(\FSM_sequential_state_cs[2]_i_4__0_n_0 ),
        .O(\FSM_sequential_state_cs[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT4 #(
    .INIT(16'h0C10)) 
    \FSM_sequential_state_cs[1]_i_2__0 
       (.I0(dma_mode),
        .I1(\FSM_sequential_state_cs_reg[0]_0 ),
        .I2(\FSM_sequential_state_cs_reg[2]_0 ),
        .I3(\FSM_sequential_state_cs_reg[1]_0 ),
        .O(\FSM_sequential_state_cs[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000002E222222)) 
    \FSM_sequential_state_cs[2]_i_1__0 
       (.I0(\FSM_sequential_state_cs_reg[2]_0 ),
        .I1(\FSM_sequential_state_cs[2]_i_2__0_n_0 ),
        .I2(\FSM_sequential_state_cs_reg[1]_0 ),
        .I3(\FSM_sequential_state_cs_reg[0]_0 ),
        .I4(\FSM_sequential_state_cs[2]_i_3__0_n_0 ),
        .I5(\FSM_sequential_state_cs[2]_i_4__0_n_0 ),
        .O(\FSM_sequential_state_cs[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    \FSM_sequential_state_cs[2]_i_2__0 
       (.I0(state_ns11_out),
        .I1(trig_tvalid),
        .I2(\FSM_sequential_state_cs_reg[0]_0 ),
        .I3(event_num_trig_reg),
        .I4(\FSM_sequential_state_cs_reg[2]_0 ),
        .I5(\FSM_sequential_state_cs[2]_i_5__0_n_0 ),
        .O(\FSM_sequential_state_cs[2]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_state_cs[2]_i_3__0 
       (.I0(\FSM_sequential_state_cs_reg[2]_0 ),
        .I1(sts_acquire_reg_1),
        .O(\FSM_sequential_state_cs[2]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_state_cs[2]_i_4__0 
       (.I0(event_num_stop),
        .I1(m_axi_osc2_aresetn),
        .O(\FSM_sequential_state_cs[2]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hBFB03F3FBFB03030)) 
    \FSM_sequential_state_cs[2]_i_5__0 
       (.I0(event_num_trig_reg),
        .I1(\FSM_sequential_state_cs[2]_i_6__0_n_0 ),
        .I2(\FSM_sequential_state_cs_reg[1]_0 ),
        .I3(event_num_start),
        .I4(\FSM_sequential_state_cs_reg[0]_0 ),
        .I5(event_num_stop),
        .O(\FSM_sequential_state_cs[2]_i_5__0_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \FSM_sequential_state_cs[2]_i_6__0 
       (.I0(trig_tvalid),
        .I1(\FSM_sequential_state_cs_reg[0]_0 ),
        .I2(state_ns1),
        .O(\FSM_sequential_state_cs[2]_i_6__0_n_0 ));
  (* FSM_ENCODED_STATES = "IDLE:001,PRE_SAMP_WAIT_TRIG:100,POST_SAMP_WAIT_TRIG:011,PRE_SAMP_FILL:101,POST_SAMP_FILL:010,STRM_SAMP:000" *) 
  FDRE \FSM_sequential_state_cs_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\FSM_sequential_state_cs[0]_i_1__0_n_0 ),
        .Q(\FSM_sequential_state_cs_reg[0]_0 ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "IDLE:001,PRE_SAMP_WAIT_TRIG:100,POST_SAMP_WAIT_TRIG:011,PRE_SAMP_FILL:101,POST_SAMP_FILL:010,STRM_SAMP:000" *) 
  FDRE \FSM_sequential_state_cs_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\FSM_sequential_state_cs[1]_i_1__0_n_0 ),
        .Q(\FSM_sequential_state_cs_reg[1]_0 ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "IDLE:001,PRE_SAMP_WAIT_TRIG:100,POST_SAMP_WAIT_TRIG:011,PRE_SAMP_FILL:101,POST_SAMP_FILL:010,STRM_SAMP:000" *) 
  FDRE \FSM_sequential_state_cs_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\FSM_sequential_state_cs[2]_i_1__0_n_0 ),
        .Q(\FSM_sequential_state_cs_reg[2]_0 ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hB)) 
    \adc_dec_cnt[0]_i_1__0 
       (.I0(\sts_trig_post_cnt_reg[0]_0 ),
        .I1(m_axi_osc2_aresetn),
        .O(event_num_reset_reg));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_1__5
       (.I0(\reg_rd_data[31]_i_3__0 [8]),
        .O(i__carry__0_i_1__5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_1__6
       (.I0(state_ns2[23]),
        .I1(sts_trig_post_cnt[23]),
        .I2(sts_trig_post_cnt[21]),
        .I3(state_ns2[21]),
        .I4(sts_trig_post_cnt[22]),
        .I5(state_ns2[22]),
        .O(i__carry__0_i_1__6_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_2__5
       (.I0(\reg_rd_data[31]_i_3__0 [7]),
        .O(i__carry__0_i_2__5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_2__6
       (.I0(state_ns2[20]),
        .I1(sts_trig_post_cnt[20]),
        .I2(sts_trig_post_cnt[19]),
        .I3(state_ns2[19]),
        .I4(sts_trig_post_cnt[18]),
        .I5(state_ns2[18]),
        .O(i__carry__0_i_2__6_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_3__5
       (.I0(\reg_rd_data[31]_i_3__0 [6]),
        .O(i__carry__0_i_3__5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_3__6
       (.I0(state_ns2[17]),
        .I1(sts_trig_post_cnt[17]),
        .I2(sts_trig_post_cnt[15]),
        .I3(state_ns2[15]),
        .I4(sts_trig_post_cnt[16]),
        .I5(state_ns2[16]),
        .O(i__carry__0_i_3__6_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_4__5
       (.I0(\reg_rd_data[31]_i_3__0 [5]),
        .O(i__carry__0_i_4__5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_4__6
       (.I0(sts_trig_post_cnt[12]),
        .I1(state_ns2[12]),
        .I2(sts_trig_post_cnt[13]),
        .I3(state_ns2[13]),
        .I4(state_ns2[14]),
        .I5(sts_trig_post_cnt[14]),
        .O(i__carry__0_i_4__6_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_1__5
       (.I0(\reg_rd_data[31]_i_3__0 [12]),
        .O(i__carry__1_i_1__5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_1__6
       (.I0(state_ns2[31]),
        .I1(\sts_trig_post_cnt_reg_n_0_[31] ),
        .I2(state_ns2[30]),
        .I3(sts_trig_post_cnt[30]),
        .O(i__carry__1_i_1__6_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_2__5
       (.I0(\reg_rd_data[31]_i_3__0 [11]),
        .O(i__carry__1_i_2__5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_2__6
       (.I0(state_ns2[29]),
        .I1(sts_trig_post_cnt[29]),
        .I2(sts_trig_post_cnt[27]),
        .I3(state_ns2[27]),
        .I4(sts_trig_post_cnt[28]),
        .I5(state_ns2[28]),
        .O(i__carry__1_i_2__6_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_3__5
       (.I0(\reg_rd_data[31]_i_3__0 [10]),
        .O(i__carry__1_i_3__5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_3__6
       (.I0(state_ns2[26]),
        .I1(sts_trig_post_cnt[26]),
        .I2(sts_trig_post_cnt[24]),
        .I3(state_ns2[24]),
        .I4(sts_trig_post_cnt[25]),
        .I5(state_ns2[25]),
        .O(i__carry__1_i_3__6_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_4__4
       (.I0(\reg_rd_data[31]_i_3__0 [9]),
        .O(i__carry__1_i_4__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_1__4
       (.I0(\reg_rd_data[31]_i_3__0 [16]),
        .O(i__carry__2_i_1__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_2__4
       (.I0(\reg_rd_data[31]_i_3__0 [15]),
        .O(i__carry__2_i_2__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_3__3
       (.I0(\reg_rd_data[31]_i_3__0 [14]),
        .O(i__carry__2_i_3__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_4__3
       (.I0(\reg_rd_data[31]_i_3__0 [13]),
        .O(i__carry__2_i_4__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__3_i_1__0
       (.I0(\reg_rd_data[31]_i_3__0 [20]),
        .O(i__carry__3_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__3_i_2__0
       (.I0(\reg_rd_data[31]_i_3__0 [19]),
        .O(i__carry__3_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__3_i_3__3
       (.I0(\reg_rd_data[31]_i_3__0 [18]),
        .O(i__carry__3_i_3__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__3_i_4__1
       (.I0(\reg_rd_data[31]_i_3__0 [17]),
        .O(i__carry__3_i_4__1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__4_i_1__0
       (.I0(\reg_rd_data[31]_i_3__0 [24]),
        .O(i__carry__4_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__4_i_2__0
       (.I0(\reg_rd_data[31]_i_3__0 [23]),
        .O(i__carry__4_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__4_i_3__0
       (.I0(\reg_rd_data[31]_i_3__0 [22]),
        .O(i__carry__4_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__4_i_4__0
       (.I0(\reg_rd_data[31]_i_3__0 [21]),
        .O(i__carry__4_i_4__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__5_i_1__0
       (.I0(\reg_rd_data[31]_i_3__0 [28]),
        .O(i__carry__5_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__5_i_2__0
       (.I0(\reg_rd_data[31]_i_3__0 [27]),
        .O(i__carry__5_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__5_i_3__0
       (.I0(\reg_rd_data[31]_i_3__0 [26]),
        .O(i__carry__5_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__5_i_4__0
       (.I0(\reg_rd_data[31]_i_3__0 [25]),
        .O(i__carry__5_i_4__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__6_i_1__0
       (.I0(\reg_rd_data[31]_i_3__0 [31]),
        .O(i__carry__6_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__6_i_2__0
       (.I0(\reg_rd_data[31]_i_3__0 [30]),
        .O(i__carry__6_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__6_i_3__0
       (.I0(\reg_rd_data[31]_i_3__0 [29]),
        .O(i__carry__6_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1__8
       (.I0(\reg_rd_data[31]_i_3__0 [4]),
        .O(i__carry_i_1__8_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__9
       (.I0(sts_trig_post_cnt[9]),
        .I1(state_ns2[9]),
        .I2(sts_trig_post_cnt[10]),
        .I3(state_ns2[10]),
        .I4(state_ns2[11]),
        .I5(sts_trig_post_cnt[11]),
        .O(i__carry_i_1__9_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_2__5
       (.I0(\reg_rd_data[31]_i_3__0 [3]),
        .O(i__carry_i_2__5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__6
       (.I0(sts_trig_post_cnt[8]),
        .I1(state_ns2[8]),
        .I2(sts_trig_post_cnt[6]),
        .I3(state_ns2[6]),
        .I4(state_ns2[7]),
        .I5(sts_trig_post_cnt[7]),
        .O(i__carry_i_2__6_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_3__5
       (.I0(\reg_rd_data[31]_i_3__0 [2]),
        .O(i__carry_i_3__5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__6
       (.I0(sts_trig_post_cnt[5]),
        .I1(state_ns2[5]),
        .I2(sts_trig_post_cnt[3]),
        .I3(state_ns2[3]),
        .I4(state_ns2[4]),
        .I5(sts_trig_post_cnt[4]),
        .O(i__carry_i_3__6_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_4__4
       (.I0(\reg_rd_data[31]_i_3__0 [1]),
        .O(i__carry_i_4__4_n_0));
  LUT6 #(
    .INIT(64'h6006000000006006)) 
    i__carry_i_4__5
       (.I0(\reg_rd_data[31]_i_3__0 [0]),
        .I1(sts_trig_post_cnt[0]),
        .I2(sts_trig_post_cnt[2]),
        .I3(state_ns2[2]),
        .I4(sts_trig_post_cnt[1]),
        .I5(state_ns2[1]),
        .O(i__carry_i_4__5_n_0));
  FDRE \m_axis_tdata_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[0]_0 ),
        .Q(acq_tdata[0]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[10]_0 ),
        .Q(acq_tdata[10]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[11]_0 ),
        .Q(acq_tdata[11]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[12]_0 ),
        .Q(acq_tdata[12]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[13]_0 ),
        .Q(acq_tdata[13]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[14]_0 ),
        .Q(acq_tdata[14]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[15]_3 ),
        .Q(acq_tdata[15]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[1]_0 ),
        .Q(acq_tdata[1]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[2]_0 ),
        .Q(acq_tdata[2]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[3]_0 ),
        .Q(acq_tdata[3]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[4]_0 ),
        .Q(acq_tdata[4]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[5]_0 ),
        .Q(acq_tdata[5]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[6]_0 ),
        .Q(acq_tdata[6]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[7]_0 ),
        .Q(acq_tdata[7]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[8]_0 ),
        .Q(acq_tdata[8]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[9]_0 ),
        .Q(acq_tdata[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAEAAAAAA)) 
    m_axis_tlast_i_1__0
       (.I0(event_num_stop),
        .I1(trig_tvalid),
        .I2(\FSM_sequential_state_cs_reg[0]_0 ),
        .I3(state_ns1),
        .I4(\FSM_sequential_state_cs_reg[1]_0 ),
        .I5(\FSM_sequential_state_cs_reg[2]_0 ),
        .O(m_axis_tlast_i_1__0_n_0));
  FDRE m_axis_tlast_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(m_axis_tlast_i_1__0_n_0),
        .Q(acq_tlast),
        .R(1'b0));
  FDRE m_axis_tvalid_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(m_axis_tvalid0),
        .Q(acq_tvalid),
        .R(clear));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[0]_i_13__0 
       (.I0(Q[0]),
        .I1(\reg_rd_data[31]_i_3__0 [0]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[0]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[0]),
        .O(\reg_rd_data[0]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hFF5FFF3FF050F030)) 
    \reg_rd_data[0]_i_6__0 
       (.I0(cfg_event_sel[0]),
        .I1(\reg_rd_data_reg[5] [0]),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_0 ),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(\reg_rd_data[0]_i_13__0_n_0 ),
        .O(\cfg_event_sel_reg[0] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[10]_i_4__0 
       (.I0(Q[10]),
        .I1(\reg_rd_data[31]_i_3__0 [10]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[10]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[10]),
        .O(\cfg_trig_pre_samp_reg[10] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01550100)) 
    \reg_rd_data[11]_i_1__0 
       (.I0(\reg_rd_data_reg[17]_2 ),
        .I1(\reg_rd_data[11]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_3 ),
        .I4(\reg_rd_data_reg[11] ),
        .I5(\reg_rd_data_reg[11]_0 ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[11]_i_2__0 
       (.I0(Q[11]),
        .I1(\reg_rd_data[31]_i_3__0 [11]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[11]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[11]),
        .O(\reg_rd_data[11]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01550100)) 
    \reg_rd_data[12]_i_1__0 
       (.I0(\reg_rd_data_reg[17]_2 ),
        .I1(\reg_rd_data[12]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_3 ),
        .I4(\reg_rd_data_reg[12] ),
        .I5(\reg_rd_data_reg[12]_0 ),
        .O(D[5]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[12]_i_2__0 
       (.I0(Q[12]),
        .I1(\reg_rd_data[31]_i_3__0 [12]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[12]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[12]),
        .O(\reg_rd_data[12]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01550100)) 
    \reg_rd_data[13]_i_1__0 
       (.I0(\reg_rd_data_reg[17]_2 ),
        .I1(\reg_rd_data[13]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_3 ),
        .I4(\reg_rd_data_reg[13] ),
        .I5(\reg_rd_data_reg[13]_0 ),
        .O(D[6]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[13]_i_2__0 
       (.I0(Q[13]),
        .I1(\reg_rd_data[31]_i_3__0 [13]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[13]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[13]),
        .O(\reg_rd_data[13]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01550100)) 
    \reg_rd_data[14]_i_1__0 
       (.I0(\reg_rd_data_reg[17]_2 ),
        .I1(\reg_rd_data[14]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_3 ),
        .I4(\reg_rd_data_reg[14] ),
        .I5(\reg_rd_data_reg[14]_0 ),
        .O(D[7]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[14]_i_2__0 
       (.I0(Q[14]),
        .I1(\reg_rd_data[31]_i_3__0 [14]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[14]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[14]),
        .O(\reg_rd_data[14]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFF200F2)) 
    \reg_rd_data[15]_i_1__0 
       (.I0(\reg_rd_data_reg[15] ),
        .I1(\reg_rd_data[15]_i_3__0_n_0 ),
        .I2(\reg_rd_data_reg[15]_0 ),
        .I3(\reg_rd_data_reg[17]_2 ),
        .I4(\reg_rd_data_reg[15]_1 ),
        .I5(\reg_rd_data_reg[15]_2 ),
        .O(D[8]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[15]_i_3__0 
       (.I0(Q[15]),
        .I1(\reg_rd_data[31]_i_3__0 [15]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[15]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[15]),
        .O(\reg_rd_data[15]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[16]_i_6__0 
       (.I0(Q[16]),
        .I1(\reg_rd_data[31]_i_3__0 [16]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[16]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[16]),
        .O(\cfg_trig_pre_samp_reg[16] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01550100)) 
    \reg_rd_data[17]_i_1__0 
       (.I0(\reg_rd_data_reg[17]_2 ),
        .I1(\reg_rd_data[17]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_3 ),
        .I4(\reg_rd_data_reg[17]_4 ),
        .I5(\reg_rd_data_reg[17]_5 ),
        .O(D[9]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[17]_i_2__0 
       (.I0(Q[17]),
        .I1(\reg_rd_data[31]_i_3__0 [17]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[17]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[17]),
        .O(\reg_rd_data[17]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[18]_i_3__0 
       (.I0(Q[18]),
        .I1(\reg_rd_data[31]_i_3__0 [18]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[18]),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_cnt[18]),
        .O(\cfg_trig_pre_samp_reg[18] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[19]_i_3__0 
       (.I0(Q[19]),
        .I1(\reg_rd_data[31]_i_3__0 [19]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[19]),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_cnt[19]),
        .O(\cfg_trig_pre_samp_reg[19] ));
  LUT5 #(
    .INIT(32'hEAEEEAAA)) 
    \reg_rd_data[1]_i_1__0 
       (.I0(\reg_rd_data[1]_i_2__0_n_0 ),
        .I1(\reg_rd_data_reg[1] ),
        .I2(S),
        .I3(\reg_rd_data_reg[1]_0 ),
        .I4(\reg_rd_data_reg[1]_1 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h88888888C0CCC000)) 
    \reg_rd_data[1]_i_2__0 
       (.I0(\reg_rd_data_reg[1]_2 ),
        .I1(\reg_rd_data_reg[1]_3 ),
        .I2(\reg_rd_data[1]_i_4__0_n_0 ),
        .I3(\reg_rd_data_reg[17]_3 ),
        .I4(\reg_rd_data_reg[1]_4 ),
        .I5(\reg_rd_data_reg[17]_2 ),
        .O(\reg_rd_data[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[1]_i_4__0 
       (.I0(cfg_event_sel[1]),
        .I1(\reg_rd_data_reg[5] [1]),
        .I2(\reg_rd_data_reg[2]_i_3__0 ),
        .I3(p_20_in),
        .I4(\reg_rd_data_reg[2]_i_3__0_0 ),
        .I5(\reg_rd_data[1]_i_7_n_0 ),
        .O(\reg_rd_data[1]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[1]_i_7 
       (.I0(Q[1]),
        .I1(\reg_rd_data[31]_i_3__0 [1]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[1]),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_cnt[1]),
        .O(\reg_rd_data[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[20]_i_5__0 
       (.I0(Q[20]),
        .I1(\reg_rd_data[31]_i_3__0 [20]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[20]),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_cnt[20]),
        .O(\cfg_trig_pre_samp_reg[20] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[21]_i_3__0 
       (.I0(Q[21]),
        .I1(\reg_rd_data[31]_i_3__0 [21]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[21]),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_cnt[21]),
        .O(\cfg_trig_pre_samp_reg[21] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[22]_i_3__0 
       (.I0(Q[22]),
        .I1(\reg_rd_data[31]_i_3__0 [22]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[22]),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_cnt[22]),
        .O(\cfg_trig_pre_samp_reg[22] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[23]_i_3__0 
       (.I0(Q[23]),
        .I1(\reg_rd_data[31]_i_3__0 [23]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[23]),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_cnt[23]),
        .O(\cfg_trig_pre_samp_reg[23] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[24]_i_3__0 
       (.I0(Q[24]),
        .I1(\reg_rd_data[31]_i_3__0 [24]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[24]),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_cnt[24]),
        .O(\cfg_trig_pre_samp_reg[24] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[25]_i_3__0 
       (.I0(Q[25]),
        .I1(\reg_rd_data[31]_i_3__0 [25]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[25]),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_cnt[25]),
        .O(\cfg_trig_pre_samp_reg[25] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[26]_i_3__0 
       (.I0(Q[26]),
        .I1(\reg_rd_data[31]_i_3__0 [26]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[26]),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_cnt[26]),
        .O(\cfg_trig_pre_samp_reg[26] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[27]_i_3__0 
       (.I0(Q[27]),
        .I1(\reg_rd_data[31]_i_3__0 [27]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[27]),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_cnt[27]),
        .O(\cfg_trig_pre_samp_reg[27] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[28]_i_3__0 
       (.I0(Q[28]),
        .I1(\reg_rd_data[31]_i_3__0 [28]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[28]),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_cnt[28]),
        .O(\cfg_trig_pre_samp_reg[28] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[29]_i_3__0 
       (.I0(Q[29]),
        .I1(\reg_rd_data[31]_i_3__0 [29]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[29]),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_cnt[29]),
        .O(\cfg_trig_pre_samp_reg[29] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[2]_i_15__0 
       (.I0(Q[2]),
        .I1(\reg_rd_data[31]_i_3__0 [2]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[2]),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_cnt[2]),
        .O(\reg_rd_data[2]_i_15__0_n_0 ));
  LUT6 #(
    .INIT(64'h0AFA03030AFAF3F3)) 
    \reg_rd_data[2]_i_8__0 
       (.I0(p_20_in),
        .I1(\reg_rd_data[2]_i_15__0_n_0 ),
        .I2(\reg_rd_data_reg[2]_i_3__0 ),
        .I3(cfg_event_sel[2]),
        .I4(\reg_rd_data_reg[2]_i_3__0_0 ),
        .I5(\reg_rd_data_reg[5] [2]),
        .O(sts_start_reg_0));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[30]_i_3__0 
       (.I0(Q[30]),
        .I1(\reg_rd_data[31]_i_3__0 [30]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[30]),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_cnt[30]),
        .O(\cfg_trig_pre_samp_reg[30] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[31]_i_8__0 
       (.I0(Q[31]),
        .I1(\reg_rd_data[31]_i_3__0 [31]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_overflow),
        .I4(\reg_rd_data[30]_i_2__0 ),
        .I5(sts_trig_post_overflow),
        .O(\cfg_trig_pre_samp_reg[31] ));
  LUT5 #(
    .INIT(32'hAC0FAC00)) 
    \reg_rd_data[3]_i_10__0 
       (.I0(Q[3]),
        .I1(\reg_rd_data[31]_i_3__0 [3]),
        .I2(\reg_rd_data_reg[17]_1 ),
        .I3(\reg_rd_data_reg[17]_0 ),
        .I4(sts_trig_post_cnt[3]),
        .O(\reg_rd_data[3]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'h0DFD0000FFFFFFFF)) 
    \reg_rd_data[3]_i_11 
       (.I0(\reg_rd_data_reg[5] [3]),
        .I1(\reg_rd_data_reg[17]_1 ),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_reg_0),
        .I4(\reg_rd_data_reg[17] ),
        .I5(\reg_rd_data_reg[17]_3 ),
        .O(\reg_rd_data[3]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFBAAA)) 
    \reg_rd_data[3]_i_3 
       (.I0(\reg_rd_data_reg[17] ),
        .I1(\reg_rd_data_reg[17]_0 ),
        .I2(\reg_rd_data_reg[17]_1 ),
        .I3(sts_trig_pre_cnt[3]),
        .I4(\reg_rd_data[3]_i_10__0_n_0 ),
        .I5(\reg_rd_data[3]_i_11_n_0 ),
        .O(\sts_trig_pre_cnt_reg[3]_0 ));
  LUT6 #(
    .INIT(64'h000000F0CCEECCCC)) 
    \reg_rd_data[4]_i_3__0 
       (.I0(sts_trig_pre_cnt[4]),
        .I1(\reg_rd_data[4]_i_8__0_n_0 ),
        .I2(\reg_rd_data_reg[5] [4]),
        .I3(\reg_rd_data_reg[17]_0 ),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(\reg_rd_data_reg[17] ),
        .O(\sts_trig_pre_cnt_reg[4]_0 ));
  LUT5 #(
    .INIT(32'hAC0FAC00)) 
    \reg_rd_data[4]_i_8__0 
       (.I0(Q[4]),
        .I1(\reg_rd_data[31]_i_3__0 [4]),
        .I2(\reg_rd_data_reg[17]_1 ),
        .I3(\reg_rd_data_reg[17]_0 ),
        .I4(sts_trig_post_cnt[4]),
        .O(\reg_rd_data[4]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000F0CCEECCCC)) 
    \reg_rd_data[5]_i_3__0 
       (.I0(sts_trig_pre_cnt[5]),
        .I1(\reg_rd_data[5]_i_8__0_n_0 ),
        .I2(\reg_rd_data_reg[5] [5]),
        .I3(\reg_rd_data_reg[17]_0 ),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(\reg_rd_data_reg[17] ),
        .O(\sts_trig_pre_cnt_reg[5]_0 ));
  LUT5 #(
    .INIT(32'hAC0FAC00)) 
    \reg_rd_data[5]_i_8__0 
       (.I0(Q[5]),
        .I1(\reg_rd_data[31]_i_3__0 [5]),
        .I2(\reg_rd_data_reg[17]_1 ),
        .I3(\reg_rd_data_reg[17]_0 ),
        .I4(sts_trig_post_cnt[5]),
        .O(\reg_rd_data[5]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01550100)) 
    \reg_rd_data[6]_i_1__0 
       (.I0(\reg_rd_data_reg[17]_2 ),
        .I1(\reg_rd_data[6]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_3 ),
        .I4(\reg_rd_data_reg[6] ),
        .I5(\reg_rd_data_reg[6]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[6]_i_2__0 
       (.I0(Q[6]),
        .I1(\reg_rd_data[31]_i_3__0 [6]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[6]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[6]),
        .O(\reg_rd_data[6]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01550100)) 
    \reg_rd_data[7]_i_1__0 
       (.I0(\reg_rd_data_reg[17]_2 ),
        .I1(\reg_rd_data[7]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_3 ),
        .I4(\reg_rd_data_reg[7] ),
        .I5(\reg_rd_data_reg[7]_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[7]_i_2__0 
       (.I0(Q[7]),
        .I1(\reg_rd_data[31]_i_3__0 [7]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[7]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[7]),
        .O(\reg_rd_data[7]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[8]_i_4__0 
       (.I0(Q[8]),
        .I1(\reg_rd_data[31]_i_3__0 [8]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[8]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[8]),
        .O(\cfg_trig_pre_samp_reg[8] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01550100)) 
    \reg_rd_data[9]_i_1__0 
       (.I0(\reg_rd_data_reg[17]_2 ),
        .I1(\reg_rd_data[9]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_3 ),
        .I4(\reg_rd_data_reg[9] ),
        .I5(\reg_rd_data_reg[9]_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[9]_i_2__0 
       (.I0(Q[9]),
        .I1(\reg_rd_data[31]_i_3__0 [9]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[9]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[9]),
        .O(\reg_rd_data[9]_i_2__0_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns1_carry
       (.CI(1'b0),
        .CO({state_ns1_carry_n_0,state_ns1_carry_n_1,state_ns1_carry_n_2,state_ns1_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_state_ns1_carry_O_UNCONNECTED[3:0]),
        .S({state_ns1_carry_i_1__0_n_0,state_ns1_carry_i_2__0_n_0,state_ns1_carry_i_3__0_n_0,state_ns1_carry_i_4__0_n_0}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns1_carry__0
       (.CI(state_ns1_carry_n_0),
        .CO({state_ns1_carry__0_n_0,state_ns1_carry__0_n_1,state_ns1_carry__0_n_2,state_ns1_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_state_ns1_carry__0_O_UNCONNECTED[3:0]),
        .S({state_ns1_carry__0_i_1__0_n_0,state_ns1_carry__0_i_2__0_n_0,state_ns1_carry__0_i_3__0_n_0,state_ns1_carry__0_i_4__0_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry__0_i_1__0
       (.I0(state_ns20_in[23]),
        .I1(sts_trig_pre_cnt[23]),
        .I2(sts_trig_pre_cnt[21]),
        .I3(state_ns20_in[21]),
        .I4(sts_trig_pre_cnt[22]),
        .I5(state_ns20_in[22]),
        .O(state_ns1_carry__0_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry__0_i_2__0
       (.I0(state_ns20_in[20]),
        .I1(sts_trig_pre_cnt[20]),
        .I2(sts_trig_pre_cnt[18]),
        .I3(state_ns20_in[18]),
        .I4(sts_trig_pre_cnt[19]),
        .I5(state_ns20_in[19]),
        .O(state_ns1_carry__0_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry__0_i_3__0
       (.I0(state_ns20_in[17]),
        .I1(sts_trig_pre_cnt[17]),
        .I2(sts_trig_pre_cnt[16]),
        .I3(state_ns20_in[16]),
        .I4(sts_trig_pre_cnt[15]),
        .I5(state_ns20_in[15]),
        .O(state_ns1_carry__0_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry__0_i_4__0
       (.I0(state_ns20_in[14]),
        .I1(sts_trig_pre_cnt[14]),
        .I2(sts_trig_pre_cnt[12]),
        .I3(state_ns20_in[12]),
        .I4(sts_trig_pre_cnt[13]),
        .I5(state_ns20_in[13]),
        .O(state_ns1_carry__0_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns1_carry__1
       (.CI(state_ns1_carry__0_n_0),
        .CO({NLW_state_ns1_carry__1_CO_UNCONNECTED[3],state_ns11_out,state_ns1_carry__1_n_2,state_ns1_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_state_ns1_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,state_ns1_carry__1_i_1__0_n_0,state_ns1_carry__1_i_2__0_n_0,state_ns1_carry__1_i_3__0_n_0}));
  LUT4 #(
    .INIT(16'h9009)) 
    state_ns1_carry__1_i_1__0
       (.I0(state_ns20_in[31]),
        .I1(\sts_trig_pre_cnt_reg_n_0_[31] ),
        .I2(state_ns20_in[30]),
        .I3(sts_trig_pre_cnt[30]),
        .O(state_ns1_carry__1_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry__1_i_2__0
       (.I0(state_ns20_in[29]),
        .I1(sts_trig_pre_cnt[29]),
        .I2(sts_trig_pre_cnt[27]),
        .I3(state_ns20_in[27]),
        .I4(sts_trig_pre_cnt[28]),
        .I5(state_ns20_in[28]),
        .O(state_ns1_carry__1_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry__1_i_3__0
       (.I0(state_ns20_in[26]),
        .I1(sts_trig_pre_cnt[26]),
        .I2(sts_trig_pre_cnt[24]),
        .I3(state_ns20_in[24]),
        .I4(sts_trig_pre_cnt[25]),
        .I5(state_ns20_in[25]),
        .O(state_ns1_carry__1_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry_i_1__0
       (.I0(state_ns20_in[11]),
        .I1(sts_trig_pre_cnt[11]),
        .I2(sts_trig_pre_cnt[9]),
        .I3(state_ns20_in[9]),
        .I4(sts_trig_pre_cnt[10]),
        .I5(state_ns20_in[10]),
        .O(state_ns1_carry_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry_i_2__0
       (.I0(state_ns20_in[8]),
        .I1(sts_trig_pre_cnt[8]),
        .I2(sts_trig_pre_cnt[6]),
        .I3(state_ns20_in[6]),
        .I4(sts_trig_pre_cnt[7]),
        .I5(state_ns20_in[7]),
        .O(state_ns1_carry_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry_i_3__0
       (.I0(sts_trig_pre_cnt[4]),
        .I1(state_ns20_in[4]),
        .I2(sts_trig_pre_cnt[3]),
        .I3(state_ns20_in[3]),
        .I4(state_ns20_in[5]),
        .I5(sts_trig_pre_cnt[5]),
        .O(state_ns1_carry_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h6006000000006006)) 
    state_ns1_carry_i_4__0
       (.I0(Q[0]),
        .I1(sts_trig_pre_cnt[0]),
        .I2(sts_trig_pre_cnt[2]),
        .I3(state_ns20_in[2]),
        .I4(sts_trig_pre_cnt[1]),
        .I5(state_ns20_in[1]),
        .O(state_ns1_carry_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns1_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\state_ns1_inferred__0/i__carry_n_0 ,\state_ns1_inferred__0/i__carry_n_1 ,\state_ns1_inferred__0/i__carry_n_2 ,\state_ns1_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_state_ns1_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_1__9_n_0,i__carry_i_2__6_n_0,i__carry_i_3__6_n_0,i__carry_i_4__5_n_0}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns1_inferred__0/i__carry__0 
       (.CI(\state_ns1_inferred__0/i__carry_n_0 ),
        .CO({\state_ns1_inferred__0/i__carry__0_n_0 ,\state_ns1_inferred__0/i__carry__0_n_1 ,\state_ns1_inferred__0/i__carry__0_n_2 ,\state_ns1_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_state_ns1_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_1__6_n_0,i__carry__0_i_2__6_n_0,i__carry__0_i_3__6_n_0,i__carry__0_i_4__6_n_0}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns1_inferred__0/i__carry__1 
       (.CI(\state_ns1_inferred__0/i__carry__0_n_0 ),
        .CO({\NLW_state_ns1_inferred__0/i__carry__1_CO_UNCONNECTED [3],state_ns1,\state_ns1_inferred__0/i__carry__1_n_2 ,\state_ns1_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_state_ns1_inferred__0/i__carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,i__carry__1_i_1__6_n_0,i__carry__1_i_2__6_n_0,i__carry__1_i_3__6_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry
       (.CI(1'b0),
        .CO({state_ns2_carry_n_0,state_ns2_carry_n_1,state_ns2_carry_n_2,state_ns2_carry_n_3}),
        .CYINIT(Q[0]),
        .DI(Q[4:1]),
        .O(state_ns20_in[4:1]),
        .S({state_ns2_carry_i_1__0_n_0,state_ns2_carry_i_2__0_n_0,state_ns2_carry_i_3__0_n_0,state_ns2_carry_i_4__0_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry__0
       (.CI(state_ns2_carry_n_0),
        .CO({state_ns2_carry__0_n_0,state_ns2_carry__0_n_1,state_ns2_carry__0_n_2,state_ns2_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(Q[8:5]),
        .O(state_ns20_in[8:5]),
        .S({state_ns2_carry__0_i_1__0_n_0,state_ns2_carry__0_i_2__0_n_0,state_ns2_carry__0_i_3__0_n_0,state_ns2_carry__0_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__0_i_1__0
       (.I0(Q[8]),
        .O(state_ns2_carry__0_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__0_i_2__0
       (.I0(Q[7]),
        .O(state_ns2_carry__0_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__0_i_3__0
       (.I0(Q[6]),
        .O(state_ns2_carry__0_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__0_i_4__0
       (.I0(Q[5]),
        .O(state_ns2_carry__0_i_4__0_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry__1
       (.CI(state_ns2_carry__0_n_0),
        .CO({state_ns2_carry__1_n_0,state_ns2_carry__1_n_1,state_ns2_carry__1_n_2,state_ns2_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI(Q[12:9]),
        .O(state_ns20_in[12:9]),
        .S({state_ns2_carry__1_i_1__0_n_0,state_ns2_carry__1_i_2__0_n_0,state_ns2_carry__1_i_3__0_n_0,state_ns2_carry__1_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__1_i_1__0
       (.I0(Q[12]),
        .O(state_ns2_carry__1_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__1_i_2__0
       (.I0(Q[11]),
        .O(state_ns2_carry__1_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__1_i_3__0
       (.I0(Q[10]),
        .O(state_ns2_carry__1_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__1_i_4__0
       (.I0(Q[9]),
        .O(state_ns2_carry__1_i_4__0_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry__2
       (.CI(state_ns2_carry__1_n_0),
        .CO({state_ns2_carry__2_n_0,state_ns2_carry__2_n_1,state_ns2_carry__2_n_2,state_ns2_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI(Q[16:13]),
        .O(state_ns20_in[16:13]),
        .S({state_ns2_carry__2_i_1__0_n_0,state_ns2_carry__2_i_2__0_n_0,state_ns2_carry__2_i_3__0_n_0,state_ns2_carry__2_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__2_i_1__0
       (.I0(Q[16]),
        .O(state_ns2_carry__2_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__2_i_2__0
       (.I0(Q[15]),
        .O(state_ns2_carry__2_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__2_i_3__0
       (.I0(Q[14]),
        .O(state_ns2_carry__2_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__2_i_4__0
       (.I0(Q[13]),
        .O(state_ns2_carry__2_i_4__0_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry__3
       (.CI(state_ns2_carry__2_n_0),
        .CO({state_ns2_carry__3_n_0,state_ns2_carry__3_n_1,state_ns2_carry__3_n_2,state_ns2_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI(Q[20:17]),
        .O(state_ns20_in[20:17]),
        .S({state_ns2_carry__3_i_1__0_n_0,state_ns2_carry__3_i_2__0_n_0,state_ns2_carry__3_i_3__0_n_0,state_ns2_carry__3_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__3_i_1__0
       (.I0(Q[20]),
        .O(state_ns2_carry__3_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__3_i_2__0
       (.I0(Q[19]),
        .O(state_ns2_carry__3_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__3_i_3__0
       (.I0(Q[18]),
        .O(state_ns2_carry__3_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__3_i_4__0
       (.I0(Q[17]),
        .O(state_ns2_carry__3_i_4__0_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry__4
       (.CI(state_ns2_carry__3_n_0),
        .CO({state_ns2_carry__4_n_0,state_ns2_carry__4_n_1,state_ns2_carry__4_n_2,state_ns2_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI(Q[24:21]),
        .O(state_ns20_in[24:21]),
        .S({state_ns2_carry__4_i_1__0_n_0,state_ns2_carry__4_i_2__0_n_0,state_ns2_carry__4_i_3__0_n_0,state_ns2_carry__4_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__4_i_1__0
       (.I0(Q[24]),
        .O(state_ns2_carry__4_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__4_i_2__0
       (.I0(Q[23]),
        .O(state_ns2_carry__4_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__4_i_3__0
       (.I0(Q[22]),
        .O(state_ns2_carry__4_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__4_i_4__0
       (.I0(Q[21]),
        .O(state_ns2_carry__4_i_4__0_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry__5
       (.CI(state_ns2_carry__4_n_0),
        .CO({state_ns2_carry__5_n_0,state_ns2_carry__5_n_1,state_ns2_carry__5_n_2,state_ns2_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI(Q[28:25]),
        .O(state_ns20_in[28:25]),
        .S({state_ns2_carry__5_i_1__0_n_0,state_ns2_carry__5_i_2__0_n_0,state_ns2_carry__5_i_3__0_n_0,state_ns2_carry__5_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__5_i_1__0
       (.I0(Q[28]),
        .O(state_ns2_carry__5_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__5_i_2__0
       (.I0(Q[27]),
        .O(state_ns2_carry__5_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__5_i_3__0
       (.I0(Q[26]),
        .O(state_ns2_carry__5_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__5_i_4__0
       (.I0(Q[25]),
        .O(state_ns2_carry__5_i_4__0_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry__6
       (.CI(state_ns2_carry__5_n_0),
        .CO({NLW_state_ns2_carry__6_CO_UNCONNECTED[3:2],state_ns2_carry__6_n_2,state_ns2_carry__6_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,Q[30:29]}),
        .O({NLW_state_ns2_carry__6_O_UNCONNECTED[3],state_ns20_in[31:29]}),
        .S({1'b0,state_ns2_carry__6_i_1__0_n_0,state_ns2_carry__6_i_2__0_n_0,state_ns2_carry__6_i_3__0_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__6_i_1__0
       (.I0(Q[31]),
        .O(state_ns2_carry__6_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__6_i_2__0
       (.I0(Q[30]),
        .O(state_ns2_carry__6_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__6_i_3__0
       (.I0(Q[29]),
        .O(state_ns2_carry__6_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry_i_1__0
       (.I0(Q[4]),
        .O(state_ns2_carry_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry_i_2__0
       (.I0(Q[3]),
        .O(state_ns2_carry_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry_i_3__0
       (.I0(Q[2]),
        .O(state_ns2_carry_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry_i_4__0
       (.I0(Q[1]),
        .O(state_ns2_carry_i_4__0_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\state_ns2_inferred__0/i__carry_n_0 ,\state_ns2_inferred__0/i__carry_n_1 ,\state_ns2_inferred__0/i__carry_n_2 ,\state_ns2_inferred__0/i__carry_n_3 }),
        .CYINIT(\reg_rd_data[31]_i_3__0 [0]),
        .DI(\reg_rd_data[31]_i_3__0 [4:1]),
        .O(state_ns2[4:1]),
        .S({i__carry_i_1__8_n_0,i__carry_i_2__5_n_0,i__carry_i_3__5_n_0,i__carry_i_4__4_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry__0 
       (.CI(\state_ns2_inferred__0/i__carry_n_0 ),
        .CO({\state_ns2_inferred__0/i__carry__0_n_0 ,\state_ns2_inferred__0/i__carry__0_n_1 ,\state_ns2_inferred__0/i__carry__0_n_2 ,\state_ns2_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_rd_data[31]_i_3__0 [8:5]),
        .O(state_ns2[8:5]),
        .S({i__carry__0_i_1__5_n_0,i__carry__0_i_2__5_n_0,i__carry__0_i_3__5_n_0,i__carry__0_i_4__5_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry__1 
       (.CI(\state_ns2_inferred__0/i__carry__0_n_0 ),
        .CO({\state_ns2_inferred__0/i__carry__1_n_0 ,\state_ns2_inferred__0/i__carry__1_n_1 ,\state_ns2_inferred__0/i__carry__1_n_2 ,\state_ns2_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_rd_data[31]_i_3__0 [12:9]),
        .O(state_ns2[12:9]),
        .S({i__carry__1_i_1__5_n_0,i__carry__1_i_2__5_n_0,i__carry__1_i_3__5_n_0,i__carry__1_i_4__4_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry__2 
       (.CI(\state_ns2_inferred__0/i__carry__1_n_0 ),
        .CO({\state_ns2_inferred__0/i__carry__2_n_0 ,\state_ns2_inferred__0/i__carry__2_n_1 ,\state_ns2_inferred__0/i__carry__2_n_2 ,\state_ns2_inferred__0/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_rd_data[31]_i_3__0 [16:13]),
        .O(state_ns2[16:13]),
        .S({i__carry__2_i_1__4_n_0,i__carry__2_i_2__4_n_0,i__carry__2_i_3__3_n_0,i__carry__2_i_4__3_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry__3 
       (.CI(\state_ns2_inferred__0/i__carry__2_n_0 ),
        .CO({\state_ns2_inferred__0/i__carry__3_n_0 ,\state_ns2_inferred__0/i__carry__3_n_1 ,\state_ns2_inferred__0/i__carry__3_n_2 ,\state_ns2_inferred__0/i__carry__3_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_rd_data[31]_i_3__0 [20:17]),
        .O(state_ns2[20:17]),
        .S({i__carry__3_i_1__0_n_0,i__carry__3_i_2__0_n_0,i__carry__3_i_3__3_n_0,i__carry__3_i_4__1_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry__4 
       (.CI(\state_ns2_inferred__0/i__carry__3_n_0 ),
        .CO({\state_ns2_inferred__0/i__carry__4_n_0 ,\state_ns2_inferred__0/i__carry__4_n_1 ,\state_ns2_inferred__0/i__carry__4_n_2 ,\state_ns2_inferred__0/i__carry__4_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_rd_data[31]_i_3__0 [24:21]),
        .O(state_ns2[24:21]),
        .S({i__carry__4_i_1__0_n_0,i__carry__4_i_2__0_n_0,i__carry__4_i_3__0_n_0,i__carry__4_i_4__0_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry__5 
       (.CI(\state_ns2_inferred__0/i__carry__4_n_0 ),
        .CO({\state_ns2_inferred__0/i__carry__5_n_0 ,\state_ns2_inferred__0/i__carry__5_n_1 ,\state_ns2_inferred__0/i__carry__5_n_2 ,\state_ns2_inferred__0/i__carry__5_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_rd_data[31]_i_3__0 [28:25]),
        .O(state_ns2[28:25]),
        .S({i__carry__5_i_1__0_n_0,i__carry__5_i_2__0_n_0,i__carry__5_i_3__0_n_0,i__carry__5_i_4__0_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry__6 
       (.CI(\state_ns2_inferred__0/i__carry__5_n_0 ),
        .CO({\NLW_state_ns2_inferred__0/i__carry__6_CO_UNCONNECTED [3:2],\state_ns2_inferred__0/i__carry__6_n_2 ,\state_ns2_inferred__0/i__carry__6_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\reg_rd_data[31]_i_3__0 [30:29]}),
        .O({\NLW_state_ns2_inferred__0/i__carry__6_O_UNCONNECTED [3],state_ns2[31:29]}),
        .S({1'b0,i__carry__6_i_1__0_n_0,i__carry__6_i_2__0_n_0,i__carry__6_i_3__0_n_0}));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sts_acquire_i_11__0
       (.I0(Q[5]),
        .I1(Q[12]),
        .I2(Q[10]),
        .I3(Q[13]),
        .O(sts_acquire_i_11__0_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sts_acquire_i_12__0
       (.I0(Q[16]),
        .I1(Q[20]),
        .I2(Q[3]),
        .I3(Q[30]),
        .O(sts_acquire_i_12__0_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    sts_acquire_i_13__0
       (.I0(Q[22]),
        .I1(Q[6]),
        .I2(Q[28]),
        .I3(Q[2]),
        .I4(sts_acquire_i_14__0_n_0),
        .O(sts_acquire_i_13__0_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sts_acquire_i_14__0
       (.I0(Q[4]),
        .I1(Q[27]),
        .I2(Q[0]),
        .I3(Q[11]),
        .O(sts_acquire_i_14__0_n_0));
  LUT6 #(
    .INIT(64'h00000000EAFFEAEA)) 
    sts_acquire_i_1__0
       (.I0(sts_acquire_reg_0),
        .I1(sts_acquire_i_2__0_n_0),
        .I2(event_num_trig_reg),
        .I3(sts_acquire_reg_1),
        .I4(event_num_start),
        .I5(sts_acquire),
        .O(sts_acquire_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT3 #(
    .INIT(8'h40)) 
    sts_acquire_i_2__0
       (.I0(\FSM_sequential_state_cs_reg[2]_0 ),
        .I1(\FSM_sequential_state_cs_reg[1]_0 ),
        .I2(\FSM_sequential_state_cs_reg[0]_0 ),
        .O(sts_acquire_i_2__0_n_0));
  LUT5 #(
    .INIT(32'hFFFFFEEE)) 
    sts_acquire_i_3__0
       (.I0(sts_acquire_i_6__0_n_0),
        .I1(event_num_trig),
        .I2(\reg_rd_data_reg[5] [5]),
        .I3(trig_ip[5]),
        .I4(sts_acquire_i_7__0_n_0),
        .O(event_num_trig_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFF00002000)) 
    sts_acquire_i_5__0
       (.I0(trig_tvalid),
        .I1(\FSM_sequential_state_cs_reg[0]_0 ),
        .I2(state_ns1),
        .I3(\FSM_sequential_state_cs_reg[1]_0 ),
        .I4(\FSM_sequential_state_cs_reg[2]_0 ),
        .I5(\FSM_sequential_state_cs[2]_i_4__0_n_0 ),
        .O(sts_acquire));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    sts_acquire_i_6__0
       (.I0(trig_ip[4]),
        .I1(\reg_rd_data_reg[5] [4]),
        .I2(\reg_rd_data_reg[5] [2]),
        .I3(trig_ip[2]),
        .I4(\reg_rd_data_reg[5] [3]),
        .I5(trig_ip[3]),
        .O(sts_acquire_i_6__0_n_0));
  LUT4 #(
    .INIT(16'hF888)) 
    sts_acquire_i_7__0
       (.I0(trig_ip[0]),
        .I1(\reg_rd_data_reg[5] [0]),
        .I2(trig_ip[1]),
        .I3(\reg_rd_data_reg[5] [1]),
        .O(sts_acquire_i_7__0_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    sts_acquire_i_8__0
       (.I0(Q[23]),
        .I1(Q[9]),
        .I2(Q[21]),
        .I3(Q[15]),
        .I4(sts_acquire_i_11__0_n_0),
        .O(\cfg_trig_pre_samp_reg[23]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    sts_acquire_i_9__0
       (.I0(sts_acquire_i_12__0_n_0),
        .I1(Q[17]),
        .I2(Q[19]),
        .I3(Q[8]),
        .I4(Q[26]),
        .I5(sts_acquire_i_13__0_n_0),
        .O(\cfg_trig_pre_samp_reg[17] ));
  FDRE sts_acquire_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(sts_acquire_i_1__0_n_0),
        .Q(sts_acquire_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'h00000E00)) 
    sts_start_i_1__0
       (.I0(p_20_in),
        .I1(event_num_start),
        .I2(event_num_stop),
        .I3(m_axi_osc2_aresetn),
        .I4(sts_start_i_2__0_n_0),
        .O(sts_start_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    sts_start_i_2__0
       (.I0(\FSM_sequential_state_cs_reg[2]_0 ),
        .I1(\FSM_sequential_state_cs_reg[1]_0 ),
        .I2(state_ns1),
        .I3(\FSM_sequential_state_cs_reg[0]_0 ),
        .I4(trig_tvalid),
        .O(sts_start_i_2__0_n_0));
  FDRE sts_start_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(sts_start_i_1__0_n_0),
        .Q(p_20_in),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0040)) 
    \sts_trig_post_cnt[0]_i_1__0 
       (.I0(\FSM_sequential_state_cs_reg[2]_0 ),
        .I1(\FSM_sequential_state_cs_reg[1]_0 ),
        .I2(trig_tvalid),
        .I3(\FSM_sequential_state_cs_reg[0]_0 ),
        .O(sts_trig_post_cnt0));
  LUT1 #(
    .INIT(2'h1)) 
    \sts_trig_post_cnt[0]_i_3__0 
       (.I0(sts_trig_post_cnt[0]),
        .O(\sts_trig_post_cnt[0]_i_3__0_n_0 ));
  FDRE \sts_trig_post_cnt_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[0]_i_2__0_n_7 ),
        .Q(sts_trig_post_cnt[0]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[0]_i_2__0 
       (.CI(1'b0),
        .CO({\sts_trig_post_cnt_reg[0]_i_2__0_n_0 ,\sts_trig_post_cnt_reg[0]_i_2__0_n_1 ,\sts_trig_post_cnt_reg[0]_i_2__0_n_2 ,\sts_trig_post_cnt_reg[0]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\sts_trig_post_cnt_reg[0]_i_2__0_n_4 ,\sts_trig_post_cnt_reg[0]_i_2__0_n_5 ,\sts_trig_post_cnt_reg[0]_i_2__0_n_6 ,\sts_trig_post_cnt_reg[0]_i_2__0_n_7 }),
        .S({sts_trig_post_cnt[3:1],\sts_trig_post_cnt[0]_i_3__0_n_0 }));
  FDRE \sts_trig_post_cnt_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[8]_i_1__0_n_5 ),
        .Q(sts_trig_post_cnt[10]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[8]_i_1__0_n_4 ),
        .Q(sts_trig_post_cnt[11]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[12]_i_1__0_n_7 ),
        .Q(sts_trig_post_cnt[12]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[12]_i_1__0 
       (.CI(\sts_trig_post_cnt_reg[8]_i_1__0_n_0 ),
        .CO({\sts_trig_post_cnt_reg[12]_i_1__0_n_0 ,\sts_trig_post_cnt_reg[12]_i_1__0_n_1 ,\sts_trig_post_cnt_reg[12]_i_1__0_n_2 ,\sts_trig_post_cnt_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_post_cnt_reg[12]_i_1__0_n_4 ,\sts_trig_post_cnt_reg[12]_i_1__0_n_5 ,\sts_trig_post_cnt_reg[12]_i_1__0_n_6 ,\sts_trig_post_cnt_reg[12]_i_1__0_n_7 }),
        .S(sts_trig_post_cnt[15:12]));
  FDRE \sts_trig_post_cnt_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[12]_i_1__0_n_6 ),
        .Q(sts_trig_post_cnt[13]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[12]_i_1__0_n_5 ),
        .Q(sts_trig_post_cnt[14]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[12]_i_1__0_n_4 ),
        .Q(sts_trig_post_cnt[15]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[16]_i_1__0_n_7 ),
        .Q(sts_trig_post_cnt[16]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[16]_i_1__0 
       (.CI(\sts_trig_post_cnt_reg[12]_i_1__0_n_0 ),
        .CO({\sts_trig_post_cnt_reg[16]_i_1__0_n_0 ,\sts_trig_post_cnt_reg[16]_i_1__0_n_1 ,\sts_trig_post_cnt_reg[16]_i_1__0_n_2 ,\sts_trig_post_cnt_reg[16]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_post_cnt_reg[16]_i_1__0_n_4 ,\sts_trig_post_cnt_reg[16]_i_1__0_n_5 ,\sts_trig_post_cnt_reg[16]_i_1__0_n_6 ,\sts_trig_post_cnt_reg[16]_i_1__0_n_7 }),
        .S(sts_trig_post_cnt[19:16]));
  FDRE \sts_trig_post_cnt_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[16]_i_1__0_n_6 ),
        .Q(sts_trig_post_cnt[17]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[16]_i_1__0_n_5 ),
        .Q(sts_trig_post_cnt[18]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[16]_i_1__0_n_4 ),
        .Q(sts_trig_post_cnt[19]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[0]_i_2__0_n_6 ),
        .Q(sts_trig_post_cnt[1]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[20]_i_1__0_n_7 ),
        .Q(sts_trig_post_cnt[20]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[20]_i_1__0 
       (.CI(\sts_trig_post_cnt_reg[16]_i_1__0_n_0 ),
        .CO({\sts_trig_post_cnt_reg[20]_i_1__0_n_0 ,\sts_trig_post_cnt_reg[20]_i_1__0_n_1 ,\sts_trig_post_cnt_reg[20]_i_1__0_n_2 ,\sts_trig_post_cnt_reg[20]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_post_cnt_reg[20]_i_1__0_n_4 ,\sts_trig_post_cnt_reg[20]_i_1__0_n_5 ,\sts_trig_post_cnt_reg[20]_i_1__0_n_6 ,\sts_trig_post_cnt_reg[20]_i_1__0_n_7 }),
        .S(sts_trig_post_cnt[23:20]));
  FDRE \sts_trig_post_cnt_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[20]_i_1__0_n_6 ),
        .Q(sts_trig_post_cnt[21]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[20]_i_1__0_n_5 ),
        .Q(sts_trig_post_cnt[22]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[20]_i_1__0_n_4 ),
        .Q(sts_trig_post_cnt[23]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[24]_i_1__0_n_7 ),
        .Q(sts_trig_post_cnt[24]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[24]_i_1__0 
       (.CI(\sts_trig_post_cnt_reg[20]_i_1__0_n_0 ),
        .CO({\sts_trig_post_cnt_reg[24]_i_1__0_n_0 ,\sts_trig_post_cnt_reg[24]_i_1__0_n_1 ,\sts_trig_post_cnt_reg[24]_i_1__0_n_2 ,\sts_trig_post_cnt_reg[24]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_post_cnt_reg[24]_i_1__0_n_4 ,\sts_trig_post_cnt_reg[24]_i_1__0_n_5 ,\sts_trig_post_cnt_reg[24]_i_1__0_n_6 ,\sts_trig_post_cnt_reg[24]_i_1__0_n_7 }),
        .S(sts_trig_post_cnt[27:24]));
  FDRE \sts_trig_post_cnt_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[24]_i_1__0_n_6 ),
        .Q(sts_trig_post_cnt[25]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[24]_i_1__0_n_5 ),
        .Q(sts_trig_post_cnt[26]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[24]_i_1__0_n_4 ),
        .Q(sts_trig_post_cnt[27]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[28]_i_1__0_n_7 ),
        .Q(sts_trig_post_cnt[28]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[28]_i_1__0 
       (.CI(\sts_trig_post_cnt_reg[24]_i_1__0_n_0 ),
        .CO({\NLW_sts_trig_post_cnt_reg[28]_i_1__0_CO_UNCONNECTED [3],\sts_trig_post_cnt_reg[28]_i_1__0_n_1 ,\sts_trig_post_cnt_reg[28]_i_1__0_n_2 ,\sts_trig_post_cnt_reg[28]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_post_cnt_reg[28]_i_1__0_n_4 ,\sts_trig_post_cnt_reg[28]_i_1__0_n_5 ,\sts_trig_post_cnt_reg[28]_i_1__0_n_6 ,\sts_trig_post_cnt_reg[28]_i_1__0_n_7 }),
        .S({\sts_trig_post_cnt_reg_n_0_[31] ,sts_trig_post_cnt[30:28]}));
  FDRE \sts_trig_post_cnt_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[28]_i_1__0_n_6 ),
        .Q(sts_trig_post_cnt[29]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[0]_i_2__0_n_5 ),
        .Q(sts_trig_post_cnt[2]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[28]_i_1__0_n_5 ),
        .Q(sts_trig_post_cnt[30]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[28]_i_1__0_n_4 ),
        .Q(\sts_trig_post_cnt_reg_n_0_[31] ),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[0]_i_2__0_n_4 ),
        .Q(sts_trig_post_cnt[3]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[4]_i_1__0_n_7 ),
        .Q(sts_trig_post_cnt[4]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[4]_i_1__0 
       (.CI(\sts_trig_post_cnt_reg[0]_i_2__0_n_0 ),
        .CO({\sts_trig_post_cnt_reg[4]_i_1__0_n_0 ,\sts_trig_post_cnt_reg[4]_i_1__0_n_1 ,\sts_trig_post_cnt_reg[4]_i_1__0_n_2 ,\sts_trig_post_cnt_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_post_cnt_reg[4]_i_1__0_n_4 ,\sts_trig_post_cnt_reg[4]_i_1__0_n_5 ,\sts_trig_post_cnt_reg[4]_i_1__0_n_6 ,\sts_trig_post_cnt_reg[4]_i_1__0_n_7 }),
        .S(sts_trig_post_cnt[7:4]));
  FDRE \sts_trig_post_cnt_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[4]_i_1__0_n_6 ),
        .Q(sts_trig_post_cnt[5]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[4]_i_1__0_n_5 ),
        .Q(sts_trig_post_cnt[6]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[4]_i_1__0_n_4 ),
        .Q(sts_trig_post_cnt[7]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[8]_i_1__0_n_7 ),
        .Q(sts_trig_post_cnt[8]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[8]_i_1__0 
       (.CI(\sts_trig_post_cnt_reg[4]_i_1__0_n_0 ),
        .CO({\sts_trig_post_cnt_reg[8]_i_1__0_n_0 ,\sts_trig_post_cnt_reg[8]_i_1__0_n_1 ,\sts_trig_post_cnt_reg[8]_i_1__0_n_2 ,\sts_trig_post_cnt_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_post_cnt_reg[8]_i_1__0_n_4 ,\sts_trig_post_cnt_reg[8]_i_1__0_n_5 ,\sts_trig_post_cnt_reg[8]_i_1__0_n_6 ,\sts_trig_post_cnt_reg[8]_i_1__0_n_7 }),
        .S(sts_trig_post_cnt[11:8]));
  FDRE \sts_trig_post_cnt_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[8]_i_1__0_n_6 ),
        .Q(sts_trig_post_cnt[9]),
        .R(event_num_reset_reg));
  LUT5 #(
    .INIT(32'hFFFF0100)) 
    sts_trig_post_overflow_i_1__0
       (.I0(sts_trig_post_overflow_i_2__0_n_0),
        .I1(sts_trig_post_overflow_i_3__0_n_0),
        .I2(sts_trig_post_overflow_i_4__0_n_0),
        .I3(sts_trig_post_overflow_i_5__0_n_0),
        .I4(sts_trig_post_overflow),
        .O(sts_trig_post_overflow_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    sts_trig_post_overflow_i_2__0
       (.I0(sts_trig_post_cnt[20]),
        .I1(sts_trig_post_cnt[9]),
        .I2(sts_trig_post_cnt[0]),
        .I3(sts_trig_post_cnt[6]),
        .I4(sts_trig_post_cnt[13]),
        .I5(sts_trig_post_cnt[14]),
        .O(sts_trig_post_overflow_i_2__0_n_0));
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    sts_trig_post_overflow_i_3__0
       (.I0(sts_trig_post_overflow),
        .I1(sts_trig_post_cnt[8]),
        .I2(sts_trig_post_cnt[11]),
        .I3(sts_trig_post_cnt[22]),
        .I4(sts_trig_post_overflow_i_6__0_n_0),
        .O(sts_trig_post_overflow_i_3__0_n_0));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    sts_trig_post_overflow_i_4__0
       (.I0(sts_trig_post_cnt[2]),
        .I1(sts_trig_post_cnt[29]),
        .I2(sts_trig_post_cnt[4]),
        .I3(sts_trig_post_cnt[15]),
        .I4(sts_trig_post_overflow_i_7__0_n_0),
        .O(sts_trig_post_overflow_i_4__0_n_0));
  LUT5 #(
    .INIT(32'h00000080)) 
    sts_trig_post_overflow_i_5__0
       (.I0(sts_trig_post_cnt[3]),
        .I1(sts_trig_post_cnt[19]),
        .I2(sts_trig_post_cnt[18]),
        .I3(sts_trig_post_overflow_i_8__0_n_0),
        .I4(sts_trig_post_overflow_i_9__0_n_0),
        .O(sts_trig_post_overflow_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    sts_trig_post_overflow_i_6__0
       (.I0(sts_trig_post_cnt[23]),
        .I1(sts_trig_post_cnt[10]),
        .I2(sts_trig_post_cnt[25]),
        .I3(sts_trig_post_cnt[7]),
        .O(sts_trig_post_overflow_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    sts_trig_post_overflow_i_7__0
       (.I0(\sts_trig_post_cnt_reg_n_0_[31] ),
        .I1(sts_trig_post_cnt[30]),
        .I2(sts_trig_post_cnt[24]),
        .I3(sts_trig_post_cnt[17]),
        .O(sts_trig_post_overflow_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    sts_trig_post_overflow_i_8__0
       (.I0(sts_trig_post_cnt[26]),
        .I1(sts_trig_post_cnt[12]),
        .I2(sts_trig_post_cnt[28]),
        .I3(sts_trig_post_cnt[16]),
        .O(sts_trig_post_overflow_i_8__0_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    sts_trig_post_overflow_i_9__0
       (.I0(sts_trig_post_cnt[27]),
        .I1(sts_trig_post_cnt[1]),
        .I2(sts_trig_post_cnt[21]),
        .I3(sts_trig_post_cnt[5]),
        .O(sts_trig_post_overflow_i_9__0_n_0));
  FDRE sts_trig_post_overflow_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(sts_trig_post_overflow_i_1__0_n_0),
        .Q(sts_trig_post_overflow),
        .R(event_num_reset_reg));
  LUT3 #(
    .INIT(8'h08)) 
    \sts_trig_pre_cnt[0]_i_1__0 
       (.I0(trig_tvalid),
        .I1(\FSM_sequential_state_cs_reg[2]_0 ),
        .I2(\FSM_sequential_state_cs_reg[1]_0 ),
        .O(sts_trig_pre_cnt0));
  LUT1 #(
    .INIT(2'h1)) 
    \sts_trig_pre_cnt[0]_i_3__0 
       (.I0(sts_trig_pre_cnt[0]),
        .O(\sts_trig_pre_cnt[0]_i_3__0_n_0 ));
  FDRE \sts_trig_pre_cnt_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[0]_i_2__0_n_7 ),
        .Q(sts_trig_pre_cnt[0]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[0]_i_2__0 
       (.CI(1'b0),
        .CO({\sts_trig_pre_cnt_reg[0]_i_2__0_n_0 ,\sts_trig_pre_cnt_reg[0]_i_2__0_n_1 ,\sts_trig_pre_cnt_reg[0]_i_2__0_n_2 ,\sts_trig_pre_cnt_reg[0]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\sts_trig_pre_cnt_reg[0]_i_2__0_n_4 ,\sts_trig_pre_cnt_reg[0]_i_2__0_n_5 ,\sts_trig_pre_cnt_reg[0]_i_2__0_n_6 ,\sts_trig_pre_cnt_reg[0]_i_2__0_n_7 }),
        .S({sts_trig_pre_cnt[3:1],\sts_trig_pre_cnt[0]_i_3__0_n_0 }));
  FDRE \sts_trig_pre_cnt_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[8]_i_1__0_n_5 ),
        .Q(sts_trig_pre_cnt[10]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[8]_i_1__0_n_4 ),
        .Q(sts_trig_pre_cnt[11]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[12]_i_1__0_n_7 ),
        .Q(sts_trig_pre_cnt[12]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[12]_i_1__0 
       (.CI(\sts_trig_pre_cnt_reg[8]_i_1__0_n_0 ),
        .CO({\sts_trig_pre_cnt_reg[12]_i_1__0_n_0 ,\sts_trig_pre_cnt_reg[12]_i_1__0_n_1 ,\sts_trig_pre_cnt_reg[12]_i_1__0_n_2 ,\sts_trig_pre_cnt_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_pre_cnt_reg[12]_i_1__0_n_4 ,\sts_trig_pre_cnt_reg[12]_i_1__0_n_5 ,\sts_trig_pre_cnt_reg[12]_i_1__0_n_6 ,\sts_trig_pre_cnt_reg[12]_i_1__0_n_7 }),
        .S(sts_trig_pre_cnt[15:12]));
  FDRE \sts_trig_pre_cnt_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[12]_i_1__0_n_6 ),
        .Q(sts_trig_pre_cnt[13]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[12]_i_1__0_n_5 ),
        .Q(sts_trig_pre_cnt[14]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[12]_i_1__0_n_4 ),
        .Q(sts_trig_pre_cnt[15]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[16]_i_1__0_n_7 ),
        .Q(sts_trig_pre_cnt[16]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[16]_i_1__0 
       (.CI(\sts_trig_pre_cnt_reg[12]_i_1__0_n_0 ),
        .CO({\sts_trig_pre_cnt_reg[16]_i_1__0_n_0 ,\sts_trig_pre_cnt_reg[16]_i_1__0_n_1 ,\sts_trig_pre_cnt_reg[16]_i_1__0_n_2 ,\sts_trig_pre_cnt_reg[16]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_pre_cnt_reg[16]_i_1__0_n_4 ,\sts_trig_pre_cnt_reg[16]_i_1__0_n_5 ,\sts_trig_pre_cnt_reg[16]_i_1__0_n_6 ,\sts_trig_pre_cnt_reg[16]_i_1__0_n_7 }),
        .S(sts_trig_pre_cnt[19:16]));
  FDRE \sts_trig_pre_cnt_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[16]_i_1__0_n_6 ),
        .Q(sts_trig_pre_cnt[17]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[16]_i_1__0_n_5 ),
        .Q(sts_trig_pre_cnt[18]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[16]_i_1__0_n_4 ),
        .Q(sts_trig_pre_cnt[19]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[0]_i_2__0_n_6 ),
        .Q(sts_trig_pre_cnt[1]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[20]_i_1__0_n_7 ),
        .Q(sts_trig_pre_cnt[20]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[20]_i_1__0 
       (.CI(\sts_trig_pre_cnt_reg[16]_i_1__0_n_0 ),
        .CO({\sts_trig_pre_cnt_reg[20]_i_1__0_n_0 ,\sts_trig_pre_cnt_reg[20]_i_1__0_n_1 ,\sts_trig_pre_cnt_reg[20]_i_1__0_n_2 ,\sts_trig_pre_cnt_reg[20]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_pre_cnt_reg[20]_i_1__0_n_4 ,\sts_trig_pre_cnt_reg[20]_i_1__0_n_5 ,\sts_trig_pre_cnt_reg[20]_i_1__0_n_6 ,\sts_trig_pre_cnt_reg[20]_i_1__0_n_7 }),
        .S(sts_trig_pre_cnt[23:20]));
  FDRE \sts_trig_pre_cnt_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[20]_i_1__0_n_6 ),
        .Q(sts_trig_pre_cnt[21]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[20]_i_1__0_n_5 ),
        .Q(sts_trig_pre_cnt[22]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[20]_i_1__0_n_4 ),
        .Q(sts_trig_pre_cnt[23]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[24]_i_1__0_n_7 ),
        .Q(sts_trig_pre_cnt[24]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[24]_i_1__0 
       (.CI(\sts_trig_pre_cnt_reg[20]_i_1__0_n_0 ),
        .CO({\sts_trig_pre_cnt_reg[24]_i_1__0_n_0 ,\sts_trig_pre_cnt_reg[24]_i_1__0_n_1 ,\sts_trig_pre_cnt_reg[24]_i_1__0_n_2 ,\sts_trig_pre_cnt_reg[24]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_pre_cnt_reg[24]_i_1__0_n_4 ,\sts_trig_pre_cnt_reg[24]_i_1__0_n_5 ,\sts_trig_pre_cnt_reg[24]_i_1__0_n_6 ,\sts_trig_pre_cnt_reg[24]_i_1__0_n_7 }),
        .S(sts_trig_pre_cnt[27:24]));
  FDRE \sts_trig_pre_cnt_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[24]_i_1__0_n_6 ),
        .Q(sts_trig_pre_cnt[25]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[24]_i_1__0_n_5 ),
        .Q(sts_trig_pre_cnt[26]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[24]_i_1__0_n_4 ),
        .Q(sts_trig_pre_cnt[27]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[28]_i_1__0_n_7 ),
        .Q(sts_trig_pre_cnt[28]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[28]_i_1__0 
       (.CI(\sts_trig_pre_cnt_reg[24]_i_1__0_n_0 ),
        .CO({\NLW_sts_trig_pre_cnt_reg[28]_i_1__0_CO_UNCONNECTED [3],\sts_trig_pre_cnt_reg[28]_i_1__0_n_1 ,\sts_trig_pre_cnt_reg[28]_i_1__0_n_2 ,\sts_trig_pre_cnt_reg[28]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_pre_cnt_reg[28]_i_1__0_n_4 ,\sts_trig_pre_cnt_reg[28]_i_1__0_n_5 ,\sts_trig_pre_cnt_reg[28]_i_1__0_n_6 ,\sts_trig_pre_cnt_reg[28]_i_1__0_n_7 }),
        .S({\sts_trig_pre_cnt_reg_n_0_[31] ,sts_trig_pre_cnt[30:28]}));
  FDRE \sts_trig_pre_cnt_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[28]_i_1__0_n_6 ),
        .Q(sts_trig_pre_cnt[29]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[0]_i_2__0_n_5 ),
        .Q(sts_trig_pre_cnt[2]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[28]_i_1__0_n_5 ),
        .Q(sts_trig_pre_cnt[30]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[28]_i_1__0_n_4 ),
        .Q(\sts_trig_pre_cnt_reg_n_0_[31] ),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[0]_i_2__0_n_4 ),
        .Q(sts_trig_pre_cnt[3]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[4]_i_1__0_n_7 ),
        .Q(sts_trig_pre_cnt[4]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[4]_i_1__0 
       (.CI(\sts_trig_pre_cnt_reg[0]_i_2__0_n_0 ),
        .CO({\sts_trig_pre_cnt_reg[4]_i_1__0_n_0 ,\sts_trig_pre_cnt_reg[4]_i_1__0_n_1 ,\sts_trig_pre_cnt_reg[4]_i_1__0_n_2 ,\sts_trig_pre_cnt_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_pre_cnt_reg[4]_i_1__0_n_4 ,\sts_trig_pre_cnt_reg[4]_i_1__0_n_5 ,\sts_trig_pre_cnt_reg[4]_i_1__0_n_6 ,\sts_trig_pre_cnt_reg[4]_i_1__0_n_7 }),
        .S(sts_trig_pre_cnt[7:4]));
  FDRE \sts_trig_pre_cnt_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[4]_i_1__0_n_6 ),
        .Q(sts_trig_pre_cnt[5]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[4]_i_1__0_n_5 ),
        .Q(sts_trig_pre_cnt[6]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[4]_i_1__0_n_4 ),
        .Q(sts_trig_pre_cnt[7]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[8]_i_1__0_n_7 ),
        .Q(sts_trig_pre_cnt[8]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[8]_i_1__0 
       (.CI(\sts_trig_pre_cnt_reg[4]_i_1__0_n_0 ),
        .CO({\sts_trig_pre_cnt_reg[8]_i_1__0_n_0 ,\sts_trig_pre_cnt_reg[8]_i_1__0_n_1 ,\sts_trig_pre_cnt_reg[8]_i_1__0_n_2 ,\sts_trig_pre_cnt_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_pre_cnt_reg[8]_i_1__0_n_4 ,\sts_trig_pre_cnt_reg[8]_i_1__0_n_5 ,\sts_trig_pre_cnt_reg[8]_i_1__0_n_6 ,\sts_trig_pre_cnt_reg[8]_i_1__0_n_7 }),
        .S(sts_trig_pre_cnt[11:8]));
  FDRE \sts_trig_pre_cnt_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[8]_i_1__0_n_6 ),
        .Q(sts_trig_pre_cnt[9]),
        .R(event_num_reset_reg));
  LUT5 #(
    .INIT(32'hFFFF0100)) 
    sts_trig_pre_overflow_i_1__0
       (.I0(sts_trig_pre_overflow_i_2__0_n_0),
        .I1(sts_trig_pre_overflow_i_3__0_n_0),
        .I2(sts_trig_pre_overflow_i_4__0_n_0),
        .I3(sts_trig_pre_overflow_i_5__0_n_0),
        .I4(sts_trig_pre_overflow),
        .O(sts_trig_pre_overflow_i_1__0_n_0));
  LUT6 #(
    .INIT(64'hDFFFFFFFFFFFFFFF)) 
    sts_trig_pre_overflow_i_2__0
       (.I0(sts_trig_pre_cnt[14]),
        .I1(sts_trig_pre_overflow),
        .I2(sts_trig_pre_cnt[3]),
        .I3(sts_trig_pre_cnt[13]),
        .I4(sts_trig_pre_cnt[1]),
        .I5(sts_trig_pre_cnt[9]),
        .O(sts_trig_pre_overflow_i_2__0_n_0));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    sts_trig_pre_overflow_i_3__0
       (.I0(sts_trig_pre_cnt[17]),
        .I1(sts_trig_pre_cnt[23]),
        .I2(sts_trig_pre_cnt[27]),
        .I3(sts_trig_pre_cnt[28]),
        .I4(sts_trig_pre_overflow_i_6__0_n_0),
        .O(sts_trig_pre_overflow_i_3__0_n_0));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    sts_trig_pre_overflow_i_4__0
       (.I0(sts_trig_pre_cnt[15]),
        .I1(sts_trig_pre_cnt[16]),
        .I2(sts_trig_pre_cnt[11]),
        .I3(sts_trig_pre_cnt[25]),
        .I4(sts_trig_pre_overflow_i_7__0_n_0),
        .O(sts_trig_pre_overflow_i_4__0_n_0));
  LUT5 #(
    .INIT(32'h00000080)) 
    sts_trig_pre_overflow_i_5__0
       (.I0(sts_trig_pre_cnt[8]),
        .I1(sts_trig_pre_cnt[18]),
        .I2(sts_trig_pre_cnt[7]),
        .I3(sts_trig_pre_overflow_i_8__0_n_0),
        .I4(sts_trig_pre_overflow_i_9__0_n_0),
        .O(sts_trig_pre_overflow_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    sts_trig_pre_overflow_i_6__0
       (.I0(sts_trig_pre_cnt[26]),
        .I1(sts_trig_pre_cnt[10]),
        .I2(sts_trig_pre_cnt[30]),
        .I3(sts_trig_pre_cnt[21]),
        .O(sts_trig_pre_overflow_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    sts_trig_pre_overflow_i_7__0
       (.I0(sts_trig_pre_cnt[29]),
        .I1(sts_trig_pre_cnt[5]),
        .I2(\sts_trig_pre_cnt_reg_n_0_[31] ),
        .I3(sts_trig_pre_cnt[19]),
        .O(sts_trig_pre_overflow_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    sts_trig_pre_overflow_i_8__0
       (.I0(sts_trig_pre_cnt[24]),
        .I1(sts_trig_pre_cnt[0]),
        .I2(sts_trig_pre_cnt[22]),
        .I3(sts_trig_pre_cnt[12]),
        .O(sts_trig_pre_overflow_i_8__0_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    sts_trig_pre_overflow_i_9__0
       (.I0(sts_trig_pre_cnt[6]),
        .I1(sts_trig_pre_cnt[2]),
        .I2(sts_trig_pre_cnt[20]),
        .I3(sts_trig_pre_cnt[4]),
        .O(sts_trig_pre_overflow_i_9__0_n_0));
  FDRE sts_trig_pre_overflow_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(sts_trig_pre_overflow_i_1__0_n_0),
        .Q(sts_trig_pre_overflow),
        .R(event_num_reset_reg));
  FDRE sts_trig_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(sts_trig_reg_1),
        .Q(sts_trig_reg_0),
        .R(event_num_reset_reg));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][0]_i_1__0 
       (.I0(acq_tdata[8]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[0]),
        .O(\m_axis_tdata_reg[15]_2 [0]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][1]_i_1__0 
       (.I0(acq_tdata[9]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[1]),
        .O(\m_axis_tdata_reg[15]_2 [1]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][2]_i_1__0 
       (.I0(acq_tdata[10]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[2]),
        .O(\m_axis_tdata_reg[15]_2 [2]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][3]_i_1__0 
       (.I0(acq_tdata[11]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[3]),
        .O(\m_axis_tdata_reg[15]_2 [3]));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][4]_i_1__0 
       (.I0(acq_tdata[12]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[4]),
        .O(\m_axis_tdata_reg[15]_2 [4]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][5]_i_1__0 
       (.I0(acq_tdata[13]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[5]),
        .O(\m_axis_tdata_reg[15]_2 [5]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][6]_i_1__0 
       (.I0(acq_tdata[14]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[6]),
        .O(\m_axis_tdata_reg[15]_2 [6]));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][7]_i_2__0 
       (.I0(acq_tdata[15]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[7]),
        .O(\m_axis_tdata_reg[15]_2 [7]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][0]_i_1__0 
       (.I0(acq_tdata[8]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[0]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][0]_0 ),
        .O(\m_axis_tdata_reg[15]_1 [0]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][1]_i_1__0 
       (.I0(acq_tdata[9]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[1]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][1] ),
        .O(\m_axis_tdata_reg[15]_1 [1]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][2]_i_1__0 
       (.I0(acq_tdata[10]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[2]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][2] ),
        .O(\m_axis_tdata_reg[15]_1 [2]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][3]_i_1__0 
       (.I0(acq_tdata[11]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[3]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][3] ),
        .O(\m_axis_tdata_reg[15]_1 [3]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][4]_i_1__0 
       (.I0(acq_tdata[12]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[4]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][4] ),
        .O(\m_axis_tdata_reg[15]_1 [4]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][5]_i_1__0 
       (.I0(acq_tdata[13]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[5]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][5] ),
        .O(\m_axis_tdata_reg[15]_1 [5]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][6]_i_1__0 
       (.I0(acq_tdata[14]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[6]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][6] ),
        .O(\m_axis_tdata_reg[15]_1 [6]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][7]_i_2__0 
       (.I0(acq_tdata[15]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[7]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][7] ),
        .O(\m_axis_tdata_reg[15]_1 [7]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][0]_i_1__0 
       (.I0(acq_tdata[8]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[0]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][0]_0 ),
        .O(\m_axis_tdata_reg[15]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][1]_i_1__0 
       (.I0(acq_tdata[9]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[1]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][1] ),
        .O(\m_axis_tdata_reg[15]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][2]_i_1__0 
       (.I0(acq_tdata[10]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[2]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][2] ),
        .O(\m_axis_tdata_reg[15]_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][3]_i_1__0 
       (.I0(acq_tdata[11]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[3]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][3] ),
        .O(\m_axis_tdata_reg[15]_0 [3]));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][4]_i_1__0 
       (.I0(acq_tdata[12]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[4]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][4] ),
        .O(\m_axis_tdata_reg[15]_0 [4]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][5]_i_1__0 
       (.I0(acq_tdata[13]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[5]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][5] ),
        .O(\m_axis_tdata_reg[15]_0 [5]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][6]_i_1__0 
       (.I0(acq_tdata[14]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[6]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][6] ),
        .O(\m_axis_tdata_reg[15]_0 [6]));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][7]_i_2__0 
       (.I0(acq_tdata[15]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[7]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][7] ),
        .O(\m_axis_tdata_reg[15]_0 [7]));
endmodule

(* ORIG_REF_NAME = "osc_acquire" *) 
module system_rp_oscilloscope_0_osc_acquire_13
   (acq_tdata,
    acq_tvalid,
    acq_tlast,
    sts_trig_reg_0,
    event_num_reset_reg,
    \FSM_sequential_state_cs_reg[2]_0 ,
    \FSM_sequential_state_cs_reg[1]_0 ,
    \FSM_sequential_state_cs_reg[0]_0 ,
    event_num_trig_reg,
    \cfg_event_sel_reg[0] ,
    \cfg_trig_pre_samp_reg[30] ,
    \cfg_trig_pre_samp_reg[29] ,
    \cfg_trig_pre_samp_reg[28] ,
    \cfg_trig_pre_samp_reg[27] ,
    \cfg_trig_pre_samp_reg[26] ,
    \cfg_trig_pre_samp_reg[25] ,
    \cfg_trig_pre_samp_reg[24] ,
    \cfg_trig_pre_samp_reg[23] ,
    \cfg_trig_pre_samp_reg[22] ,
    \cfg_trig_pre_samp_reg[21] ,
    \cfg_trig_pre_samp_reg[20] ,
    \cfg_trig_pre_samp_reg[19] ,
    \cfg_trig_pre_samp_reg[18] ,
    D,
    \cfg_trig_pre_samp_reg[10] ,
    \cfg_trig_pre_samp_reg[8] ,
    \cfg_trig_mask_reg[5] ,
    \cfg_trig_mask_reg[4] ,
    \sts_trig_pre_cnt_reg[3]_0 ,
    \cfg_trig_pre_samp_reg[17] ,
    \cfg_trig_pre_samp_reg[23]_0 ,
    \m_axis_tdata_reg[15]_0 ,
    \m_axis_tdata_reg[15]_1 ,
    \m_axis_tdata_reg[15]_2 ,
    \cfg_trig_pre_samp_reg[31] ,
    sts_start_reg_0,
    sts_start_reg_1,
    sts_acquire_reg_0,
    \m_axis_tdata_reg[15]_3 ,
    m_axi_osc1_aclk,
    \m_axis_tdata_reg[14]_0 ,
    \m_axis_tdata_reg[13]_0 ,
    \m_axis_tdata_reg[12]_0 ,
    \m_axis_tdata_reg[11]_0 ,
    \m_axis_tdata_reg[10]_0 ,
    \m_axis_tdata_reg[9]_0 ,
    \m_axis_tdata_reg[8]_0 ,
    \m_axis_tdata_reg[7]_0 ,
    \m_axis_tdata_reg[6]_0 ,
    \m_axis_tdata_reg[5]_0 ,
    \m_axis_tdata_reg[4]_0 ,
    \m_axis_tdata_reg[3]_0 ,
    \m_axis_tdata_reg[2]_0 ,
    \m_axis_tdata_reg[1]_0 ,
    \m_axis_tdata_reg[0]_0 ,
    clear,
    m_axis_tvalid0,
    sts_trig_reg_1,
    Q,
    \reg_rd_data[31]_i_3 ,
    sts_acquire_reg_1,
    \reg_rd_data_reg[17] ,
    \reg_rd_data_reg[17]_0 ,
    \reg_rd_data_reg[5] ,
    \reg_rd_data_reg[17]_1 ,
    \reg_rd_data_reg[17]_2 ,
    \sts_trig_post_cnt_reg[0]_0 ,
    m_axi_osc1_aresetn,
    trig_tvalid,
    event_num_start,
    event_num_stop,
    dma_mode,
    cfg_event_sel,
    \reg_rd_data_reg[17]_3 ,
    \reg_rd_data_reg[17]_4 ,
    \reg_rd_data_reg[17]_5 ,
    \reg_rd_data_reg[16] ,
    \reg_rd_data_reg[16]_0 ,
    \reg_rd_data_reg[15] ,
    \reg_rd_data_reg[15]_0 ,
    \reg_rd_data_reg[15]_1 ,
    \reg_rd_data_reg[15]_2 ,
    \reg_rd_data_reg[14] ,
    \reg_rd_data_reg[14]_0 ,
    \reg_rd_data_reg[13] ,
    \reg_rd_data_reg[13]_0 ,
    \reg_rd_data_reg[12] ,
    \reg_rd_data_reg[12]_0 ,
    \reg_rd_data_reg[11] ,
    \reg_rd_data_reg[11]_0 ,
    \reg_rd_data_reg[9] ,
    \reg_rd_data_reg[9]_0 ,
    \reg_rd_data_reg[7] ,
    \reg_rd_data_reg[7]_0 ,
    \reg_rd_data_reg[6] ,
    \reg_rd_data_reg[6]_0 ,
    event_num_trig,
    trig_ip,
    \upsize_buf_reg[0][7] ,
    \upsize_buf_reg[7][0] ,
    \upsize_buf_reg[7][0]_0 ,
    \upsize_buf_reg[2][0] ,
    \upsize_buf_reg[7][1] ,
    \upsize_buf_reg[7][2] ,
    \upsize_buf_reg[7][3] ,
    \upsize_buf_reg[7][4] ,
    \upsize_buf_reg[7][5] ,
    \upsize_buf_reg[7][6] ,
    \upsize_buf_reg[7][7] ,
    \reg_rd_data_reg[2]_i_3 ,
    \reg_rd_data_reg[1] );
  output [15:0]acq_tdata;
  output acq_tvalid;
  output acq_tlast;
  output [0:0]sts_trig_reg_0;
  output event_num_reset_reg;
  output \FSM_sequential_state_cs_reg[2]_0 ;
  output \FSM_sequential_state_cs_reg[1]_0 ;
  output \FSM_sequential_state_cs_reg[0]_0 ;
  output event_num_trig_reg;
  output \cfg_event_sel_reg[0] ;
  output \cfg_trig_pre_samp_reg[30] ;
  output \cfg_trig_pre_samp_reg[29] ;
  output \cfg_trig_pre_samp_reg[28] ;
  output \cfg_trig_pre_samp_reg[27] ;
  output \cfg_trig_pre_samp_reg[26] ;
  output \cfg_trig_pre_samp_reg[25] ;
  output \cfg_trig_pre_samp_reg[24] ;
  output \cfg_trig_pre_samp_reg[23] ;
  output \cfg_trig_pre_samp_reg[22] ;
  output \cfg_trig_pre_samp_reg[21] ;
  output \cfg_trig_pre_samp_reg[20] ;
  output \cfg_trig_pre_samp_reg[19] ;
  output \cfg_trig_pre_samp_reg[18] ;
  output [9:0]D;
  output \cfg_trig_pre_samp_reg[10] ;
  output \cfg_trig_pre_samp_reg[8] ;
  output \cfg_trig_mask_reg[5] ;
  output \cfg_trig_mask_reg[4] ;
  output \sts_trig_pre_cnt_reg[3]_0 ;
  output \cfg_trig_pre_samp_reg[17] ;
  output \cfg_trig_pre_samp_reg[23]_0 ;
  output [7:0]\m_axis_tdata_reg[15]_0 ;
  output [7:0]\m_axis_tdata_reg[15]_1 ;
  output [7:0]\m_axis_tdata_reg[15]_2 ;
  output \cfg_trig_pre_samp_reg[31] ;
  output sts_start_reg_0;
  output sts_start_reg_1;
  output sts_acquire_reg_0;
  input \m_axis_tdata_reg[15]_3 ;
  input m_axi_osc1_aclk;
  input \m_axis_tdata_reg[14]_0 ;
  input \m_axis_tdata_reg[13]_0 ;
  input \m_axis_tdata_reg[12]_0 ;
  input \m_axis_tdata_reg[11]_0 ;
  input \m_axis_tdata_reg[10]_0 ;
  input \m_axis_tdata_reg[9]_0 ;
  input \m_axis_tdata_reg[8]_0 ;
  input \m_axis_tdata_reg[7]_0 ;
  input \m_axis_tdata_reg[6]_0 ;
  input \m_axis_tdata_reg[5]_0 ;
  input \m_axis_tdata_reg[4]_0 ;
  input \m_axis_tdata_reg[3]_0 ;
  input \m_axis_tdata_reg[2]_0 ;
  input \m_axis_tdata_reg[1]_0 ;
  input \m_axis_tdata_reg[0]_0 ;
  input clear;
  input m_axis_tvalid0;
  input sts_trig_reg_1;
  input [31:0]Q;
  input [31:0]\reg_rd_data[31]_i_3 ;
  input sts_acquire_reg_1;
  input \reg_rd_data_reg[17] ;
  input \reg_rd_data_reg[17]_0 ;
  input [5:0]\reg_rd_data_reg[5] ;
  input \reg_rd_data_reg[17]_1 ;
  input \reg_rd_data_reg[17]_2 ;
  input \sts_trig_post_cnt_reg[0]_0 ;
  input m_axi_osc1_aresetn;
  input trig_tvalid;
  input event_num_start;
  input event_num_stop;
  input dma_mode;
  input [0:0]cfg_event_sel;
  input \reg_rd_data_reg[17]_3 ;
  input \reg_rd_data_reg[17]_4 ;
  input \reg_rd_data_reg[17]_5 ;
  input \reg_rd_data_reg[16] ;
  input \reg_rd_data_reg[16]_0 ;
  input \reg_rd_data_reg[15] ;
  input \reg_rd_data_reg[15]_0 ;
  input \reg_rd_data_reg[15]_1 ;
  input \reg_rd_data_reg[15]_2 ;
  input \reg_rd_data_reg[14] ;
  input \reg_rd_data_reg[14]_0 ;
  input \reg_rd_data_reg[13] ;
  input \reg_rd_data_reg[13]_0 ;
  input \reg_rd_data_reg[12] ;
  input \reg_rd_data_reg[12]_0 ;
  input \reg_rd_data_reg[11] ;
  input \reg_rd_data_reg[11]_0 ;
  input \reg_rd_data_reg[9] ;
  input \reg_rd_data_reg[9]_0 ;
  input \reg_rd_data_reg[7] ;
  input \reg_rd_data_reg[7]_0 ;
  input \reg_rd_data_reg[6] ;
  input \reg_rd_data_reg[6]_0 ;
  input event_num_trig;
  input [5:0]trig_ip;
  input \upsize_buf_reg[0][7] ;
  input \upsize_buf_reg[7][0] ;
  input \upsize_buf_reg[7][0]_0 ;
  input \upsize_buf_reg[2][0] ;
  input \upsize_buf_reg[7][1] ;
  input \upsize_buf_reg[7][2] ;
  input \upsize_buf_reg[7][3] ;
  input \upsize_buf_reg[7][4] ;
  input \upsize_buf_reg[7][5] ;
  input \upsize_buf_reg[7][6] ;
  input \upsize_buf_reg[7][7] ;
  input \reg_rd_data_reg[2]_i_3 ;
  input \reg_rd_data_reg[1] ;

  wire [9:0]D;
  wire \FSM_sequential_state_cs[0]_i_1_n_0 ;
  wire \FSM_sequential_state_cs[1]_i_1_n_0 ;
  wire \FSM_sequential_state_cs[1]_i_2_n_0 ;
  wire \FSM_sequential_state_cs[2]_i_1_n_0 ;
  wire \FSM_sequential_state_cs[2]_i_2_n_0 ;
  wire \FSM_sequential_state_cs[2]_i_3_n_0 ;
  wire \FSM_sequential_state_cs[2]_i_4_n_0 ;
  wire \FSM_sequential_state_cs[2]_i_5_n_0 ;
  wire \FSM_sequential_state_cs[2]_i_6_n_0 ;
  wire \FSM_sequential_state_cs_reg[0]_0 ;
  wire \FSM_sequential_state_cs_reg[1]_0 ;
  wire \FSM_sequential_state_cs_reg[2]_0 ;
  wire [31:0]Q;
  wire [15:0]acq_tdata;
  wire acq_tlast;
  wire acq_tvalid;
  wire [0:0]cfg_event_sel;
  wire \cfg_event_sel_reg[0] ;
  wire \cfg_trig_mask_reg[4] ;
  wire \cfg_trig_mask_reg[5] ;
  wire \cfg_trig_pre_samp_reg[10] ;
  wire \cfg_trig_pre_samp_reg[17] ;
  wire \cfg_trig_pre_samp_reg[18] ;
  wire \cfg_trig_pre_samp_reg[19] ;
  wire \cfg_trig_pre_samp_reg[20] ;
  wire \cfg_trig_pre_samp_reg[21] ;
  wire \cfg_trig_pre_samp_reg[22] ;
  wire \cfg_trig_pre_samp_reg[23] ;
  wire \cfg_trig_pre_samp_reg[23]_0 ;
  wire \cfg_trig_pre_samp_reg[24] ;
  wire \cfg_trig_pre_samp_reg[25] ;
  wire \cfg_trig_pre_samp_reg[26] ;
  wire \cfg_trig_pre_samp_reg[27] ;
  wire \cfg_trig_pre_samp_reg[28] ;
  wire \cfg_trig_pre_samp_reg[29] ;
  wire \cfg_trig_pre_samp_reg[30] ;
  wire \cfg_trig_pre_samp_reg[31] ;
  wire \cfg_trig_pre_samp_reg[8] ;
  wire clear;
  wire dma_mode;
  wire event_num_reset_reg;
  wire event_num_start;
  wire event_num_stop;
  wire event_num_trig;
  wire event_num_trig_reg;
  wire i__carry__0_i_1__0_n_0;
  wire i__carry__0_i_1_n_0;
  wire i__carry__0_i_2__0_n_0;
  wire i__carry__0_i_2_n_0;
  wire i__carry__0_i_3__0_n_0;
  wire i__carry__0_i_3_n_0;
  wire i__carry__0_i_4__0_n_0;
  wire i__carry__0_i_4_n_0;
  wire i__carry__1_i_1__0_n_0;
  wire i__carry__1_i_1_n_0;
  wire i__carry__1_i_2__0_n_0;
  wire i__carry__1_i_2_n_0;
  wire i__carry__1_i_3__0_n_0;
  wire i__carry__1_i_3_n_0;
  wire i__carry__1_i_4_n_0;
  wire i__carry__2_i_1_n_0;
  wire i__carry__2_i_2_n_0;
  wire i__carry__2_i_3_n_0;
  wire i__carry__2_i_4_n_0;
  wire i__carry__3_i_1_n_0;
  wire i__carry__3_i_2_n_0;
  wire i__carry__3_i_3_n_0;
  wire i__carry__3_i_4_n_0;
  wire i__carry__4_i_1_n_0;
  wire i__carry__4_i_2_n_0;
  wire i__carry__4_i_3_n_0;
  wire i__carry__4_i_4_n_0;
  wire i__carry__5_i_1_n_0;
  wire i__carry__5_i_2_n_0;
  wire i__carry__5_i_3_n_0;
  wire i__carry__5_i_4_n_0;
  wire i__carry__6_i_1_n_0;
  wire i__carry__6_i_2_n_0;
  wire i__carry__6_i_3_n_0;
  wire i__carry_i_1__1_n_0;
  wire i__carry_i_1__2_n_0;
  wire i__carry_i_2__0_n_0;
  wire i__carry_i_2_n_0;
  wire i__carry_i_3__0_n_0;
  wire i__carry_i_3_n_0;
  wire i__carry_i_4__0_n_0;
  wire i__carry_i_4_n_0;
  wire m_axi_osc1_aclk;
  wire m_axi_osc1_aresetn;
  wire \m_axis_tdata_reg[0]_0 ;
  wire \m_axis_tdata_reg[10]_0 ;
  wire \m_axis_tdata_reg[11]_0 ;
  wire \m_axis_tdata_reg[12]_0 ;
  wire \m_axis_tdata_reg[13]_0 ;
  wire \m_axis_tdata_reg[14]_0 ;
  wire [7:0]\m_axis_tdata_reg[15]_0 ;
  wire [7:0]\m_axis_tdata_reg[15]_1 ;
  wire [7:0]\m_axis_tdata_reg[15]_2 ;
  wire \m_axis_tdata_reg[15]_3 ;
  wire \m_axis_tdata_reg[1]_0 ;
  wire \m_axis_tdata_reg[2]_0 ;
  wire \m_axis_tdata_reg[3]_0 ;
  wire \m_axis_tdata_reg[4]_0 ;
  wire \m_axis_tdata_reg[5]_0 ;
  wire \m_axis_tdata_reg[6]_0 ;
  wire \m_axis_tdata_reg[7]_0 ;
  wire \m_axis_tdata_reg[8]_0 ;
  wire \m_axis_tdata_reg[9]_0 ;
  wire m_axis_tlast_i_1_n_0;
  wire m_axis_tvalid0;
  wire [1:1]p_20_in;
  wire \reg_rd_data[0]_i_13_n_0 ;
  wire \reg_rd_data[11]_i_2_n_0 ;
  wire \reg_rd_data[12]_i_2_n_0 ;
  wire \reg_rd_data[13]_i_2_n_0 ;
  wire \reg_rd_data[14]_i_2_n_0 ;
  wire \reg_rd_data[15]_i_3_n_0 ;
  wire \reg_rd_data[16]_i_2_n_0 ;
  wire \reg_rd_data[17]_i_2_n_0 ;
  wire \reg_rd_data[1]_i_10_n_0 ;
  wire \reg_rd_data[2]_i_19_n_0 ;
  wire [31:0]\reg_rd_data[31]_i_3 ;
  wire \reg_rd_data[3]_i_10_n_0 ;
  wire \reg_rd_data[3]_i_11__0_n_0 ;
  wire \reg_rd_data[4]_i_14_n_0 ;
  wire \reg_rd_data[4]_i_8_n_0 ;
  wire \reg_rd_data[5]_i_14_n_0 ;
  wire \reg_rd_data[5]_i_8_n_0 ;
  wire \reg_rd_data[6]_i_2_n_0 ;
  wire \reg_rd_data[7]_i_2_n_0 ;
  wire \reg_rd_data[9]_i_2_n_0 ;
  wire \reg_rd_data_reg[11] ;
  wire \reg_rd_data_reg[11]_0 ;
  wire \reg_rd_data_reg[12] ;
  wire \reg_rd_data_reg[12]_0 ;
  wire \reg_rd_data_reg[13] ;
  wire \reg_rd_data_reg[13]_0 ;
  wire \reg_rd_data_reg[14] ;
  wire \reg_rd_data_reg[14]_0 ;
  wire \reg_rd_data_reg[15] ;
  wire \reg_rd_data_reg[15]_0 ;
  wire \reg_rd_data_reg[15]_1 ;
  wire \reg_rd_data_reg[15]_2 ;
  wire \reg_rd_data_reg[16] ;
  wire \reg_rd_data_reg[16]_0 ;
  wire \reg_rd_data_reg[17] ;
  wire \reg_rd_data_reg[17]_0 ;
  wire \reg_rd_data_reg[17]_1 ;
  wire \reg_rd_data_reg[17]_2 ;
  wire \reg_rd_data_reg[17]_3 ;
  wire \reg_rd_data_reg[17]_4 ;
  wire \reg_rd_data_reg[17]_5 ;
  wire \reg_rd_data_reg[1] ;
  wire \reg_rd_data_reg[2]_i_3 ;
  wire [5:0]\reg_rd_data_reg[5] ;
  wire \reg_rd_data_reg[6] ;
  wire \reg_rd_data_reg[6]_0 ;
  wire \reg_rd_data_reg[7] ;
  wire \reg_rd_data_reg[7]_0 ;
  wire \reg_rd_data_reg[9] ;
  wire \reg_rd_data_reg[9]_0 ;
  wire state_ns1;
  wire state_ns11_out;
  wire state_ns1_carry__0_i_1_n_0;
  wire state_ns1_carry__0_i_2_n_0;
  wire state_ns1_carry__0_i_3_n_0;
  wire state_ns1_carry__0_i_4_n_0;
  wire state_ns1_carry__0_n_0;
  wire state_ns1_carry__0_n_1;
  wire state_ns1_carry__0_n_2;
  wire state_ns1_carry__0_n_3;
  wire state_ns1_carry__1_i_1_n_0;
  wire state_ns1_carry__1_i_2_n_0;
  wire state_ns1_carry__1_i_3_n_0;
  wire state_ns1_carry__1_n_2;
  wire state_ns1_carry__1_n_3;
  wire state_ns1_carry_i_1_n_0;
  wire state_ns1_carry_i_2_n_0;
  wire state_ns1_carry_i_3_n_0;
  wire state_ns1_carry_i_4_n_0;
  wire state_ns1_carry_n_0;
  wire state_ns1_carry_n_1;
  wire state_ns1_carry_n_2;
  wire state_ns1_carry_n_3;
  wire \state_ns1_inferred__0/i__carry__0_n_0 ;
  wire \state_ns1_inferred__0/i__carry__0_n_1 ;
  wire \state_ns1_inferred__0/i__carry__0_n_2 ;
  wire \state_ns1_inferred__0/i__carry__0_n_3 ;
  wire \state_ns1_inferred__0/i__carry__1_n_2 ;
  wire \state_ns1_inferred__0/i__carry__1_n_3 ;
  wire \state_ns1_inferred__0/i__carry_n_0 ;
  wire \state_ns1_inferred__0/i__carry_n_1 ;
  wire \state_ns1_inferred__0/i__carry_n_2 ;
  wire \state_ns1_inferred__0/i__carry_n_3 ;
  wire [31:1]state_ns2;
  wire [31:1]state_ns20_in;
  wire state_ns2_carry__0_i_1_n_0;
  wire state_ns2_carry__0_i_2_n_0;
  wire state_ns2_carry__0_i_3_n_0;
  wire state_ns2_carry__0_i_4_n_0;
  wire state_ns2_carry__0_n_0;
  wire state_ns2_carry__0_n_1;
  wire state_ns2_carry__0_n_2;
  wire state_ns2_carry__0_n_3;
  wire state_ns2_carry__1_i_1_n_0;
  wire state_ns2_carry__1_i_2_n_0;
  wire state_ns2_carry__1_i_3_n_0;
  wire state_ns2_carry__1_i_4_n_0;
  wire state_ns2_carry__1_n_0;
  wire state_ns2_carry__1_n_1;
  wire state_ns2_carry__1_n_2;
  wire state_ns2_carry__1_n_3;
  wire state_ns2_carry__2_i_1_n_0;
  wire state_ns2_carry__2_i_2_n_0;
  wire state_ns2_carry__2_i_3_n_0;
  wire state_ns2_carry__2_i_4_n_0;
  wire state_ns2_carry__2_n_0;
  wire state_ns2_carry__2_n_1;
  wire state_ns2_carry__2_n_2;
  wire state_ns2_carry__2_n_3;
  wire state_ns2_carry__3_i_1_n_0;
  wire state_ns2_carry__3_i_2_n_0;
  wire state_ns2_carry__3_i_3_n_0;
  wire state_ns2_carry__3_i_4_n_0;
  wire state_ns2_carry__3_n_0;
  wire state_ns2_carry__3_n_1;
  wire state_ns2_carry__3_n_2;
  wire state_ns2_carry__3_n_3;
  wire state_ns2_carry__4_i_1_n_0;
  wire state_ns2_carry__4_i_2_n_0;
  wire state_ns2_carry__4_i_3_n_0;
  wire state_ns2_carry__4_i_4_n_0;
  wire state_ns2_carry__4_n_0;
  wire state_ns2_carry__4_n_1;
  wire state_ns2_carry__4_n_2;
  wire state_ns2_carry__4_n_3;
  wire state_ns2_carry__5_i_1_n_0;
  wire state_ns2_carry__5_i_2_n_0;
  wire state_ns2_carry__5_i_3_n_0;
  wire state_ns2_carry__5_i_4_n_0;
  wire state_ns2_carry__5_n_0;
  wire state_ns2_carry__5_n_1;
  wire state_ns2_carry__5_n_2;
  wire state_ns2_carry__5_n_3;
  wire state_ns2_carry__6_i_1_n_0;
  wire state_ns2_carry__6_i_2_n_0;
  wire state_ns2_carry__6_i_3_n_0;
  wire state_ns2_carry__6_n_2;
  wire state_ns2_carry__6_n_3;
  wire state_ns2_carry_i_1_n_0;
  wire state_ns2_carry_i_2_n_0;
  wire state_ns2_carry_i_3_n_0;
  wire state_ns2_carry_i_4_n_0;
  wire state_ns2_carry_n_0;
  wire state_ns2_carry_n_1;
  wire state_ns2_carry_n_2;
  wire state_ns2_carry_n_3;
  wire \state_ns2_inferred__0/i__carry__0_n_0 ;
  wire \state_ns2_inferred__0/i__carry__0_n_1 ;
  wire \state_ns2_inferred__0/i__carry__0_n_2 ;
  wire \state_ns2_inferred__0/i__carry__0_n_3 ;
  wire \state_ns2_inferred__0/i__carry__1_n_0 ;
  wire \state_ns2_inferred__0/i__carry__1_n_1 ;
  wire \state_ns2_inferred__0/i__carry__1_n_2 ;
  wire \state_ns2_inferred__0/i__carry__1_n_3 ;
  wire \state_ns2_inferred__0/i__carry__2_n_0 ;
  wire \state_ns2_inferred__0/i__carry__2_n_1 ;
  wire \state_ns2_inferred__0/i__carry__2_n_2 ;
  wire \state_ns2_inferred__0/i__carry__2_n_3 ;
  wire \state_ns2_inferred__0/i__carry__3_n_0 ;
  wire \state_ns2_inferred__0/i__carry__3_n_1 ;
  wire \state_ns2_inferred__0/i__carry__3_n_2 ;
  wire \state_ns2_inferred__0/i__carry__3_n_3 ;
  wire \state_ns2_inferred__0/i__carry__4_n_0 ;
  wire \state_ns2_inferred__0/i__carry__4_n_1 ;
  wire \state_ns2_inferred__0/i__carry__4_n_2 ;
  wire \state_ns2_inferred__0/i__carry__4_n_3 ;
  wire \state_ns2_inferred__0/i__carry__5_n_0 ;
  wire \state_ns2_inferred__0/i__carry__5_n_1 ;
  wire \state_ns2_inferred__0/i__carry__5_n_2 ;
  wire \state_ns2_inferred__0/i__carry__5_n_3 ;
  wire \state_ns2_inferred__0/i__carry__6_n_2 ;
  wire \state_ns2_inferred__0/i__carry__6_n_3 ;
  wire \state_ns2_inferred__0/i__carry_n_0 ;
  wire \state_ns2_inferred__0/i__carry_n_1 ;
  wire \state_ns2_inferred__0/i__carry_n_2 ;
  wire \state_ns2_inferred__0/i__carry_n_3 ;
  wire sts_acquire;
  wire sts_acquire_i_11_n_0;
  wire sts_acquire_i_12_n_0;
  wire sts_acquire_i_13_n_0;
  wire sts_acquire_i_14_n_0;
  wire sts_acquire_i_1_n_0;
  wire sts_acquire_i_2_n_0;
  wire sts_acquire_i_6_n_0;
  wire sts_acquire_i_7_n_0;
  wire sts_acquire_reg_0;
  wire sts_acquire_reg_1;
  wire sts_start_i_1_n_0;
  wire sts_start_i_2_n_0;
  wire sts_start_reg_0;
  wire sts_start_reg_1;
  wire [30:0]sts_trig_post_cnt;
  wire sts_trig_post_cnt0;
  wire \sts_trig_post_cnt[0]_i_3_n_0 ;
  wire \sts_trig_post_cnt_reg[0]_0 ;
  wire \sts_trig_post_cnt_reg[0]_i_2_n_0 ;
  wire \sts_trig_post_cnt_reg[0]_i_2_n_1 ;
  wire \sts_trig_post_cnt_reg[0]_i_2_n_2 ;
  wire \sts_trig_post_cnt_reg[0]_i_2_n_3 ;
  wire \sts_trig_post_cnt_reg[0]_i_2_n_4 ;
  wire \sts_trig_post_cnt_reg[0]_i_2_n_5 ;
  wire \sts_trig_post_cnt_reg[0]_i_2_n_6 ;
  wire \sts_trig_post_cnt_reg[0]_i_2_n_7 ;
  wire \sts_trig_post_cnt_reg[12]_i_1_n_0 ;
  wire \sts_trig_post_cnt_reg[12]_i_1_n_1 ;
  wire \sts_trig_post_cnt_reg[12]_i_1_n_2 ;
  wire \sts_trig_post_cnt_reg[12]_i_1_n_3 ;
  wire \sts_trig_post_cnt_reg[12]_i_1_n_4 ;
  wire \sts_trig_post_cnt_reg[12]_i_1_n_5 ;
  wire \sts_trig_post_cnt_reg[12]_i_1_n_6 ;
  wire \sts_trig_post_cnt_reg[12]_i_1_n_7 ;
  wire \sts_trig_post_cnt_reg[16]_i_1_n_0 ;
  wire \sts_trig_post_cnt_reg[16]_i_1_n_1 ;
  wire \sts_trig_post_cnt_reg[16]_i_1_n_2 ;
  wire \sts_trig_post_cnt_reg[16]_i_1_n_3 ;
  wire \sts_trig_post_cnt_reg[16]_i_1_n_4 ;
  wire \sts_trig_post_cnt_reg[16]_i_1_n_5 ;
  wire \sts_trig_post_cnt_reg[16]_i_1_n_6 ;
  wire \sts_trig_post_cnt_reg[16]_i_1_n_7 ;
  wire \sts_trig_post_cnt_reg[20]_i_1_n_0 ;
  wire \sts_trig_post_cnt_reg[20]_i_1_n_1 ;
  wire \sts_trig_post_cnt_reg[20]_i_1_n_2 ;
  wire \sts_trig_post_cnt_reg[20]_i_1_n_3 ;
  wire \sts_trig_post_cnt_reg[20]_i_1_n_4 ;
  wire \sts_trig_post_cnt_reg[20]_i_1_n_5 ;
  wire \sts_trig_post_cnt_reg[20]_i_1_n_6 ;
  wire \sts_trig_post_cnt_reg[20]_i_1_n_7 ;
  wire \sts_trig_post_cnt_reg[24]_i_1_n_0 ;
  wire \sts_trig_post_cnt_reg[24]_i_1_n_1 ;
  wire \sts_trig_post_cnt_reg[24]_i_1_n_2 ;
  wire \sts_trig_post_cnt_reg[24]_i_1_n_3 ;
  wire \sts_trig_post_cnt_reg[24]_i_1_n_4 ;
  wire \sts_trig_post_cnt_reg[24]_i_1_n_5 ;
  wire \sts_trig_post_cnt_reg[24]_i_1_n_6 ;
  wire \sts_trig_post_cnt_reg[24]_i_1_n_7 ;
  wire \sts_trig_post_cnt_reg[28]_i_1_n_1 ;
  wire \sts_trig_post_cnt_reg[28]_i_1_n_2 ;
  wire \sts_trig_post_cnt_reg[28]_i_1_n_3 ;
  wire \sts_trig_post_cnt_reg[28]_i_1_n_4 ;
  wire \sts_trig_post_cnt_reg[28]_i_1_n_5 ;
  wire \sts_trig_post_cnt_reg[28]_i_1_n_6 ;
  wire \sts_trig_post_cnt_reg[28]_i_1_n_7 ;
  wire \sts_trig_post_cnt_reg[4]_i_1_n_0 ;
  wire \sts_trig_post_cnt_reg[4]_i_1_n_1 ;
  wire \sts_trig_post_cnt_reg[4]_i_1_n_2 ;
  wire \sts_trig_post_cnt_reg[4]_i_1_n_3 ;
  wire \sts_trig_post_cnt_reg[4]_i_1_n_4 ;
  wire \sts_trig_post_cnt_reg[4]_i_1_n_5 ;
  wire \sts_trig_post_cnt_reg[4]_i_1_n_6 ;
  wire \sts_trig_post_cnt_reg[4]_i_1_n_7 ;
  wire \sts_trig_post_cnt_reg[8]_i_1_n_0 ;
  wire \sts_trig_post_cnt_reg[8]_i_1_n_1 ;
  wire \sts_trig_post_cnt_reg[8]_i_1_n_2 ;
  wire \sts_trig_post_cnt_reg[8]_i_1_n_3 ;
  wire \sts_trig_post_cnt_reg[8]_i_1_n_4 ;
  wire \sts_trig_post_cnt_reg[8]_i_1_n_5 ;
  wire \sts_trig_post_cnt_reg[8]_i_1_n_6 ;
  wire \sts_trig_post_cnt_reg[8]_i_1_n_7 ;
  wire \sts_trig_post_cnt_reg_n_0_[31] ;
  wire sts_trig_post_overflow;
  wire sts_trig_post_overflow_i_1_n_0;
  wire sts_trig_post_overflow_i_2_n_0;
  wire sts_trig_post_overflow_i_3_n_0;
  wire sts_trig_post_overflow_i_4_n_0;
  wire sts_trig_post_overflow_i_5_n_0;
  wire sts_trig_post_overflow_i_6_n_0;
  wire sts_trig_post_overflow_i_7_n_0;
  wire sts_trig_post_overflow_i_8_n_0;
  wire sts_trig_post_overflow_i_9_n_0;
  wire [30:0]sts_trig_pre_cnt;
  wire sts_trig_pre_cnt0;
  wire \sts_trig_pre_cnt[0]_i_3_n_0 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2_n_0 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2_n_1 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2_n_2 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2_n_3 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2_n_4 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2_n_5 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2_n_6 ;
  wire \sts_trig_pre_cnt_reg[0]_i_2_n_7 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1_n_0 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1_n_1 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1_n_2 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1_n_3 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1_n_4 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1_n_5 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1_n_6 ;
  wire \sts_trig_pre_cnt_reg[12]_i_1_n_7 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1_n_0 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1_n_1 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1_n_2 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1_n_3 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1_n_4 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1_n_5 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1_n_6 ;
  wire \sts_trig_pre_cnt_reg[16]_i_1_n_7 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1_n_0 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1_n_1 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1_n_2 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1_n_3 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1_n_4 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1_n_5 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1_n_6 ;
  wire \sts_trig_pre_cnt_reg[20]_i_1_n_7 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1_n_0 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1_n_1 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1_n_2 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1_n_3 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1_n_4 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1_n_5 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1_n_6 ;
  wire \sts_trig_pre_cnt_reg[24]_i_1_n_7 ;
  wire \sts_trig_pre_cnt_reg[28]_i_1_n_1 ;
  wire \sts_trig_pre_cnt_reg[28]_i_1_n_2 ;
  wire \sts_trig_pre_cnt_reg[28]_i_1_n_3 ;
  wire \sts_trig_pre_cnt_reg[28]_i_1_n_4 ;
  wire \sts_trig_pre_cnt_reg[28]_i_1_n_5 ;
  wire \sts_trig_pre_cnt_reg[28]_i_1_n_6 ;
  wire \sts_trig_pre_cnt_reg[28]_i_1_n_7 ;
  wire \sts_trig_pre_cnt_reg[3]_0 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1_n_0 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1_n_1 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1_n_2 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1_n_3 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1_n_4 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1_n_5 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1_n_6 ;
  wire \sts_trig_pre_cnt_reg[4]_i_1_n_7 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1_n_0 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1_n_1 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1_n_2 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1_n_3 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1_n_4 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1_n_5 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1_n_6 ;
  wire \sts_trig_pre_cnt_reg[8]_i_1_n_7 ;
  wire \sts_trig_pre_cnt_reg_n_0_[31] ;
  wire sts_trig_pre_overflow;
  wire sts_trig_pre_overflow_i_1_n_0;
  wire sts_trig_pre_overflow_i_2_n_0;
  wire sts_trig_pre_overflow_i_3_n_0;
  wire sts_trig_pre_overflow_i_4_n_0;
  wire sts_trig_pre_overflow_i_5_n_0;
  wire sts_trig_pre_overflow_i_6_n_0;
  wire sts_trig_pre_overflow_i_7_n_0;
  wire sts_trig_pre_overflow_i_8_n_0;
  wire sts_trig_pre_overflow_i_9_n_0;
  wire [0:0]sts_trig_reg_0;
  wire sts_trig_reg_1;
  wire [5:0]trig_ip;
  wire trig_tvalid;
  wire \upsize_buf_reg[0][7] ;
  wire \upsize_buf_reg[2][0] ;
  wire \upsize_buf_reg[7][0] ;
  wire \upsize_buf_reg[7][0]_0 ;
  wire \upsize_buf_reg[7][1] ;
  wire \upsize_buf_reg[7][2] ;
  wire \upsize_buf_reg[7][3] ;
  wire \upsize_buf_reg[7][4] ;
  wire \upsize_buf_reg[7][5] ;
  wire \upsize_buf_reg[7][6] ;
  wire \upsize_buf_reg[7][7] ;
  wire [3:0]NLW_state_ns1_carry_O_UNCONNECTED;
  wire [3:0]NLW_state_ns1_carry__0_O_UNCONNECTED;
  wire [3:3]NLW_state_ns1_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_state_ns1_carry__1_O_UNCONNECTED;
  wire [3:0]\NLW_state_ns1_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_state_ns1_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_state_ns1_inferred__0/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_state_ns1_inferred__0/i__carry__1_O_UNCONNECTED ;
  wire [3:2]NLW_state_ns2_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_state_ns2_carry__6_O_UNCONNECTED;
  wire [3:2]\NLW_state_ns2_inferred__0/i__carry__6_CO_UNCONNECTED ;
  wire [3:3]\NLW_state_ns2_inferred__0/i__carry__6_O_UNCONNECTED ;
  wire [3:3]\NLW_sts_trig_post_cnt_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_sts_trig_pre_cnt_reg[28]_i_1_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hFFFFFFFF2222666E)) 
    \FSM_sequential_state_cs[0]_i_1 
       (.I0(\FSM_sequential_state_cs_reg[0]_0 ),
        .I1(\FSM_sequential_state_cs[2]_i_2_n_0 ),
        .I2(dma_mode),
        .I3(\FSM_sequential_state_cs_reg[1]_0 ),
        .I4(\FSM_sequential_state_cs_reg[2]_0 ),
        .I5(\FSM_sequential_state_cs[2]_i_4_n_0 ),
        .O(\FSM_sequential_state_cs[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000E2E2EEE2)) 
    \FSM_sequential_state_cs[1]_i_1 
       (.I0(\FSM_sequential_state_cs_reg[1]_0 ),
        .I1(\FSM_sequential_state_cs[2]_i_2_n_0 ),
        .I2(\FSM_sequential_state_cs[1]_i_2_n_0 ),
        .I3(\FSM_sequential_state_cs_reg[0]_0 ),
        .I4(\FSM_sequential_state_cs[2]_i_3_n_0 ),
        .I5(\FSM_sequential_state_cs[2]_i_4_n_0 ),
        .O(\FSM_sequential_state_cs[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT4 #(
    .INIT(16'h0C10)) 
    \FSM_sequential_state_cs[1]_i_2 
       (.I0(dma_mode),
        .I1(\FSM_sequential_state_cs_reg[0]_0 ),
        .I2(\FSM_sequential_state_cs_reg[2]_0 ),
        .I3(\FSM_sequential_state_cs_reg[1]_0 ),
        .O(\FSM_sequential_state_cs[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000002E222222)) 
    \FSM_sequential_state_cs[2]_i_1 
       (.I0(\FSM_sequential_state_cs_reg[2]_0 ),
        .I1(\FSM_sequential_state_cs[2]_i_2_n_0 ),
        .I2(\FSM_sequential_state_cs_reg[1]_0 ),
        .I3(\FSM_sequential_state_cs_reg[0]_0 ),
        .I4(\FSM_sequential_state_cs[2]_i_3_n_0 ),
        .I5(\FSM_sequential_state_cs[2]_i_4_n_0 ),
        .O(\FSM_sequential_state_cs[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    \FSM_sequential_state_cs[2]_i_2 
       (.I0(state_ns11_out),
        .I1(trig_tvalid),
        .I2(\FSM_sequential_state_cs_reg[0]_0 ),
        .I3(event_num_trig_reg),
        .I4(\FSM_sequential_state_cs_reg[2]_0 ),
        .I5(\FSM_sequential_state_cs[2]_i_5_n_0 ),
        .O(\FSM_sequential_state_cs[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_state_cs[2]_i_3 
       (.I0(\FSM_sequential_state_cs_reg[2]_0 ),
        .I1(sts_acquire_reg_1),
        .O(\FSM_sequential_state_cs[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_state_cs[2]_i_4 
       (.I0(event_num_stop),
        .I1(m_axi_osc1_aresetn),
        .O(\FSM_sequential_state_cs[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBFB03F3FBFB03030)) 
    \FSM_sequential_state_cs[2]_i_5 
       (.I0(event_num_trig_reg),
        .I1(\FSM_sequential_state_cs[2]_i_6_n_0 ),
        .I2(\FSM_sequential_state_cs_reg[1]_0 ),
        .I3(event_num_start),
        .I4(\FSM_sequential_state_cs_reg[0]_0 ),
        .I5(event_num_stop),
        .O(\FSM_sequential_state_cs[2]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \FSM_sequential_state_cs[2]_i_6 
       (.I0(trig_tvalid),
        .I1(\FSM_sequential_state_cs_reg[0]_0 ),
        .I2(state_ns1),
        .O(\FSM_sequential_state_cs[2]_i_6_n_0 ));
  (* FSM_ENCODED_STATES = "IDLE:001,PRE_SAMP_WAIT_TRIG:100,POST_SAMP_WAIT_TRIG:011,PRE_SAMP_FILL:101,POST_SAMP_FILL:010,STRM_SAMP:000" *) 
  FDRE \FSM_sequential_state_cs_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\FSM_sequential_state_cs[0]_i_1_n_0 ),
        .Q(\FSM_sequential_state_cs_reg[0]_0 ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "IDLE:001,PRE_SAMP_WAIT_TRIG:100,POST_SAMP_WAIT_TRIG:011,PRE_SAMP_FILL:101,POST_SAMP_FILL:010,STRM_SAMP:000" *) 
  FDRE \FSM_sequential_state_cs_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\FSM_sequential_state_cs[1]_i_1_n_0 ),
        .Q(\FSM_sequential_state_cs_reg[1]_0 ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "IDLE:001,PRE_SAMP_WAIT_TRIG:100,POST_SAMP_WAIT_TRIG:011,PRE_SAMP_FILL:101,POST_SAMP_FILL:010,STRM_SAMP:000" *) 
  FDRE \FSM_sequential_state_cs_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\FSM_sequential_state_cs[2]_i_1_n_0 ),
        .Q(\FSM_sequential_state_cs_reg[2]_0 ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hB)) 
    \adc_dec_cnt[0]_i_1 
       (.I0(\sts_trig_post_cnt_reg[0]_0 ),
        .I1(m_axi_osc1_aresetn),
        .O(event_num_reset_reg));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_1
       (.I0(\reg_rd_data[31]_i_3 [8]),
        .O(i__carry__0_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_1__0
       (.I0(state_ns2[23]),
        .I1(sts_trig_post_cnt[23]),
        .I2(sts_trig_post_cnt[22]),
        .I3(state_ns2[22]),
        .I4(sts_trig_post_cnt[21]),
        .I5(state_ns2[21]),
        .O(i__carry__0_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_2
       (.I0(\reg_rd_data[31]_i_3 [7]),
        .O(i__carry__0_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_2__0
       (.I0(state_ns2[20]),
        .I1(sts_trig_post_cnt[20]),
        .I2(sts_trig_post_cnt[19]),
        .I3(state_ns2[19]),
        .I4(sts_trig_post_cnt[18]),
        .I5(state_ns2[18]),
        .O(i__carry__0_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_3
       (.I0(\reg_rd_data[31]_i_3 [6]),
        .O(i__carry__0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_3__0
       (.I0(state_ns2[17]),
        .I1(sts_trig_post_cnt[17]),
        .I2(sts_trig_post_cnt[15]),
        .I3(state_ns2[15]),
        .I4(sts_trig_post_cnt[16]),
        .I5(state_ns2[16]),
        .O(i__carry__0_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_4
       (.I0(\reg_rd_data[31]_i_3 [5]),
        .O(i__carry__0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__0_i_4__0
       (.I0(sts_trig_post_cnt[12]),
        .I1(state_ns2[12]),
        .I2(sts_trig_post_cnt[13]),
        .I3(state_ns2[13]),
        .I4(state_ns2[14]),
        .I5(sts_trig_post_cnt[14]),
        .O(i__carry__0_i_4__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_1
       (.I0(\reg_rd_data[31]_i_3 [12]),
        .O(i__carry__1_i_1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_1__0
       (.I0(state_ns2[31]),
        .I1(\sts_trig_post_cnt_reg_n_0_[31] ),
        .I2(state_ns2[30]),
        .I3(sts_trig_post_cnt[30]),
        .O(i__carry__1_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_2
       (.I0(\reg_rd_data[31]_i_3 [11]),
        .O(i__carry__1_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_2__0
       (.I0(state_ns2[29]),
        .I1(sts_trig_post_cnt[29]),
        .I2(sts_trig_post_cnt[27]),
        .I3(state_ns2[27]),
        .I4(sts_trig_post_cnt[28]),
        .I5(state_ns2[28]),
        .O(i__carry__1_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_3
       (.I0(\reg_rd_data[31]_i_3 [10]),
        .O(i__carry__1_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry__1_i_3__0
       (.I0(state_ns2[26]),
        .I1(sts_trig_post_cnt[26]),
        .I2(sts_trig_post_cnt[25]),
        .I3(state_ns2[25]),
        .I4(sts_trig_post_cnt[24]),
        .I5(state_ns2[24]),
        .O(i__carry__1_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_4
       (.I0(\reg_rd_data[31]_i_3 [9]),
        .O(i__carry__1_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_1
       (.I0(\reg_rd_data[31]_i_3 [16]),
        .O(i__carry__2_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_2
       (.I0(\reg_rd_data[31]_i_3 [15]),
        .O(i__carry__2_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_3
       (.I0(\reg_rd_data[31]_i_3 [14]),
        .O(i__carry__2_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_4
       (.I0(\reg_rd_data[31]_i_3 [13]),
        .O(i__carry__2_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__3_i_1
       (.I0(\reg_rd_data[31]_i_3 [20]),
        .O(i__carry__3_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__3_i_2
       (.I0(\reg_rd_data[31]_i_3 [19]),
        .O(i__carry__3_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__3_i_3
       (.I0(\reg_rd_data[31]_i_3 [18]),
        .O(i__carry__3_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__3_i_4
       (.I0(\reg_rd_data[31]_i_3 [17]),
        .O(i__carry__3_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__4_i_1
       (.I0(\reg_rd_data[31]_i_3 [24]),
        .O(i__carry__4_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__4_i_2
       (.I0(\reg_rd_data[31]_i_3 [23]),
        .O(i__carry__4_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__4_i_3
       (.I0(\reg_rd_data[31]_i_3 [22]),
        .O(i__carry__4_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__4_i_4
       (.I0(\reg_rd_data[31]_i_3 [21]),
        .O(i__carry__4_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__5_i_1
       (.I0(\reg_rd_data[31]_i_3 [28]),
        .O(i__carry__5_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__5_i_2
       (.I0(\reg_rd_data[31]_i_3 [27]),
        .O(i__carry__5_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__5_i_3
       (.I0(\reg_rd_data[31]_i_3 [26]),
        .O(i__carry__5_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__5_i_4
       (.I0(\reg_rd_data[31]_i_3 [25]),
        .O(i__carry__5_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__6_i_1
       (.I0(\reg_rd_data[31]_i_3 [31]),
        .O(i__carry__6_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__6_i_2
       (.I0(\reg_rd_data[31]_i_3 [30]),
        .O(i__carry__6_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__6_i_3
       (.I0(\reg_rd_data[31]_i_3 [29]),
        .O(i__carry__6_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1__1
       (.I0(\reg_rd_data[31]_i_3 [4]),
        .O(i__carry_i_1__1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_1__2
       (.I0(sts_trig_post_cnt[9]),
        .I1(state_ns2[9]),
        .I2(sts_trig_post_cnt[10]),
        .I3(state_ns2[10]),
        .I4(state_ns2[11]),
        .I5(sts_trig_post_cnt[11]),
        .O(i__carry_i_1__2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_2
       (.I0(\reg_rd_data[31]_i_3 [3]),
        .O(i__carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__0
       (.I0(sts_trig_post_cnt[6]),
        .I1(state_ns2[6]),
        .I2(sts_trig_post_cnt[7]),
        .I3(state_ns2[7]),
        .I4(state_ns2[8]),
        .I5(sts_trig_post_cnt[8]),
        .O(i__carry_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_3
       (.I0(\reg_rd_data[31]_i_3 [2]),
        .O(i__carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__0
       (.I0(state_ns2[5]),
        .I1(sts_trig_post_cnt[5]),
        .I2(sts_trig_post_cnt[4]),
        .I3(state_ns2[4]),
        .I4(sts_trig_post_cnt[3]),
        .I5(state_ns2[3]),
        .O(i__carry_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_4
       (.I0(\reg_rd_data[31]_i_3 [1]),
        .O(i__carry_i_4_n_0));
  LUT6 #(
    .INIT(64'h6006000000006006)) 
    i__carry_i_4__0
       (.I0(\reg_rd_data[31]_i_3 [0]),
        .I1(sts_trig_post_cnt[0]),
        .I2(sts_trig_post_cnt[2]),
        .I3(state_ns2[2]),
        .I4(sts_trig_post_cnt[1]),
        .I5(state_ns2[1]),
        .O(i__carry_i_4__0_n_0));
  FDRE \m_axis_tdata_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[0]_0 ),
        .Q(acq_tdata[0]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[10]_0 ),
        .Q(acq_tdata[10]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[11]_0 ),
        .Q(acq_tdata[11]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[12]_0 ),
        .Q(acq_tdata[12]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[13]_0 ),
        .Q(acq_tdata[13]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[14]_0 ),
        .Q(acq_tdata[14]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[15]_3 ),
        .Q(acq_tdata[15]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[1]_0 ),
        .Q(acq_tdata[1]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[2]_0 ),
        .Q(acq_tdata[2]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[3]_0 ),
        .Q(acq_tdata[3]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[4]_0 ),
        .Q(acq_tdata[4]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[5]_0 ),
        .Q(acq_tdata[5]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[6]_0 ),
        .Q(acq_tdata[6]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[7]_0 ),
        .Q(acq_tdata[7]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[8]_0 ),
        .Q(acq_tdata[8]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata_reg[9]_0 ),
        .Q(acq_tdata[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAEAAAAAA)) 
    m_axis_tlast_i_1
       (.I0(event_num_stop),
        .I1(trig_tvalid),
        .I2(\FSM_sequential_state_cs_reg[0]_0 ),
        .I3(state_ns1),
        .I4(\FSM_sequential_state_cs_reg[1]_0 ),
        .I5(\FSM_sequential_state_cs_reg[2]_0 ),
        .O(m_axis_tlast_i_1_n_0));
  FDRE m_axis_tlast_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(m_axis_tlast_i_1_n_0),
        .Q(acq_tlast),
        .R(1'b0));
  FDRE m_axis_tvalid_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(m_axis_tvalid0),
        .Q(acq_tvalid),
        .R(clear));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[0]_i_13 
       (.I0(Q[0]),
        .I1(\reg_rd_data[31]_i_3 [0]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[0]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[0]),
        .O(\reg_rd_data[0]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hACAFACACACAFAFAF)) 
    \reg_rd_data[0]_i_6 
       (.I0(\reg_rd_data[0]_i_13_n_0 ),
        .I1(\reg_rd_data_reg[17]_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(cfg_event_sel),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(\reg_rd_data_reg[5] [0]),
        .O(\cfg_event_sel_reg[0] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[10]_i_4 
       (.I0(Q[10]),
        .I1(\reg_rd_data[31]_i_3 [10]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[10]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[10]),
        .O(\cfg_trig_pre_samp_reg[10] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10551000)) 
    \reg_rd_data[11]_i_1 
       (.I0(\reg_rd_data_reg[17]_3 ),
        .I1(\reg_rd_data[11]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_2 ),
        .I4(\reg_rd_data_reg[11] ),
        .I5(\reg_rd_data_reg[11]_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[11]_i_2 
       (.I0(Q[11]),
        .I1(\reg_rd_data[31]_i_3 [11]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[11]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[11]),
        .O(\reg_rd_data[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10551000)) 
    \reg_rd_data[12]_i_1 
       (.I0(\reg_rd_data_reg[17]_3 ),
        .I1(\reg_rd_data[12]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_2 ),
        .I4(\reg_rd_data_reg[12] ),
        .I5(\reg_rd_data_reg[12]_0 ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[12]_i_2 
       (.I0(Q[12]),
        .I1(\reg_rd_data[31]_i_3 [12]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[12]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[12]),
        .O(\reg_rd_data[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10551000)) 
    \reg_rd_data[13]_i_1 
       (.I0(\reg_rd_data_reg[17]_3 ),
        .I1(\reg_rd_data[13]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_2 ),
        .I4(\reg_rd_data_reg[13] ),
        .I5(\reg_rd_data_reg[13]_0 ),
        .O(D[5]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[13]_i_2 
       (.I0(Q[13]),
        .I1(\reg_rd_data[31]_i_3 [13]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[13]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[13]),
        .O(\reg_rd_data[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10551000)) 
    \reg_rd_data[14]_i_1 
       (.I0(\reg_rd_data_reg[17]_3 ),
        .I1(\reg_rd_data[14]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_2 ),
        .I4(\reg_rd_data_reg[14] ),
        .I5(\reg_rd_data_reg[14]_0 ),
        .O(D[6]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[14]_i_2 
       (.I0(Q[14]),
        .I1(\reg_rd_data[31]_i_3 [14]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[14]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[14]),
        .O(\reg_rd_data[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFF200F2)) 
    \reg_rd_data[15]_i_1 
       (.I0(\reg_rd_data_reg[15] ),
        .I1(\reg_rd_data[15]_i_3_n_0 ),
        .I2(\reg_rd_data_reg[15]_0 ),
        .I3(\reg_rd_data_reg[17]_3 ),
        .I4(\reg_rd_data_reg[15]_1 ),
        .I5(\reg_rd_data_reg[15]_2 ),
        .O(D[7]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[15]_i_3 
       (.I0(Q[15]),
        .I1(\reg_rd_data[31]_i_3 [15]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[15]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[15]),
        .O(\reg_rd_data[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10551000)) 
    \reg_rd_data[16]_i_1 
       (.I0(\reg_rd_data_reg[17]_3 ),
        .I1(\reg_rd_data[16]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_2 ),
        .I4(\reg_rd_data_reg[16] ),
        .I5(\reg_rd_data_reg[16]_0 ),
        .O(D[8]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[16]_i_2 
       (.I0(Q[16]),
        .I1(\reg_rd_data[31]_i_3 [16]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[16]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[16]),
        .O(\reg_rd_data[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10551000)) 
    \reg_rd_data[17]_i_1 
       (.I0(\reg_rd_data_reg[17]_3 ),
        .I1(\reg_rd_data[17]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_2 ),
        .I4(\reg_rd_data_reg[17]_4 ),
        .I5(\reg_rd_data_reg[17]_5 ),
        .O(D[9]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[17]_i_2 
       (.I0(Q[17]),
        .I1(\reg_rd_data[31]_i_3 [17]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[17]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[17]),
        .O(\reg_rd_data[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[18]_i_3 
       (.I0(Q[18]),
        .I1(\reg_rd_data[31]_i_3 [18]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[18]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[18]),
        .O(\cfg_trig_pre_samp_reg[18] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[19]_i_3 
       (.I0(Q[19]),
        .I1(\reg_rd_data[31]_i_3 [19]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[19]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[19]),
        .O(\cfg_trig_pre_samp_reg[19] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[1]_i_10 
       (.I0(Q[1]),
        .I1(\reg_rd_data[31]_i_3 [1]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[1]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[1]),
        .O(\reg_rd_data[1]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h00005F1B)) 
    \reg_rd_data[1]_i_4 
       (.I0(\reg_rd_data_reg[17] ),
        .I1(\reg_rd_data_reg[17]_0 ),
        .I2(\reg_rd_data[1]_i_10_n_0 ),
        .I3(p_20_in),
        .I4(\reg_rd_data_reg[1] ),
        .O(sts_start_reg_1));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[20]_i_5 
       (.I0(Q[20]),
        .I1(\reg_rd_data[31]_i_3 [20]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[20]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[20]),
        .O(\cfg_trig_pre_samp_reg[20] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[21]_i_3 
       (.I0(Q[21]),
        .I1(\reg_rd_data[31]_i_3 [21]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[21]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[21]),
        .O(\cfg_trig_pre_samp_reg[21] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[22]_i_3 
       (.I0(Q[22]),
        .I1(\reg_rd_data[31]_i_3 [22]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[22]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[22]),
        .O(\cfg_trig_pre_samp_reg[22] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[23]_i_3 
       (.I0(Q[23]),
        .I1(\reg_rd_data[31]_i_3 [23]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[23]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[23]),
        .O(\cfg_trig_pre_samp_reg[23] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[24]_i_3 
       (.I0(Q[24]),
        .I1(\reg_rd_data[31]_i_3 [24]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[24]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[24]),
        .O(\cfg_trig_pre_samp_reg[24] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[25]_i_3 
       (.I0(Q[25]),
        .I1(\reg_rd_data[31]_i_3 [25]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[25]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[25]),
        .O(\cfg_trig_pre_samp_reg[25] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[26]_i_3 
       (.I0(Q[26]),
        .I1(\reg_rd_data[31]_i_3 [26]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[26]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[26]),
        .O(\cfg_trig_pre_samp_reg[26] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[27]_i_3 
       (.I0(Q[27]),
        .I1(\reg_rd_data[31]_i_3 [27]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[27]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[27]),
        .O(\cfg_trig_pre_samp_reg[27] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[28]_i_3 
       (.I0(Q[28]),
        .I1(\reg_rd_data[31]_i_3 [28]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[28]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[28]),
        .O(\cfg_trig_pre_samp_reg[28] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[29]_i_3 
       (.I0(Q[29]),
        .I1(\reg_rd_data[31]_i_3 [29]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[29]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[29]),
        .O(\cfg_trig_pre_samp_reg[29] ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[2]_i_19 
       (.I0(Q[2]),
        .I1(\reg_rd_data[31]_i_3 [2]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[2]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[2]),
        .O(\reg_rd_data[2]_i_19_n_0 ));
  LUT5 #(
    .INIT(32'hCCAFCCA0)) 
    \reg_rd_data[2]_i_9 
       (.I0(p_20_in),
        .I1(\reg_rd_data[2]_i_19_n_0 ),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(\reg_rd_data_reg[17] ),
        .I4(\reg_rd_data_reg[2]_i_3 ),
        .O(sts_start_reg_0));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[30]_i_3 
       (.I0(Q[30]),
        .I1(\reg_rd_data[31]_i_3 [30]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[30]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[30]),
        .O(\cfg_trig_pre_samp_reg[30] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[31]_i_8 
       (.I0(Q[31]),
        .I1(\reg_rd_data[31]_i_3 [31]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_overflow),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_overflow),
        .O(\cfg_trig_pre_samp_reg[31] ));
  LUT5 #(
    .INIT(32'hAC0FAC00)) 
    \reg_rd_data[3]_i_10 
       (.I0(Q[3]),
        .I1(\reg_rd_data[31]_i_3 [3]),
        .I2(\reg_rd_data_reg[17]_1 ),
        .I3(\reg_rd_data_reg[17]_0 ),
        .I4(sts_trig_post_cnt[3]),
        .O(\reg_rd_data[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h15150415FFFFFFFF)) 
    \reg_rd_data[3]_i_11__0 
       (.I0(\reg_rd_data_reg[17] ),
        .I1(\reg_rd_data_reg[17]_0 ),
        .I2(sts_trig_reg_0),
        .I3(\reg_rd_data_reg[5] [3]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(\reg_rd_data_reg[17]_2 ),
        .O(\reg_rd_data[3]_i_11__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF40FF)) 
    \reg_rd_data[3]_i_4 
       (.I0(\reg_rd_data_reg[17]_0 ),
        .I1(\reg_rd_data_reg[17]_1 ),
        .I2(sts_trig_pre_cnt[3]),
        .I3(\reg_rd_data_reg[17] ),
        .I4(\reg_rd_data[3]_i_10_n_0 ),
        .I5(\reg_rd_data[3]_i_11__0_n_0 ),
        .O(\sts_trig_pre_cnt_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \reg_rd_data[4]_i_14 
       (.I0(\reg_rd_data_reg[17] ),
        .I1(sts_trig_post_cnt[4]),
        .O(\reg_rd_data[4]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h0000FF02)) 
    \reg_rd_data[4]_i_3 
       (.I0(\reg_rd_data_reg[5] [4]),
        .I1(\reg_rd_data_reg[17]_0 ),
        .I2(\reg_rd_data_reg[17]_1 ),
        .I3(\reg_rd_data_reg[17] ),
        .I4(\reg_rd_data[4]_i_8_n_0 ),
        .O(\cfg_trig_mask_reg[4] ));
  LUT6 #(
    .INIT(64'h530F530053FF53F0)) 
    \reg_rd_data[4]_i_8 
       (.I0(Q[4]),
        .I1(\reg_rd_data[31]_i_3 [4]),
        .I2(\reg_rd_data_reg[17]_1 ),
        .I3(\reg_rd_data_reg[17]_0 ),
        .I4(\reg_rd_data[4]_i_14_n_0 ),
        .I5(sts_trig_pre_cnt[4]),
        .O(\reg_rd_data[4]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \reg_rd_data[5]_i_14 
       (.I0(\reg_rd_data_reg[17] ),
        .I1(sts_trig_post_cnt[5]),
        .O(\reg_rd_data[5]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h0000FF02)) 
    \reg_rd_data[5]_i_3 
       (.I0(\reg_rd_data_reg[5] [5]),
        .I1(\reg_rd_data_reg[17]_0 ),
        .I2(\reg_rd_data_reg[17]_1 ),
        .I3(\reg_rd_data_reg[17] ),
        .I4(\reg_rd_data[5]_i_8_n_0 ),
        .O(\cfg_trig_mask_reg[5] ));
  LUT6 #(
    .INIT(64'h530F530053FF53F0)) 
    \reg_rd_data[5]_i_8 
       (.I0(Q[5]),
        .I1(\reg_rd_data[31]_i_3 [5]),
        .I2(\reg_rd_data_reg[17]_1 ),
        .I3(\reg_rd_data_reg[17]_0 ),
        .I4(\reg_rd_data[5]_i_14_n_0 ),
        .I5(sts_trig_pre_cnt[5]),
        .O(\reg_rd_data[5]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10551000)) 
    \reg_rd_data[6]_i_1 
       (.I0(\reg_rd_data_reg[17]_3 ),
        .I1(\reg_rd_data[6]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_2 ),
        .I4(\reg_rd_data_reg[6] ),
        .I5(\reg_rd_data_reg[6]_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[6]_i_2 
       (.I0(Q[6]),
        .I1(\reg_rd_data[31]_i_3 [6]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[6]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[6]),
        .O(\reg_rd_data[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10551000)) 
    \reg_rd_data[7]_i_1 
       (.I0(\reg_rd_data_reg[17]_3 ),
        .I1(\reg_rd_data[7]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_2 ),
        .I4(\reg_rd_data_reg[7] ),
        .I5(\reg_rd_data_reg[7]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[7]_i_2 
       (.I0(Q[7]),
        .I1(\reg_rd_data[31]_i_3 [7]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[7]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[7]),
        .O(\reg_rd_data[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[8]_i_4 
       (.I0(Q[8]),
        .I1(\reg_rd_data[31]_i_3 [8]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[8]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[8]),
        .O(\cfg_trig_pre_samp_reg[8] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10551000)) 
    \reg_rd_data[9]_i_1 
       (.I0(\reg_rd_data_reg[17]_3 ),
        .I1(\reg_rd_data[9]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[17]_2 ),
        .I4(\reg_rd_data_reg[9] ),
        .I5(\reg_rd_data_reg[9]_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[9]_i_2 
       (.I0(Q[9]),
        .I1(\reg_rd_data[31]_i_3 [9]),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(sts_trig_pre_cnt[9]),
        .I4(\reg_rd_data_reg[17]_1 ),
        .I5(sts_trig_post_cnt[9]),
        .O(\reg_rd_data[9]_i_2_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns1_carry
       (.CI(1'b0),
        .CO({state_ns1_carry_n_0,state_ns1_carry_n_1,state_ns1_carry_n_2,state_ns1_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_state_ns1_carry_O_UNCONNECTED[3:0]),
        .S({state_ns1_carry_i_1_n_0,state_ns1_carry_i_2_n_0,state_ns1_carry_i_3_n_0,state_ns1_carry_i_4_n_0}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns1_carry__0
       (.CI(state_ns1_carry_n_0),
        .CO({state_ns1_carry__0_n_0,state_ns1_carry__0_n_1,state_ns1_carry__0_n_2,state_ns1_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_state_ns1_carry__0_O_UNCONNECTED[3:0]),
        .S({state_ns1_carry__0_i_1_n_0,state_ns1_carry__0_i_2_n_0,state_ns1_carry__0_i_3_n_0,state_ns1_carry__0_i_4_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry__0_i_1
       (.I0(state_ns20_in[23]),
        .I1(sts_trig_pre_cnt[23]),
        .I2(sts_trig_pre_cnt[21]),
        .I3(state_ns20_in[21]),
        .I4(sts_trig_pre_cnt[22]),
        .I5(state_ns20_in[22]),
        .O(state_ns1_carry__0_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry__0_i_2
       (.I0(state_ns20_in[20]),
        .I1(sts_trig_pre_cnt[20]),
        .I2(sts_trig_pre_cnt[18]),
        .I3(state_ns20_in[18]),
        .I4(sts_trig_pre_cnt[19]),
        .I5(state_ns20_in[19]),
        .O(state_ns1_carry__0_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry__0_i_3
       (.I0(state_ns20_in[17]),
        .I1(sts_trig_pre_cnt[17]),
        .I2(sts_trig_pre_cnt[15]),
        .I3(state_ns20_in[15]),
        .I4(sts_trig_pre_cnt[16]),
        .I5(state_ns20_in[16]),
        .O(state_ns1_carry__0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry__0_i_4
       (.I0(state_ns20_in[14]),
        .I1(sts_trig_pre_cnt[14]),
        .I2(sts_trig_pre_cnt[12]),
        .I3(state_ns20_in[12]),
        .I4(sts_trig_pre_cnt[13]),
        .I5(state_ns20_in[13]),
        .O(state_ns1_carry__0_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns1_carry__1
       (.CI(state_ns1_carry__0_n_0),
        .CO({NLW_state_ns1_carry__1_CO_UNCONNECTED[3],state_ns11_out,state_ns1_carry__1_n_2,state_ns1_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_state_ns1_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,state_ns1_carry__1_i_1_n_0,state_ns1_carry__1_i_2_n_0,state_ns1_carry__1_i_3_n_0}));
  LUT4 #(
    .INIT(16'h9009)) 
    state_ns1_carry__1_i_1
       (.I0(state_ns20_in[31]),
        .I1(\sts_trig_pre_cnt_reg_n_0_[31] ),
        .I2(state_ns20_in[30]),
        .I3(sts_trig_pre_cnt[30]),
        .O(state_ns1_carry__1_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry__1_i_2
       (.I0(state_ns20_in[29]),
        .I1(sts_trig_pre_cnt[29]),
        .I2(sts_trig_pre_cnt[27]),
        .I3(state_ns20_in[27]),
        .I4(sts_trig_pre_cnt[28]),
        .I5(state_ns20_in[28]),
        .O(state_ns1_carry__1_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry__1_i_3
       (.I0(state_ns20_in[26]),
        .I1(sts_trig_pre_cnt[26]),
        .I2(sts_trig_pre_cnt[24]),
        .I3(state_ns20_in[24]),
        .I4(sts_trig_pre_cnt[25]),
        .I5(state_ns20_in[25]),
        .O(state_ns1_carry__1_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry_i_1
       (.I0(state_ns20_in[11]),
        .I1(sts_trig_pre_cnt[11]),
        .I2(sts_trig_pre_cnt[9]),
        .I3(state_ns20_in[9]),
        .I4(sts_trig_pre_cnt[10]),
        .I5(state_ns20_in[10]),
        .O(state_ns1_carry_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry_i_2
       (.I0(state_ns20_in[8]),
        .I1(sts_trig_pre_cnt[8]),
        .I2(sts_trig_pre_cnt[6]),
        .I3(state_ns20_in[6]),
        .I4(sts_trig_pre_cnt[7]),
        .I5(state_ns20_in[7]),
        .O(state_ns1_carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    state_ns1_carry_i_3
       (.I0(sts_trig_pre_cnt[5]),
        .I1(state_ns20_in[5]),
        .I2(sts_trig_pre_cnt[3]),
        .I3(state_ns20_in[3]),
        .I4(state_ns20_in[4]),
        .I5(sts_trig_pre_cnt[4]),
        .O(state_ns1_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h6006000000006006)) 
    state_ns1_carry_i_4
       (.I0(Q[0]),
        .I1(sts_trig_pre_cnt[0]),
        .I2(sts_trig_pre_cnt[2]),
        .I3(state_ns20_in[2]),
        .I4(sts_trig_pre_cnt[1]),
        .I5(state_ns20_in[1]),
        .O(state_ns1_carry_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns1_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\state_ns1_inferred__0/i__carry_n_0 ,\state_ns1_inferred__0/i__carry_n_1 ,\state_ns1_inferred__0/i__carry_n_2 ,\state_ns1_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_state_ns1_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_1__2_n_0,i__carry_i_2__0_n_0,i__carry_i_3__0_n_0,i__carry_i_4__0_n_0}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns1_inferred__0/i__carry__0 
       (.CI(\state_ns1_inferred__0/i__carry_n_0 ),
        .CO({\state_ns1_inferred__0/i__carry__0_n_0 ,\state_ns1_inferred__0/i__carry__0_n_1 ,\state_ns1_inferred__0/i__carry__0_n_2 ,\state_ns1_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_state_ns1_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_1__0_n_0,i__carry__0_i_2__0_n_0,i__carry__0_i_3__0_n_0,i__carry__0_i_4__0_n_0}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns1_inferred__0/i__carry__1 
       (.CI(\state_ns1_inferred__0/i__carry__0_n_0 ),
        .CO({\NLW_state_ns1_inferred__0/i__carry__1_CO_UNCONNECTED [3],state_ns1,\state_ns1_inferred__0/i__carry__1_n_2 ,\state_ns1_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_state_ns1_inferred__0/i__carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,i__carry__1_i_1__0_n_0,i__carry__1_i_2__0_n_0,i__carry__1_i_3__0_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry
       (.CI(1'b0),
        .CO({state_ns2_carry_n_0,state_ns2_carry_n_1,state_ns2_carry_n_2,state_ns2_carry_n_3}),
        .CYINIT(Q[0]),
        .DI(Q[4:1]),
        .O(state_ns20_in[4:1]),
        .S({state_ns2_carry_i_1_n_0,state_ns2_carry_i_2_n_0,state_ns2_carry_i_3_n_0,state_ns2_carry_i_4_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry__0
       (.CI(state_ns2_carry_n_0),
        .CO({state_ns2_carry__0_n_0,state_ns2_carry__0_n_1,state_ns2_carry__0_n_2,state_ns2_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(Q[8:5]),
        .O(state_ns20_in[8:5]),
        .S({state_ns2_carry__0_i_1_n_0,state_ns2_carry__0_i_2_n_0,state_ns2_carry__0_i_3_n_0,state_ns2_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__0_i_1
       (.I0(Q[8]),
        .O(state_ns2_carry__0_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__0_i_2
       (.I0(Q[7]),
        .O(state_ns2_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__0_i_3
       (.I0(Q[6]),
        .O(state_ns2_carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__0_i_4
       (.I0(Q[5]),
        .O(state_ns2_carry__0_i_4_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry__1
       (.CI(state_ns2_carry__0_n_0),
        .CO({state_ns2_carry__1_n_0,state_ns2_carry__1_n_1,state_ns2_carry__1_n_2,state_ns2_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI(Q[12:9]),
        .O(state_ns20_in[12:9]),
        .S({state_ns2_carry__1_i_1_n_0,state_ns2_carry__1_i_2_n_0,state_ns2_carry__1_i_3_n_0,state_ns2_carry__1_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__1_i_1
       (.I0(Q[12]),
        .O(state_ns2_carry__1_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__1_i_2
       (.I0(Q[11]),
        .O(state_ns2_carry__1_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__1_i_3
       (.I0(Q[10]),
        .O(state_ns2_carry__1_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__1_i_4
       (.I0(Q[9]),
        .O(state_ns2_carry__1_i_4_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry__2
       (.CI(state_ns2_carry__1_n_0),
        .CO({state_ns2_carry__2_n_0,state_ns2_carry__2_n_1,state_ns2_carry__2_n_2,state_ns2_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI(Q[16:13]),
        .O(state_ns20_in[16:13]),
        .S({state_ns2_carry__2_i_1_n_0,state_ns2_carry__2_i_2_n_0,state_ns2_carry__2_i_3_n_0,state_ns2_carry__2_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__2_i_1
       (.I0(Q[16]),
        .O(state_ns2_carry__2_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__2_i_2
       (.I0(Q[15]),
        .O(state_ns2_carry__2_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__2_i_3
       (.I0(Q[14]),
        .O(state_ns2_carry__2_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__2_i_4
       (.I0(Q[13]),
        .O(state_ns2_carry__2_i_4_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry__3
       (.CI(state_ns2_carry__2_n_0),
        .CO({state_ns2_carry__3_n_0,state_ns2_carry__3_n_1,state_ns2_carry__3_n_2,state_ns2_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI(Q[20:17]),
        .O(state_ns20_in[20:17]),
        .S({state_ns2_carry__3_i_1_n_0,state_ns2_carry__3_i_2_n_0,state_ns2_carry__3_i_3_n_0,state_ns2_carry__3_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__3_i_1
       (.I0(Q[20]),
        .O(state_ns2_carry__3_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__3_i_2
       (.I0(Q[19]),
        .O(state_ns2_carry__3_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__3_i_3
       (.I0(Q[18]),
        .O(state_ns2_carry__3_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__3_i_4
       (.I0(Q[17]),
        .O(state_ns2_carry__3_i_4_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry__4
       (.CI(state_ns2_carry__3_n_0),
        .CO({state_ns2_carry__4_n_0,state_ns2_carry__4_n_1,state_ns2_carry__4_n_2,state_ns2_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI(Q[24:21]),
        .O(state_ns20_in[24:21]),
        .S({state_ns2_carry__4_i_1_n_0,state_ns2_carry__4_i_2_n_0,state_ns2_carry__4_i_3_n_0,state_ns2_carry__4_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__4_i_1
       (.I0(Q[24]),
        .O(state_ns2_carry__4_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__4_i_2
       (.I0(Q[23]),
        .O(state_ns2_carry__4_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__4_i_3
       (.I0(Q[22]),
        .O(state_ns2_carry__4_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__4_i_4
       (.I0(Q[21]),
        .O(state_ns2_carry__4_i_4_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry__5
       (.CI(state_ns2_carry__4_n_0),
        .CO({state_ns2_carry__5_n_0,state_ns2_carry__5_n_1,state_ns2_carry__5_n_2,state_ns2_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI(Q[28:25]),
        .O(state_ns20_in[28:25]),
        .S({state_ns2_carry__5_i_1_n_0,state_ns2_carry__5_i_2_n_0,state_ns2_carry__5_i_3_n_0,state_ns2_carry__5_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__5_i_1
       (.I0(Q[28]),
        .O(state_ns2_carry__5_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__5_i_2
       (.I0(Q[27]),
        .O(state_ns2_carry__5_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__5_i_3
       (.I0(Q[26]),
        .O(state_ns2_carry__5_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__5_i_4
       (.I0(Q[25]),
        .O(state_ns2_carry__5_i_4_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 state_ns2_carry__6
       (.CI(state_ns2_carry__5_n_0),
        .CO({NLW_state_ns2_carry__6_CO_UNCONNECTED[3:2],state_ns2_carry__6_n_2,state_ns2_carry__6_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,Q[30:29]}),
        .O({NLW_state_ns2_carry__6_O_UNCONNECTED[3],state_ns20_in[31:29]}),
        .S({1'b0,state_ns2_carry__6_i_1_n_0,state_ns2_carry__6_i_2_n_0,state_ns2_carry__6_i_3_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__6_i_1
       (.I0(Q[31]),
        .O(state_ns2_carry__6_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__6_i_2
       (.I0(Q[30]),
        .O(state_ns2_carry__6_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry__6_i_3
       (.I0(Q[29]),
        .O(state_ns2_carry__6_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry_i_1
       (.I0(Q[4]),
        .O(state_ns2_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry_i_2
       (.I0(Q[3]),
        .O(state_ns2_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry_i_3
       (.I0(Q[2]),
        .O(state_ns2_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    state_ns2_carry_i_4
       (.I0(Q[1]),
        .O(state_ns2_carry_i_4_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\state_ns2_inferred__0/i__carry_n_0 ,\state_ns2_inferred__0/i__carry_n_1 ,\state_ns2_inferred__0/i__carry_n_2 ,\state_ns2_inferred__0/i__carry_n_3 }),
        .CYINIT(\reg_rd_data[31]_i_3 [0]),
        .DI(\reg_rd_data[31]_i_3 [4:1]),
        .O(state_ns2[4:1]),
        .S({i__carry_i_1__1_n_0,i__carry_i_2_n_0,i__carry_i_3_n_0,i__carry_i_4_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry__0 
       (.CI(\state_ns2_inferred__0/i__carry_n_0 ),
        .CO({\state_ns2_inferred__0/i__carry__0_n_0 ,\state_ns2_inferred__0/i__carry__0_n_1 ,\state_ns2_inferred__0/i__carry__0_n_2 ,\state_ns2_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_rd_data[31]_i_3 [8:5]),
        .O(state_ns2[8:5]),
        .S({i__carry__0_i_1_n_0,i__carry__0_i_2_n_0,i__carry__0_i_3_n_0,i__carry__0_i_4_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry__1 
       (.CI(\state_ns2_inferred__0/i__carry__0_n_0 ),
        .CO({\state_ns2_inferred__0/i__carry__1_n_0 ,\state_ns2_inferred__0/i__carry__1_n_1 ,\state_ns2_inferred__0/i__carry__1_n_2 ,\state_ns2_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_rd_data[31]_i_3 [12:9]),
        .O(state_ns2[12:9]),
        .S({i__carry__1_i_1_n_0,i__carry__1_i_2_n_0,i__carry__1_i_3_n_0,i__carry__1_i_4_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry__2 
       (.CI(\state_ns2_inferred__0/i__carry__1_n_0 ),
        .CO({\state_ns2_inferred__0/i__carry__2_n_0 ,\state_ns2_inferred__0/i__carry__2_n_1 ,\state_ns2_inferred__0/i__carry__2_n_2 ,\state_ns2_inferred__0/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_rd_data[31]_i_3 [16:13]),
        .O(state_ns2[16:13]),
        .S({i__carry__2_i_1_n_0,i__carry__2_i_2_n_0,i__carry__2_i_3_n_0,i__carry__2_i_4_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry__3 
       (.CI(\state_ns2_inferred__0/i__carry__2_n_0 ),
        .CO({\state_ns2_inferred__0/i__carry__3_n_0 ,\state_ns2_inferred__0/i__carry__3_n_1 ,\state_ns2_inferred__0/i__carry__3_n_2 ,\state_ns2_inferred__0/i__carry__3_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_rd_data[31]_i_3 [20:17]),
        .O(state_ns2[20:17]),
        .S({i__carry__3_i_1_n_0,i__carry__3_i_2_n_0,i__carry__3_i_3_n_0,i__carry__3_i_4_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry__4 
       (.CI(\state_ns2_inferred__0/i__carry__3_n_0 ),
        .CO({\state_ns2_inferred__0/i__carry__4_n_0 ,\state_ns2_inferred__0/i__carry__4_n_1 ,\state_ns2_inferred__0/i__carry__4_n_2 ,\state_ns2_inferred__0/i__carry__4_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_rd_data[31]_i_3 [24:21]),
        .O(state_ns2[24:21]),
        .S({i__carry__4_i_1_n_0,i__carry__4_i_2_n_0,i__carry__4_i_3_n_0,i__carry__4_i_4_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry__5 
       (.CI(\state_ns2_inferred__0/i__carry__4_n_0 ),
        .CO({\state_ns2_inferred__0/i__carry__5_n_0 ,\state_ns2_inferred__0/i__carry__5_n_1 ,\state_ns2_inferred__0/i__carry__5_n_2 ,\state_ns2_inferred__0/i__carry__5_n_3 }),
        .CYINIT(1'b0),
        .DI(\reg_rd_data[31]_i_3 [28:25]),
        .O(state_ns2[28:25]),
        .S({i__carry__5_i_1_n_0,i__carry__5_i_2_n_0,i__carry__5_i_3_n_0,i__carry__5_i_4_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \state_ns2_inferred__0/i__carry__6 
       (.CI(\state_ns2_inferred__0/i__carry__5_n_0 ),
        .CO({\NLW_state_ns2_inferred__0/i__carry__6_CO_UNCONNECTED [3:2],\state_ns2_inferred__0/i__carry__6_n_2 ,\state_ns2_inferred__0/i__carry__6_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\reg_rd_data[31]_i_3 [30:29]}),
        .O({\NLW_state_ns2_inferred__0/i__carry__6_O_UNCONNECTED [3],state_ns2[31:29]}),
        .S({1'b0,i__carry__6_i_1_n_0,i__carry__6_i_2_n_0,i__carry__6_i_3_n_0}));
  LUT6 #(
    .INIT(64'h00000000EAFFEAEA)) 
    sts_acquire_i_1
       (.I0(sts_acquire_reg_0),
        .I1(sts_acquire_i_2_n_0),
        .I2(event_num_trig_reg),
        .I3(sts_acquire_reg_1),
        .I4(event_num_start),
        .I5(sts_acquire),
        .O(sts_acquire_i_1_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sts_acquire_i_11
       (.I0(Q[5]),
        .I1(Q[12]),
        .I2(Q[10]),
        .I3(Q[13]),
        .O(sts_acquire_i_11_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sts_acquire_i_12
       (.I0(Q[16]),
        .I1(Q[20]),
        .I2(Q[3]),
        .I3(Q[30]),
        .O(sts_acquire_i_12_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    sts_acquire_i_13
       (.I0(Q[22]),
        .I1(Q[6]),
        .I2(Q[28]),
        .I3(Q[2]),
        .I4(sts_acquire_i_14_n_0),
        .O(sts_acquire_i_13_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sts_acquire_i_14
       (.I0(Q[4]),
        .I1(Q[27]),
        .I2(Q[0]),
        .I3(Q[11]),
        .O(sts_acquire_i_14_n_0));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'h40)) 
    sts_acquire_i_2
       (.I0(\FSM_sequential_state_cs_reg[2]_0 ),
        .I1(\FSM_sequential_state_cs_reg[1]_0 ),
        .I2(\FSM_sequential_state_cs_reg[0]_0 ),
        .O(sts_acquire_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFFFEEE)) 
    sts_acquire_i_3
       (.I0(sts_acquire_i_6_n_0),
        .I1(event_num_trig),
        .I2(\reg_rd_data_reg[5] [5]),
        .I3(trig_ip[5]),
        .I4(sts_acquire_i_7_n_0),
        .O(event_num_trig_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFF00002000)) 
    sts_acquire_i_5
       (.I0(trig_tvalid),
        .I1(\FSM_sequential_state_cs_reg[0]_0 ),
        .I2(state_ns1),
        .I3(\FSM_sequential_state_cs_reg[1]_0 ),
        .I4(\FSM_sequential_state_cs_reg[2]_0 ),
        .I5(\FSM_sequential_state_cs[2]_i_4_n_0 ),
        .O(sts_acquire));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    sts_acquire_i_6
       (.I0(trig_ip[4]),
        .I1(\reg_rd_data_reg[5] [4]),
        .I2(\reg_rd_data_reg[5] [2]),
        .I3(trig_ip[2]),
        .I4(\reg_rd_data_reg[5] [3]),
        .I5(trig_ip[3]),
        .O(sts_acquire_i_6_n_0));
  LUT4 #(
    .INIT(16'hF888)) 
    sts_acquire_i_7
       (.I0(trig_ip[0]),
        .I1(\reg_rd_data_reg[5] [0]),
        .I2(trig_ip[1]),
        .I3(\reg_rd_data_reg[5] [1]),
        .O(sts_acquire_i_7_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    sts_acquire_i_8
       (.I0(Q[23]),
        .I1(Q[9]),
        .I2(Q[21]),
        .I3(Q[15]),
        .I4(sts_acquire_i_11_n_0),
        .O(\cfg_trig_pre_samp_reg[23]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    sts_acquire_i_9
       (.I0(sts_acquire_i_12_n_0),
        .I1(Q[17]),
        .I2(Q[19]),
        .I3(Q[8]),
        .I4(Q[26]),
        .I5(sts_acquire_i_13_n_0),
        .O(\cfg_trig_pre_samp_reg[17] ));
  FDRE sts_acquire_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(sts_acquire_i_1_n_0),
        .Q(sts_acquire_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT5 #(
    .INIT(32'h00000E00)) 
    sts_start_i_1
       (.I0(p_20_in),
        .I1(event_num_start),
        .I2(event_num_stop),
        .I3(m_axi_osc1_aresetn),
        .I4(sts_start_i_2_n_0),
        .O(sts_start_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    sts_start_i_2
       (.I0(\FSM_sequential_state_cs_reg[2]_0 ),
        .I1(\FSM_sequential_state_cs_reg[1]_0 ),
        .I2(state_ns1),
        .I3(\FSM_sequential_state_cs_reg[0]_0 ),
        .I4(trig_tvalid),
        .O(sts_start_i_2_n_0));
  FDRE sts_start_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(sts_start_i_1_n_0),
        .Q(p_20_in),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0040)) 
    \sts_trig_post_cnt[0]_i_1 
       (.I0(\FSM_sequential_state_cs_reg[2]_0 ),
        .I1(\FSM_sequential_state_cs_reg[1]_0 ),
        .I2(trig_tvalid),
        .I3(\FSM_sequential_state_cs_reg[0]_0 ),
        .O(sts_trig_post_cnt0));
  LUT1 #(
    .INIT(2'h1)) 
    \sts_trig_post_cnt[0]_i_3 
       (.I0(sts_trig_post_cnt[0]),
        .O(\sts_trig_post_cnt[0]_i_3_n_0 ));
  FDRE \sts_trig_post_cnt_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[0]_i_2_n_7 ),
        .Q(sts_trig_post_cnt[0]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\sts_trig_post_cnt_reg[0]_i_2_n_0 ,\sts_trig_post_cnt_reg[0]_i_2_n_1 ,\sts_trig_post_cnt_reg[0]_i_2_n_2 ,\sts_trig_post_cnt_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\sts_trig_post_cnt_reg[0]_i_2_n_4 ,\sts_trig_post_cnt_reg[0]_i_2_n_5 ,\sts_trig_post_cnt_reg[0]_i_2_n_6 ,\sts_trig_post_cnt_reg[0]_i_2_n_7 }),
        .S({sts_trig_post_cnt[3:1],\sts_trig_post_cnt[0]_i_3_n_0 }));
  FDRE \sts_trig_post_cnt_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[8]_i_1_n_5 ),
        .Q(sts_trig_post_cnt[10]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[8]_i_1_n_4 ),
        .Q(sts_trig_post_cnt[11]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[12]_i_1_n_7 ),
        .Q(sts_trig_post_cnt[12]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[12]_i_1 
       (.CI(\sts_trig_post_cnt_reg[8]_i_1_n_0 ),
        .CO({\sts_trig_post_cnt_reg[12]_i_1_n_0 ,\sts_trig_post_cnt_reg[12]_i_1_n_1 ,\sts_trig_post_cnt_reg[12]_i_1_n_2 ,\sts_trig_post_cnt_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_post_cnt_reg[12]_i_1_n_4 ,\sts_trig_post_cnt_reg[12]_i_1_n_5 ,\sts_trig_post_cnt_reg[12]_i_1_n_6 ,\sts_trig_post_cnt_reg[12]_i_1_n_7 }),
        .S(sts_trig_post_cnt[15:12]));
  FDRE \sts_trig_post_cnt_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[12]_i_1_n_6 ),
        .Q(sts_trig_post_cnt[13]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[12]_i_1_n_5 ),
        .Q(sts_trig_post_cnt[14]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[12]_i_1_n_4 ),
        .Q(sts_trig_post_cnt[15]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[16]_i_1_n_7 ),
        .Q(sts_trig_post_cnt[16]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[16]_i_1 
       (.CI(\sts_trig_post_cnt_reg[12]_i_1_n_0 ),
        .CO({\sts_trig_post_cnt_reg[16]_i_1_n_0 ,\sts_trig_post_cnt_reg[16]_i_1_n_1 ,\sts_trig_post_cnt_reg[16]_i_1_n_2 ,\sts_trig_post_cnt_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_post_cnt_reg[16]_i_1_n_4 ,\sts_trig_post_cnt_reg[16]_i_1_n_5 ,\sts_trig_post_cnt_reg[16]_i_1_n_6 ,\sts_trig_post_cnt_reg[16]_i_1_n_7 }),
        .S(sts_trig_post_cnt[19:16]));
  FDRE \sts_trig_post_cnt_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[16]_i_1_n_6 ),
        .Q(sts_trig_post_cnt[17]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[16]_i_1_n_5 ),
        .Q(sts_trig_post_cnt[18]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[16]_i_1_n_4 ),
        .Q(sts_trig_post_cnt[19]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[0]_i_2_n_6 ),
        .Q(sts_trig_post_cnt[1]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[20]_i_1_n_7 ),
        .Q(sts_trig_post_cnt[20]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[20]_i_1 
       (.CI(\sts_trig_post_cnt_reg[16]_i_1_n_0 ),
        .CO({\sts_trig_post_cnt_reg[20]_i_1_n_0 ,\sts_trig_post_cnt_reg[20]_i_1_n_1 ,\sts_trig_post_cnt_reg[20]_i_1_n_2 ,\sts_trig_post_cnt_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_post_cnt_reg[20]_i_1_n_4 ,\sts_trig_post_cnt_reg[20]_i_1_n_5 ,\sts_trig_post_cnt_reg[20]_i_1_n_6 ,\sts_trig_post_cnt_reg[20]_i_1_n_7 }),
        .S(sts_trig_post_cnt[23:20]));
  FDRE \sts_trig_post_cnt_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[20]_i_1_n_6 ),
        .Q(sts_trig_post_cnt[21]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[20]_i_1_n_5 ),
        .Q(sts_trig_post_cnt[22]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[20]_i_1_n_4 ),
        .Q(sts_trig_post_cnt[23]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[24]_i_1_n_7 ),
        .Q(sts_trig_post_cnt[24]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[24]_i_1 
       (.CI(\sts_trig_post_cnt_reg[20]_i_1_n_0 ),
        .CO({\sts_trig_post_cnt_reg[24]_i_1_n_0 ,\sts_trig_post_cnt_reg[24]_i_1_n_1 ,\sts_trig_post_cnt_reg[24]_i_1_n_2 ,\sts_trig_post_cnt_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_post_cnt_reg[24]_i_1_n_4 ,\sts_trig_post_cnt_reg[24]_i_1_n_5 ,\sts_trig_post_cnt_reg[24]_i_1_n_6 ,\sts_trig_post_cnt_reg[24]_i_1_n_7 }),
        .S(sts_trig_post_cnt[27:24]));
  FDRE \sts_trig_post_cnt_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[24]_i_1_n_6 ),
        .Q(sts_trig_post_cnt[25]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[24]_i_1_n_5 ),
        .Q(sts_trig_post_cnt[26]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[24]_i_1_n_4 ),
        .Q(sts_trig_post_cnt[27]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[28]_i_1_n_7 ),
        .Q(sts_trig_post_cnt[28]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[28]_i_1 
       (.CI(\sts_trig_post_cnt_reg[24]_i_1_n_0 ),
        .CO({\NLW_sts_trig_post_cnt_reg[28]_i_1_CO_UNCONNECTED [3],\sts_trig_post_cnt_reg[28]_i_1_n_1 ,\sts_trig_post_cnt_reg[28]_i_1_n_2 ,\sts_trig_post_cnt_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_post_cnt_reg[28]_i_1_n_4 ,\sts_trig_post_cnt_reg[28]_i_1_n_5 ,\sts_trig_post_cnt_reg[28]_i_1_n_6 ,\sts_trig_post_cnt_reg[28]_i_1_n_7 }),
        .S({\sts_trig_post_cnt_reg_n_0_[31] ,sts_trig_post_cnt[30:28]}));
  FDRE \sts_trig_post_cnt_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[28]_i_1_n_6 ),
        .Q(sts_trig_post_cnt[29]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[0]_i_2_n_5 ),
        .Q(sts_trig_post_cnt[2]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[28]_i_1_n_5 ),
        .Q(sts_trig_post_cnt[30]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[28]_i_1_n_4 ),
        .Q(\sts_trig_post_cnt_reg_n_0_[31] ),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[0]_i_2_n_4 ),
        .Q(sts_trig_post_cnt[3]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[4]_i_1_n_7 ),
        .Q(sts_trig_post_cnt[4]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[4]_i_1 
       (.CI(\sts_trig_post_cnt_reg[0]_i_2_n_0 ),
        .CO({\sts_trig_post_cnt_reg[4]_i_1_n_0 ,\sts_trig_post_cnt_reg[4]_i_1_n_1 ,\sts_trig_post_cnt_reg[4]_i_1_n_2 ,\sts_trig_post_cnt_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_post_cnt_reg[4]_i_1_n_4 ,\sts_trig_post_cnt_reg[4]_i_1_n_5 ,\sts_trig_post_cnt_reg[4]_i_1_n_6 ,\sts_trig_post_cnt_reg[4]_i_1_n_7 }),
        .S(sts_trig_post_cnt[7:4]));
  FDRE \sts_trig_post_cnt_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[4]_i_1_n_6 ),
        .Q(sts_trig_post_cnt[5]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[4]_i_1_n_5 ),
        .Q(sts_trig_post_cnt[6]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[4]_i_1_n_4 ),
        .Q(sts_trig_post_cnt[7]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_post_cnt_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[8]_i_1_n_7 ),
        .Q(sts_trig_post_cnt[8]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_post_cnt_reg[8]_i_1 
       (.CI(\sts_trig_post_cnt_reg[4]_i_1_n_0 ),
        .CO({\sts_trig_post_cnt_reg[8]_i_1_n_0 ,\sts_trig_post_cnt_reg[8]_i_1_n_1 ,\sts_trig_post_cnt_reg[8]_i_1_n_2 ,\sts_trig_post_cnt_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_post_cnt_reg[8]_i_1_n_4 ,\sts_trig_post_cnt_reg[8]_i_1_n_5 ,\sts_trig_post_cnt_reg[8]_i_1_n_6 ,\sts_trig_post_cnt_reg[8]_i_1_n_7 }),
        .S(sts_trig_post_cnt[11:8]));
  FDRE \sts_trig_post_cnt_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_post_cnt0),
        .D(\sts_trig_post_cnt_reg[8]_i_1_n_6 ),
        .Q(sts_trig_post_cnt[9]),
        .R(event_num_reset_reg));
  LUT5 #(
    .INIT(32'hFFFF0100)) 
    sts_trig_post_overflow_i_1
       (.I0(sts_trig_post_overflow_i_2_n_0),
        .I1(sts_trig_post_overflow_i_3_n_0),
        .I2(sts_trig_post_overflow_i_4_n_0),
        .I3(sts_trig_post_overflow_i_5_n_0),
        .I4(sts_trig_post_overflow),
        .O(sts_trig_post_overflow_i_1_n_0));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    sts_trig_post_overflow_i_2
       (.I0(sts_trig_post_cnt[20]),
        .I1(sts_trig_post_cnt[9]),
        .I2(sts_trig_post_cnt[0]),
        .I3(sts_trig_post_cnt[6]),
        .I4(sts_trig_post_cnt[13]),
        .I5(sts_trig_post_cnt[14]),
        .O(sts_trig_post_overflow_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    sts_trig_post_overflow_i_3
       (.I0(sts_trig_post_cnt[3]),
        .I1(sts_trig_post_cnt[19]),
        .I2(sts_trig_post_cnt[8]),
        .I3(sts_trig_post_cnt[21]),
        .I4(sts_trig_post_overflow_i_6_n_0),
        .O(sts_trig_post_overflow_i_3_n_0));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    sts_trig_post_overflow_i_4
       (.I0(sts_trig_post_cnt[2]),
        .I1(sts_trig_post_cnt[12]),
        .I2(sts_trig_post_cnt[4]),
        .I3(sts_trig_post_cnt[15]),
        .I4(sts_trig_post_overflow_i_7_n_0),
        .O(sts_trig_post_overflow_i_4_n_0));
  LUT5 #(
    .INIT(32'h00000080)) 
    sts_trig_post_overflow_i_5
       (.I0(sts_trig_post_cnt[1]),
        .I1(sts_trig_post_cnt[27]),
        .I2(sts_trig_post_cnt[5]),
        .I3(sts_trig_post_overflow_i_8_n_0),
        .I4(sts_trig_post_overflow_i_9_n_0),
        .O(sts_trig_post_overflow_i_5_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    sts_trig_post_overflow_i_6
       (.I0(sts_trig_post_cnt[25]),
        .I1(sts_trig_post_cnt[7]),
        .I2(sts_trig_post_cnt[22]),
        .I3(sts_trig_post_cnt[11]),
        .O(sts_trig_post_overflow_i_6_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    sts_trig_post_overflow_i_7
       (.I0(\sts_trig_post_cnt_reg_n_0_[31] ),
        .I1(sts_trig_post_cnt[30]),
        .I2(sts_trig_post_cnt[24]),
        .I3(sts_trig_post_cnt[17]),
        .O(sts_trig_post_overflow_i_7_n_0));
  LUT4 #(
    .INIT(16'hDFFF)) 
    sts_trig_post_overflow_i_8
       (.I0(sts_trig_post_cnt[18]),
        .I1(sts_trig_post_overflow),
        .I2(sts_trig_post_cnt[29]),
        .I3(sts_trig_post_cnt[10]),
        .O(sts_trig_post_overflow_i_8_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    sts_trig_post_overflow_i_9
       (.I0(sts_trig_post_cnt[26]),
        .I1(sts_trig_post_cnt[23]),
        .I2(sts_trig_post_cnt[28]),
        .I3(sts_trig_post_cnt[16]),
        .O(sts_trig_post_overflow_i_9_n_0));
  FDRE sts_trig_post_overflow_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(sts_trig_post_overflow_i_1_n_0),
        .Q(sts_trig_post_overflow),
        .R(event_num_reset_reg));
  LUT3 #(
    .INIT(8'h08)) 
    \sts_trig_pre_cnt[0]_i_1 
       (.I0(trig_tvalid),
        .I1(\FSM_sequential_state_cs_reg[2]_0 ),
        .I2(\FSM_sequential_state_cs_reg[1]_0 ),
        .O(sts_trig_pre_cnt0));
  LUT1 #(
    .INIT(2'h1)) 
    \sts_trig_pre_cnt[0]_i_3 
       (.I0(sts_trig_pre_cnt[0]),
        .O(\sts_trig_pre_cnt[0]_i_3_n_0 ));
  FDRE \sts_trig_pre_cnt_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[0]_i_2_n_7 ),
        .Q(sts_trig_pre_cnt[0]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\sts_trig_pre_cnt_reg[0]_i_2_n_0 ,\sts_trig_pre_cnt_reg[0]_i_2_n_1 ,\sts_trig_pre_cnt_reg[0]_i_2_n_2 ,\sts_trig_pre_cnt_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\sts_trig_pre_cnt_reg[0]_i_2_n_4 ,\sts_trig_pre_cnt_reg[0]_i_2_n_5 ,\sts_trig_pre_cnt_reg[0]_i_2_n_6 ,\sts_trig_pre_cnt_reg[0]_i_2_n_7 }),
        .S({sts_trig_pre_cnt[3:1],\sts_trig_pre_cnt[0]_i_3_n_0 }));
  FDRE \sts_trig_pre_cnt_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[8]_i_1_n_5 ),
        .Q(sts_trig_pre_cnt[10]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[8]_i_1_n_4 ),
        .Q(sts_trig_pre_cnt[11]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[12]_i_1_n_7 ),
        .Q(sts_trig_pre_cnt[12]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[12]_i_1 
       (.CI(\sts_trig_pre_cnt_reg[8]_i_1_n_0 ),
        .CO({\sts_trig_pre_cnt_reg[12]_i_1_n_0 ,\sts_trig_pre_cnt_reg[12]_i_1_n_1 ,\sts_trig_pre_cnt_reg[12]_i_1_n_2 ,\sts_trig_pre_cnt_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_pre_cnt_reg[12]_i_1_n_4 ,\sts_trig_pre_cnt_reg[12]_i_1_n_5 ,\sts_trig_pre_cnt_reg[12]_i_1_n_6 ,\sts_trig_pre_cnt_reg[12]_i_1_n_7 }),
        .S(sts_trig_pre_cnt[15:12]));
  FDRE \sts_trig_pre_cnt_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[12]_i_1_n_6 ),
        .Q(sts_trig_pre_cnt[13]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[12]_i_1_n_5 ),
        .Q(sts_trig_pre_cnt[14]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[12]_i_1_n_4 ),
        .Q(sts_trig_pre_cnt[15]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[16]_i_1_n_7 ),
        .Q(sts_trig_pre_cnt[16]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[16]_i_1 
       (.CI(\sts_trig_pre_cnt_reg[12]_i_1_n_0 ),
        .CO({\sts_trig_pre_cnt_reg[16]_i_1_n_0 ,\sts_trig_pre_cnt_reg[16]_i_1_n_1 ,\sts_trig_pre_cnt_reg[16]_i_1_n_2 ,\sts_trig_pre_cnt_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_pre_cnt_reg[16]_i_1_n_4 ,\sts_trig_pre_cnt_reg[16]_i_1_n_5 ,\sts_trig_pre_cnt_reg[16]_i_1_n_6 ,\sts_trig_pre_cnt_reg[16]_i_1_n_7 }),
        .S(sts_trig_pre_cnt[19:16]));
  FDRE \sts_trig_pre_cnt_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[16]_i_1_n_6 ),
        .Q(sts_trig_pre_cnt[17]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[16]_i_1_n_5 ),
        .Q(sts_trig_pre_cnt[18]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[16]_i_1_n_4 ),
        .Q(sts_trig_pre_cnt[19]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[0]_i_2_n_6 ),
        .Q(sts_trig_pre_cnt[1]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[20]_i_1_n_7 ),
        .Q(sts_trig_pre_cnt[20]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[20]_i_1 
       (.CI(\sts_trig_pre_cnt_reg[16]_i_1_n_0 ),
        .CO({\sts_trig_pre_cnt_reg[20]_i_1_n_0 ,\sts_trig_pre_cnt_reg[20]_i_1_n_1 ,\sts_trig_pre_cnt_reg[20]_i_1_n_2 ,\sts_trig_pre_cnt_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_pre_cnt_reg[20]_i_1_n_4 ,\sts_trig_pre_cnt_reg[20]_i_1_n_5 ,\sts_trig_pre_cnt_reg[20]_i_1_n_6 ,\sts_trig_pre_cnt_reg[20]_i_1_n_7 }),
        .S(sts_trig_pre_cnt[23:20]));
  FDRE \sts_trig_pre_cnt_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[20]_i_1_n_6 ),
        .Q(sts_trig_pre_cnt[21]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[20]_i_1_n_5 ),
        .Q(sts_trig_pre_cnt[22]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[20]_i_1_n_4 ),
        .Q(sts_trig_pre_cnt[23]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[24]_i_1_n_7 ),
        .Q(sts_trig_pre_cnt[24]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[24]_i_1 
       (.CI(\sts_trig_pre_cnt_reg[20]_i_1_n_0 ),
        .CO({\sts_trig_pre_cnt_reg[24]_i_1_n_0 ,\sts_trig_pre_cnt_reg[24]_i_1_n_1 ,\sts_trig_pre_cnt_reg[24]_i_1_n_2 ,\sts_trig_pre_cnt_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_pre_cnt_reg[24]_i_1_n_4 ,\sts_trig_pre_cnt_reg[24]_i_1_n_5 ,\sts_trig_pre_cnt_reg[24]_i_1_n_6 ,\sts_trig_pre_cnt_reg[24]_i_1_n_7 }),
        .S(sts_trig_pre_cnt[27:24]));
  FDRE \sts_trig_pre_cnt_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[24]_i_1_n_6 ),
        .Q(sts_trig_pre_cnt[25]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[24]_i_1_n_5 ),
        .Q(sts_trig_pre_cnt[26]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[24]_i_1_n_4 ),
        .Q(sts_trig_pre_cnt[27]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[28]_i_1_n_7 ),
        .Q(sts_trig_pre_cnt[28]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[28]_i_1 
       (.CI(\sts_trig_pre_cnt_reg[24]_i_1_n_0 ),
        .CO({\NLW_sts_trig_pre_cnt_reg[28]_i_1_CO_UNCONNECTED [3],\sts_trig_pre_cnt_reg[28]_i_1_n_1 ,\sts_trig_pre_cnt_reg[28]_i_1_n_2 ,\sts_trig_pre_cnt_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_pre_cnt_reg[28]_i_1_n_4 ,\sts_trig_pre_cnt_reg[28]_i_1_n_5 ,\sts_trig_pre_cnt_reg[28]_i_1_n_6 ,\sts_trig_pre_cnt_reg[28]_i_1_n_7 }),
        .S({\sts_trig_pre_cnt_reg_n_0_[31] ,sts_trig_pre_cnt[30:28]}));
  FDRE \sts_trig_pre_cnt_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[28]_i_1_n_6 ),
        .Q(sts_trig_pre_cnt[29]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[0]_i_2_n_5 ),
        .Q(sts_trig_pre_cnt[2]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[28]_i_1_n_5 ),
        .Q(sts_trig_pre_cnt[30]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[28]_i_1_n_4 ),
        .Q(\sts_trig_pre_cnt_reg_n_0_[31] ),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[0]_i_2_n_4 ),
        .Q(sts_trig_pre_cnt[3]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[4]_i_1_n_7 ),
        .Q(sts_trig_pre_cnt[4]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[4]_i_1 
       (.CI(\sts_trig_pre_cnt_reg[0]_i_2_n_0 ),
        .CO({\sts_trig_pre_cnt_reg[4]_i_1_n_0 ,\sts_trig_pre_cnt_reg[4]_i_1_n_1 ,\sts_trig_pre_cnt_reg[4]_i_1_n_2 ,\sts_trig_pre_cnt_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_pre_cnt_reg[4]_i_1_n_4 ,\sts_trig_pre_cnt_reg[4]_i_1_n_5 ,\sts_trig_pre_cnt_reg[4]_i_1_n_6 ,\sts_trig_pre_cnt_reg[4]_i_1_n_7 }),
        .S(sts_trig_pre_cnt[7:4]));
  FDRE \sts_trig_pre_cnt_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[4]_i_1_n_6 ),
        .Q(sts_trig_pre_cnt[5]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[4]_i_1_n_5 ),
        .Q(sts_trig_pre_cnt[6]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[4]_i_1_n_4 ),
        .Q(sts_trig_pre_cnt[7]),
        .R(event_num_reset_reg));
  FDRE \sts_trig_pre_cnt_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[8]_i_1_n_7 ),
        .Q(sts_trig_pre_cnt[8]),
        .R(event_num_reset_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \sts_trig_pre_cnt_reg[8]_i_1 
       (.CI(\sts_trig_pre_cnt_reg[4]_i_1_n_0 ),
        .CO({\sts_trig_pre_cnt_reg[8]_i_1_n_0 ,\sts_trig_pre_cnt_reg[8]_i_1_n_1 ,\sts_trig_pre_cnt_reg[8]_i_1_n_2 ,\sts_trig_pre_cnt_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sts_trig_pre_cnt_reg[8]_i_1_n_4 ,\sts_trig_pre_cnt_reg[8]_i_1_n_5 ,\sts_trig_pre_cnt_reg[8]_i_1_n_6 ,\sts_trig_pre_cnt_reg[8]_i_1_n_7 }),
        .S(sts_trig_pre_cnt[11:8]));
  FDRE \sts_trig_pre_cnt_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(sts_trig_pre_cnt0),
        .D(\sts_trig_pre_cnt_reg[8]_i_1_n_6 ),
        .Q(sts_trig_pre_cnt[9]),
        .R(event_num_reset_reg));
  LUT5 #(
    .INIT(32'hFFFF0100)) 
    sts_trig_pre_overflow_i_1
       (.I0(sts_trig_pre_overflow_i_2_n_0),
        .I1(sts_trig_pre_overflow_i_3_n_0),
        .I2(sts_trig_pre_overflow_i_4_n_0),
        .I3(sts_trig_pre_overflow_i_5_n_0),
        .I4(sts_trig_pre_overflow),
        .O(sts_trig_pre_overflow_i_1_n_0));
  LUT6 #(
    .INIT(64'hDFFFFFFFFFFFFFFF)) 
    sts_trig_pre_overflow_i_2
       (.I0(sts_trig_pre_cnt[14]),
        .I1(sts_trig_pre_overflow),
        .I2(sts_trig_pre_cnt[3]),
        .I3(sts_trig_pre_cnt[13]),
        .I4(sts_trig_pre_cnt[1]),
        .I5(sts_trig_pre_cnt[9]),
        .O(sts_trig_pre_overflow_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    sts_trig_pre_overflow_i_3
       (.I0(sts_trig_pre_cnt[8]),
        .I1(sts_trig_pre_cnt[18]),
        .I2(sts_trig_pre_cnt[20]),
        .I3(sts_trig_pre_cnt[23]),
        .I4(sts_trig_pre_overflow_i_6_n_0),
        .O(sts_trig_pre_overflow_i_3_n_0));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    sts_trig_pre_overflow_i_4
       (.I0(sts_trig_pre_cnt[15]),
        .I1(sts_trig_pre_cnt[26]),
        .I2(sts_trig_pre_cnt[11]),
        .I3(sts_trig_pre_cnt[25]),
        .I4(sts_trig_pre_overflow_i_7_n_0),
        .O(sts_trig_pre_overflow_i_4_n_0));
  LUT5 #(
    .INIT(32'h00000080)) 
    sts_trig_pre_overflow_i_5
       (.I0(sts_trig_pre_cnt[2]),
        .I1(sts_trig_pre_cnt[6]),
        .I2(sts_trig_pre_cnt[4]),
        .I3(sts_trig_pre_overflow_i_8_n_0),
        .I4(sts_trig_pre_overflow_i_9_n_0),
        .O(sts_trig_pre_overflow_i_5_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    sts_trig_pre_overflow_i_6
       (.I0(sts_trig_pre_cnt[30]),
        .I1(sts_trig_pre_cnt[21]),
        .I2(sts_trig_pre_cnt[28]),
        .I3(sts_trig_pre_cnt[27]),
        .O(sts_trig_pre_overflow_i_6_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    sts_trig_pre_overflow_i_7
       (.I0(sts_trig_pre_cnt[29]),
        .I1(sts_trig_pre_cnt[5]),
        .I2(\sts_trig_pre_cnt_reg_n_0_[31] ),
        .I3(sts_trig_pre_cnt[19]),
        .O(sts_trig_pre_overflow_i_7_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    sts_trig_pre_overflow_i_8
       (.I0(sts_trig_pre_cnt[17]),
        .I1(sts_trig_pre_cnt[7]),
        .I2(sts_trig_pre_cnt[16]),
        .I3(sts_trig_pre_cnt[0]),
        .O(sts_trig_pre_overflow_i_8_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    sts_trig_pre_overflow_i_9
       (.I0(sts_trig_pre_cnt[24]),
        .I1(sts_trig_pre_cnt[10]),
        .I2(sts_trig_pre_cnt[22]),
        .I3(sts_trig_pre_cnt[12]),
        .O(sts_trig_pre_overflow_i_9_n_0));
  FDRE sts_trig_pre_overflow_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(sts_trig_pre_overflow_i_1_n_0),
        .Q(sts_trig_pre_overflow),
        .R(event_num_reset_reg));
  FDRE sts_trig_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(sts_trig_reg_1),
        .Q(sts_trig_reg_0),
        .R(event_num_reset_reg));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][0]_i_1 
       (.I0(acq_tdata[8]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[0]),
        .O(\m_axis_tdata_reg[15]_2 [0]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][1]_i_1 
       (.I0(acq_tdata[9]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[1]),
        .O(\m_axis_tdata_reg[15]_2 [1]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][2]_i_1 
       (.I0(acq_tdata[10]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[2]),
        .O(\m_axis_tdata_reg[15]_2 [2]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][3]_i_1 
       (.I0(acq_tdata[11]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[3]),
        .O(\m_axis_tdata_reg[15]_2 [3]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][4]_i_1 
       (.I0(acq_tdata[12]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[4]),
        .O(\m_axis_tdata_reg[15]_2 [4]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][5]_i_1 
       (.I0(acq_tdata[13]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[5]),
        .O(\m_axis_tdata_reg[15]_2 [5]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][6]_i_1 
       (.I0(acq_tdata[14]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[6]),
        .O(\m_axis_tdata_reg[15]_2 [6]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \upsize_buf[0][7]_i_2 
       (.I0(acq_tdata[15]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[7]),
        .O(\m_axis_tdata_reg[15]_2 [7]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][0]_i_1 
       (.I0(acq_tdata[8]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[0]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][0]_0 ),
        .O(\m_axis_tdata_reg[15]_1 [0]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][1]_i_1 
       (.I0(acq_tdata[9]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[1]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][1] ),
        .O(\m_axis_tdata_reg[15]_1 [1]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][2]_i_1 
       (.I0(acq_tdata[10]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[2]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][2] ),
        .O(\m_axis_tdata_reg[15]_1 [2]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][3]_i_1 
       (.I0(acq_tdata[11]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[3]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][3] ),
        .O(\m_axis_tdata_reg[15]_1 [3]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][4]_i_1 
       (.I0(acq_tdata[12]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[4]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][4] ),
        .O(\m_axis_tdata_reg[15]_1 [4]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][5]_i_1 
       (.I0(acq_tdata[13]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[5]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][5] ),
        .O(\m_axis_tdata_reg[15]_1 [5]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][6]_i_1 
       (.I0(acq_tdata[14]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[6]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][6] ),
        .O(\m_axis_tdata_reg[15]_1 [6]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[2][7]_i_2 
       (.I0(acq_tdata[15]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[7]),
        .I3(\upsize_buf_reg[2][0] ),
        .I4(\upsize_buf_reg[7][7] ),
        .O(\m_axis_tdata_reg[15]_1 [7]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][0]_i_1 
       (.I0(acq_tdata[8]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[0]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][0]_0 ),
        .O(\m_axis_tdata_reg[15]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][1]_i_1 
       (.I0(acq_tdata[9]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[1]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][1] ),
        .O(\m_axis_tdata_reg[15]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][2]_i_1 
       (.I0(acq_tdata[10]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[2]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][2] ),
        .O(\m_axis_tdata_reg[15]_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][3]_i_1 
       (.I0(acq_tdata[11]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[3]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][3] ),
        .O(\m_axis_tdata_reg[15]_0 [3]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][4]_i_1 
       (.I0(acq_tdata[12]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[4]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][4] ),
        .O(\m_axis_tdata_reg[15]_0 [4]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][5]_i_1 
       (.I0(acq_tdata[13]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[5]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][5] ),
        .O(\m_axis_tdata_reg[15]_0 [5]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][6]_i_1 
       (.I0(acq_tdata[14]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[6]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][6] ),
        .O(\m_axis_tdata_reg[15]_0 [6]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][7]_i_2 
       (.I0(acq_tdata[15]),
        .I1(\upsize_buf_reg[0][7] ),
        .I2(acq_tdata[7]),
        .I3(\upsize_buf_reg[7][0] ),
        .I4(\upsize_buf_reg[7][7] ),
        .O(\m_axis_tdata_reg[15]_0 [7]));
endmodule

(* ORIG_REF_NAME = "osc_calib" *) 
module system_rp_oscilloscope_0_osc_calib
   (ramp_sig_reg_0_sp_1,
    ramp_sig_reg_1_sp_1,
    ramp_sig_reg_2_sp_1,
    ramp_sig_reg_3_sp_1,
    ramp_sig_reg_4_sp_1,
    ramp_sig_reg_5_sp_1,
    ramp_sig_reg_6_sp_1,
    ramp_sig_reg_7_sp_1,
    ramp_sig_reg_8_sp_1,
    ramp_sig_reg_9_sp_1,
    ramp_sig_reg_10_sp_1,
    ramp_sig_reg_11_sp_1,
    ramp_sig_reg_12_sp_1,
    ramp_sig_reg_13_sp_1,
    ramp_sig_reg_14_sp_1,
    ramp_sig_reg_15_sp_1,
    O,
    \m_axis_tdata_reg[7]_0 ,
    \m_axis_tdata_reg[11]_0 ,
    \m_axis_tdata_reg[15]_0 ,
    \m_axis_tdata_reg[15]_1 ,
    \m_axis_tdata_reg[15]_2 ,
    \m_axis_tdata_reg[15]_3 ,
    \m_axis_tdata_reg[15]_4 ,
    Q,
    \adc_sum_reg[31] ,
    ramp_sig_reg,
    CO,
    S,
    \adc_sum_reg[7] ,
    \adc_sum_reg[11] ,
    \adc_sum_reg[15] ,
    \adc_sum_reg[19] ,
    \adc_sum_reg[23] ,
    \adc_sum_reg[27] ,
    \adc_sum_reg[31]_0 ,
    \offset_reg_reg[15]_0 ,
    m_axi_osc2_aclk,
    D,
    gain_calc_r_reg_0);
  output ramp_sig_reg_0_sp_1;
  output ramp_sig_reg_1_sp_1;
  output ramp_sig_reg_2_sp_1;
  output ramp_sig_reg_3_sp_1;
  output ramp_sig_reg_4_sp_1;
  output ramp_sig_reg_5_sp_1;
  output ramp_sig_reg_6_sp_1;
  output ramp_sig_reg_7_sp_1;
  output ramp_sig_reg_8_sp_1;
  output ramp_sig_reg_9_sp_1;
  output ramp_sig_reg_10_sp_1;
  output ramp_sig_reg_11_sp_1;
  output ramp_sig_reg_12_sp_1;
  output ramp_sig_reg_13_sp_1;
  output ramp_sig_reg_14_sp_1;
  output ramp_sig_reg_15_sp_1;
  output [3:0]O;
  output [3:0]\m_axis_tdata_reg[7]_0 ;
  output [3:0]\m_axis_tdata_reg[11]_0 ;
  output [3:0]\m_axis_tdata_reg[15]_0 ;
  output [3:0]\m_axis_tdata_reg[15]_1 ;
  output [3:0]\m_axis_tdata_reg[15]_2 ;
  output [3:0]\m_axis_tdata_reg[15]_3 ;
  output [3:0]\m_axis_tdata_reg[15]_4 ;
  input [1:0]Q;
  input [13:0]\adc_sum_reg[31] ;
  input [15:0]ramp_sig_reg;
  input [0:0]CO;
  input [3:0]S;
  input [3:0]\adc_sum_reg[7] ;
  input [3:0]\adc_sum_reg[11] ;
  input [3:0]\adc_sum_reg[15] ;
  input [3:0]\adc_sum_reg[19] ;
  input [3:0]\adc_sum_reg[23] ;
  input [3:0]\adc_sum_reg[27] ;
  input [3:0]\adc_sum_reg[31]_0 ;
  input [15:0]\offset_reg_reg[15]_0 ;
  input m_axi_osc2_aclk;
  input [15:0]D;
  input [15:0]gain_calc_r_reg_0;

  wire [16:15]A;
  wire [12:0]B;
  wire [0:0]CO;
  wire [15:0]D;
  wire [3:0]O;
  wire [1:0]Q;
  wire [3:0]S;
  wire [15:0]adc_data;
  wire [15:0]adc_data_reg;
  wire \adc_sum[0]_i_2__0_n_0 ;
  wire \adc_sum[0]_i_3__0_n_0 ;
  wire \adc_sum[0]_i_4__0_n_0 ;
  wire \adc_sum[0]_i_5__0_n_0 ;
  wire \adc_sum[12]_i_2__0_n_0 ;
  wire \adc_sum[12]_i_3__0_n_0 ;
  wire \adc_sum[12]_i_4__0_n_0 ;
  wire \adc_sum[12]_i_5__0_n_0 ;
  wire \adc_sum[4]_i_2__0_n_0 ;
  wire \adc_sum[4]_i_3__0_n_0 ;
  wire \adc_sum[4]_i_4__0_n_0 ;
  wire \adc_sum[4]_i_5__0_n_0 ;
  wire \adc_sum[8]_i_2__0_n_0 ;
  wire \adc_sum[8]_i_3__0_n_0 ;
  wire \adc_sum[8]_i_4__0_n_0 ;
  wire \adc_sum[8]_i_5__0_n_0 ;
  wire \adc_sum_reg[0]_i_1__0_n_0 ;
  wire \adc_sum_reg[0]_i_1__0_n_1 ;
  wire \adc_sum_reg[0]_i_1__0_n_2 ;
  wire \adc_sum_reg[0]_i_1__0_n_3 ;
  wire [3:0]\adc_sum_reg[11] ;
  wire \adc_sum_reg[12]_i_1__0_n_0 ;
  wire \adc_sum_reg[12]_i_1__0_n_1 ;
  wire \adc_sum_reg[12]_i_1__0_n_2 ;
  wire \adc_sum_reg[12]_i_1__0_n_3 ;
  wire [3:0]\adc_sum_reg[15] ;
  wire \adc_sum_reg[16]_i_1__0_n_0 ;
  wire \adc_sum_reg[16]_i_1__0_n_1 ;
  wire \adc_sum_reg[16]_i_1__0_n_2 ;
  wire \adc_sum_reg[16]_i_1__0_n_3 ;
  wire [3:0]\adc_sum_reg[19] ;
  wire \adc_sum_reg[20]_i_1__0_n_0 ;
  wire \adc_sum_reg[20]_i_1__0_n_1 ;
  wire \adc_sum_reg[20]_i_1__0_n_2 ;
  wire \adc_sum_reg[20]_i_1__0_n_3 ;
  wire [3:0]\adc_sum_reg[23] ;
  wire \adc_sum_reg[24]_i_1__0_n_0 ;
  wire \adc_sum_reg[24]_i_1__0_n_1 ;
  wire \adc_sum_reg[24]_i_1__0_n_2 ;
  wire \adc_sum_reg[24]_i_1__0_n_3 ;
  wire [3:0]\adc_sum_reg[27] ;
  wire \adc_sum_reg[28]_i_1__0_n_1 ;
  wire \adc_sum_reg[28]_i_1__0_n_2 ;
  wire \adc_sum_reg[28]_i_1__0_n_3 ;
  wire [13:0]\adc_sum_reg[31] ;
  wire [3:0]\adc_sum_reg[31]_0 ;
  wire \adc_sum_reg[4]_i_1__0_n_0 ;
  wire \adc_sum_reg[4]_i_1__0_n_1 ;
  wire \adc_sum_reg[4]_i_1__0_n_2 ;
  wire \adc_sum_reg[4]_i_1__0_n_3 ;
  wire [3:0]\adc_sum_reg[7] ;
  wire \adc_sum_reg[8]_i_1__0_n_0 ;
  wire \adc_sum_reg[8]_i_1__0_n_1 ;
  wire \adc_sum_reg[8]_i_1__0_n_2 ;
  wire \adc_sum_reg[8]_i_1__0_n_3 ;
  wire [15:0]calib_tdata;
  wire [15:0]gain_calc_r_reg_0;
  wire gain_calc_r_reg_n_106;
  wire gain_calc_r_reg_n_107;
  wire gain_calc_r_reg_n_108;
  wire gain_calc_r_reg_n_109;
  wire gain_calc_r_reg_n_110;
  wire gain_calc_r_reg_n_111;
  wire gain_calc_r_reg_n_112;
  wire gain_calc_r_reg_n_113;
  wire gain_calc_r_reg_n_114;
  wire gain_calc_r_reg_n_115;
  wire gain_calc_r_reg_n_116;
  wire gain_calc_r_reg_n_117;
  wire gain_calc_r_reg_n_118;
  wire gain_calc_r_reg_n_119;
  wire gain_calc_r_reg_n_120;
  wire gain_calc_r_reg_n_121;
  wire gain_calc_r_reg_n_122;
  wire gain_calc_r_reg_n_123;
  wire gain_calc_r_reg_n_124;
  wire gain_calc_r_reg_n_125;
  wire gain_calc_r_reg_n_126;
  wire gain_calc_r_reg_n_127;
  wire gain_calc_r_reg_n_128;
  wire gain_calc_r_reg_n_129;
  wire gain_calc_r_reg_n_130;
  wire gain_calc_r_reg_n_131;
  wire gain_calc_r_reg_n_132;
  wire gain_calc_r_reg_n_133;
  wire gain_calc_r_reg_n_134;
  wire gain_calc_r_reg_n_135;
  wire gain_calc_r_reg_n_136;
  wire gain_calc_r_reg_n_137;
  wire gain_calc_r_reg_n_138;
  wire gain_calc_r_reg_n_139;
  wire gain_calc_r_reg_n_140;
  wire gain_calc_r_reg_n_141;
  wire gain_calc_r_reg_n_142;
  wire gain_calc_r_reg_n_143;
  wire gain_calc_r_reg_n_144;
  wire gain_calc_r_reg_n_145;
  wire gain_calc_r_reg_n_146;
  wire gain_calc_r_reg_n_147;
  wire gain_calc_r_reg_n_148;
  wire gain_calc_r_reg_n_149;
  wire gain_calc_r_reg_n_150;
  wire gain_calc_r_reg_n_151;
  wire gain_calc_r_reg_n_152;
  wire gain_calc_r_reg_n_153;
  wire gain_calc_reg_n_100;
  wire gain_calc_reg_n_101;
  wire gain_calc_reg_n_102;
  wire gain_calc_reg_n_103;
  wire gain_calc_reg_n_104;
  wire gain_calc_reg_n_105;
  wire gain_calc_reg_n_76;
  wire gain_calc_reg_n_93;
  wire gain_calc_reg_n_94;
  wire gain_calc_reg_n_95;
  wire gain_calc_reg_n_96;
  wire gain_calc_reg_n_97;
  wire gain_calc_reg_n_98;
  wire gain_calc_reg_n_99;
  wire gain_max;
  wire gain_min;
  wire m_axi_osc2_aclk;
  wire \m_axis_tdata[0]_i_1__2_n_0 ;
  wire \m_axis_tdata[10]_i_1__2_n_0 ;
  wire \m_axis_tdata[11]_i_1__2_n_0 ;
  wire \m_axis_tdata[12]_i_1__2_n_0 ;
  wire \m_axis_tdata[13]_i_1__2_n_0 ;
  wire \m_axis_tdata[14]_i_1__2_n_0 ;
  wire \m_axis_tdata[15]_i_1__1_n_0 ;
  wire \m_axis_tdata[1]_i_1__2_n_0 ;
  wire \m_axis_tdata[2]_i_1__2_n_0 ;
  wire \m_axis_tdata[3]_i_1__2_n_0 ;
  wire \m_axis_tdata[4]_i_1__2_n_0 ;
  wire \m_axis_tdata[5]_i_1__2_n_0 ;
  wire \m_axis_tdata[6]_i_1__2_n_0 ;
  wire \m_axis_tdata[7]_i_1__2_n_0 ;
  wire \m_axis_tdata[8]_i_1__2_n_0 ;
  wire \m_axis_tdata[9]_i_1__2_n_0 ;
  wire [3:0]\m_axis_tdata_reg[11]_0 ;
  wire [3:0]\m_axis_tdata_reg[15]_0 ;
  wire [3:0]\m_axis_tdata_reg[15]_1 ;
  wire [3:0]\m_axis_tdata_reg[15]_2 ;
  wire [3:0]\m_axis_tdata_reg[15]_3 ;
  wire [3:0]\m_axis_tdata_reg[15]_4 ;
  wire [3:0]\m_axis_tdata_reg[7]_0 ;
  wire [15:0]offset;
  wire \offset_calc[11]_i_2_n_0 ;
  wire \offset_calc[11]_i_3_n_0 ;
  wire \offset_calc[11]_i_4_n_0 ;
  wire \offset_calc[11]_i_5_n_0 ;
  wire \offset_calc[15]_i_2_n_0 ;
  wire \offset_calc[15]_i_3__0_n_0 ;
  wire \offset_calc[15]_i_4_n_0 ;
  wire \offset_calc[15]_i_5_n_0 ;
  wire \offset_calc[15]_i_6_n_0 ;
  wire \offset_calc[3]_i_2_n_0 ;
  wire \offset_calc[3]_i_3_n_0 ;
  wire \offset_calc[3]_i_4_n_0 ;
  wire \offset_calc[3]_i_5_n_0 ;
  wire \offset_calc[7]_i_2_n_0 ;
  wire \offset_calc[7]_i_3_n_0 ;
  wire \offset_calc[7]_i_4_n_0 ;
  wire \offset_calc[7]_i_5_n_0 ;
  wire \offset_calc_reg[11]_i_1_n_0 ;
  wire \offset_calc_reg[11]_i_1_n_1 ;
  wire \offset_calc_reg[11]_i_1_n_2 ;
  wire \offset_calc_reg[11]_i_1_n_3 ;
  wire \offset_calc_reg[11]_i_1_n_4 ;
  wire \offset_calc_reg[11]_i_1_n_5 ;
  wire \offset_calc_reg[11]_i_1_n_6 ;
  wire \offset_calc_reg[11]_i_1_n_7 ;
  wire \offset_calc_reg[15]_i_1_n_0 ;
  wire \offset_calc_reg[15]_i_1_n_1 ;
  wire \offset_calc_reg[15]_i_1_n_2 ;
  wire \offset_calc_reg[15]_i_1_n_3 ;
  wire \offset_calc_reg[15]_i_1_n_4 ;
  wire \offset_calc_reg[15]_i_1_n_5 ;
  wire \offset_calc_reg[15]_i_1_n_6 ;
  wire \offset_calc_reg[15]_i_1_n_7 ;
  wire \offset_calc_reg[16]_i_1_n_7 ;
  wire \offset_calc_reg[3]_i_1_n_0 ;
  wire \offset_calc_reg[3]_i_1_n_1 ;
  wire \offset_calc_reg[3]_i_1_n_2 ;
  wire \offset_calc_reg[3]_i_1_n_3 ;
  wire \offset_calc_reg[3]_i_1_n_4 ;
  wire \offset_calc_reg[3]_i_1_n_5 ;
  wire \offset_calc_reg[3]_i_1_n_6 ;
  wire \offset_calc_reg[3]_i_1_n_7 ;
  wire \offset_calc_reg[7]_i_1_n_0 ;
  wire \offset_calc_reg[7]_i_1_n_1 ;
  wire \offset_calc_reg[7]_i_1_n_2 ;
  wire \offset_calc_reg[7]_i_1_n_3 ;
  wire \offset_calc_reg[7]_i_1_n_4 ;
  wire \offset_calc_reg[7]_i_1_n_5 ;
  wire \offset_calc_reg[7]_i_1_n_6 ;
  wire \offset_calc_reg[7]_i_1_n_7 ;
  wire \offset_calc_reg_n_0_[0] ;
  wire \offset_calc_reg_n_0_[10] ;
  wire \offset_calc_reg_n_0_[11] ;
  wire \offset_calc_reg_n_0_[12] ;
  wire \offset_calc_reg_n_0_[13] ;
  wire \offset_calc_reg_n_0_[14] ;
  wire \offset_calc_reg_n_0_[1] ;
  wire \offset_calc_reg_n_0_[2] ;
  wire \offset_calc_reg_n_0_[3] ;
  wire \offset_calc_reg_n_0_[4] ;
  wire \offset_calc_reg_n_0_[5] ;
  wire \offset_calc_reg_n_0_[6] ;
  wire \offset_calc_reg_n_0_[7] ;
  wire \offset_calc_reg_n_0_[8] ;
  wire \offset_calc_reg_n_0_[9] ;
  wire [15:0]offset_reg;
  wire [15:0]\offset_reg_reg[15]_0 ;
  wire [1:0]p_0_in;
  wire [15:0]p_2_in;
  wire [15:0]ramp_sig_reg;
  wire ramp_sig_reg_0_sn_1;
  wire ramp_sig_reg_10_sn_1;
  wire ramp_sig_reg_11_sn_1;
  wire ramp_sig_reg_12_sn_1;
  wire ramp_sig_reg_13_sn_1;
  wire ramp_sig_reg_14_sn_1;
  wire ramp_sig_reg_15_sn_1;
  wire ramp_sig_reg_1_sn_1;
  wire ramp_sig_reg_2_sn_1;
  wire ramp_sig_reg_3_sn_1;
  wire ramp_sig_reg_4_sn_1;
  wire ramp_sig_reg_5_sn_1;
  wire ramp_sig_reg_6_sn_1;
  wire ramp_sig_reg_7_sn_1;
  wire ramp_sig_reg_8_sn_1;
  wire ramp_sig_reg_9_sn_1;
  wire [3:3]\NLW_adc_sum_reg[28]_i_1__0_CO_UNCONNECTED ;
  wire NLW_gain_calc_r_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_gain_calc_r_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_gain_calc_r_reg_OVERFLOW_UNCONNECTED;
  wire NLW_gain_calc_r_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_gain_calc_r_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_gain_calc_r_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_gain_calc_r_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_gain_calc_r_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_gain_calc_r_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_gain_calc_r_reg_P_UNCONNECTED;
  wire NLW_gain_calc_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_gain_calc_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_gain_calc_reg_OVERFLOW_UNCONNECTED;
  wire NLW_gain_calc_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_gain_calc_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_gain_calc_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_gain_calc_reg_CARRYOUT_UNCONNECTED;
  wire [47:30]NLW_gain_calc_reg_P_UNCONNECTED;
  wire [47:0]NLW_gain_calc_reg_PCOUT_UNCONNECTED;
  wire [3:0]\NLW_offset_calc_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_offset_calc_reg[16]_i_1_O_UNCONNECTED ;

  assign ramp_sig_reg_0_sp_1 = ramp_sig_reg_0_sn_1;
  assign ramp_sig_reg_10_sp_1 = ramp_sig_reg_10_sn_1;
  assign ramp_sig_reg_11_sp_1 = ramp_sig_reg_11_sn_1;
  assign ramp_sig_reg_12_sp_1 = ramp_sig_reg_12_sn_1;
  assign ramp_sig_reg_13_sp_1 = ramp_sig_reg_13_sn_1;
  assign ramp_sig_reg_14_sp_1 = ramp_sig_reg_14_sn_1;
  assign ramp_sig_reg_15_sp_1 = ramp_sig_reg_15_sn_1;
  assign ramp_sig_reg_1_sp_1 = ramp_sig_reg_1_sn_1;
  assign ramp_sig_reg_2_sp_1 = ramp_sig_reg_2_sn_1;
  assign ramp_sig_reg_3_sp_1 = ramp_sig_reg_3_sn_1;
  assign ramp_sig_reg_4_sp_1 = ramp_sig_reg_4_sn_1;
  assign ramp_sig_reg_5_sp_1 = ramp_sig_reg_5_sn_1;
  assign ramp_sig_reg_6_sp_1 = ramp_sig_reg_6_sn_1;
  assign ramp_sig_reg_7_sp_1 = ramp_sig_reg_7_sn_1;
  assign ramp_sig_reg_8_sp_1 = ramp_sig_reg_8_sn_1;
  assign ramp_sig_reg_9_sp_1 = ramp_sig_reg_9_sn_1;
  FDRE \adc_data_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[0]),
        .Q(adc_data[0]),
        .R(1'b0));
  FDRE \adc_data_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[10]),
        .Q(adc_data[10]),
        .R(1'b0));
  FDRE \adc_data_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[11]),
        .Q(adc_data[11]),
        .R(1'b0));
  FDRE \adc_data_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[12]),
        .Q(adc_data[12]),
        .R(1'b0));
  FDRE \adc_data_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[13]),
        .Q(adc_data[13]),
        .R(1'b0));
  FDRE \adc_data_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[14]),
        .Q(adc_data[14]),
        .R(1'b0));
  FDRE \adc_data_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[15]),
        .Q(adc_data[15]),
        .R(1'b0));
  FDRE \adc_data_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[1]),
        .Q(adc_data[1]),
        .R(1'b0));
  FDRE \adc_data_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[2]),
        .Q(adc_data[2]),
        .R(1'b0));
  FDRE \adc_data_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[3]),
        .Q(adc_data[3]),
        .R(1'b0));
  FDRE \adc_data_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[4]),
        .Q(adc_data[4]),
        .R(1'b0));
  FDRE \adc_data_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[5]),
        .Q(adc_data[5]),
        .R(1'b0));
  FDRE \adc_data_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[6]),
        .Q(adc_data[6]),
        .R(1'b0));
  FDRE \adc_data_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[7]),
        .Q(adc_data[7]),
        .R(1'b0));
  FDRE \adc_data_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[8]),
        .Q(adc_data[8]),
        .R(1'b0));
  FDRE \adc_data_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(adc_data_reg[9]),
        .Q(adc_data[9]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(adc_data_reg[0]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[10]),
        .Q(adc_data_reg[10]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[11]),
        .Q(adc_data_reg[11]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[12]),
        .Q(adc_data_reg[12]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[13]),
        .Q(adc_data_reg[13]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[14]),
        .Q(adc_data_reg[14]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[15]),
        .Q(adc_data_reg[15]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(adc_data_reg[1]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(adc_data_reg[2]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(adc_data_reg[3]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(adc_data_reg[4]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(adc_data_reg[5]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(adc_data_reg[6]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(adc_data_reg[7]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[8]),
        .Q(adc_data_reg[8]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(D[9]),
        .Q(adc_data_reg[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[0]_i_2__0 
       (.I0(calib_tdata[3]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [1]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[3]),
        .I5(CO),
        .O(\adc_sum[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[0]_i_3__0 
       (.I0(calib_tdata[2]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [0]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[2]),
        .I5(CO),
        .O(\adc_sum[0]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[0]_i_4__0 
       (.I0(calib_tdata[1]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [13]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[1]),
        .I5(CO),
        .O(\adc_sum[0]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[0]_i_5__0 
       (.I0(calib_tdata[0]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [13]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[0]),
        .I5(CO),
        .O(\adc_sum[0]_i_5__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \adc_sum[12]_i_10__0 
       (.I0(ramp_sig_reg[15]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [13]),
        .I3(Q[0]),
        .I4(calib_tdata[15]),
        .O(ramp_sig_reg_15_sn_1));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \adc_sum[12]_i_11__0 
       (.I0(ramp_sig_reg[14]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [12]),
        .I3(Q[0]),
        .I4(calib_tdata[14]),
        .O(ramp_sig_reg_14_sn_1));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[12]_i_2__0 
       (.I0(calib_tdata[15]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [13]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[15]),
        .I5(CO),
        .O(\adc_sum[12]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[12]_i_3__0 
       (.I0(calib_tdata[14]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [12]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[14]),
        .I5(CO),
        .O(\adc_sum[12]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[12]_i_4__0 
       (.I0(calib_tdata[13]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [11]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[13]),
        .I5(CO),
        .O(\adc_sum[12]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[12]_i_5__0 
       (.I0(calib_tdata[12]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [10]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[12]),
        .I5(CO),
        .O(\adc_sum[12]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[4]_i_2__0 
       (.I0(calib_tdata[7]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [5]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[7]),
        .I5(CO),
        .O(\adc_sum[4]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[4]_i_3__0 
       (.I0(calib_tdata[6]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [4]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[6]),
        .I5(CO),
        .O(\adc_sum[4]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[4]_i_4__0 
       (.I0(calib_tdata[5]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [3]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[5]),
        .I5(CO),
        .O(\adc_sum[4]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[4]_i_5__0 
       (.I0(calib_tdata[4]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [2]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[4]),
        .I5(CO),
        .O(\adc_sum[4]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[8]_i_2__0 
       (.I0(calib_tdata[11]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [9]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[11]),
        .I5(CO),
        .O(\adc_sum[8]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[8]_i_3__0 
       (.I0(calib_tdata[10]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [8]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[10]),
        .I5(CO),
        .O(\adc_sum[8]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[8]_i_4__0 
       (.I0(calib_tdata[9]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [7]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[9]),
        .I5(CO),
        .O(\adc_sum[8]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[8]_i_5__0 
       (.I0(calib_tdata[8]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [6]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[8]),
        .I5(CO),
        .O(\adc_sum[8]_i_5__0_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[0]_i_1__0 
       (.CI(1'b0),
        .CO({\adc_sum_reg[0]_i_1__0_n_0 ,\adc_sum_reg[0]_i_1__0_n_1 ,\adc_sum_reg[0]_i_1__0_n_2 ,\adc_sum_reg[0]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({\adc_sum[0]_i_2__0_n_0 ,\adc_sum[0]_i_3__0_n_0 ,\adc_sum[0]_i_4__0_n_0 ,\adc_sum[0]_i_5__0_n_0 }),
        .O(O),
        .S(S));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[12]_i_1__0 
       (.CI(\adc_sum_reg[8]_i_1__0_n_0 ),
        .CO({\adc_sum_reg[12]_i_1__0_n_0 ,\adc_sum_reg[12]_i_1__0_n_1 ,\adc_sum_reg[12]_i_1__0_n_2 ,\adc_sum_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({\adc_sum[12]_i_2__0_n_0 ,\adc_sum[12]_i_3__0_n_0 ,\adc_sum[12]_i_4__0_n_0 ,\adc_sum[12]_i_5__0_n_0 }),
        .O(\m_axis_tdata_reg[15]_0 ),
        .S(\adc_sum_reg[15] ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[16]_i_1__0 
       (.CI(\adc_sum_reg[12]_i_1__0_n_0 ),
        .CO({\adc_sum_reg[16]_i_1__0_n_0 ,\adc_sum_reg[16]_i_1__0_n_1 ,\adc_sum_reg[16]_i_1__0_n_2 ,\adc_sum_reg[16]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({\adc_sum[12]_i_2__0_n_0 ,\adc_sum[12]_i_2__0_n_0 ,\adc_sum[12]_i_2__0_n_0 ,\adc_sum[12]_i_2__0_n_0 }),
        .O(\m_axis_tdata_reg[15]_1 ),
        .S(\adc_sum_reg[19] ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[20]_i_1__0 
       (.CI(\adc_sum_reg[16]_i_1__0_n_0 ),
        .CO({\adc_sum_reg[20]_i_1__0_n_0 ,\adc_sum_reg[20]_i_1__0_n_1 ,\adc_sum_reg[20]_i_1__0_n_2 ,\adc_sum_reg[20]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({\adc_sum[12]_i_2__0_n_0 ,\adc_sum[12]_i_2__0_n_0 ,\adc_sum[12]_i_2__0_n_0 ,\adc_sum[12]_i_2__0_n_0 }),
        .O(\m_axis_tdata_reg[15]_2 ),
        .S(\adc_sum_reg[23] ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[24]_i_1__0 
       (.CI(\adc_sum_reg[20]_i_1__0_n_0 ),
        .CO({\adc_sum_reg[24]_i_1__0_n_0 ,\adc_sum_reg[24]_i_1__0_n_1 ,\adc_sum_reg[24]_i_1__0_n_2 ,\adc_sum_reg[24]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({\adc_sum[12]_i_2__0_n_0 ,\adc_sum[12]_i_2__0_n_0 ,\adc_sum[12]_i_2__0_n_0 ,\adc_sum[12]_i_2__0_n_0 }),
        .O(\m_axis_tdata_reg[15]_3 ),
        .S(\adc_sum_reg[27] ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[28]_i_1__0 
       (.CI(\adc_sum_reg[24]_i_1__0_n_0 ),
        .CO({\NLW_adc_sum_reg[28]_i_1__0_CO_UNCONNECTED [3],\adc_sum_reg[28]_i_1__0_n_1 ,\adc_sum_reg[28]_i_1__0_n_2 ,\adc_sum_reg[28]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\adc_sum[12]_i_2__0_n_0 ,\adc_sum[12]_i_2__0_n_0 ,\adc_sum[12]_i_2__0_n_0 }),
        .O(\m_axis_tdata_reg[15]_4 ),
        .S(\adc_sum_reg[31]_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[4]_i_1__0 
       (.CI(\adc_sum_reg[0]_i_1__0_n_0 ),
        .CO({\adc_sum_reg[4]_i_1__0_n_0 ,\adc_sum_reg[4]_i_1__0_n_1 ,\adc_sum_reg[4]_i_1__0_n_2 ,\adc_sum_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({\adc_sum[4]_i_2__0_n_0 ,\adc_sum[4]_i_3__0_n_0 ,\adc_sum[4]_i_4__0_n_0 ,\adc_sum[4]_i_5__0_n_0 }),
        .O(\m_axis_tdata_reg[7]_0 ),
        .S(\adc_sum_reg[7] ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[8]_i_1__0 
       (.CI(\adc_sum_reg[4]_i_1__0_n_0 ),
        .CO({\adc_sum_reg[8]_i_1__0_n_0 ,\adc_sum_reg[8]_i_1__0_n_1 ,\adc_sum_reg[8]_i_1__0_n_2 ,\adc_sum_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({\adc_sum[8]_i_2__0_n_0 ,\adc_sum[8]_i_3__0_n_0 ,\adc_sum[8]_i_4__0_n_0 ,\adc_sum[8]_i_5__0_n_0 }),
        .O(\m_axis_tdata_reg[11]_0 ),
        .S(\adc_sum_reg[11] ));
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(0),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    gain_calc_r_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,A,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_gain_calc_r_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,gain_calc_r_reg_0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_gain_calc_r_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_gain_calc_r_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_gain_calc_r_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b1),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_gain_calc_r_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_gain_calc_r_reg_OVERFLOW_UNCONNECTED),
        .P(NLW_gain_calc_r_reg_P_UNCONNECTED[47:0]),
        .PATTERNBDETECT(NLW_gain_calc_r_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_gain_calc_r_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({gain_calc_r_reg_n_106,gain_calc_r_reg_n_107,gain_calc_r_reg_n_108,gain_calc_r_reg_n_109,gain_calc_r_reg_n_110,gain_calc_r_reg_n_111,gain_calc_r_reg_n_112,gain_calc_r_reg_n_113,gain_calc_r_reg_n_114,gain_calc_r_reg_n_115,gain_calc_r_reg_n_116,gain_calc_r_reg_n_117,gain_calc_r_reg_n_118,gain_calc_r_reg_n_119,gain_calc_r_reg_n_120,gain_calc_r_reg_n_121,gain_calc_r_reg_n_122,gain_calc_r_reg_n_123,gain_calc_r_reg_n_124,gain_calc_r_reg_n_125,gain_calc_r_reg_n_126,gain_calc_r_reg_n_127,gain_calc_r_reg_n_128,gain_calc_r_reg_n_129,gain_calc_r_reg_n_130,gain_calc_r_reg_n_131,gain_calc_r_reg_n_132,gain_calc_r_reg_n_133,gain_calc_r_reg_n_134,gain_calc_r_reg_n_135,gain_calc_r_reg_n_136,gain_calc_r_reg_n_137,gain_calc_r_reg_n_138,gain_calc_r_reg_n_139,gain_calc_r_reg_n_140,gain_calc_r_reg_n_141,gain_calc_r_reg_n_142,gain_calc_r_reg_n_143,gain_calc_r_reg_n_144,gain_calc_r_reg_n_145,gain_calc_r_reg_n_146,gain_calc_r_reg_n_147,gain_calc_r_reg_n_148,gain_calc_r_reg_n_149,gain_calc_r_reg_n_150,gain_calc_r_reg_n_151,gain_calc_r_reg_n_152,gain_calc_r_reg_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_gain_calc_r_reg_UNDERFLOW_UNCONNECTED));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_r_reg_i_1__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[1] ),
        .O(A[16]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_r_reg_i_2__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[0] ),
        .O(A[15]));
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'hFFFFCFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'hFFFFDFFFFFFF),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("PATDET"),
    .USE_SIMD("ONE48")) 
    gain_calc_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gain_calc_r_reg_0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_gain_calc_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({p_0_in[1],p_0_in[1],p_0_in[1],p_0_in[1],p_0_in[1],B}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_gain_calc_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_gain_calc_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_gain_calc_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b1),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_gain_calc_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_gain_calc_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_gain_calc_reg_P_UNCONNECTED[47:30],gain_calc_reg_n_76,p_2_in,gain_calc_reg_n_93,gain_calc_reg_n_94,gain_calc_reg_n_95,gain_calc_reg_n_96,gain_calc_reg_n_97,gain_calc_reg_n_98,gain_calc_reg_n_99,gain_calc_reg_n_100,gain_calc_reg_n_101,gain_calc_reg_n_102,gain_calc_reg_n_103,gain_calc_reg_n_104,gain_calc_reg_n_105}),
        .PATTERNBDETECT(gain_min),
        .PATTERNDETECT(gain_max),
        .PCIN({gain_calc_r_reg_n_106,gain_calc_r_reg_n_107,gain_calc_r_reg_n_108,gain_calc_r_reg_n_109,gain_calc_r_reg_n_110,gain_calc_r_reg_n_111,gain_calc_r_reg_n_112,gain_calc_r_reg_n_113,gain_calc_r_reg_n_114,gain_calc_r_reg_n_115,gain_calc_r_reg_n_116,gain_calc_r_reg_n_117,gain_calc_r_reg_n_118,gain_calc_r_reg_n_119,gain_calc_r_reg_n_120,gain_calc_r_reg_n_121,gain_calc_r_reg_n_122,gain_calc_r_reg_n_123,gain_calc_r_reg_n_124,gain_calc_r_reg_n_125,gain_calc_r_reg_n_126,gain_calc_r_reg_n_127,gain_calc_r_reg_n_128,gain_calc_r_reg_n_129,gain_calc_r_reg_n_130,gain_calc_r_reg_n_131,gain_calc_r_reg_n_132,gain_calc_r_reg_n_133,gain_calc_r_reg_n_134,gain_calc_r_reg_n_135,gain_calc_r_reg_n_136,gain_calc_r_reg_n_137,gain_calc_r_reg_n_138,gain_calc_r_reg_n_139,gain_calc_r_reg_n_140,gain_calc_r_reg_n_141,gain_calc_r_reg_n_142,gain_calc_r_reg_n_143,gain_calc_r_reg_n_144,gain_calc_r_reg_n_145,gain_calc_r_reg_n_146,gain_calc_r_reg_n_147,gain_calc_r_reg_n_148,gain_calc_r_reg_n_149,gain_calc_r_reg_n_150,gain_calc_r_reg_n_151,gain_calc_r_reg_n_152,gain_calc_r_reg_n_153}),
        .PCOUT(NLW_gain_calc_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_gain_calc_reg_UNDERFLOW_UNCONNECTED));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_10__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[5] ),
        .O(B[3]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_11__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[4] ),
        .O(B[2]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_12__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[3] ),
        .O(B[1]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_13__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[2] ),
        .O(B[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_1__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[14] ),
        .O(B[12]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_2__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[13] ),
        .O(B[11]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_3__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[12] ),
        .O(B[10]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_4__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[11] ),
        .O(B[9]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_5__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[10] ),
        .O(B[8]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_6__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[9] ),
        .O(B[7]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_7__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[8] ),
        .O(B[6]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_8__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[7] ),
        .O(B[5]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_9__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[6] ),
        .O(B[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[0]_i_1__2 
       (.I0(p_2_in[0]),
        .I1(gain_min),
        .O(\m_axis_tdata[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[0]_i_4__0 
       (.I0(ramp_sig_reg[0]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [13]),
        .I3(Q[0]),
        .I4(calib_tdata[0]),
        .O(ramp_sig_reg_0_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[10]_i_1__2 
       (.I0(p_2_in[10]),
        .I1(gain_min),
        .O(\m_axis_tdata[10]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[10]_i_4__0 
       (.I0(ramp_sig_reg[10]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [8]),
        .I3(Q[0]),
        .I4(calib_tdata[10]),
        .O(ramp_sig_reg_10_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[11]_i_1__2 
       (.I0(p_2_in[11]),
        .I1(gain_min),
        .O(\m_axis_tdata[11]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[11]_i_4__0 
       (.I0(ramp_sig_reg[11]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [9]),
        .I3(Q[0]),
        .I4(calib_tdata[11]),
        .O(ramp_sig_reg_11_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[12]_i_1__2 
       (.I0(p_2_in[12]),
        .I1(gain_min),
        .O(\m_axis_tdata[12]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[12]_i_5 
       (.I0(ramp_sig_reg[12]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [10]),
        .I3(Q[0]),
        .I4(calib_tdata[12]),
        .O(ramp_sig_reg_12_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[13]_i_1__2 
       (.I0(p_2_in[13]),
        .I1(gain_min),
        .O(\m_axis_tdata[13]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[13]_i_5__0 
       (.I0(ramp_sig_reg[13]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [11]),
        .I3(Q[0]),
        .I4(calib_tdata[13]),
        .O(ramp_sig_reg_13_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[14]_i_1__2 
       (.I0(p_2_in[14]),
        .I1(gain_min),
        .O(\m_axis_tdata[14]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \m_axis_tdata[15]_i_1__1 
       (.I0(p_2_in[15]),
        .I1(gain_min),
        .O(\m_axis_tdata[15]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[1]_i_1__2 
       (.I0(p_2_in[1]),
        .I1(gain_min),
        .O(\m_axis_tdata[1]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[1]_i_4__0 
       (.I0(ramp_sig_reg[1]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [13]),
        .I3(Q[0]),
        .I4(calib_tdata[1]),
        .O(ramp_sig_reg_1_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[2]_i_1__2 
       (.I0(p_2_in[2]),
        .I1(gain_min),
        .O(\m_axis_tdata[2]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[2]_i_4__0 
       (.I0(ramp_sig_reg[2]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [0]),
        .I3(Q[0]),
        .I4(calib_tdata[2]),
        .O(ramp_sig_reg_2_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[3]_i_1__2 
       (.I0(p_2_in[3]),
        .I1(gain_min),
        .O(\m_axis_tdata[3]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[3]_i_4__0 
       (.I0(ramp_sig_reg[3]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [1]),
        .I3(Q[0]),
        .I4(calib_tdata[3]),
        .O(ramp_sig_reg_3_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[4]_i_1__2 
       (.I0(p_2_in[4]),
        .I1(gain_min),
        .O(\m_axis_tdata[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[4]_i_4__0 
       (.I0(ramp_sig_reg[4]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [2]),
        .I3(Q[0]),
        .I4(calib_tdata[4]),
        .O(ramp_sig_reg_4_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[5]_i_1__2 
       (.I0(p_2_in[5]),
        .I1(gain_min),
        .O(\m_axis_tdata[5]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[5]_i_4__0 
       (.I0(ramp_sig_reg[5]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [3]),
        .I3(Q[0]),
        .I4(calib_tdata[5]),
        .O(ramp_sig_reg_5_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[6]_i_1__2 
       (.I0(p_2_in[6]),
        .I1(gain_min),
        .O(\m_axis_tdata[6]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[6]_i_4__0 
       (.I0(ramp_sig_reg[6]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [4]),
        .I3(Q[0]),
        .I4(calib_tdata[6]),
        .O(ramp_sig_reg_6_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[7]_i_1__2 
       (.I0(p_2_in[7]),
        .I1(gain_min),
        .O(\m_axis_tdata[7]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[7]_i_4__0 
       (.I0(ramp_sig_reg[7]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [5]),
        .I3(Q[0]),
        .I4(calib_tdata[7]),
        .O(ramp_sig_reg_7_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[8]_i_1__2 
       (.I0(p_2_in[8]),
        .I1(gain_min),
        .O(\m_axis_tdata[8]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[8]_i_4__0 
       (.I0(ramp_sig_reg[8]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [6]),
        .I3(Q[0]),
        .I4(calib_tdata[8]),
        .O(ramp_sig_reg_8_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[9]_i_1__2 
       (.I0(p_2_in[9]),
        .I1(gain_min),
        .O(\m_axis_tdata[9]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[9]_i_4__0 
       (.I0(ramp_sig_reg[9]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [7]),
        .I3(Q[0]),
        .I4(calib_tdata[9]),
        .O(ramp_sig_reg_9_sn_1));
  FDSE \m_axis_tdata_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[0]_i_1__2_n_0 ),
        .Q(calib_tdata[0]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[10]_i_1__2_n_0 ),
        .Q(calib_tdata[10]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[11]_i_1__2_n_0 ),
        .Q(calib_tdata[11]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[12]_i_1__2_n_0 ),
        .Q(calib_tdata[12]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[13]_i_1__2_n_0 ),
        .Q(calib_tdata[13]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[14]_i_1__2_n_0 ),
        .Q(calib_tdata[14]),
        .S(gain_max));
  FDRE \m_axis_tdata_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[15]_i_1__1_n_0 ),
        .Q(calib_tdata[15]),
        .R(gain_max));
  FDSE \m_axis_tdata_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[1]_i_1__2_n_0 ),
        .Q(calib_tdata[1]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[2]_i_1__2_n_0 ),
        .Q(calib_tdata[2]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[3]_i_1__2_n_0 ),
        .Q(calib_tdata[3]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[4]_i_1__2_n_0 ),
        .Q(calib_tdata[4]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[5]_i_1__2_n_0 ),
        .Q(calib_tdata[5]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[6]_i_1__2_n_0 ),
        .Q(calib_tdata[6]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[7]_i_1__2_n_0 ),
        .Q(calib_tdata[7]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[8]_i_1__2_n_0 ),
        .Q(calib_tdata[8]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[9]_i_1__2_n_0 ),
        .Q(calib_tdata[9]),
        .S(gain_max));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[11]_i_2 
       (.I0(adc_data[11]),
        .I1(offset[11]),
        .O(\offset_calc[11]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[11]_i_3 
       (.I0(adc_data[10]),
        .I1(offset[10]),
        .O(\offset_calc[11]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[11]_i_4 
       (.I0(adc_data[9]),
        .I1(offset[9]),
        .O(\offset_calc[11]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[11]_i_5 
       (.I0(adc_data[8]),
        .I1(offset[8]),
        .O(\offset_calc[11]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \offset_calc[15]_i_2 
       (.I0(adc_data[15]),
        .O(\offset_calc[15]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[15]_i_3__0 
       (.I0(adc_data[15]),
        .I1(offset[15]),
        .O(\offset_calc[15]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[15]_i_4 
       (.I0(adc_data[14]),
        .I1(offset[14]),
        .O(\offset_calc[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[15]_i_5 
       (.I0(adc_data[13]),
        .I1(offset[13]),
        .O(\offset_calc[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[15]_i_6 
       (.I0(adc_data[12]),
        .I1(offset[12]),
        .O(\offset_calc[15]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[3]_i_2 
       (.I0(adc_data[3]),
        .I1(offset[3]),
        .O(\offset_calc[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[3]_i_3 
       (.I0(adc_data[2]),
        .I1(offset[2]),
        .O(\offset_calc[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[3]_i_4 
       (.I0(adc_data[1]),
        .I1(offset[1]),
        .O(\offset_calc[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[3]_i_5 
       (.I0(adc_data[0]),
        .I1(offset[0]),
        .O(\offset_calc[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[7]_i_2 
       (.I0(adc_data[7]),
        .I1(offset[7]),
        .O(\offset_calc[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[7]_i_3 
       (.I0(adc_data[6]),
        .I1(offset[6]),
        .O(\offset_calc[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[7]_i_4 
       (.I0(adc_data[5]),
        .I1(offset[5]),
        .O(\offset_calc[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[7]_i_5 
       (.I0(adc_data[4]),
        .I1(offset[4]),
        .O(\offset_calc[7]_i_5_n_0 ));
  FDRE \offset_calc_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[3]_i_1_n_7 ),
        .Q(\offset_calc_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \offset_calc_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[11]_i_1_n_5 ),
        .Q(\offset_calc_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \offset_calc_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[11]_i_1_n_4 ),
        .Q(\offset_calc_reg_n_0_[11] ),
        .R(1'b0));
  CARRY4 \offset_calc_reg[11]_i_1 
       (.CI(\offset_calc_reg[7]_i_1_n_0 ),
        .CO({\offset_calc_reg[11]_i_1_n_0 ,\offset_calc_reg[11]_i_1_n_1 ,\offset_calc_reg[11]_i_1_n_2 ,\offset_calc_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(adc_data[11:8]),
        .O({\offset_calc_reg[11]_i_1_n_4 ,\offset_calc_reg[11]_i_1_n_5 ,\offset_calc_reg[11]_i_1_n_6 ,\offset_calc_reg[11]_i_1_n_7 }),
        .S({\offset_calc[11]_i_2_n_0 ,\offset_calc[11]_i_3_n_0 ,\offset_calc[11]_i_4_n_0 ,\offset_calc[11]_i_5_n_0 }));
  FDRE \offset_calc_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[15]_i_1_n_7 ),
        .Q(\offset_calc_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \offset_calc_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[15]_i_1_n_6 ),
        .Q(\offset_calc_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \offset_calc_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[15]_i_1_n_5 ),
        .Q(\offset_calc_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \offset_calc_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[15]_i_1_n_4 ),
        .Q(p_0_in[0]),
        .R(1'b0));
  CARRY4 \offset_calc_reg[15]_i_1 
       (.CI(\offset_calc_reg[11]_i_1_n_0 ),
        .CO({\offset_calc_reg[15]_i_1_n_0 ,\offset_calc_reg[15]_i_1_n_1 ,\offset_calc_reg[15]_i_1_n_2 ,\offset_calc_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\offset_calc[15]_i_2_n_0 ,adc_data[14:12]}),
        .O({\offset_calc_reg[15]_i_1_n_4 ,\offset_calc_reg[15]_i_1_n_5 ,\offset_calc_reg[15]_i_1_n_6 ,\offset_calc_reg[15]_i_1_n_7 }),
        .S({\offset_calc[15]_i_3__0_n_0 ,\offset_calc[15]_i_4_n_0 ,\offset_calc[15]_i_5_n_0 ,\offset_calc[15]_i_6_n_0 }));
  FDRE \offset_calc_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[16]_i_1_n_7 ),
        .Q(p_0_in[1]),
        .R(1'b0));
  CARRY4 \offset_calc_reg[16]_i_1 
       (.CI(\offset_calc_reg[15]_i_1_n_0 ),
        .CO(\NLW_offset_calc_reg[16]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_offset_calc_reg[16]_i_1_O_UNCONNECTED [3:1],\offset_calc_reg[16]_i_1_n_7 }),
        .S({1'b0,1'b0,1'b0,1'b1}));
  FDRE \offset_calc_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[3]_i_1_n_6 ),
        .Q(\offset_calc_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \offset_calc_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[3]_i_1_n_5 ),
        .Q(\offset_calc_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \offset_calc_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[3]_i_1_n_4 ),
        .Q(\offset_calc_reg_n_0_[3] ),
        .R(1'b0));
  CARRY4 \offset_calc_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\offset_calc_reg[3]_i_1_n_0 ,\offset_calc_reg[3]_i_1_n_1 ,\offset_calc_reg[3]_i_1_n_2 ,\offset_calc_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(adc_data[3:0]),
        .O({\offset_calc_reg[3]_i_1_n_4 ,\offset_calc_reg[3]_i_1_n_5 ,\offset_calc_reg[3]_i_1_n_6 ,\offset_calc_reg[3]_i_1_n_7 }),
        .S({\offset_calc[3]_i_2_n_0 ,\offset_calc[3]_i_3_n_0 ,\offset_calc[3]_i_4_n_0 ,\offset_calc[3]_i_5_n_0 }));
  FDRE \offset_calc_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[7]_i_1_n_7 ),
        .Q(\offset_calc_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \offset_calc_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[7]_i_1_n_6 ),
        .Q(\offset_calc_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \offset_calc_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[7]_i_1_n_5 ),
        .Q(\offset_calc_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \offset_calc_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[7]_i_1_n_4 ),
        .Q(\offset_calc_reg_n_0_[7] ),
        .R(1'b0));
  CARRY4 \offset_calc_reg[7]_i_1 
       (.CI(\offset_calc_reg[3]_i_1_n_0 ),
        .CO({\offset_calc_reg[7]_i_1_n_0 ,\offset_calc_reg[7]_i_1_n_1 ,\offset_calc_reg[7]_i_1_n_2 ,\offset_calc_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(adc_data[7:4]),
        .O({\offset_calc_reg[7]_i_1_n_4 ,\offset_calc_reg[7]_i_1_n_5 ,\offset_calc_reg[7]_i_1_n_6 ,\offset_calc_reg[7]_i_1_n_7 }),
        .S({\offset_calc[7]_i_2_n_0 ,\offset_calc[7]_i_3_n_0 ,\offset_calc[7]_i_4_n_0 ,\offset_calc[7]_i_5_n_0 }));
  FDRE \offset_calc_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[11]_i_1_n_7 ),
        .Q(\offset_calc_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \offset_calc_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[11]_i_1_n_6 ),
        .Q(\offset_calc_reg_n_0_[9] ),
        .R(1'b0));
  FDRE \offset_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[0]),
        .Q(offset[0]),
        .R(1'b0));
  FDRE \offset_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[10]),
        .Q(offset[10]),
        .R(1'b0));
  FDRE \offset_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[11]),
        .Q(offset[11]),
        .R(1'b0));
  FDRE \offset_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[12]),
        .Q(offset[12]),
        .R(1'b0));
  FDRE \offset_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[13]),
        .Q(offset[13]),
        .R(1'b0));
  FDRE \offset_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[14]),
        .Q(offset[14]),
        .R(1'b0));
  FDRE \offset_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[15]),
        .Q(offset[15]),
        .R(1'b0));
  FDRE \offset_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[1]),
        .Q(offset[1]),
        .R(1'b0));
  FDRE \offset_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[2]),
        .Q(offset[2]),
        .R(1'b0));
  FDRE \offset_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[3]),
        .Q(offset[3]),
        .R(1'b0));
  FDRE \offset_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[4]),
        .Q(offset[4]),
        .R(1'b0));
  FDRE \offset_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[5]),
        .Q(offset[5]),
        .R(1'b0));
  FDRE \offset_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[6]),
        .Q(offset[6]),
        .R(1'b0));
  FDRE \offset_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[7]),
        .Q(offset[7]),
        .R(1'b0));
  FDRE \offset_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[8]),
        .Q(offset[8]),
        .R(1'b0));
  FDRE \offset_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(offset_reg[9]),
        .Q(offset[9]),
        .R(1'b0));
  FDRE \offset_reg_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [0]),
        .Q(offset_reg[0]),
        .R(1'b0));
  FDRE \offset_reg_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [10]),
        .Q(offset_reg[10]),
        .R(1'b0));
  FDRE \offset_reg_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [11]),
        .Q(offset_reg[11]),
        .R(1'b0));
  FDRE \offset_reg_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [12]),
        .Q(offset_reg[12]),
        .R(1'b0));
  FDRE \offset_reg_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [13]),
        .Q(offset_reg[13]),
        .R(1'b0));
  FDRE \offset_reg_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [14]),
        .Q(offset_reg[14]),
        .R(1'b0));
  FDRE \offset_reg_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [15]),
        .Q(offset_reg[15]),
        .R(1'b0));
  FDRE \offset_reg_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [1]),
        .Q(offset_reg[1]),
        .R(1'b0));
  FDRE \offset_reg_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [2]),
        .Q(offset_reg[2]),
        .R(1'b0));
  FDRE \offset_reg_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [3]),
        .Q(offset_reg[3]),
        .R(1'b0));
  FDRE \offset_reg_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [4]),
        .Q(offset_reg[4]),
        .R(1'b0));
  FDRE \offset_reg_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [5]),
        .Q(offset_reg[5]),
        .R(1'b0));
  FDRE \offset_reg_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [6]),
        .Q(offset_reg[6]),
        .R(1'b0));
  FDRE \offset_reg_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [7]),
        .Q(offset_reg[7]),
        .R(1'b0));
  FDRE \offset_reg_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [8]),
        .Q(offset_reg[8]),
        .R(1'b0));
  FDRE \offset_reg_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [9]),
        .Q(offset_reg[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "osc_calib" *) 
module system_rp_oscilloscope_0_osc_calib_14
   (ramp_sig_reg_0_sp_1,
    ramp_sig_reg_1_sp_1,
    ramp_sig_reg_2_sp_1,
    ramp_sig_reg_3_sp_1,
    ramp_sig_reg_4_sp_1,
    ramp_sig_reg_5_sp_1,
    ramp_sig_reg_6_sp_1,
    ramp_sig_reg_7_sp_1,
    ramp_sig_reg_8_sp_1,
    ramp_sig_reg_9_sp_1,
    ramp_sig_reg_10_sp_1,
    ramp_sig_reg_11_sp_1,
    ramp_sig_reg_12_sp_1,
    ramp_sig_reg_13_sp_1,
    ramp_sig_reg_14_sp_1,
    \adc_data_ch1_signed_reg[15] ,
    O,
    \m_axis_tdata_reg[7]_0 ,
    \m_axis_tdata_reg[11]_0 ,
    \cfg_loopback_reg[8] ,
    \cfg_loopback_reg[8]_0 ,
    \cfg_loopback_reg[8]_1 ,
    \cfg_loopback_reg[8]_2 ,
    \cfg_loopback_reg[8]_3 ,
    Q,
    \adc_sum_reg[31] ,
    ramp_sig_reg,
    CO,
    S,
    \adc_sum_reg[7] ,
    \adc_sum_reg[11] ,
    \adc_sum_reg[15] ,
    \adc_sum_reg[19] ,
    \adc_sum_reg[23] ,
    \adc_sum_reg[27] ,
    \adc_sum_reg[31]_0 ,
    \offset_reg_reg[15]_0 ,
    m_axi_osc1_aclk,
    D,
    gain_calc_r_reg_0);
  output ramp_sig_reg_0_sp_1;
  output ramp_sig_reg_1_sp_1;
  output ramp_sig_reg_2_sp_1;
  output ramp_sig_reg_3_sp_1;
  output ramp_sig_reg_4_sp_1;
  output ramp_sig_reg_5_sp_1;
  output ramp_sig_reg_6_sp_1;
  output ramp_sig_reg_7_sp_1;
  output ramp_sig_reg_8_sp_1;
  output ramp_sig_reg_9_sp_1;
  output ramp_sig_reg_10_sp_1;
  output ramp_sig_reg_11_sp_1;
  output ramp_sig_reg_12_sp_1;
  output ramp_sig_reg_13_sp_1;
  output ramp_sig_reg_14_sp_1;
  output \adc_data_ch1_signed_reg[15] ;
  output [3:0]O;
  output [3:0]\m_axis_tdata_reg[7]_0 ;
  output [3:0]\m_axis_tdata_reg[11]_0 ;
  output [3:0]\cfg_loopback_reg[8] ;
  output [3:0]\cfg_loopback_reg[8]_0 ;
  output [3:0]\cfg_loopback_reg[8]_1 ;
  output [3:0]\cfg_loopback_reg[8]_2 ;
  output [3:0]\cfg_loopback_reg[8]_3 ;
  input [1:0]Q;
  input [13:0]\adc_sum_reg[31] ;
  input [15:0]ramp_sig_reg;
  input [0:0]CO;
  input [3:0]S;
  input [3:0]\adc_sum_reg[7] ;
  input [3:0]\adc_sum_reg[11] ;
  input [3:0]\adc_sum_reg[15] ;
  input [3:0]\adc_sum_reg[19] ;
  input [3:0]\adc_sum_reg[23] ;
  input [3:0]\adc_sum_reg[27] ;
  input [3:0]\adc_sum_reg[31]_0 ;
  input [15:0]\offset_reg_reg[15]_0 ;
  input m_axi_osc1_aclk;
  input [15:0]D;
  input [15:0]gain_calc_r_reg_0;

  wire [16:15]A;
  wire [12:0]B;
  wire [0:0]CO;
  wire [15:0]D;
  wire [3:0]O;
  wire [1:0]Q;
  wire [3:0]S;
  wire [15:0]adc_data;
  wire \adc_data_ch1_signed_reg[15] ;
  wire [15:0]adc_data_reg;
  wire \adc_sum[0]_i_2_n_0 ;
  wire \adc_sum[0]_i_3_n_0 ;
  wire \adc_sum[0]_i_4_n_0 ;
  wire \adc_sum[0]_i_5_n_0 ;
  wire \adc_sum[12]_i_2_n_0 ;
  wire \adc_sum[12]_i_3_n_0 ;
  wire \adc_sum[12]_i_4_n_0 ;
  wire \adc_sum[12]_i_5_n_0 ;
  wire \adc_sum[4]_i_2_n_0 ;
  wire \adc_sum[4]_i_3_n_0 ;
  wire \adc_sum[4]_i_4_n_0 ;
  wire \adc_sum[4]_i_5_n_0 ;
  wire \adc_sum[8]_i_2_n_0 ;
  wire \adc_sum[8]_i_3_n_0 ;
  wire \adc_sum[8]_i_4_n_0 ;
  wire \adc_sum[8]_i_5_n_0 ;
  wire \adc_sum_reg[0]_i_1_n_0 ;
  wire \adc_sum_reg[0]_i_1_n_1 ;
  wire \adc_sum_reg[0]_i_1_n_2 ;
  wire \adc_sum_reg[0]_i_1_n_3 ;
  wire [3:0]\adc_sum_reg[11] ;
  wire \adc_sum_reg[12]_i_1_n_0 ;
  wire \adc_sum_reg[12]_i_1_n_1 ;
  wire \adc_sum_reg[12]_i_1_n_2 ;
  wire \adc_sum_reg[12]_i_1_n_3 ;
  wire [3:0]\adc_sum_reg[15] ;
  wire \adc_sum_reg[16]_i_1_n_0 ;
  wire \adc_sum_reg[16]_i_1_n_1 ;
  wire \adc_sum_reg[16]_i_1_n_2 ;
  wire \adc_sum_reg[16]_i_1_n_3 ;
  wire [3:0]\adc_sum_reg[19] ;
  wire \adc_sum_reg[20]_i_1_n_0 ;
  wire \adc_sum_reg[20]_i_1_n_1 ;
  wire \adc_sum_reg[20]_i_1_n_2 ;
  wire \adc_sum_reg[20]_i_1_n_3 ;
  wire [3:0]\adc_sum_reg[23] ;
  wire \adc_sum_reg[24]_i_1_n_0 ;
  wire \adc_sum_reg[24]_i_1_n_1 ;
  wire \adc_sum_reg[24]_i_1_n_2 ;
  wire \adc_sum_reg[24]_i_1_n_3 ;
  wire [3:0]\adc_sum_reg[27] ;
  wire \adc_sum_reg[28]_i_1_n_1 ;
  wire \adc_sum_reg[28]_i_1_n_2 ;
  wire \adc_sum_reg[28]_i_1_n_3 ;
  wire [13:0]\adc_sum_reg[31] ;
  wire [3:0]\adc_sum_reg[31]_0 ;
  wire \adc_sum_reg[4]_i_1_n_0 ;
  wire \adc_sum_reg[4]_i_1_n_1 ;
  wire \adc_sum_reg[4]_i_1_n_2 ;
  wire \adc_sum_reg[4]_i_1_n_3 ;
  wire [3:0]\adc_sum_reg[7] ;
  wire \adc_sum_reg[8]_i_1_n_0 ;
  wire \adc_sum_reg[8]_i_1_n_1 ;
  wire \adc_sum_reg[8]_i_1_n_2 ;
  wire \adc_sum_reg[8]_i_1_n_3 ;
  wire [15:0]calib_tdata;
  wire [3:0]\cfg_loopback_reg[8] ;
  wire [3:0]\cfg_loopback_reg[8]_0 ;
  wire [3:0]\cfg_loopback_reg[8]_1 ;
  wire [3:0]\cfg_loopback_reg[8]_2 ;
  wire [3:0]\cfg_loopback_reg[8]_3 ;
  wire [15:0]gain_calc_r_reg_0;
  wire gain_calc_r_reg_n_106;
  wire gain_calc_r_reg_n_107;
  wire gain_calc_r_reg_n_108;
  wire gain_calc_r_reg_n_109;
  wire gain_calc_r_reg_n_110;
  wire gain_calc_r_reg_n_111;
  wire gain_calc_r_reg_n_112;
  wire gain_calc_r_reg_n_113;
  wire gain_calc_r_reg_n_114;
  wire gain_calc_r_reg_n_115;
  wire gain_calc_r_reg_n_116;
  wire gain_calc_r_reg_n_117;
  wire gain_calc_r_reg_n_118;
  wire gain_calc_r_reg_n_119;
  wire gain_calc_r_reg_n_120;
  wire gain_calc_r_reg_n_121;
  wire gain_calc_r_reg_n_122;
  wire gain_calc_r_reg_n_123;
  wire gain_calc_r_reg_n_124;
  wire gain_calc_r_reg_n_125;
  wire gain_calc_r_reg_n_126;
  wire gain_calc_r_reg_n_127;
  wire gain_calc_r_reg_n_128;
  wire gain_calc_r_reg_n_129;
  wire gain_calc_r_reg_n_130;
  wire gain_calc_r_reg_n_131;
  wire gain_calc_r_reg_n_132;
  wire gain_calc_r_reg_n_133;
  wire gain_calc_r_reg_n_134;
  wire gain_calc_r_reg_n_135;
  wire gain_calc_r_reg_n_136;
  wire gain_calc_r_reg_n_137;
  wire gain_calc_r_reg_n_138;
  wire gain_calc_r_reg_n_139;
  wire gain_calc_r_reg_n_140;
  wire gain_calc_r_reg_n_141;
  wire gain_calc_r_reg_n_142;
  wire gain_calc_r_reg_n_143;
  wire gain_calc_r_reg_n_144;
  wire gain_calc_r_reg_n_145;
  wire gain_calc_r_reg_n_146;
  wire gain_calc_r_reg_n_147;
  wire gain_calc_r_reg_n_148;
  wire gain_calc_r_reg_n_149;
  wire gain_calc_r_reg_n_150;
  wire gain_calc_r_reg_n_151;
  wire gain_calc_r_reg_n_152;
  wire gain_calc_r_reg_n_153;
  wire gain_calc_reg_n_100;
  wire gain_calc_reg_n_101;
  wire gain_calc_reg_n_102;
  wire gain_calc_reg_n_103;
  wire gain_calc_reg_n_104;
  wire gain_calc_reg_n_105;
  wire gain_calc_reg_n_76;
  wire gain_calc_reg_n_93;
  wire gain_calc_reg_n_94;
  wire gain_calc_reg_n_95;
  wire gain_calc_reg_n_96;
  wire gain_calc_reg_n_97;
  wire gain_calc_reg_n_98;
  wire gain_calc_reg_n_99;
  wire gain_max;
  wire gain_min;
  wire m_axi_osc1_aclk;
  wire \m_axis_tdata[0]_i_1__1_n_0 ;
  wire \m_axis_tdata[10]_i_1__1_n_0 ;
  wire \m_axis_tdata[11]_i_1__1_n_0 ;
  wire \m_axis_tdata[12]_i_1__1_n_0 ;
  wire \m_axis_tdata[13]_i_1__1_n_0 ;
  wire \m_axis_tdata[14]_i_1__1_n_0 ;
  wire \m_axis_tdata[15]_i_1_n_0 ;
  wire \m_axis_tdata[1]_i_1__1_n_0 ;
  wire \m_axis_tdata[2]_i_1__1_n_0 ;
  wire \m_axis_tdata[3]_i_1__1_n_0 ;
  wire \m_axis_tdata[4]_i_1__1_n_0 ;
  wire \m_axis_tdata[5]_i_1__1_n_0 ;
  wire \m_axis_tdata[6]_i_1__1_n_0 ;
  wire \m_axis_tdata[7]_i_1__1_n_0 ;
  wire \m_axis_tdata[8]_i_1__1_n_0 ;
  wire \m_axis_tdata[9]_i_1__1_n_0 ;
  wire [3:0]\m_axis_tdata_reg[11]_0 ;
  wire [3:0]\m_axis_tdata_reg[7]_0 ;
  wire [15:0]offset;
  wire \offset_calc[11]_i_2_n_0 ;
  wire \offset_calc[11]_i_3_n_0 ;
  wire \offset_calc[11]_i_4_n_0 ;
  wire \offset_calc[11]_i_5_n_0 ;
  wire \offset_calc[15]_i_2_n_0 ;
  wire \offset_calc[15]_i_3_n_0 ;
  wire \offset_calc[15]_i_4_n_0 ;
  wire \offset_calc[15]_i_5_n_0 ;
  wire \offset_calc[15]_i_6_n_0 ;
  wire \offset_calc[3]_i_2_n_0 ;
  wire \offset_calc[3]_i_3_n_0 ;
  wire \offset_calc[3]_i_4_n_0 ;
  wire \offset_calc[3]_i_5_n_0 ;
  wire \offset_calc[7]_i_2_n_0 ;
  wire \offset_calc[7]_i_3_n_0 ;
  wire \offset_calc[7]_i_4_n_0 ;
  wire \offset_calc[7]_i_5_n_0 ;
  wire \offset_calc_reg[11]_i_1_n_0 ;
  wire \offset_calc_reg[11]_i_1_n_1 ;
  wire \offset_calc_reg[11]_i_1_n_2 ;
  wire \offset_calc_reg[11]_i_1_n_3 ;
  wire \offset_calc_reg[11]_i_1_n_4 ;
  wire \offset_calc_reg[11]_i_1_n_5 ;
  wire \offset_calc_reg[11]_i_1_n_6 ;
  wire \offset_calc_reg[11]_i_1_n_7 ;
  wire \offset_calc_reg[15]_i_1_n_0 ;
  wire \offset_calc_reg[15]_i_1_n_1 ;
  wire \offset_calc_reg[15]_i_1_n_2 ;
  wire \offset_calc_reg[15]_i_1_n_3 ;
  wire \offset_calc_reg[15]_i_1_n_4 ;
  wire \offset_calc_reg[15]_i_1_n_5 ;
  wire \offset_calc_reg[15]_i_1_n_6 ;
  wire \offset_calc_reg[15]_i_1_n_7 ;
  wire \offset_calc_reg[16]_i_1_n_7 ;
  wire \offset_calc_reg[3]_i_1_n_0 ;
  wire \offset_calc_reg[3]_i_1_n_1 ;
  wire \offset_calc_reg[3]_i_1_n_2 ;
  wire \offset_calc_reg[3]_i_1_n_3 ;
  wire \offset_calc_reg[3]_i_1_n_4 ;
  wire \offset_calc_reg[3]_i_1_n_5 ;
  wire \offset_calc_reg[3]_i_1_n_6 ;
  wire \offset_calc_reg[3]_i_1_n_7 ;
  wire \offset_calc_reg[7]_i_1_n_0 ;
  wire \offset_calc_reg[7]_i_1_n_1 ;
  wire \offset_calc_reg[7]_i_1_n_2 ;
  wire \offset_calc_reg[7]_i_1_n_3 ;
  wire \offset_calc_reg[7]_i_1_n_4 ;
  wire \offset_calc_reg[7]_i_1_n_5 ;
  wire \offset_calc_reg[7]_i_1_n_6 ;
  wire \offset_calc_reg[7]_i_1_n_7 ;
  wire \offset_calc_reg_n_0_[0] ;
  wire \offset_calc_reg_n_0_[10] ;
  wire \offset_calc_reg_n_0_[11] ;
  wire \offset_calc_reg_n_0_[12] ;
  wire \offset_calc_reg_n_0_[13] ;
  wire \offset_calc_reg_n_0_[14] ;
  wire \offset_calc_reg_n_0_[1] ;
  wire \offset_calc_reg_n_0_[2] ;
  wire \offset_calc_reg_n_0_[3] ;
  wire \offset_calc_reg_n_0_[4] ;
  wire \offset_calc_reg_n_0_[5] ;
  wire \offset_calc_reg_n_0_[6] ;
  wire \offset_calc_reg_n_0_[7] ;
  wire \offset_calc_reg_n_0_[8] ;
  wire \offset_calc_reg_n_0_[9] ;
  wire [15:0]offset_reg;
  wire [15:0]\offset_reg_reg[15]_0 ;
  wire [1:0]p_0_in;
  wire [15:0]p_2_in;
  wire [15:0]ramp_sig_reg;
  wire ramp_sig_reg_0_sn_1;
  wire ramp_sig_reg_10_sn_1;
  wire ramp_sig_reg_11_sn_1;
  wire ramp_sig_reg_12_sn_1;
  wire ramp_sig_reg_13_sn_1;
  wire ramp_sig_reg_14_sn_1;
  wire ramp_sig_reg_1_sn_1;
  wire ramp_sig_reg_2_sn_1;
  wire ramp_sig_reg_3_sn_1;
  wire ramp_sig_reg_4_sn_1;
  wire ramp_sig_reg_5_sn_1;
  wire ramp_sig_reg_6_sn_1;
  wire ramp_sig_reg_7_sn_1;
  wire ramp_sig_reg_8_sn_1;
  wire ramp_sig_reg_9_sn_1;
  wire [3:3]\NLW_adc_sum_reg[28]_i_1_CO_UNCONNECTED ;
  wire NLW_gain_calc_r_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_gain_calc_r_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_gain_calc_r_reg_OVERFLOW_UNCONNECTED;
  wire NLW_gain_calc_r_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_gain_calc_r_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_gain_calc_r_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_gain_calc_r_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_gain_calc_r_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_gain_calc_r_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_gain_calc_r_reg_P_UNCONNECTED;
  wire NLW_gain_calc_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_gain_calc_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_gain_calc_reg_OVERFLOW_UNCONNECTED;
  wire NLW_gain_calc_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_gain_calc_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_gain_calc_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_gain_calc_reg_CARRYOUT_UNCONNECTED;
  wire [47:30]NLW_gain_calc_reg_P_UNCONNECTED;
  wire [47:0]NLW_gain_calc_reg_PCOUT_UNCONNECTED;
  wire [3:0]\NLW_offset_calc_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_offset_calc_reg[16]_i_1_O_UNCONNECTED ;

  assign ramp_sig_reg_0_sp_1 = ramp_sig_reg_0_sn_1;
  assign ramp_sig_reg_10_sp_1 = ramp_sig_reg_10_sn_1;
  assign ramp_sig_reg_11_sp_1 = ramp_sig_reg_11_sn_1;
  assign ramp_sig_reg_12_sp_1 = ramp_sig_reg_12_sn_1;
  assign ramp_sig_reg_13_sp_1 = ramp_sig_reg_13_sn_1;
  assign ramp_sig_reg_14_sp_1 = ramp_sig_reg_14_sn_1;
  assign ramp_sig_reg_1_sp_1 = ramp_sig_reg_1_sn_1;
  assign ramp_sig_reg_2_sp_1 = ramp_sig_reg_2_sn_1;
  assign ramp_sig_reg_3_sp_1 = ramp_sig_reg_3_sn_1;
  assign ramp_sig_reg_4_sp_1 = ramp_sig_reg_4_sn_1;
  assign ramp_sig_reg_5_sp_1 = ramp_sig_reg_5_sn_1;
  assign ramp_sig_reg_6_sp_1 = ramp_sig_reg_6_sn_1;
  assign ramp_sig_reg_7_sp_1 = ramp_sig_reg_7_sn_1;
  assign ramp_sig_reg_8_sp_1 = ramp_sig_reg_8_sn_1;
  assign ramp_sig_reg_9_sp_1 = ramp_sig_reg_9_sn_1;
  FDRE \adc_data_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[0]),
        .Q(adc_data[0]),
        .R(1'b0));
  FDRE \adc_data_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[10]),
        .Q(adc_data[10]),
        .R(1'b0));
  FDRE \adc_data_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[11]),
        .Q(adc_data[11]),
        .R(1'b0));
  FDRE \adc_data_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[12]),
        .Q(adc_data[12]),
        .R(1'b0));
  FDRE \adc_data_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[13]),
        .Q(adc_data[13]),
        .R(1'b0));
  FDRE \adc_data_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[14]),
        .Q(adc_data[14]),
        .R(1'b0));
  FDRE \adc_data_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[15]),
        .Q(adc_data[15]),
        .R(1'b0));
  FDRE \adc_data_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[1]),
        .Q(adc_data[1]),
        .R(1'b0));
  FDRE \adc_data_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[2]),
        .Q(adc_data[2]),
        .R(1'b0));
  FDRE \adc_data_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[3]),
        .Q(adc_data[3]),
        .R(1'b0));
  FDRE \adc_data_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[4]),
        .Q(adc_data[4]),
        .R(1'b0));
  FDRE \adc_data_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[5]),
        .Q(adc_data[5]),
        .R(1'b0));
  FDRE \adc_data_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[6]),
        .Q(adc_data[6]),
        .R(1'b0));
  FDRE \adc_data_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[7]),
        .Q(adc_data[7]),
        .R(1'b0));
  FDRE \adc_data_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[8]),
        .Q(adc_data[8]),
        .R(1'b0));
  FDRE \adc_data_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(adc_data_reg[9]),
        .Q(adc_data[9]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(adc_data_reg[0]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[10]),
        .Q(adc_data_reg[10]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[11]),
        .Q(adc_data_reg[11]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[12]),
        .Q(adc_data_reg[12]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[13]),
        .Q(adc_data_reg[13]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[14]),
        .Q(adc_data_reg[14]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[15]),
        .Q(adc_data_reg[15]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(adc_data_reg[1]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(adc_data_reg[2]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(adc_data_reg[3]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(adc_data_reg[4]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(adc_data_reg[5]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(adc_data_reg[6]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(adc_data_reg[7]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[8]),
        .Q(adc_data_reg[8]),
        .R(1'b0));
  FDRE \adc_data_reg_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(D[9]),
        .Q(adc_data_reg[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[0]_i_2 
       (.I0(calib_tdata[3]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [1]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[3]),
        .I5(CO),
        .O(\adc_sum[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[0]_i_3 
       (.I0(calib_tdata[2]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [0]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[2]),
        .I5(CO),
        .O(\adc_sum[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[0]_i_4 
       (.I0(calib_tdata[1]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [13]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[1]),
        .I5(CO),
        .O(\adc_sum[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[0]_i_5 
       (.I0(calib_tdata[0]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [13]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[0]),
        .I5(CO),
        .O(\adc_sum[0]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \adc_sum[12]_i_10 
       (.I0(\adc_sum_reg[31] [13]),
        .I1(Q[0]),
        .I2(calib_tdata[15]),
        .I3(ramp_sig_reg[15]),
        .I4(Q[1]),
        .O(\adc_data_ch1_signed_reg[15] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \adc_sum[12]_i_11 
       (.I0(ramp_sig_reg[14]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [12]),
        .I3(Q[0]),
        .I4(calib_tdata[14]),
        .O(ramp_sig_reg_14_sn_1));
  LUT6 #(
    .INIT(64'h00000000DDD888D8)) 
    \adc_sum[12]_i_2 
       (.I0(Q[1]),
        .I1(ramp_sig_reg[15]),
        .I2(calib_tdata[15]),
        .I3(Q[0]),
        .I4(\adc_sum_reg[31] [13]),
        .I5(CO),
        .O(\adc_sum[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[12]_i_3 
       (.I0(calib_tdata[14]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [12]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[14]),
        .I5(CO),
        .O(\adc_sum[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[12]_i_4 
       (.I0(calib_tdata[13]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [11]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[13]),
        .I5(CO),
        .O(\adc_sum[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[12]_i_5 
       (.I0(calib_tdata[12]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [10]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[12]),
        .I5(CO),
        .O(\adc_sum[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[4]_i_2 
       (.I0(calib_tdata[7]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [5]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[7]),
        .I5(CO),
        .O(\adc_sum[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[4]_i_3 
       (.I0(calib_tdata[6]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [4]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[6]),
        .I5(CO),
        .O(\adc_sum[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[4]_i_4 
       (.I0(calib_tdata[5]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [3]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[5]),
        .I5(CO),
        .O(\adc_sum[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[4]_i_5 
       (.I0(calib_tdata[4]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [2]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[4]),
        .I5(CO),
        .O(\adc_sum[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[8]_i_2 
       (.I0(calib_tdata[11]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [9]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[11]),
        .I5(CO),
        .O(\adc_sum[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[8]_i_3 
       (.I0(calib_tdata[10]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [8]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[10]),
        .I5(CO),
        .O(\adc_sum[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[8]_i_4 
       (.I0(calib_tdata[9]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [7]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[9]),
        .I5(CO),
        .O(\adc_sum[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \adc_sum[8]_i_5 
       (.I0(calib_tdata[8]),
        .I1(Q[0]),
        .I2(\adc_sum_reg[31] [6]),
        .I3(Q[1]),
        .I4(ramp_sig_reg[8]),
        .I5(CO),
        .O(\adc_sum[8]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\adc_sum_reg[0]_i_1_n_0 ,\adc_sum_reg[0]_i_1_n_1 ,\adc_sum_reg[0]_i_1_n_2 ,\adc_sum_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\adc_sum[0]_i_2_n_0 ,\adc_sum[0]_i_3_n_0 ,\adc_sum[0]_i_4_n_0 ,\adc_sum[0]_i_5_n_0 }),
        .O(O),
        .S(S));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[12]_i_1 
       (.CI(\adc_sum_reg[8]_i_1_n_0 ),
        .CO({\adc_sum_reg[12]_i_1_n_0 ,\adc_sum_reg[12]_i_1_n_1 ,\adc_sum_reg[12]_i_1_n_2 ,\adc_sum_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\adc_sum[12]_i_2_n_0 ,\adc_sum[12]_i_3_n_0 ,\adc_sum[12]_i_4_n_0 ,\adc_sum[12]_i_5_n_0 }),
        .O(\cfg_loopback_reg[8] ),
        .S(\adc_sum_reg[15] ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[16]_i_1 
       (.CI(\adc_sum_reg[12]_i_1_n_0 ),
        .CO({\adc_sum_reg[16]_i_1_n_0 ,\adc_sum_reg[16]_i_1_n_1 ,\adc_sum_reg[16]_i_1_n_2 ,\adc_sum_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\adc_sum[12]_i_2_n_0 ,\adc_sum[12]_i_2_n_0 ,\adc_sum[12]_i_2_n_0 ,\adc_sum[12]_i_2_n_0 }),
        .O(\cfg_loopback_reg[8]_0 ),
        .S(\adc_sum_reg[19] ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[20]_i_1 
       (.CI(\adc_sum_reg[16]_i_1_n_0 ),
        .CO({\adc_sum_reg[20]_i_1_n_0 ,\adc_sum_reg[20]_i_1_n_1 ,\adc_sum_reg[20]_i_1_n_2 ,\adc_sum_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\adc_sum[12]_i_2_n_0 ,\adc_sum[12]_i_2_n_0 ,\adc_sum[12]_i_2_n_0 ,\adc_sum[12]_i_2_n_0 }),
        .O(\cfg_loopback_reg[8]_1 ),
        .S(\adc_sum_reg[23] ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[24]_i_1 
       (.CI(\adc_sum_reg[20]_i_1_n_0 ),
        .CO({\adc_sum_reg[24]_i_1_n_0 ,\adc_sum_reg[24]_i_1_n_1 ,\adc_sum_reg[24]_i_1_n_2 ,\adc_sum_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\adc_sum[12]_i_2_n_0 ,\adc_sum[12]_i_2_n_0 ,\adc_sum[12]_i_2_n_0 ,\adc_sum[12]_i_2_n_0 }),
        .O(\cfg_loopback_reg[8]_2 ),
        .S(\adc_sum_reg[27] ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[28]_i_1 
       (.CI(\adc_sum_reg[24]_i_1_n_0 ),
        .CO({\NLW_adc_sum_reg[28]_i_1_CO_UNCONNECTED [3],\adc_sum_reg[28]_i_1_n_1 ,\adc_sum_reg[28]_i_1_n_2 ,\adc_sum_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\adc_sum[12]_i_2_n_0 ,\adc_sum[12]_i_2_n_0 ,\adc_sum[12]_i_2_n_0 }),
        .O(\cfg_loopback_reg[8]_3 ),
        .S(\adc_sum_reg[31]_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[4]_i_1 
       (.CI(\adc_sum_reg[0]_i_1_n_0 ),
        .CO({\adc_sum_reg[4]_i_1_n_0 ,\adc_sum_reg[4]_i_1_n_1 ,\adc_sum_reg[4]_i_1_n_2 ,\adc_sum_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\adc_sum[4]_i_2_n_0 ,\adc_sum[4]_i_3_n_0 ,\adc_sum[4]_i_4_n_0 ,\adc_sum[4]_i_5_n_0 }),
        .O(\m_axis_tdata_reg[7]_0 ),
        .S(\adc_sum_reg[7] ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \adc_sum_reg[8]_i_1 
       (.CI(\adc_sum_reg[4]_i_1_n_0 ),
        .CO({\adc_sum_reg[8]_i_1_n_0 ,\adc_sum_reg[8]_i_1_n_1 ,\adc_sum_reg[8]_i_1_n_2 ,\adc_sum_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\adc_sum[8]_i_2_n_0 ,\adc_sum[8]_i_3_n_0 ,\adc_sum[8]_i_4_n_0 ,\adc_sum[8]_i_5_n_0 }),
        .O(\m_axis_tdata_reg[11]_0 ),
        .S(\adc_sum_reg[11] ));
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(0),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    gain_calc_r_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,A,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_gain_calc_r_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,gain_calc_r_reg_0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_gain_calc_r_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_gain_calc_r_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_gain_calc_r_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b1),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_gain_calc_r_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_gain_calc_r_reg_OVERFLOW_UNCONNECTED),
        .P(NLW_gain_calc_r_reg_P_UNCONNECTED[47:0]),
        .PATTERNBDETECT(NLW_gain_calc_r_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_gain_calc_r_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({gain_calc_r_reg_n_106,gain_calc_r_reg_n_107,gain_calc_r_reg_n_108,gain_calc_r_reg_n_109,gain_calc_r_reg_n_110,gain_calc_r_reg_n_111,gain_calc_r_reg_n_112,gain_calc_r_reg_n_113,gain_calc_r_reg_n_114,gain_calc_r_reg_n_115,gain_calc_r_reg_n_116,gain_calc_r_reg_n_117,gain_calc_r_reg_n_118,gain_calc_r_reg_n_119,gain_calc_r_reg_n_120,gain_calc_r_reg_n_121,gain_calc_r_reg_n_122,gain_calc_r_reg_n_123,gain_calc_r_reg_n_124,gain_calc_r_reg_n_125,gain_calc_r_reg_n_126,gain_calc_r_reg_n_127,gain_calc_r_reg_n_128,gain_calc_r_reg_n_129,gain_calc_r_reg_n_130,gain_calc_r_reg_n_131,gain_calc_r_reg_n_132,gain_calc_r_reg_n_133,gain_calc_r_reg_n_134,gain_calc_r_reg_n_135,gain_calc_r_reg_n_136,gain_calc_r_reg_n_137,gain_calc_r_reg_n_138,gain_calc_r_reg_n_139,gain_calc_r_reg_n_140,gain_calc_r_reg_n_141,gain_calc_r_reg_n_142,gain_calc_r_reg_n_143,gain_calc_r_reg_n_144,gain_calc_r_reg_n_145,gain_calc_r_reg_n_146,gain_calc_r_reg_n_147,gain_calc_r_reg_n_148,gain_calc_r_reg_n_149,gain_calc_r_reg_n_150,gain_calc_r_reg_n_151,gain_calc_r_reg_n_152,gain_calc_r_reg_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_gain_calc_r_reg_UNDERFLOW_UNCONNECTED));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_r_reg_i_1
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[1] ),
        .O(A[16]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_r_reg_i_2
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[0] ),
        .O(A[15]));
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'hFFFFCFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'hFFFFDFFFFFFF),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("PATDET"),
    .USE_SIMD("ONE48")) 
    gain_calc_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gain_calc_r_reg_0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_gain_calc_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({p_0_in[1],p_0_in[1],p_0_in[1],p_0_in[1],p_0_in[1],B}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_gain_calc_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_gain_calc_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_gain_calc_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b1),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b1),
        .CEP(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_gain_calc_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_gain_calc_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_gain_calc_reg_P_UNCONNECTED[47:30],gain_calc_reg_n_76,p_2_in,gain_calc_reg_n_93,gain_calc_reg_n_94,gain_calc_reg_n_95,gain_calc_reg_n_96,gain_calc_reg_n_97,gain_calc_reg_n_98,gain_calc_reg_n_99,gain_calc_reg_n_100,gain_calc_reg_n_101,gain_calc_reg_n_102,gain_calc_reg_n_103,gain_calc_reg_n_104,gain_calc_reg_n_105}),
        .PATTERNBDETECT(gain_min),
        .PATTERNDETECT(gain_max),
        .PCIN({gain_calc_r_reg_n_106,gain_calc_r_reg_n_107,gain_calc_r_reg_n_108,gain_calc_r_reg_n_109,gain_calc_r_reg_n_110,gain_calc_r_reg_n_111,gain_calc_r_reg_n_112,gain_calc_r_reg_n_113,gain_calc_r_reg_n_114,gain_calc_r_reg_n_115,gain_calc_r_reg_n_116,gain_calc_r_reg_n_117,gain_calc_r_reg_n_118,gain_calc_r_reg_n_119,gain_calc_r_reg_n_120,gain_calc_r_reg_n_121,gain_calc_r_reg_n_122,gain_calc_r_reg_n_123,gain_calc_r_reg_n_124,gain_calc_r_reg_n_125,gain_calc_r_reg_n_126,gain_calc_r_reg_n_127,gain_calc_r_reg_n_128,gain_calc_r_reg_n_129,gain_calc_r_reg_n_130,gain_calc_r_reg_n_131,gain_calc_r_reg_n_132,gain_calc_r_reg_n_133,gain_calc_r_reg_n_134,gain_calc_r_reg_n_135,gain_calc_r_reg_n_136,gain_calc_r_reg_n_137,gain_calc_r_reg_n_138,gain_calc_r_reg_n_139,gain_calc_r_reg_n_140,gain_calc_r_reg_n_141,gain_calc_r_reg_n_142,gain_calc_r_reg_n_143,gain_calc_r_reg_n_144,gain_calc_r_reg_n_145,gain_calc_r_reg_n_146,gain_calc_r_reg_n_147,gain_calc_r_reg_n_148,gain_calc_r_reg_n_149,gain_calc_r_reg_n_150,gain_calc_r_reg_n_151,gain_calc_r_reg_n_152,gain_calc_r_reg_n_153}),
        .PCOUT(NLW_gain_calc_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_gain_calc_reg_UNDERFLOW_UNCONNECTED));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_1
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[14] ),
        .O(B[12]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_10
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[5] ),
        .O(B[3]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_11
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[4] ),
        .O(B[2]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_12
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[3] ),
        .O(B[1]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_13
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[2] ),
        .O(B[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_2
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[13] ),
        .O(B[11]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_3
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[12] ),
        .O(B[10]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_4
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[11] ),
        .O(B[9]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_5
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[10] ),
        .O(B[8]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_6
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[9] ),
        .O(B[7]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_7
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[8] ),
        .O(B[6]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_8
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[7] ),
        .O(B[5]));
  LUT3 #(
    .INIT(8'hD4)) 
    gain_calc_reg_i_9
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\offset_calc_reg_n_0_[6] ),
        .O(B[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[0]_i_1__1 
       (.I0(p_2_in[0]),
        .I1(gain_min),
        .O(\m_axis_tdata[0]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[0]_i_4 
       (.I0(ramp_sig_reg[0]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [13]),
        .I3(Q[0]),
        .I4(calib_tdata[0]),
        .O(ramp_sig_reg_0_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[10]_i_1__1 
       (.I0(p_2_in[10]),
        .I1(gain_min),
        .O(\m_axis_tdata[10]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[10]_i_4 
       (.I0(ramp_sig_reg[10]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [8]),
        .I3(Q[0]),
        .I4(calib_tdata[10]),
        .O(ramp_sig_reg_10_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[11]_i_1__1 
       (.I0(p_2_in[11]),
        .I1(gain_min),
        .O(\m_axis_tdata[11]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[11]_i_4 
       (.I0(ramp_sig_reg[11]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [9]),
        .I3(Q[0]),
        .I4(calib_tdata[11]),
        .O(ramp_sig_reg_11_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[12]_i_1__1 
       (.I0(p_2_in[12]),
        .I1(gain_min),
        .O(\m_axis_tdata[12]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[12]_i_4 
       (.I0(ramp_sig_reg[12]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [10]),
        .I3(Q[0]),
        .I4(calib_tdata[12]),
        .O(ramp_sig_reg_12_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[13]_i_1__1 
       (.I0(p_2_in[13]),
        .I1(gain_min),
        .O(\m_axis_tdata[13]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[13]_i_5 
       (.I0(ramp_sig_reg[13]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [11]),
        .I3(Q[0]),
        .I4(calib_tdata[13]),
        .O(ramp_sig_reg_13_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[14]_i_1__1 
       (.I0(p_2_in[14]),
        .I1(gain_min),
        .O(\m_axis_tdata[14]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \m_axis_tdata[15]_i_1 
       (.I0(p_2_in[15]),
        .I1(gain_min),
        .O(\m_axis_tdata[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[1]_i_1__1 
       (.I0(p_2_in[1]),
        .I1(gain_min),
        .O(\m_axis_tdata[1]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[1]_i_4 
       (.I0(ramp_sig_reg[1]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [13]),
        .I3(Q[0]),
        .I4(calib_tdata[1]),
        .O(ramp_sig_reg_1_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[2]_i_1__1 
       (.I0(p_2_in[2]),
        .I1(gain_min),
        .O(\m_axis_tdata[2]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[2]_i_4 
       (.I0(ramp_sig_reg[2]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [0]),
        .I3(Q[0]),
        .I4(calib_tdata[2]),
        .O(ramp_sig_reg_2_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[3]_i_1__1 
       (.I0(p_2_in[3]),
        .I1(gain_min),
        .O(\m_axis_tdata[3]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[3]_i_4 
       (.I0(ramp_sig_reg[3]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [1]),
        .I3(Q[0]),
        .I4(calib_tdata[3]),
        .O(ramp_sig_reg_3_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[4]_i_1__1 
       (.I0(p_2_in[4]),
        .I1(gain_min),
        .O(\m_axis_tdata[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[4]_i_4 
       (.I0(ramp_sig_reg[4]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [2]),
        .I3(Q[0]),
        .I4(calib_tdata[4]),
        .O(ramp_sig_reg_4_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[5]_i_1__1 
       (.I0(p_2_in[5]),
        .I1(gain_min),
        .O(\m_axis_tdata[5]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[5]_i_4 
       (.I0(ramp_sig_reg[5]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [3]),
        .I3(Q[0]),
        .I4(calib_tdata[5]),
        .O(ramp_sig_reg_5_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[6]_i_1__1 
       (.I0(p_2_in[6]),
        .I1(gain_min),
        .O(\m_axis_tdata[6]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[6]_i_4 
       (.I0(ramp_sig_reg[6]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [4]),
        .I3(Q[0]),
        .I4(calib_tdata[6]),
        .O(ramp_sig_reg_6_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[7]_i_1__1 
       (.I0(p_2_in[7]),
        .I1(gain_min),
        .O(\m_axis_tdata[7]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[7]_i_4 
       (.I0(ramp_sig_reg[7]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [5]),
        .I3(Q[0]),
        .I4(calib_tdata[7]),
        .O(ramp_sig_reg_7_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[8]_i_1__1 
       (.I0(p_2_in[8]),
        .I1(gain_min),
        .O(\m_axis_tdata[8]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[8]_i_4 
       (.I0(ramp_sig_reg[8]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [6]),
        .I3(Q[0]),
        .I4(calib_tdata[8]),
        .O(ramp_sig_reg_8_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[9]_i_1__1 
       (.I0(p_2_in[9]),
        .I1(gain_min),
        .O(\m_axis_tdata[9]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[9]_i_5 
       (.I0(ramp_sig_reg[9]),
        .I1(Q[1]),
        .I2(\adc_sum_reg[31] [7]),
        .I3(Q[0]),
        .I4(calib_tdata[9]),
        .O(ramp_sig_reg_9_sn_1));
  FDSE \m_axis_tdata_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[0]_i_1__1_n_0 ),
        .Q(calib_tdata[0]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[10]_i_1__1_n_0 ),
        .Q(calib_tdata[10]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[11]_i_1__1_n_0 ),
        .Q(calib_tdata[11]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[12]_i_1__1_n_0 ),
        .Q(calib_tdata[12]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[13]_i_1__1_n_0 ),
        .Q(calib_tdata[13]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[14]_i_1__1_n_0 ),
        .Q(calib_tdata[14]),
        .S(gain_max));
  FDRE \m_axis_tdata_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[15]_i_1_n_0 ),
        .Q(calib_tdata[15]),
        .R(gain_max));
  FDSE \m_axis_tdata_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[1]_i_1__1_n_0 ),
        .Q(calib_tdata[1]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[2]_i_1__1_n_0 ),
        .Q(calib_tdata[2]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[3]_i_1__1_n_0 ),
        .Q(calib_tdata[3]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[4]_i_1__1_n_0 ),
        .Q(calib_tdata[4]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[5]_i_1__1_n_0 ),
        .Q(calib_tdata[5]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[6]_i_1__1_n_0 ),
        .Q(calib_tdata[6]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[7]_i_1__1_n_0 ),
        .Q(calib_tdata[7]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[8]_i_1__1_n_0 ),
        .Q(calib_tdata[8]),
        .S(gain_max));
  FDSE \m_axis_tdata_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\m_axis_tdata[9]_i_1__1_n_0 ),
        .Q(calib_tdata[9]),
        .S(gain_max));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[11]_i_2 
       (.I0(adc_data[11]),
        .I1(offset[11]),
        .O(\offset_calc[11]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[11]_i_3 
       (.I0(adc_data[10]),
        .I1(offset[10]),
        .O(\offset_calc[11]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[11]_i_4 
       (.I0(adc_data[9]),
        .I1(offset[9]),
        .O(\offset_calc[11]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[11]_i_5 
       (.I0(adc_data[8]),
        .I1(offset[8]),
        .O(\offset_calc[11]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \offset_calc[15]_i_2 
       (.I0(adc_data[15]),
        .O(\offset_calc[15]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[15]_i_3 
       (.I0(adc_data[15]),
        .I1(offset[15]),
        .O(\offset_calc[15]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[15]_i_4 
       (.I0(adc_data[14]),
        .I1(offset[14]),
        .O(\offset_calc[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[15]_i_5 
       (.I0(adc_data[13]),
        .I1(offset[13]),
        .O(\offset_calc[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[15]_i_6 
       (.I0(adc_data[12]),
        .I1(offset[12]),
        .O(\offset_calc[15]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[3]_i_2 
       (.I0(adc_data[3]),
        .I1(offset[3]),
        .O(\offset_calc[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[3]_i_3 
       (.I0(adc_data[2]),
        .I1(offset[2]),
        .O(\offset_calc[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[3]_i_4 
       (.I0(adc_data[1]),
        .I1(offset[1]),
        .O(\offset_calc[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[3]_i_5 
       (.I0(adc_data[0]),
        .I1(offset[0]),
        .O(\offset_calc[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[7]_i_2 
       (.I0(adc_data[7]),
        .I1(offset[7]),
        .O(\offset_calc[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[7]_i_3 
       (.I0(adc_data[6]),
        .I1(offset[6]),
        .O(\offset_calc[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[7]_i_4 
       (.I0(adc_data[5]),
        .I1(offset[5]),
        .O(\offset_calc[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \offset_calc[7]_i_5 
       (.I0(adc_data[4]),
        .I1(offset[4]),
        .O(\offset_calc[7]_i_5_n_0 ));
  FDRE \offset_calc_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[3]_i_1_n_7 ),
        .Q(\offset_calc_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \offset_calc_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[11]_i_1_n_5 ),
        .Q(\offset_calc_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \offset_calc_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[11]_i_1_n_4 ),
        .Q(\offset_calc_reg_n_0_[11] ),
        .R(1'b0));
  CARRY4 \offset_calc_reg[11]_i_1 
       (.CI(\offset_calc_reg[7]_i_1_n_0 ),
        .CO({\offset_calc_reg[11]_i_1_n_0 ,\offset_calc_reg[11]_i_1_n_1 ,\offset_calc_reg[11]_i_1_n_2 ,\offset_calc_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(adc_data[11:8]),
        .O({\offset_calc_reg[11]_i_1_n_4 ,\offset_calc_reg[11]_i_1_n_5 ,\offset_calc_reg[11]_i_1_n_6 ,\offset_calc_reg[11]_i_1_n_7 }),
        .S({\offset_calc[11]_i_2_n_0 ,\offset_calc[11]_i_3_n_0 ,\offset_calc[11]_i_4_n_0 ,\offset_calc[11]_i_5_n_0 }));
  FDRE \offset_calc_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[15]_i_1_n_7 ),
        .Q(\offset_calc_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \offset_calc_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[15]_i_1_n_6 ),
        .Q(\offset_calc_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \offset_calc_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[15]_i_1_n_5 ),
        .Q(\offset_calc_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \offset_calc_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[15]_i_1_n_4 ),
        .Q(p_0_in[0]),
        .R(1'b0));
  CARRY4 \offset_calc_reg[15]_i_1 
       (.CI(\offset_calc_reg[11]_i_1_n_0 ),
        .CO({\offset_calc_reg[15]_i_1_n_0 ,\offset_calc_reg[15]_i_1_n_1 ,\offset_calc_reg[15]_i_1_n_2 ,\offset_calc_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\offset_calc[15]_i_2_n_0 ,adc_data[14:12]}),
        .O({\offset_calc_reg[15]_i_1_n_4 ,\offset_calc_reg[15]_i_1_n_5 ,\offset_calc_reg[15]_i_1_n_6 ,\offset_calc_reg[15]_i_1_n_7 }),
        .S({\offset_calc[15]_i_3_n_0 ,\offset_calc[15]_i_4_n_0 ,\offset_calc[15]_i_5_n_0 ,\offset_calc[15]_i_6_n_0 }));
  FDRE \offset_calc_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[16]_i_1_n_7 ),
        .Q(p_0_in[1]),
        .R(1'b0));
  CARRY4 \offset_calc_reg[16]_i_1 
       (.CI(\offset_calc_reg[15]_i_1_n_0 ),
        .CO(\NLW_offset_calc_reg[16]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_offset_calc_reg[16]_i_1_O_UNCONNECTED [3:1],\offset_calc_reg[16]_i_1_n_7 }),
        .S({1'b0,1'b0,1'b0,1'b1}));
  FDRE \offset_calc_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[3]_i_1_n_6 ),
        .Q(\offset_calc_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \offset_calc_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[3]_i_1_n_5 ),
        .Q(\offset_calc_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \offset_calc_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[3]_i_1_n_4 ),
        .Q(\offset_calc_reg_n_0_[3] ),
        .R(1'b0));
  CARRY4 \offset_calc_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\offset_calc_reg[3]_i_1_n_0 ,\offset_calc_reg[3]_i_1_n_1 ,\offset_calc_reg[3]_i_1_n_2 ,\offset_calc_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(adc_data[3:0]),
        .O({\offset_calc_reg[3]_i_1_n_4 ,\offset_calc_reg[3]_i_1_n_5 ,\offset_calc_reg[3]_i_1_n_6 ,\offset_calc_reg[3]_i_1_n_7 }),
        .S({\offset_calc[3]_i_2_n_0 ,\offset_calc[3]_i_3_n_0 ,\offset_calc[3]_i_4_n_0 ,\offset_calc[3]_i_5_n_0 }));
  FDRE \offset_calc_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[7]_i_1_n_7 ),
        .Q(\offset_calc_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \offset_calc_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[7]_i_1_n_6 ),
        .Q(\offset_calc_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \offset_calc_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[7]_i_1_n_5 ),
        .Q(\offset_calc_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \offset_calc_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[7]_i_1_n_4 ),
        .Q(\offset_calc_reg_n_0_[7] ),
        .R(1'b0));
  CARRY4 \offset_calc_reg[7]_i_1 
       (.CI(\offset_calc_reg[3]_i_1_n_0 ),
        .CO({\offset_calc_reg[7]_i_1_n_0 ,\offset_calc_reg[7]_i_1_n_1 ,\offset_calc_reg[7]_i_1_n_2 ,\offset_calc_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(adc_data[7:4]),
        .O({\offset_calc_reg[7]_i_1_n_4 ,\offset_calc_reg[7]_i_1_n_5 ,\offset_calc_reg[7]_i_1_n_6 ,\offset_calc_reg[7]_i_1_n_7 }),
        .S({\offset_calc[7]_i_2_n_0 ,\offset_calc[7]_i_3_n_0 ,\offset_calc[7]_i_4_n_0 ,\offset_calc[7]_i_5_n_0 }));
  FDRE \offset_calc_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[11]_i_1_n_7 ),
        .Q(\offset_calc_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \offset_calc_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_calc_reg[11]_i_1_n_6 ),
        .Q(\offset_calc_reg_n_0_[9] ),
        .R(1'b0));
  FDRE \offset_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[0]),
        .Q(offset[0]),
        .R(1'b0));
  FDRE \offset_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[10]),
        .Q(offset[10]),
        .R(1'b0));
  FDRE \offset_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[11]),
        .Q(offset[11]),
        .R(1'b0));
  FDRE \offset_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[12]),
        .Q(offset[12]),
        .R(1'b0));
  FDRE \offset_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[13]),
        .Q(offset[13]),
        .R(1'b0));
  FDRE \offset_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[14]),
        .Q(offset[14]),
        .R(1'b0));
  FDRE \offset_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[15]),
        .Q(offset[15]),
        .R(1'b0));
  FDRE \offset_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[1]),
        .Q(offset[1]),
        .R(1'b0));
  FDRE \offset_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[2]),
        .Q(offset[2]),
        .R(1'b0));
  FDRE \offset_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[3]),
        .Q(offset[3]),
        .R(1'b0));
  FDRE \offset_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[4]),
        .Q(offset[4]),
        .R(1'b0));
  FDRE \offset_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[5]),
        .Q(offset[5]),
        .R(1'b0));
  FDRE \offset_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[6]),
        .Q(offset[6]),
        .R(1'b0));
  FDRE \offset_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[7]),
        .Q(offset[7]),
        .R(1'b0));
  FDRE \offset_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[8]),
        .Q(offset[8]),
        .R(1'b0));
  FDRE \offset_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(offset_reg[9]),
        .Q(offset[9]),
        .R(1'b0));
  FDRE \offset_reg_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [0]),
        .Q(offset_reg[0]),
        .R(1'b0));
  FDRE \offset_reg_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [10]),
        .Q(offset_reg[10]),
        .R(1'b0));
  FDRE \offset_reg_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [11]),
        .Q(offset_reg[11]),
        .R(1'b0));
  FDRE \offset_reg_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [12]),
        .Q(offset_reg[12]),
        .R(1'b0));
  FDRE \offset_reg_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [13]),
        .Q(offset_reg[13]),
        .R(1'b0));
  FDRE \offset_reg_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [14]),
        .Q(offset_reg[14]),
        .R(1'b0));
  FDRE \offset_reg_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [15]),
        .Q(offset_reg[15]),
        .R(1'b0));
  FDRE \offset_reg_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [1]),
        .Q(offset_reg[1]),
        .R(1'b0));
  FDRE \offset_reg_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [2]),
        .Q(offset_reg[2]),
        .R(1'b0));
  FDRE \offset_reg_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [3]),
        .Q(offset_reg[3]),
        .R(1'b0));
  FDRE \offset_reg_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [4]),
        .Q(offset_reg[4]),
        .R(1'b0));
  FDRE \offset_reg_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [5]),
        .Q(offset_reg[5]),
        .R(1'b0));
  FDRE \offset_reg_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [6]),
        .Q(offset_reg[6]),
        .R(1'b0));
  FDRE \offset_reg_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [7]),
        .Q(offset_reg[7]),
        .R(1'b0));
  FDRE \offset_reg_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [8]),
        .Q(offset_reg[8]),
        .R(1'b0));
  FDRE \offset_reg_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\offset_reg_reg[15]_0 [9]),
        .Q(offset_reg[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "osc_decimator" *) 
module system_rp_oscilloscope_0_osc_decimator
   (clear,
    dec_tvalid,
    CO,
    m_axis_tvalid_reg_0,
    \adc_sum_reg[31]_0 ,
    \m_axis_tdata_reg[15]_0 ,
    \m_axis_tdata_reg[15]_1 ,
    \cfg_trig_high_level_reg[15] ,
    \m_axis_tdata_reg[15]_2 ,
    S,
    \adc_sum_reg[7]_0 ,
    \adc_sum_reg[11]_0 ,
    \adc_sum_reg[15]_0 ,
    \adc_sum_reg[19]_0 ,
    \adc_sum_reg[23]_0 ,
    \adc_sum_reg[27]_0 ,
    m_axi_osc2_aclk,
    \adc_sum_reg[31]_1 ,
    O,
    \adc_sum_reg[7]_1 ,
    \adc_sum_reg[11]_1 ,
    \adc_sum_reg[15]_1 ,
    \adc_sum_reg[19]_1 ,
    \adc_sum_reg[23]_1 ,
    \adc_sum_reg[27]_1 ,
    \adc_sum_reg[31]_2 ,
    m_axi_osc2_aresetn,
    \adc_dec_cnt_reg[16]_0 ,
    Q,
    m_axis_tvalid_reg_1,
    trig_detect_reg,
    trig_detect_reg_0,
    \adc_sum_reg[3]_0 ,
    \adc_sum_reg[3]_1 ,
    \adc_sum_reg[3]_2 ,
    \adc_sum_reg[3]_3 ,
    \adc_sum_reg[7]_2 ,
    \adc_sum_reg[7]_3 ,
    \adc_sum_reg[7]_4 ,
    \adc_sum_reg[7]_5 ,
    \adc_sum_reg[11]_2 ,
    \adc_sum_reg[11]_3 ,
    \adc_sum_reg[11]_4 ,
    \adc_sum_reg[11]_5 ,
    \adc_sum_reg[15]_2 ,
    \adc_sum_reg[15]_3 ,
    \adc_sum_reg[15]_4 ,
    \adc_sum_reg[15]_5 ,
    trig_detect_reg_i_3__0_0,
    trig_detect_reg_i_5__0_0);
  output clear;
  output dec_tvalid;
  output [0:0]CO;
  output m_axis_tvalid_reg_0;
  output [3:0]\adc_sum_reg[31]_0 ;
  output [15:0]\m_axis_tdata_reg[15]_0 ;
  output [0:0]\m_axis_tdata_reg[15]_1 ;
  output [0:0]\cfg_trig_high_level_reg[15] ;
  output [0:0]\m_axis_tdata_reg[15]_2 ;
  output [3:0]S;
  output [3:0]\adc_sum_reg[7]_0 ;
  output [3:0]\adc_sum_reg[11]_0 ;
  output [3:0]\adc_sum_reg[15]_0 ;
  output [3:0]\adc_sum_reg[19]_0 ;
  output [3:0]\adc_sum_reg[23]_0 ;
  output [3:0]\adc_sum_reg[27]_0 ;
  input m_axi_osc2_aclk;
  input \adc_sum_reg[31]_1 ;
  input [3:0]O;
  input [3:0]\adc_sum_reg[7]_1 ;
  input [3:0]\adc_sum_reg[11]_1 ;
  input [3:0]\adc_sum_reg[15]_1 ;
  input [3:0]\adc_sum_reg[19]_1 ;
  input [3:0]\adc_sum_reg[23]_1 ;
  input [3:0]\adc_sum_reg[27]_1 ;
  input [3:0]\adc_sum_reg[31]_2 ;
  input m_axi_osc2_aresetn;
  input \adc_dec_cnt_reg[16]_0 ;
  input [16:0]Q;
  input m_axis_tvalid_reg_1;
  input trig_detect_reg;
  input trig_detect_reg_0;
  input \adc_sum_reg[3]_0 ;
  input \adc_sum_reg[3]_1 ;
  input \adc_sum_reg[3]_2 ;
  input \adc_sum_reg[3]_3 ;
  input \adc_sum_reg[7]_2 ;
  input \adc_sum_reg[7]_3 ;
  input \adc_sum_reg[7]_4 ;
  input \adc_sum_reg[7]_5 ;
  input \adc_sum_reg[11]_2 ;
  input \adc_sum_reg[11]_3 ;
  input \adc_sum_reg[11]_4 ;
  input \adc_sum_reg[11]_5 ;
  input \adc_sum_reg[15]_2 ;
  input \adc_sum_reg[15]_3 ;
  input \adc_sum_reg[15]_4 ;
  input \adc_sum_reg[15]_5 ;
  input [15:0]trig_detect_reg_i_3__0_0;
  input [15:0]trig_detect_reg_i_5__0_0;

  wire [0:0]CO;
  wire [3:0]O;
  wire [16:0]Q;
  wire [3:0]S;
  wire \U_osc_trigger/trig_detect1 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_0 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_1 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_2 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_3 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_4 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_5 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_6 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_7 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_0 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_1 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_2 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_3 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_4 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_5 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_6 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_7 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__2_n_1 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__2_n_2 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__2_n_3 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__2_n_4 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__2_n_5 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__2_n_6 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__2_n_7 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_0 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_1 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_2 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_3 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_4 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_5 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_6 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_7 ;
  wire \adc_dec_cnt[0]_i_2__0_n_0 ;
  wire \adc_dec_cnt[16]_i_1__0_n_0 ;
  wire \adc_dec_cnt_reg[16]_0 ;
  wire \adc_dec_cnt_reg_n_0_[0] ;
  wire \adc_dec_cnt_reg_n_0_[10] ;
  wire \adc_dec_cnt_reg_n_0_[11] ;
  wire \adc_dec_cnt_reg_n_0_[12] ;
  wire \adc_dec_cnt_reg_n_0_[13] ;
  wire \adc_dec_cnt_reg_n_0_[14] ;
  wire \adc_dec_cnt_reg_n_0_[15] ;
  wire \adc_dec_cnt_reg_n_0_[16] ;
  wire \adc_dec_cnt_reg_n_0_[1] ;
  wire \adc_dec_cnt_reg_n_0_[2] ;
  wire \adc_dec_cnt_reg_n_0_[3] ;
  wire \adc_dec_cnt_reg_n_0_[4] ;
  wire \adc_dec_cnt_reg_n_0_[5] ;
  wire \adc_dec_cnt_reg_n_0_[6] ;
  wire \adc_dec_cnt_reg_n_0_[7] ;
  wire \adc_dec_cnt_reg_n_0_[8] ;
  wire \adc_dec_cnt_reg_n_0_[9] ;
  wire adc_dv_div;
  wire [3:0]\adc_sum_reg[11]_0 ;
  wire [3:0]\adc_sum_reg[11]_1 ;
  wire \adc_sum_reg[11]_2 ;
  wire \adc_sum_reg[11]_3 ;
  wire \adc_sum_reg[11]_4 ;
  wire \adc_sum_reg[11]_5 ;
  wire [3:0]\adc_sum_reg[15]_0 ;
  wire [3:0]\adc_sum_reg[15]_1 ;
  wire \adc_sum_reg[15]_2 ;
  wire \adc_sum_reg[15]_3 ;
  wire \adc_sum_reg[15]_4 ;
  wire \adc_sum_reg[15]_5 ;
  wire [3:0]\adc_sum_reg[19]_0 ;
  wire [3:0]\adc_sum_reg[19]_1 ;
  wire [3:0]\adc_sum_reg[23]_0 ;
  wire [3:0]\adc_sum_reg[23]_1 ;
  wire [3:0]\adc_sum_reg[27]_0 ;
  wire [3:0]\adc_sum_reg[27]_1 ;
  wire [3:0]\adc_sum_reg[31]_0 ;
  wire \adc_sum_reg[31]_1 ;
  wire [3:0]\adc_sum_reg[31]_2 ;
  wire \adc_sum_reg[3]_0 ;
  wire \adc_sum_reg[3]_1 ;
  wire \adc_sum_reg[3]_2 ;
  wire \adc_sum_reg[3]_3 ;
  wire [3:0]\adc_sum_reg[7]_0 ;
  wire [3:0]\adc_sum_reg[7]_1 ;
  wire \adc_sum_reg[7]_2 ;
  wire \adc_sum_reg[7]_3 ;
  wire \adc_sum_reg[7]_4 ;
  wire \adc_sum_reg[7]_5 ;
  wire \adc_sum_reg_n_0_[0] ;
  wire \adc_sum_reg_n_0_[17] ;
  wire \adc_sum_reg_n_0_[18] ;
  wire \adc_sum_reg_n_0_[19] ;
  wire \adc_sum_reg_n_0_[20] ;
  wire \adc_sum_reg_n_0_[21] ;
  wire \adc_sum_reg_n_0_[22] ;
  wire \adc_sum_reg_n_0_[23] ;
  wire \adc_sum_reg_n_0_[24] ;
  wire \adc_sum_reg_n_0_[25] ;
  wire \adc_sum_reg_n_0_[26] ;
  wire \adc_sum_reg_n_0_[27] ;
  wire \adc_sum_reg_n_0_[28] ;
  wire \adc_sum_reg_n_0_[29] ;
  wire \adc_sum_reg_n_0_[30] ;
  wire [0:0]\cfg_trig_high_level_reg[15] ;
  wire clear;
  wire \dat_div[11]_i_2__0_n_0 ;
  wire \dat_div[11]_i_3__0_n_0 ;
  wire \dat_div[11]_i_4__0_n_0 ;
  wire \dat_div[11]_i_5__0_n_0 ;
  wire \dat_div[15]_i_2__0_n_0 ;
  wire \dat_div[15]_i_3__0_n_0 ;
  wire \dat_div[15]_i_4__0_n_0 ;
  wire \dat_div[15]_i_5__0_n_0 ;
  wire \dat_div[3]_i_2__0_n_0 ;
  wire \dat_div[3]_i_3__0_n_0 ;
  wire \dat_div[3]_i_4__0_n_0 ;
  wire \dat_div[7]_i_2__0_n_0 ;
  wire \dat_div[7]_i_3__0_n_0 ;
  wire \dat_div[7]_i_4__0_n_0 ;
  wire \dat_div[7]_i_5__0_n_0 ;
  wire \dat_div_reg_n_0_[0] ;
  wire \dat_div_reg_n_0_[10] ;
  wire \dat_div_reg_n_0_[11] ;
  wire \dat_div_reg_n_0_[12] ;
  wire \dat_div_reg_n_0_[13] ;
  wire \dat_div_reg_n_0_[14] ;
  wire \dat_div_reg_n_0_[15] ;
  wire \dat_div_reg_n_0_[1] ;
  wire \dat_div_reg_n_0_[2] ;
  wire \dat_div_reg_n_0_[3] ;
  wire \dat_div_reg_n_0_[4] ;
  wire \dat_div_reg_n_0_[5] ;
  wire \dat_div_reg_n_0_[6] ;
  wire \dat_div_reg_n_0_[7] ;
  wire \dat_div_reg_n_0_[8] ;
  wire \dat_div_reg_n_0_[9] ;
  wire dat_got;
  wire dat_got_i_1__0_n_0;
  wire dat_got_i_2__0_n_0;
  wire dat_got_i_3__0_n_0;
  wire [15:0]data2;
  wire dec_avg_div_n_10;
  wire dec_avg_div_n_11;
  wire dec_avg_div_n_12;
  wire dec_avg_div_n_13;
  wire dec_avg_div_n_14;
  wire dec_avg_div_n_15;
  wire dec_avg_div_n_16;
  wire dec_avg_div_n_17;
  wire dec_avg_div_n_2;
  wire dec_avg_div_n_3;
  wire dec_avg_div_n_4;
  wire dec_avg_div_n_5;
  wire dec_avg_div_n_6;
  wire dec_avg_div_n_7;
  wire dec_avg_div_n_8;
  wire dec_avg_div_n_9;
  wire dec_tvalid;
  wire dec_valid_carry__0_i_1__0_n_0;
  wire dec_valid_carry__0_i_2__0_n_0;
  wire dec_valid_carry__0_i_3__0_n_0;
  wire dec_valid_carry__0_i_4__0_n_0;
  wire dec_valid_carry__0_i_5__0_n_0;
  wire dec_valid_carry__0_i_6__0_n_0;
  wire dec_valid_carry__0_i_7__0_n_0;
  wire dec_valid_carry__0_i_8__0_n_0;
  wire dec_valid_carry__0_n_0;
  wire dec_valid_carry__0_n_1;
  wire dec_valid_carry__0_n_2;
  wire dec_valid_carry__0_n_3;
  wire dec_valid_carry__1_i_1__0_n_0;
  wire dec_valid_carry__1_i_2__0_n_0;
  wire dec_valid_carry_i_1__0_n_0;
  wire dec_valid_carry_i_2__0_n_0;
  wire dec_valid_carry_i_3__0_n_0;
  wire dec_valid_carry_i_4__0_n_0;
  wire dec_valid_carry_i_5__0_n_0;
  wire dec_valid_carry_i_6__0_n_0;
  wire dec_valid_carry_i_7__0_n_0;
  wire dec_valid_carry_i_8__0_n_0;
  wire dec_valid_carry_n_0;
  wire dec_valid_carry_n_1;
  wire dec_valid_carry_n_2;
  wire dec_valid_carry_n_3;
  wire div_dat_got;
  wire div_go;
  wire dv_o;
  wire m_axi_osc2_aclk;
  wire m_axi_osc2_aresetn;
  wire \m_axis_tdata[0]_i_1__0_n_0 ;
  wire \m_axis_tdata[0]_i_2__0_n_0 ;
  wire \m_axis_tdata[0]_i_3__0_n_0 ;
  wire \m_axis_tdata[10]_i_1__0_n_0 ;
  wire \m_axis_tdata[10]_i_2__0_n_0 ;
  wire \m_axis_tdata[10]_i_3__0_n_0 ;
  wire \m_axis_tdata[11]_i_1__0_n_0 ;
  wire \m_axis_tdata[11]_i_2__0_n_0 ;
  wire \m_axis_tdata[11]_i_3__0_n_0 ;
  wire \m_axis_tdata[12]_i_1__0_n_0 ;
  wire \m_axis_tdata[12]_i_2__0_n_0 ;
  wire \m_axis_tdata[12]_i_3__0_n_0 ;
  wire \m_axis_tdata[12]_i_4__0_n_0 ;
  wire \m_axis_tdata[13]_i_1__0_n_0 ;
  wire \m_axis_tdata[13]_i_2__0_n_0 ;
  wire \m_axis_tdata[13]_i_3__0_n_0 ;
  wire \m_axis_tdata[13]_i_4__0_n_0 ;
  wire \m_axis_tdata[14]_i_1__0_n_0 ;
  wire \m_axis_tdata[14]_i_2__0_n_0 ;
  wire \m_axis_tdata[14]_i_3__0_n_0 ;
  wire \m_axis_tdata[15]_i_1__2_n_0 ;
  wire \m_axis_tdata[15]_i_2__0_n_0 ;
  wire \m_axis_tdata[15]_i_3__0_n_0 ;
  wire \m_axis_tdata[15]_i_4__0_n_0 ;
  wire \m_axis_tdata[15]_i_5__0_n_0 ;
  wire \m_axis_tdata[15]_i_6__0_n_0 ;
  wire \m_axis_tdata[1]_i_1__0_n_0 ;
  wire \m_axis_tdata[1]_i_2__0_n_0 ;
  wire \m_axis_tdata[1]_i_3__0_n_0 ;
  wire \m_axis_tdata[2]_i_1__0_n_0 ;
  wire \m_axis_tdata[2]_i_2__0_n_0 ;
  wire \m_axis_tdata[2]_i_3__0_n_0 ;
  wire \m_axis_tdata[3]_i_1__0_n_0 ;
  wire \m_axis_tdata[3]_i_2__0_n_0 ;
  wire \m_axis_tdata[3]_i_3__0_n_0 ;
  wire \m_axis_tdata[4]_i_1__0_n_0 ;
  wire \m_axis_tdata[4]_i_2__0_n_0 ;
  wire \m_axis_tdata[4]_i_3__0_n_0 ;
  wire \m_axis_tdata[5]_i_1__0_n_0 ;
  wire \m_axis_tdata[5]_i_2__0_n_0 ;
  wire \m_axis_tdata[5]_i_3__0_n_0 ;
  wire \m_axis_tdata[6]_i_1__0_n_0 ;
  wire \m_axis_tdata[6]_i_2__0_n_0 ;
  wire \m_axis_tdata[6]_i_3__0_n_0 ;
  wire \m_axis_tdata[7]_i_1__0_n_0 ;
  wire \m_axis_tdata[7]_i_2__0_n_0 ;
  wire \m_axis_tdata[7]_i_3__0_n_0 ;
  wire \m_axis_tdata[8]_i_1__0_n_0 ;
  wire \m_axis_tdata[8]_i_2__0_n_0 ;
  wire \m_axis_tdata[8]_i_3__0_n_0 ;
  wire \m_axis_tdata[9]_i_1__0_n_0 ;
  wire \m_axis_tdata[9]_i_2__0_n_0 ;
  wire \m_axis_tdata[9]_i_3__0_n_0 ;
  wire [15:0]\m_axis_tdata_reg[15]_0 ;
  wire [0:0]\m_axis_tdata_reg[15]_1 ;
  wire [0:0]\m_axis_tdata_reg[15]_2 ;
  wire m_axis_tvalid_i_1__2_n_0;
  wire m_axis_tvalid_reg_0;
  wire m_axis_tvalid_reg_1;
  wire p_2_in;
  wire p_2_out0;
  wire [15:1]q_o;
  wire sign_curr;
  wire \sign_sr_reg_n_0_[0] ;
  wire \sign_sr_reg_n_0_[10] ;
  wire \sign_sr_reg_n_0_[11] ;
  wire \sign_sr_reg_n_0_[12] ;
  wire \sign_sr_reg_n_0_[13] ;
  wire \sign_sr_reg_n_0_[14] ;
  wire \sign_sr_reg_n_0_[15] ;
  wire \sign_sr_reg_n_0_[16] ;
  wire \sign_sr_reg_n_0_[17] ;
  wire \sign_sr_reg_n_0_[18] ;
  wire \sign_sr_reg_n_0_[19] ;
  wire \sign_sr_reg_n_0_[1] ;
  wire \sign_sr_reg_n_0_[20] ;
  wire \sign_sr_reg_n_0_[21] ;
  wire \sign_sr_reg_n_0_[22] ;
  wire \sign_sr_reg_n_0_[23] ;
  wire \sign_sr_reg_n_0_[24] ;
  wire \sign_sr_reg_n_0_[25] ;
  wire \sign_sr_reg_n_0_[26] ;
  wire \sign_sr_reg_n_0_[27] ;
  wire \sign_sr_reg_n_0_[28] ;
  wire \sign_sr_reg_n_0_[29] ;
  wire \sign_sr_reg_n_0_[2] ;
  wire \sign_sr_reg_n_0_[30] ;
  wire \sign_sr_reg_n_0_[31] ;
  wire \sign_sr_reg_n_0_[32] ;
  wire \sign_sr_reg_n_0_[3] ;
  wire \sign_sr_reg_n_0_[4] ;
  wire \sign_sr_reg_n_0_[5] ;
  wire \sign_sr_reg_n_0_[6] ;
  wire \sign_sr_reg_n_0_[7] ;
  wire \sign_sr_reg_n_0_[8] ;
  wire \sign_sr_reg_n_0_[9] ;
  wire [30:0]sum_in;
  wire [31:0]sum_uns;
  wire \sum_uns[11]_i_2__0_n_0 ;
  wire \sum_uns[11]_i_3__0_n_0 ;
  wire \sum_uns[11]_i_4__0_n_0 ;
  wire \sum_uns[11]_i_5__0_n_0 ;
  wire \sum_uns[15]_i_2__0_n_0 ;
  wire \sum_uns[15]_i_3__0_n_0 ;
  wire \sum_uns[15]_i_4__0_n_0 ;
  wire \sum_uns[15]_i_5__0_n_0 ;
  wire \sum_uns[19]_i_2__0_n_0 ;
  wire \sum_uns[19]_i_3__0_n_0 ;
  wire \sum_uns[19]_i_4__0_n_0 ;
  wire \sum_uns[19]_i_5__0_n_0 ;
  wire \sum_uns[23]_i_2__0_n_0 ;
  wire \sum_uns[23]_i_3__0_n_0 ;
  wire \sum_uns[23]_i_4__0_n_0 ;
  wire \sum_uns[23]_i_5__0_n_0 ;
  wire \sum_uns[27]_i_2__0_n_0 ;
  wire \sum_uns[27]_i_3__0_n_0 ;
  wire \sum_uns[27]_i_4__0_n_0 ;
  wire \sum_uns[27]_i_5__0_n_0 ;
  wire \sum_uns[31]_i_2__0_n_0 ;
  wire \sum_uns[31]_i_3__0_n_0 ;
  wire \sum_uns[31]_i_4__0_n_0 ;
  wire \sum_uns[3]_i_2__0_n_0 ;
  wire \sum_uns[3]_i_3__0_n_0 ;
  wire \sum_uns[3]_i_4__0_n_0 ;
  wire \sum_uns[3]_i_5__0_n_0 ;
  wire \sum_uns[7]_i_2__0_n_0 ;
  wire \sum_uns[7]_i_3__0_n_0 ;
  wire \sum_uns[7]_i_4__0_n_0 ;
  wire \sum_uns[7]_i_5__0_n_0 ;
  wire \sum_uns_reg[11]_i_1__0_n_0 ;
  wire \sum_uns_reg[11]_i_1__0_n_1 ;
  wire \sum_uns_reg[11]_i_1__0_n_2 ;
  wire \sum_uns_reg[11]_i_1__0_n_3 ;
  wire \sum_uns_reg[11]_i_1__0_n_4 ;
  wire \sum_uns_reg[11]_i_1__0_n_5 ;
  wire \sum_uns_reg[11]_i_1__0_n_6 ;
  wire \sum_uns_reg[11]_i_1__0_n_7 ;
  wire \sum_uns_reg[15]_i_1__0_n_0 ;
  wire \sum_uns_reg[15]_i_1__0_n_1 ;
  wire \sum_uns_reg[15]_i_1__0_n_2 ;
  wire \sum_uns_reg[15]_i_1__0_n_3 ;
  wire \sum_uns_reg[15]_i_1__0_n_4 ;
  wire \sum_uns_reg[15]_i_1__0_n_5 ;
  wire \sum_uns_reg[15]_i_1__0_n_6 ;
  wire \sum_uns_reg[15]_i_1__0_n_7 ;
  wire \sum_uns_reg[19]_i_1__0_n_0 ;
  wire \sum_uns_reg[19]_i_1__0_n_1 ;
  wire \sum_uns_reg[19]_i_1__0_n_2 ;
  wire \sum_uns_reg[19]_i_1__0_n_3 ;
  wire \sum_uns_reg[19]_i_1__0_n_4 ;
  wire \sum_uns_reg[19]_i_1__0_n_5 ;
  wire \sum_uns_reg[19]_i_1__0_n_6 ;
  wire \sum_uns_reg[19]_i_1__0_n_7 ;
  wire \sum_uns_reg[23]_i_1__0_n_0 ;
  wire \sum_uns_reg[23]_i_1__0_n_1 ;
  wire \sum_uns_reg[23]_i_1__0_n_2 ;
  wire \sum_uns_reg[23]_i_1__0_n_3 ;
  wire \sum_uns_reg[23]_i_1__0_n_4 ;
  wire \sum_uns_reg[23]_i_1__0_n_5 ;
  wire \sum_uns_reg[23]_i_1__0_n_6 ;
  wire \sum_uns_reg[23]_i_1__0_n_7 ;
  wire \sum_uns_reg[27]_i_1__0_n_0 ;
  wire \sum_uns_reg[27]_i_1__0_n_1 ;
  wire \sum_uns_reg[27]_i_1__0_n_2 ;
  wire \sum_uns_reg[27]_i_1__0_n_3 ;
  wire \sum_uns_reg[27]_i_1__0_n_4 ;
  wire \sum_uns_reg[27]_i_1__0_n_5 ;
  wire \sum_uns_reg[27]_i_1__0_n_6 ;
  wire \sum_uns_reg[27]_i_1__0_n_7 ;
  wire \sum_uns_reg[31]_i_1__0_n_0 ;
  wire \sum_uns_reg[31]_i_1__0_n_2 ;
  wire \sum_uns_reg[31]_i_1__0_n_3 ;
  wire \sum_uns_reg[31]_i_1__0_n_5 ;
  wire \sum_uns_reg[31]_i_1__0_n_6 ;
  wire \sum_uns_reg[31]_i_1__0_n_7 ;
  wire \sum_uns_reg[3]_i_1__0_n_0 ;
  wire \sum_uns_reg[3]_i_1__0_n_1 ;
  wire \sum_uns_reg[3]_i_1__0_n_2 ;
  wire \sum_uns_reg[3]_i_1__0_n_3 ;
  wire \sum_uns_reg[3]_i_1__0_n_4 ;
  wire \sum_uns_reg[3]_i_1__0_n_5 ;
  wire \sum_uns_reg[3]_i_1__0_n_6 ;
  wire \sum_uns_reg[3]_i_1__0_n_7 ;
  wire \sum_uns_reg[7]_i_1__0_n_0 ;
  wire \sum_uns_reg[7]_i_1__0_n_1 ;
  wire \sum_uns_reg[7]_i_1__0_n_2 ;
  wire \sum_uns_reg[7]_i_1__0_n_3 ;
  wire \sum_uns_reg[7]_i_1__0_n_4 ;
  wire \sum_uns_reg[7]_i_1__0_n_5 ;
  wire \sum_uns_reg[7]_i_1__0_n_6 ;
  wire \sum_uns_reg[7]_i_1__0_n_7 ;
  wire trig_detect_i_10__0_n_0;
  wire trig_detect_i_11__0_n_0;
  wire trig_detect_i_12__0_n_0;
  wire trig_detect_i_13__0_n_0;
  wire trig_detect_i_14__0_n_0;
  wire trig_detect_i_15__0_n_0;
  wire trig_detect_i_17__0_n_0;
  wire trig_detect_i_18__0_n_0;
  wire trig_detect_i_19__0_n_0;
  wire trig_detect_i_20__0_n_0;
  wire trig_detect_i_21__0_n_0;
  wire trig_detect_i_22__0_n_0;
  wire trig_detect_i_23__0_n_0;
  wire trig_detect_i_24__0_n_0;
  wire trig_detect_i_26__0_n_0;
  wire trig_detect_i_27__0_n_0;
  wire trig_detect_i_28__0_n_0;
  wire trig_detect_i_29__0_n_0;
  wire trig_detect_i_30__0_n_0;
  wire trig_detect_i_31__0_n_0;
  wire trig_detect_i_32__0_n_0;
  wire trig_detect_i_33__0_n_0;
  wire trig_detect_i_35__0_n_0;
  wire trig_detect_i_36__0_n_0;
  wire trig_detect_i_37__0_n_0;
  wire trig_detect_i_38__0_n_0;
  wire trig_detect_i_39__0_n_0;
  wire trig_detect_i_40__0_n_0;
  wire trig_detect_i_41__0_n_0;
  wire trig_detect_i_42__0_n_0;
  wire trig_detect_i_43__0_n_0;
  wire trig_detect_i_44__0_n_0;
  wire trig_detect_i_45__0_n_0;
  wire trig_detect_i_46__0_n_0;
  wire trig_detect_i_47__0_n_0;
  wire trig_detect_i_48__0_n_0;
  wire trig_detect_i_49__0_n_0;
  wire trig_detect_i_50__0_n_0;
  wire trig_detect_i_51__0_n_0;
  wire trig_detect_i_52__0_n_0;
  wire trig_detect_i_53__0_n_0;
  wire trig_detect_i_54__0_n_0;
  wire trig_detect_i_55__0_n_0;
  wire trig_detect_i_56__0_n_0;
  wire trig_detect_i_57__0_n_0;
  wire trig_detect_i_58__0_n_0;
  wire trig_detect_i_59__0_n_0;
  wire trig_detect_i_60__0_n_0;
  wire trig_detect_i_61__0_n_0;
  wire trig_detect_i_62__0_n_0;
  wire trig_detect_i_63__0_n_0;
  wire trig_detect_i_64__0_n_0;
  wire trig_detect_i_65__0_n_0;
  wire trig_detect_i_66__0_n_0;
  wire trig_detect_i_67__0_n_0;
  wire trig_detect_i_68__0_n_0;
  wire trig_detect_i_69__0_n_0;
  wire trig_detect_i_70__0_n_0;
  wire trig_detect_i_71__0_n_0;
  wire trig_detect_i_72__0_n_0;
  wire trig_detect_i_73__0_n_0;
  wire trig_detect_i_74__0_n_0;
  wire trig_detect_i_8__0_n_0;
  wire trig_detect_i_9__0_n_0;
  wire trig_detect_reg;
  wire trig_detect_reg_0;
  wire trig_detect_reg_i_16__0_n_0;
  wire trig_detect_reg_i_16__0_n_1;
  wire trig_detect_reg_i_16__0_n_2;
  wire trig_detect_reg_i_16__0_n_3;
  wire trig_detect_reg_i_25__0_n_0;
  wire trig_detect_reg_i_25__0_n_1;
  wire trig_detect_reg_i_25__0_n_2;
  wire trig_detect_reg_i_25__0_n_3;
  wire trig_detect_reg_i_34__0_n_0;
  wire trig_detect_reg_i_34__0_n_1;
  wire trig_detect_reg_i_34__0_n_2;
  wire trig_detect_reg_i_34__0_n_3;
  wire [15:0]trig_detect_reg_i_3__0_0;
  wire trig_detect_reg_i_3__0_n_1;
  wire trig_detect_reg_i_3__0_n_2;
  wire trig_detect_reg_i_3__0_n_3;
  wire trig_detect_reg_i_4__0_n_1;
  wire trig_detect_reg_i_4__0_n_2;
  wire trig_detect_reg_i_4__0_n_3;
  wire [15:0]trig_detect_reg_i_5__0_0;
  wire trig_detect_reg_i_5__0_n_1;
  wire trig_detect_reg_i_5__0_n_2;
  wire trig_detect_reg_i_5__0_n_3;
  wire trig_detect_reg_i_6__0_n_1;
  wire trig_detect_reg_i_6__0_n_2;
  wire trig_detect_reg_i_6__0_n_3;
  wire trig_detect_reg_i_7__0_n_0;
  wire trig_detect_reg_i_7__0_n_1;
  wire trig_detect_reg_i_7__0_n_2;
  wire trig_detect_reg_i_7__0_n_3;
  wire [3:3]\NLW_adc_dec_cnt0_inferred__0/i__carry__2_CO_UNCONNECTED ;
  wire [3:0]NLW_dec_valid_carry_O_UNCONNECTED;
  wire [3:0]NLW_dec_valid_carry__0_O_UNCONNECTED;
  wire [3:1]NLW_dec_valid_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_dec_valid_carry__1_O_UNCONNECTED;
  wire [2:2]\NLW_sum_uns_reg[31]_i_1__0_CO_UNCONNECTED ;
  wire [3:3]\NLW_sum_uns_reg[31]_i_1__0_O_UNCONNECTED ;
  wire [3:0]NLW_trig_detect_reg_i_16__0_O_UNCONNECTED;
  wire [3:0]NLW_trig_detect_reg_i_25__0_O_UNCONNECTED;
  wire [3:0]NLW_trig_detect_reg_i_34__0_O_UNCONNECTED;
  wire [3:0]NLW_trig_detect_reg_i_3__0_O_UNCONNECTED;
  wire [3:0]NLW_trig_detect_reg_i_4__0_O_UNCONNECTED;
  wire [3:0]NLW_trig_detect_reg_i_5__0_O_UNCONNECTED;
  wire [3:0]NLW_trig_detect_reg_i_6__0_O_UNCONNECTED;
  wire [3:0]NLW_trig_detect_reg_i_7__0_O_UNCONNECTED;

  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \adc_dec_cnt0_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\adc_dec_cnt0_inferred__0/i__carry_n_0 ,\adc_dec_cnt0_inferred__0/i__carry_n_1 ,\adc_dec_cnt0_inferred__0/i__carry_n_2 ,\adc_dec_cnt0_inferred__0/i__carry_n_3 }),
        .CYINIT(\adc_dec_cnt_reg_n_0_[0] ),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\adc_dec_cnt0_inferred__0/i__carry_n_4 ,\adc_dec_cnt0_inferred__0/i__carry_n_5 ,\adc_dec_cnt0_inferred__0/i__carry_n_6 ,\adc_dec_cnt0_inferred__0/i__carry_n_7 }),
        .S({\adc_dec_cnt_reg_n_0_[4] ,\adc_dec_cnt_reg_n_0_[3] ,\adc_dec_cnt_reg_n_0_[2] ,\adc_dec_cnt_reg_n_0_[1] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \adc_dec_cnt0_inferred__0/i__carry__0 
       (.CI(\adc_dec_cnt0_inferred__0/i__carry_n_0 ),
        .CO({\adc_dec_cnt0_inferred__0/i__carry__0_n_0 ,\adc_dec_cnt0_inferred__0/i__carry__0_n_1 ,\adc_dec_cnt0_inferred__0/i__carry__0_n_2 ,\adc_dec_cnt0_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\adc_dec_cnt0_inferred__0/i__carry__0_n_4 ,\adc_dec_cnt0_inferred__0/i__carry__0_n_5 ,\adc_dec_cnt0_inferred__0/i__carry__0_n_6 ,\adc_dec_cnt0_inferred__0/i__carry__0_n_7 }),
        .S({\adc_dec_cnt_reg_n_0_[8] ,\adc_dec_cnt_reg_n_0_[7] ,\adc_dec_cnt_reg_n_0_[6] ,\adc_dec_cnt_reg_n_0_[5] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \adc_dec_cnt0_inferred__0/i__carry__1 
       (.CI(\adc_dec_cnt0_inferred__0/i__carry__0_n_0 ),
        .CO({\adc_dec_cnt0_inferred__0/i__carry__1_n_0 ,\adc_dec_cnt0_inferred__0/i__carry__1_n_1 ,\adc_dec_cnt0_inferred__0/i__carry__1_n_2 ,\adc_dec_cnt0_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\adc_dec_cnt0_inferred__0/i__carry__1_n_4 ,\adc_dec_cnt0_inferred__0/i__carry__1_n_5 ,\adc_dec_cnt0_inferred__0/i__carry__1_n_6 ,\adc_dec_cnt0_inferred__0/i__carry__1_n_7 }),
        .S({\adc_dec_cnt_reg_n_0_[12] ,\adc_dec_cnt_reg_n_0_[11] ,\adc_dec_cnt_reg_n_0_[10] ,\adc_dec_cnt_reg_n_0_[9] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \adc_dec_cnt0_inferred__0/i__carry__2 
       (.CI(\adc_dec_cnt0_inferred__0/i__carry__1_n_0 ),
        .CO({\NLW_adc_dec_cnt0_inferred__0/i__carry__2_CO_UNCONNECTED [3],\adc_dec_cnt0_inferred__0/i__carry__2_n_1 ,\adc_dec_cnt0_inferred__0/i__carry__2_n_2 ,\adc_dec_cnt0_inferred__0/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\adc_dec_cnt0_inferred__0/i__carry__2_n_4 ,\adc_dec_cnt0_inferred__0/i__carry__2_n_5 ,\adc_dec_cnt0_inferred__0/i__carry__2_n_6 ,\adc_dec_cnt0_inferred__0/i__carry__2_n_7 }),
        .S({\adc_dec_cnt_reg_n_0_[16] ,\adc_dec_cnt_reg_n_0_[15] ,\adc_dec_cnt_reg_n_0_[14] ,\adc_dec_cnt_reg_n_0_[13] }));
  LUT2 #(
    .INIT(4'hB)) 
    \adc_dec_cnt[0]_i_2__0 
       (.I0(CO),
        .I1(\adc_dec_cnt_reg_n_0_[0] ),
        .O(\adc_dec_cnt[0]_i_2__0_n_0 ));
  LUT3 #(
    .INIT(8'hEF)) 
    \adc_dec_cnt[16]_i_1__0 
       (.I0(CO),
        .I1(\adc_dec_cnt_reg[16]_0 ),
        .I2(m_axi_osc2_aresetn),
        .O(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt[0]_i_2__0_n_0 ),
        .Q(\adc_dec_cnt_reg_n_0_[0] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_dec_cnt_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__1_n_6 ),
        .Q(\adc_dec_cnt_reg_n_0_[10] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__1_n_5 ),
        .Q(\adc_dec_cnt_reg_n_0_[11] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__1_n_4 ),
        .Q(\adc_dec_cnt_reg_n_0_[12] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__2_n_7 ),
        .Q(\adc_dec_cnt_reg_n_0_[13] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__2_n_6 ),
        .Q(\adc_dec_cnt_reg_n_0_[14] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__2_n_5 ),
        .Q(\adc_dec_cnt_reg_n_0_[15] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__2_n_4 ),
        .Q(\adc_dec_cnt_reg_n_0_[16] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry_n_7 ),
        .Q(\adc_dec_cnt_reg_n_0_[1] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry_n_6 ),
        .Q(\adc_dec_cnt_reg_n_0_[2] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry_n_5 ),
        .Q(\adc_dec_cnt_reg_n_0_[3] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry_n_4 ),
        .Q(\adc_dec_cnt_reg_n_0_[4] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__0_n_7 ),
        .Q(\adc_dec_cnt_reg_n_0_[5] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__0_n_6 ),
        .Q(\adc_dec_cnt_reg_n_0_[6] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__0_n_5 ),
        .Q(\adc_dec_cnt_reg_n_0_[7] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__0_n_4 ),
        .Q(\adc_dec_cnt_reg_n_0_[8] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE \adc_dec_cnt_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__1_n_7 ),
        .Q(\adc_dec_cnt_reg_n_0_[9] ),
        .R(\adc_dec_cnt[16]_i_1__0_n_0 ));
  FDRE adc_dv_div_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(div_dat_got),
        .Q(adc_dv_div),
        .R(clear));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[0]_i_6__0 
       (.I0(data2[2]),
        .I1(CO),
        .I2(\adc_sum_reg[3]_3 ),
        .O(S[3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[0]_i_7__0 
       (.I0(data2[1]),
        .I1(CO),
        .I2(\adc_sum_reg[3]_2 ),
        .O(S[2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[0]_i_8__0 
       (.I0(data2[0]),
        .I1(CO),
        .I2(\adc_sum_reg[3]_1 ),
        .O(S[1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[0]_i_9__0 
       (.I0(\adc_sum_reg_n_0_[0] ),
        .I1(CO),
        .I2(\adc_sum_reg[3]_0 ),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[12]_i_6__0 
       (.I0(data2[14]),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[15]_0 [3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[12]_i_7__0 
       (.I0(data2[13]),
        .I1(CO),
        .I2(\adc_sum_reg[15]_4 ),
        .O(\adc_sum_reg[15]_0 [2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[12]_i_8__0 
       (.I0(data2[12]),
        .I1(CO),
        .I2(\adc_sum_reg[15]_3 ),
        .O(\adc_sum_reg[15]_0 [1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[12]_i_9__0 
       (.I0(data2[11]),
        .I1(CO),
        .I2(\adc_sum_reg[15]_2 ),
        .O(\adc_sum_reg[15]_0 [0]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[16]_i_2__0 
       (.I0(\adc_sum_reg_n_0_[19] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[19]_0 [3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[16]_i_3__0 
       (.I0(\adc_sum_reg_n_0_[18] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[19]_0 [2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[16]_i_4__0 
       (.I0(\adc_sum_reg_n_0_[17] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[19]_0 [1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[16]_i_5__0 
       (.I0(data2[15]),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[19]_0 [0]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[20]_i_2__0 
       (.I0(\adc_sum_reg_n_0_[23] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[23]_0 [3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[20]_i_3__0 
       (.I0(\adc_sum_reg_n_0_[22] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[23]_0 [2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[20]_i_4__0 
       (.I0(\adc_sum_reg_n_0_[21] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[23]_0 [1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[20]_i_5__0 
       (.I0(\adc_sum_reg_n_0_[20] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[23]_0 [0]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[24]_i_2__0 
       (.I0(\adc_sum_reg_n_0_[27] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[27]_0 [3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[24]_i_3__0 
       (.I0(\adc_sum_reg_n_0_[26] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[27]_0 [2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[24]_i_4__0 
       (.I0(\adc_sum_reg_n_0_[25] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[27]_0 [1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[24]_i_5__0 
       (.I0(\adc_sum_reg_n_0_[24] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[27]_0 [0]));
  LUT3 #(
    .INIT(8'h9A)) 
    \adc_sum[28]_i_2__0 
       (.I0(\adc_sum_reg[15]_5 ),
        .I1(CO),
        .I2(p_2_in),
        .O(\adc_sum_reg[31]_0 [3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[28]_i_3__0 
       (.I0(\adc_sum_reg_n_0_[30] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[31]_0 [2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[28]_i_4__0 
       (.I0(\adc_sum_reg_n_0_[29] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[31]_0 [1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[28]_i_5__0 
       (.I0(\adc_sum_reg_n_0_[28] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[31]_0 [0]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[4]_i_6__0 
       (.I0(data2[6]),
        .I1(CO),
        .I2(\adc_sum_reg[7]_5 ),
        .O(\adc_sum_reg[7]_0 [3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[4]_i_7__0 
       (.I0(data2[5]),
        .I1(CO),
        .I2(\adc_sum_reg[7]_4 ),
        .O(\adc_sum_reg[7]_0 [2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[4]_i_8__0 
       (.I0(data2[4]),
        .I1(CO),
        .I2(\adc_sum_reg[7]_3 ),
        .O(\adc_sum_reg[7]_0 [1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[4]_i_9__0 
       (.I0(data2[3]),
        .I1(CO),
        .I2(\adc_sum_reg[7]_2 ),
        .O(\adc_sum_reg[7]_0 [0]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[8]_i_6__0 
       (.I0(data2[10]),
        .I1(CO),
        .I2(\adc_sum_reg[11]_5 ),
        .O(\adc_sum_reg[11]_0 [3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[8]_i_7__0 
       (.I0(data2[9]),
        .I1(CO),
        .I2(\adc_sum_reg[11]_4 ),
        .O(\adc_sum_reg[11]_0 [2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[8]_i_8__0 
       (.I0(data2[8]),
        .I1(CO),
        .I2(\adc_sum_reg[11]_3 ),
        .O(\adc_sum_reg[11]_0 [1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[8]_i_9__0 
       (.I0(data2[7]),
        .I1(CO),
        .I2(\adc_sum_reg[11]_2 ),
        .O(\adc_sum_reg[11]_0 [0]));
  FDRE \adc_sum_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(O[0]),
        .Q(\adc_sum_reg_n_0_[0] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[11]_1 [2]),
        .Q(data2[9]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[11]_1 [3]),
        .Q(data2[10]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[15]_1 [0]),
        .Q(data2[11]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[15]_1 [1]),
        .Q(data2[12]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[15]_1 [2]),
        .Q(data2[13]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[15]_1 [3]),
        .Q(data2[14]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[19]_1 [0]),
        .Q(data2[15]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[19]_1 [1]),
        .Q(\adc_sum_reg_n_0_[17] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[19]_1 [2]),
        .Q(\adc_sum_reg_n_0_[18] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[19]_1 [3]),
        .Q(\adc_sum_reg_n_0_[19] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(O[1]),
        .Q(data2[0]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[23]_1 [0]),
        .Q(\adc_sum_reg_n_0_[20] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[23]_1 [1]),
        .Q(\adc_sum_reg_n_0_[21] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[23]_1 [2]),
        .Q(\adc_sum_reg_n_0_[22] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[23]_1 [3]),
        .Q(\adc_sum_reg_n_0_[23] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[27]_1 [0]),
        .Q(\adc_sum_reg_n_0_[24] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[27]_1 [1]),
        .Q(\adc_sum_reg_n_0_[25] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[27]_1 [2]),
        .Q(\adc_sum_reg_n_0_[26] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[27]_1 [3]),
        .Q(\adc_sum_reg_n_0_[27] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[31]_2 [0]),
        .Q(\adc_sum_reg_n_0_[28] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[31]_2 [1]),
        .Q(\adc_sum_reg_n_0_[29] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(O[2]),
        .Q(data2[1]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[31]_2 [2]),
        .Q(\adc_sum_reg_n_0_[30] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[31]_2 [3]),
        .Q(p_2_in),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(O[3]),
        .Q(data2[2]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[7]_1 [0]),
        .Q(data2[3]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[7]_1 [1]),
        .Q(data2[4]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[7]_1 [2]),
        .Q(data2[5]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[7]_1 [3]),
        .Q(data2[6]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[11]_1 [0]),
        .Q(data2[7]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[11]_1 [1]),
        .Q(data2[8]),
        .R(\adc_sum_reg[31]_1 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[11]_i_2__0 
       (.I0(p_2_out0),
        .I1(q_o[11]),
        .O(\dat_div[11]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[11]_i_3__0 
       (.I0(p_2_out0),
        .I1(q_o[10]),
        .O(\dat_div[11]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[11]_i_4__0 
       (.I0(p_2_out0),
        .I1(q_o[9]),
        .O(\dat_div[11]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[11]_i_5__0 
       (.I0(p_2_out0),
        .I1(q_o[8]),
        .O(\dat_div[11]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[15]_i_2__0 
       (.I0(p_2_out0),
        .I1(q_o[15]),
        .O(\dat_div[15]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[15]_i_3__0 
       (.I0(p_2_out0),
        .I1(q_o[14]),
        .O(\dat_div[15]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[15]_i_4__0 
       (.I0(p_2_out0),
        .I1(q_o[13]),
        .O(\dat_div[15]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[15]_i_5__0 
       (.I0(p_2_out0),
        .I1(q_o[12]),
        .O(\dat_div[15]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[3]_i_2__0 
       (.I0(p_2_out0),
        .I1(q_o[3]),
        .O(\dat_div[3]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[3]_i_3__0 
       (.I0(p_2_out0),
        .I1(q_o[2]),
        .O(\dat_div[3]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[3]_i_4__0 
       (.I0(p_2_out0),
        .I1(q_o[1]),
        .O(\dat_div[3]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[7]_i_2__0 
       (.I0(p_2_out0),
        .I1(q_o[7]),
        .O(\dat_div[7]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[7]_i_3__0 
       (.I0(p_2_out0),
        .I1(q_o[6]),
        .O(\dat_div[7]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[7]_i_4__0 
       (.I0(p_2_out0),
        .I1(q_o[5]),
        .O(\dat_div[7]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[7]_i_5__0 
       (.I0(p_2_out0),
        .I1(q_o[4]),
        .O(\dat_div[7]_i_5__0_n_0 ));
  FDRE \dat_div_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_17),
        .Q(\dat_div_reg_n_0_[0] ),
        .R(clear));
  FDRE \dat_div_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_7),
        .Q(\dat_div_reg_n_0_[10] ),
        .R(clear));
  FDRE \dat_div_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_6),
        .Q(\dat_div_reg_n_0_[11] ),
        .R(clear));
  FDRE \dat_div_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_5),
        .Q(\dat_div_reg_n_0_[12] ),
        .R(clear));
  FDRE \dat_div_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_4),
        .Q(\dat_div_reg_n_0_[13] ),
        .R(clear));
  FDRE \dat_div_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_3),
        .Q(\dat_div_reg_n_0_[14] ),
        .R(clear));
  FDRE \dat_div_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_2),
        .Q(\dat_div_reg_n_0_[15] ),
        .R(clear));
  FDRE \dat_div_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_16),
        .Q(\dat_div_reg_n_0_[1] ),
        .R(clear));
  FDRE \dat_div_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_15),
        .Q(\dat_div_reg_n_0_[2] ),
        .R(clear));
  FDRE \dat_div_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_14),
        .Q(\dat_div_reg_n_0_[3] ),
        .R(clear));
  FDRE \dat_div_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_13),
        .Q(\dat_div_reg_n_0_[4] ),
        .R(clear));
  FDRE \dat_div_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_12),
        .Q(\dat_div_reg_n_0_[5] ),
        .R(clear));
  FDRE \dat_div_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_11),
        .Q(\dat_div_reg_n_0_[6] ),
        .R(clear));
  FDRE \dat_div_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_10),
        .Q(\dat_div_reg_n_0_[7] ),
        .R(clear));
  FDRE \dat_div_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_9),
        .Q(\dat_div_reg_n_0_[8] ),
        .R(clear));
  FDRE \dat_div_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_8),
        .Q(\dat_div_reg_n_0_[9] ),
        .R(clear));
  LUT6 #(
    .INIT(64'hFFFFFFFD00000000)) 
    dat_got_i_1__0
       (.I0(dat_got_i_2__0_n_0),
        .I1(dat_got_i_3__0_n_0),
        .I2(Q[14]),
        .I3(Q[13]),
        .I4(Q[8]),
        .I5(CO),
        .O(dat_got_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    dat_got_i_2__0
       (.I0(Q[11]),
        .I1(Q[10]),
        .I2(Q[4]),
        .I3(Q[6]),
        .I4(Q[7]),
        .I5(Q[9]),
        .O(dat_got_i_2__0_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    dat_got_i_3__0
       (.I0(Q[15]),
        .I1(Q[5]),
        .I2(Q[16]),
        .I3(Q[12]),
        .O(dat_got_i_3__0_n_0));
  FDRE dat_got_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(dat_got_i_1__0_n_0),
        .Q(dat_got),
        .R(clear));
  system_rp_oscilloscope_0_divide dec_avg_div
       (.D({dec_avg_div_n_2,dec_avg_div_n_3,dec_avg_div_n_4,dec_avg_div_n_5,dec_avg_div_n_6,dec_avg_div_n_7,dec_avg_div_n_8,dec_avg_div_n_9,dec_avg_div_n_10,dec_avg_div_n_11,dec_avg_div_n_12,dec_avg_div_n_13,dec_avg_div_n_14,dec_avg_div_n_15,dec_avg_div_n_16,dec_avg_div_n_17}),
        .Q(sum_uns),
        .S({\dat_div[3]_i_2__0_n_0 ,\dat_div[3]_i_3__0_n_0 ,\dat_div[3]_i_4__0_n_0 }),
        .SR(clear),
        .\dat_div_reg[11] ({\dat_div[11]_i_2__0_n_0 ,\dat_div[11]_i_3__0_n_0 ,\dat_div[11]_i_4__0_n_0 ,\dat_div[11]_i_5__0_n_0 }),
        .\dat_div_reg[15] ({\dat_div[15]_i_2__0_n_0 ,\dat_div[15]_i_3__0_n_0 ,\dat_div[15]_i_4__0_n_0 ,\dat_div[15]_i_5__0_n_0 }),
        .\dat_div_reg[3] (p_2_out0),
        .\dat_div_reg[7] ({\dat_div[7]_i_2__0_n_0 ,\dat_div[7]_i_3__0_n_0 ,\dat_div[7]_i_4__0_n_0 ,\dat_div[7]_i_5__0_n_0 }),
        .div_go(div_go),
        .dv_o(dv_o),
        .m_axi_osc2_aclk(m_axi_osc2_aclk),
        .m_axi_osc2_aresetn(m_axi_osc2_aresetn),
        .\q_o_reg[15]_0 (q_o),
        .\reg_Y_reg[0][16]_0 (Q));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 dec_valid_carry
       (.CI(1'b0),
        .CO({dec_valid_carry_n_0,dec_valid_carry_n_1,dec_valid_carry_n_2,dec_valid_carry_n_3}),
        .CYINIT(1'b1),
        .DI({dec_valid_carry_i_1__0_n_0,dec_valid_carry_i_2__0_n_0,dec_valid_carry_i_3__0_n_0,dec_valid_carry_i_4__0_n_0}),
        .O(NLW_dec_valid_carry_O_UNCONNECTED[3:0]),
        .S({dec_valid_carry_i_5__0_n_0,dec_valid_carry_i_6__0_n_0,dec_valid_carry_i_7__0_n_0,dec_valid_carry_i_8__0_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 dec_valid_carry__0
       (.CI(dec_valid_carry_n_0),
        .CO({dec_valid_carry__0_n_0,dec_valid_carry__0_n_1,dec_valid_carry__0_n_2,dec_valid_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({dec_valid_carry__0_i_1__0_n_0,dec_valid_carry__0_i_2__0_n_0,dec_valid_carry__0_i_3__0_n_0,dec_valid_carry__0_i_4__0_n_0}),
        .O(NLW_dec_valid_carry__0_O_UNCONNECTED[3:0]),
        .S({dec_valid_carry__0_i_5__0_n_0,dec_valid_carry__0_i_6__0_n_0,dec_valid_carry__0_i_7__0_n_0,dec_valid_carry__0_i_8__0_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry__0_i_1__0
       (.I0(\adc_dec_cnt_reg_n_0_[15] ),
        .I1(Q[15]),
        .I2(\adc_dec_cnt_reg_n_0_[14] ),
        .I3(Q[14]),
        .O(dec_valid_carry__0_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry__0_i_2__0
       (.I0(\adc_dec_cnt_reg_n_0_[13] ),
        .I1(Q[13]),
        .I2(\adc_dec_cnt_reg_n_0_[12] ),
        .I3(Q[12]),
        .O(dec_valid_carry__0_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry__0_i_3__0
       (.I0(\adc_dec_cnt_reg_n_0_[11] ),
        .I1(Q[11]),
        .I2(\adc_dec_cnt_reg_n_0_[10] ),
        .I3(Q[10]),
        .O(dec_valid_carry__0_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry__0_i_4__0
       (.I0(\adc_dec_cnt_reg_n_0_[9] ),
        .I1(Q[9]),
        .I2(\adc_dec_cnt_reg_n_0_[8] ),
        .I3(Q[8]),
        .O(dec_valid_carry__0_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry__0_i_5__0
       (.I0(Q[15]),
        .I1(\adc_dec_cnt_reg_n_0_[15] ),
        .I2(Q[14]),
        .I3(\adc_dec_cnt_reg_n_0_[14] ),
        .O(dec_valid_carry__0_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry__0_i_6__0
       (.I0(Q[13]),
        .I1(\adc_dec_cnt_reg_n_0_[13] ),
        .I2(Q[12]),
        .I3(\adc_dec_cnt_reg_n_0_[12] ),
        .O(dec_valid_carry__0_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry__0_i_7__0
       (.I0(Q[11]),
        .I1(\adc_dec_cnt_reg_n_0_[11] ),
        .I2(Q[10]),
        .I3(\adc_dec_cnt_reg_n_0_[10] ),
        .O(dec_valid_carry__0_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry__0_i_8__0
       (.I0(Q[9]),
        .I1(\adc_dec_cnt_reg_n_0_[9] ),
        .I2(Q[8]),
        .I3(\adc_dec_cnt_reg_n_0_[8] ),
        .O(dec_valid_carry__0_i_8__0_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 dec_valid_carry__1
       (.CI(dec_valid_carry__0_n_0),
        .CO({NLW_dec_valid_carry__1_CO_UNCONNECTED[3:1],CO}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,dec_valid_carry__1_i_1__0_n_0}),
        .O(NLW_dec_valid_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,dec_valid_carry__1_i_2__0_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    dec_valid_carry__1_i_1__0
       (.I0(\adc_dec_cnt_reg_n_0_[16] ),
        .I1(Q[16]),
        .O(dec_valid_carry__1_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    dec_valid_carry__1_i_2__0
       (.I0(Q[16]),
        .I1(\adc_dec_cnt_reg_n_0_[16] ),
        .O(dec_valid_carry__1_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry_i_1__0
       (.I0(\adc_dec_cnt_reg_n_0_[7] ),
        .I1(Q[7]),
        .I2(\adc_dec_cnt_reg_n_0_[6] ),
        .I3(Q[6]),
        .O(dec_valid_carry_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry_i_2__0
       (.I0(\adc_dec_cnt_reg_n_0_[5] ),
        .I1(Q[5]),
        .I2(\adc_dec_cnt_reg_n_0_[4] ),
        .I3(Q[4]),
        .O(dec_valid_carry_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry_i_3__0
       (.I0(\adc_dec_cnt_reg_n_0_[3] ),
        .I1(Q[3]),
        .I2(\adc_dec_cnt_reg_n_0_[2] ),
        .I3(Q[2]),
        .O(dec_valid_carry_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry_i_4__0
       (.I0(\adc_dec_cnt_reg_n_0_[1] ),
        .I1(Q[1]),
        .I2(\adc_dec_cnt_reg_n_0_[0] ),
        .I3(Q[0]),
        .O(dec_valid_carry_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry_i_5__0
       (.I0(Q[7]),
        .I1(\adc_dec_cnt_reg_n_0_[7] ),
        .I2(Q[6]),
        .I3(\adc_dec_cnt_reg_n_0_[6] ),
        .O(dec_valid_carry_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry_i_6__0
       (.I0(Q[5]),
        .I1(\adc_dec_cnt_reg_n_0_[5] ),
        .I2(Q[4]),
        .I3(\adc_dec_cnt_reg_n_0_[4] ),
        .O(dec_valid_carry_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry_i_7__0
       (.I0(Q[3]),
        .I1(\adc_dec_cnt_reg_n_0_[3] ),
        .I2(Q[2]),
        .I3(\adc_dec_cnt_reg_n_0_[2] ),
        .O(dec_valid_carry_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry_i_8__0
       (.I0(Q[1]),
        .I1(\adc_dec_cnt_reg_n_0_[1] ),
        .I2(Q[0]),
        .I3(\adc_dec_cnt_reg_n_0_[0] ),
        .O(dec_valid_carry_i_8__0_n_0));
  FDRE div_dat_got_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(dv_o),
        .Q(div_dat_got),
        .R(clear));
  FDRE div_go_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(dat_got),
        .Q(div_go),
        .R(clear));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[0]_i_1__0 
       (.I0(\dat_div_reg_n_0_[0] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[0]_i_2__0_n_0 ),
        .I3(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I4(\m_axis_tdata[0]_i_3__0_n_0 ),
        .O(\m_axis_tdata[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[0]_i_2__0 
       (.I0(data2[1]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[2]),
        .O(\m_axis_tdata[0]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[0]_i_3__0 
       (.I0(\adc_sum_reg_n_0_[0] ),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[0]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[3]_0 ),
        .O(\m_axis_tdata[0]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[10]_i_1__0 
       (.I0(\dat_div_reg_n_0_[10] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[10]_i_2__0_n_0 ),
        .I3(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I4(\m_axis_tdata[10]_i_3__0_n_0 ),
        .O(\m_axis_tdata[10]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[10]_i_2__0 
       (.I0(data2[11]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[12]),
        .O(\m_axis_tdata[10]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[10]_i_3__0 
       (.I0(data2[9]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[10]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[11]_4 ),
        .O(\m_axis_tdata[10]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[11]_i_1__0 
       (.I0(\dat_div_reg_n_0_[11] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[11]_i_2__0_n_0 ),
        .I3(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I4(\m_axis_tdata[11]_i_3__0_n_0 ),
        .O(\m_axis_tdata[11]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[11]_i_2__0 
       (.I0(data2[12]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[13]),
        .O(\m_axis_tdata[11]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[11]_i_3__0 
       (.I0(data2[10]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[11]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[11]_5 ),
        .O(\m_axis_tdata[11]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBBBBBB88888)) 
    \m_axis_tdata[12]_i_1__0 
       (.I0(\dat_div_reg_n_0_[12] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I3(\m_axis_tdata[12]_i_3__0_n_0 ),
        .I4(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I5(\m_axis_tdata[12]_i_4__0_n_0 ),
        .O(\m_axis_tdata[12]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT5 #(
    .INIT(32'h01001000)) 
    \m_axis_tdata[12]_i_2__0 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(m_axis_tvalid_reg_1),
        .I4(Q[1]),
        .O(\m_axis_tdata[12]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[12]_i_3__0 
       (.I0(data2[13]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[14]),
        .O(\m_axis_tdata[12]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[12]_i_4__0 
       (.I0(data2[11]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[12]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[15]_2 ),
        .O(\m_axis_tdata[12]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[13]_i_1__0 
       (.I0(\dat_div_reg_n_0_[13] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[13]_i_2__0_n_0 ),
        .I3(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I4(\m_axis_tdata[13]_i_4__0_n_0 ),
        .O(\m_axis_tdata[13]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[13]_i_2__0 
       (.I0(data2[14]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[15]),
        .O(\m_axis_tdata[13]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT5 #(
    .INIT(32'h01001000)) 
    \m_axis_tdata[13]_i_3__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(m_axis_tvalid_reg_1),
        .I4(Q[2]),
        .O(\m_axis_tdata[13]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[13]_i_4__0 
       (.I0(data2[12]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[13]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[15]_3 ),
        .O(\m_axis_tdata[13]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[14]_i_1__0 
       (.I0(\dat_div_reg_n_0_[14] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[14]_i_2__0_n_0 ),
        .O(\m_axis_tdata[14]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEFFFFFEAE0000)) 
    \m_axis_tdata[14]_i_2__0 
       (.I0(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I1(\adc_sum_reg_n_0_[17] ),
        .I2(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I3(data2[15]),
        .I4(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I5(\m_axis_tdata[14]_i_3__0_n_0 ),
        .O(\m_axis_tdata[14]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[14]_i_3__0 
       (.I0(data2[13]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[14]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[15]_4 ),
        .O(\m_axis_tdata[14]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[15]_i_1__2 
       (.I0(m_axi_osc2_aresetn),
        .I1(\adc_dec_cnt_reg[16]_0 ),
        .O(\m_axis_tdata[15]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[15]_i_2__0 
       (.I0(\dat_div_reg_n_0_[15] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[15]_i_4__0_n_0 ),
        .O(\m_axis_tdata[15]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFD00000000)) 
    \m_axis_tdata[15]_i_3__0 
       (.I0(dat_got_i_2__0_n_0),
        .I1(dat_got_i_3__0_n_0),
        .I2(Q[14]),
        .I3(Q[13]),
        .I4(Q[8]),
        .I5(m_axis_tvalid_reg_1),
        .O(\m_axis_tdata[15]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEFFFFFEAE0000)) 
    \m_axis_tdata[15]_i_4__0 
       (.I0(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I1(\adc_sum_reg_n_0_[18] ),
        .I2(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I3(\adc_sum_reg_n_0_[17] ),
        .I4(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I5(\m_axis_tdata[15]_i_6__0_n_0 ),
        .O(\m_axis_tdata[15]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'h00000600)) 
    \m_axis_tdata[15]_i_5__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(m_axis_tvalid_reg_1),
        .I4(Q[1]),
        .O(\m_axis_tdata[15]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[15]_i_6__0 
       (.I0(data2[14]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[15]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[15]_5 ),
        .O(\m_axis_tdata[15]_i_6__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[1]_i_1__0 
       (.I0(\dat_div_reg_n_0_[1] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[1]_i_2__0_n_0 ),
        .I3(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I4(\m_axis_tdata[1]_i_3__0_n_0 ),
        .O(\m_axis_tdata[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[1]_i_2__0 
       (.I0(data2[2]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[3]),
        .O(\m_axis_tdata[1]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[1]_i_3__0 
       (.I0(data2[0]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[1]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[3]_1 ),
        .O(\m_axis_tdata[1]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[2]_i_1__0 
       (.I0(\dat_div_reg_n_0_[2] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[2]_i_2__0_n_0 ),
        .I3(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I4(\m_axis_tdata[2]_i_3__0_n_0 ),
        .O(\m_axis_tdata[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[2]_i_2__0 
       (.I0(data2[3]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[4]),
        .O(\m_axis_tdata[2]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[2]_i_3__0 
       (.I0(data2[1]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[2]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[3]_2 ),
        .O(\m_axis_tdata[2]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[3]_i_1__0 
       (.I0(\dat_div_reg_n_0_[3] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[3]_i_2__0_n_0 ),
        .I3(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I4(\m_axis_tdata[3]_i_3__0_n_0 ),
        .O(\m_axis_tdata[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[3]_i_2__0 
       (.I0(data2[4]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[5]),
        .O(\m_axis_tdata[3]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[3]_i_3__0 
       (.I0(data2[2]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[3]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[3]_3 ),
        .O(\m_axis_tdata[3]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[4]_i_1__0 
       (.I0(\dat_div_reg_n_0_[4] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[4]_i_2__0_n_0 ),
        .I3(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I4(\m_axis_tdata[4]_i_3__0_n_0 ),
        .O(\m_axis_tdata[4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[4]_i_2__0 
       (.I0(data2[5]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[6]),
        .O(\m_axis_tdata[4]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[4]_i_3__0 
       (.I0(data2[3]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[4]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[7]_2 ),
        .O(\m_axis_tdata[4]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBBBBBB88888)) 
    \m_axis_tdata[5]_i_1__0 
       (.I0(\dat_div_reg_n_0_[5] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I3(\m_axis_tdata[5]_i_2__0_n_0 ),
        .I4(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I5(\m_axis_tdata[5]_i_3__0_n_0 ),
        .O(\m_axis_tdata[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[5]_i_2__0 
       (.I0(data2[6]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[7]),
        .O(\m_axis_tdata[5]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[5]_i_3__0 
       (.I0(data2[4]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[5]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[7]_3 ),
        .O(\m_axis_tdata[5]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[6]_i_1__0 
       (.I0(\dat_div_reg_n_0_[6] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[6]_i_2__0_n_0 ),
        .I3(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I4(\m_axis_tdata[6]_i_3__0_n_0 ),
        .O(\m_axis_tdata[6]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[6]_i_2__0 
       (.I0(data2[7]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[8]),
        .O(\m_axis_tdata[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[6]_i_3__0 
       (.I0(data2[5]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[6]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[7]_4 ),
        .O(\m_axis_tdata[6]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[7]_i_1__0 
       (.I0(\dat_div_reg_n_0_[7] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[7]_i_2__0_n_0 ),
        .I3(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I4(\m_axis_tdata[7]_i_3__0_n_0 ),
        .O(\m_axis_tdata[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[7]_i_2__0 
       (.I0(data2[8]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[9]),
        .O(\m_axis_tdata[7]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[7]_i_3__0 
       (.I0(data2[6]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[7]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[7]_5 ),
        .O(\m_axis_tdata[7]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[8]_i_1__0 
       (.I0(\dat_div_reg_n_0_[8] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[8]_i_2__0_n_0 ),
        .I3(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I4(\m_axis_tdata[8]_i_3__0_n_0 ),
        .O(\m_axis_tdata[8]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[8]_i_2__0 
       (.I0(data2[9]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[10]),
        .O(\m_axis_tdata[8]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[8]_i_3__0 
       (.I0(data2[7]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[8]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[11]_2 ),
        .O(\m_axis_tdata[8]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBBBBBB88888)) 
    \m_axis_tdata[9]_i_1__0 
       (.I0(\dat_div_reg_n_0_[9] ),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I3(\m_axis_tdata[9]_i_2__0_n_0 ),
        .I4(\m_axis_tdata[13]_i_3__0_n_0 ),
        .I5(\m_axis_tdata[9]_i_3__0_n_0 ),
        .O(\m_axis_tdata[9]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[9]_i_2__0 
       (.I0(data2[10]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[11]),
        .O(\m_axis_tdata[9]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[9]_i_3__0 
       (.I0(data2[8]),
        .I1(\m_axis_tdata[15]_i_5__0_n_0 ),
        .I2(data2[9]),
        .I3(\m_axis_tdata[12]_i_2__0_n_0 ),
        .I4(\adc_sum_reg[11]_3 ),
        .O(\m_axis_tdata[9]_i_3__0_n_0 ));
  FDRE \m_axis_tdata_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[0]_i_1__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [0]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[10]_i_1__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [10]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[11]_i_1__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [11]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[12]_i_1__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [12]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[13]_i_1__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [13]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[14]_i_1__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [14]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[15]_i_2__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [15]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[1]_i_1__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [1]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[2]_i_1__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [2]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[3]_i_1__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [3]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[4]_i_1__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [4]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[5]_i_1__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [5]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[6]_i_1__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [6]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[7]_i_1__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [7]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[8]_i_1__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [8]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(\m_axis_tdata[9]_i_1__0_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [9]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    m_axis_tvalid_i_1__2
       (.I0(adc_dv_div),
        .I1(\m_axis_tdata[15]_i_3__0_n_0 ),
        .I2(CO),
        .O(m_axis_tvalid_i_1__2_n_0));
  FDRE m_axis_tvalid_reg
       (.C(m_axi_osc2_aclk),
        .CE(\m_axis_tdata[15]_i_1__2_n_0 ),
        .D(m_axis_tvalid_i_1__2_n_0),
        .Q(dec_tvalid),
        .R(1'b0));
  FDRE sign_curr_reg
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(p_2_in),
        .Q(sign_curr),
        .R(clear));
  FDRE \sign_sr_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(sign_curr),
        .Q(\sign_sr_reg_n_0_[0] ),
        .R(clear));
  FDRE \sign_sr_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[9] ),
        .Q(\sign_sr_reg_n_0_[10] ),
        .R(clear));
  FDRE \sign_sr_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[10] ),
        .Q(\sign_sr_reg_n_0_[11] ),
        .R(clear));
  FDRE \sign_sr_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[11] ),
        .Q(\sign_sr_reg_n_0_[12] ),
        .R(clear));
  FDRE \sign_sr_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[12] ),
        .Q(\sign_sr_reg_n_0_[13] ),
        .R(clear));
  FDRE \sign_sr_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[13] ),
        .Q(\sign_sr_reg_n_0_[14] ),
        .R(clear));
  FDRE \sign_sr_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[14] ),
        .Q(\sign_sr_reg_n_0_[15] ),
        .R(clear));
  FDRE \sign_sr_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[15] ),
        .Q(\sign_sr_reg_n_0_[16] ),
        .R(clear));
  FDRE \sign_sr_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[16] ),
        .Q(\sign_sr_reg_n_0_[17] ),
        .R(clear));
  FDRE \sign_sr_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[17] ),
        .Q(\sign_sr_reg_n_0_[18] ),
        .R(clear));
  FDRE \sign_sr_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[18] ),
        .Q(\sign_sr_reg_n_0_[19] ),
        .R(clear));
  FDRE \sign_sr_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[0] ),
        .Q(\sign_sr_reg_n_0_[1] ),
        .R(clear));
  FDRE \sign_sr_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[19] ),
        .Q(\sign_sr_reg_n_0_[20] ),
        .R(clear));
  FDRE \sign_sr_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[20] ),
        .Q(\sign_sr_reg_n_0_[21] ),
        .R(clear));
  FDRE \sign_sr_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[21] ),
        .Q(\sign_sr_reg_n_0_[22] ),
        .R(clear));
  FDRE \sign_sr_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[22] ),
        .Q(\sign_sr_reg_n_0_[23] ),
        .R(clear));
  FDRE \sign_sr_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[23] ),
        .Q(\sign_sr_reg_n_0_[24] ),
        .R(clear));
  FDRE \sign_sr_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[24] ),
        .Q(\sign_sr_reg_n_0_[25] ),
        .R(clear));
  FDRE \sign_sr_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[25] ),
        .Q(\sign_sr_reg_n_0_[26] ),
        .R(clear));
  FDRE \sign_sr_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[26] ),
        .Q(\sign_sr_reg_n_0_[27] ),
        .R(clear));
  FDRE \sign_sr_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[27] ),
        .Q(\sign_sr_reg_n_0_[28] ),
        .R(clear));
  FDRE \sign_sr_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[28] ),
        .Q(\sign_sr_reg_n_0_[29] ),
        .R(clear));
  FDRE \sign_sr_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[1] ),
        .Q(\sign_sr_reg_n_0_[2] ),
        .R(clear));
  FDRE \sign_sr_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[29] ),
        .Q(\sign_sr_reg_n_0_[30] ),
        .R(clear));
  FDRE \sign_sr_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[30] ),
        .Q(\sign_sr_reg_n_0_[31] ),
        .R(clear));
  FDRE \sign_sr_reg[32] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[31] ),
        .Q(\sign_sr_reg_n_0_[32] ),
        .R(clear));
  FDRE \sign_sr_reg[33] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[32] ),
        .Q(p_2_out0),
        .R(clear));
  FDRE \sign_sr_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[2] ),
        .Q(\sign_sr_reg_n_0_[3] ),
        .R(clear));
  FDRE \sign_sr_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[3] ),
        .Q(\sign_sr_reg_n_0_[4] ),
        .R(clear));
  FDRE \sign_sr_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[4] ),
        .Q(\sign_sr_reg_n_0_[5] ),
        .R(clear));
  FDRE \sign_sr_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[5] ),
        .Q(\sign_sr_reg_n_0_[6] ),
        .R(clear));
  FDRE \sign_sr_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[6] ),
        .Q(\sign_sr_reg_n_0_[7] ),
        .R(clear));
  FDRE \sign_sr_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[7] ),
        .Q(\sign_sr_reg_n_0_[8] ),
        .R(clear));
  FDRE \sign_sr_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[8] ),
        .Q(\sign_sr_reg_n_0_[9] ),
        .R(clear));
  FDRE \sum_in_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(\adc_sum_reg_n_0_[0] ),
        .Q(sum_in[0]),
        .R(clear));
  FDRE \sum_in_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[9]),
        .Q(sum_in[10]),
        .R(clear));
  FDRE \sum_in_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[10]),
        .Q(sum_in[11]),
        .R(clear));
  FDRE \sum_in_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[11]),
        .Q(sum_in[12]),
        .R(clear));
  FDRE \sum_in_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[12]),
        .Q(sum_in[13]),
        .R(clear));
  FDRE \sum_in_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[13]),
        .Q(sum_in[14]),
        .R(clear));
  FDRE \sum_in_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[14]),
        .Q(sum_in[15]),
        .R(clear));
  FDRE \sum_in_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[15]),
        .Q(sum_in[16]),
        .R(clear));
  FDRE \sum_in_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(\adc_sum_reg_n_0_[17] ),
        .Q(sum_in[17]),
        .R(clear));
  FDRE \sum_in_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(\adc_sum_reg_n_0_[18] ),
        .Q(sum_in[18]),
        .R(clear));
  FDRE \sum_in_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(\adc_sum_reg_n_0_[19] ),
        .Q(sum_in[19]),
        .R(clear));
  FDRE \sum_in_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[0]),
        .Q(sum_in[1]),
        .R(clear));
  FDRE \sum_in_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(\adc_sum_reg_n_0_[20] ),
        .Q(sum_in[20]),
        .R(clear));
  FDRE \sum_in_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(\adc_sum_reg_n_0_[21] ),
        .Q(sum_in[21]),
        .R(clear));
  FDRE \sum_in_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(\adc_sum_reg_n_0_[22] ),
        .Q(sum_in[22]),
        .R(clear));
  FDRE \sum_in_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(\adc_sum_reg_n_0_[23] ),
        .Q(sum_in[23]),
        .R(clear));
  FDRE \sum_in_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(\adc_sum_reg_n_0_[24] ),
        .Q(sum_in[24]),
        .R(clear));
  FDRE \sum_in_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(\adc_sum_reg_n_0_[25] ),
        .Q(sum_in[25]),
        .R(clear));
  FDRE \sum_in_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(\adc_sum_reg_n_0_[26] ),
        .Q(sum_in[26]),
        .R(clear));
  FDRE \sum_in_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(\adc_sum_reg_n_0_[27] ),
        .Q(sum_in[27]),
        .R(clear));
  FDRE \sum_in_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(\adc_sum_reg_n_0_[28] ),
        .Q(sum_in[28]),
        .R(clear));
  FDRE \sum_in_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(\adc_sum_reg_n_0_[29] ),
        .Q(sum_in[29]),
        .R(clear));
  FDRE \sum_in_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[1]),
        .Q(sum_in[2]),
        .R(clear));
  FDRE \sum_in_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(\adc_sum_reg_n_0_[30] ),
        .Q(sum_in[30]),
        .R(clear));
  FDRE \sum_in_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[2]),
        .Q(sum_in[3]),
        .R(clear));
  FDRE \sum_in_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[3]),
        .Q(sum_in[4]),
        .R(clear));
  FDRE \sum_in_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[4]),
        .Q(sum_in[5]),
        .R(clear));
  FDRE \sum_in_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[5]),
        .Q(sum_in[6]),
        .R(clear));
  FDRE \sum_in_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[6]),
        .Q(sum_in[7]),
        .R(clear));
  FDRE \sum_in_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[7]),
        .Q(sum_in[8]),
        .R(clear));
  FDRE \sum_in_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got_i_1__0_n_0),
        .D(data2[8]),
        .Q(sum_in[9]),
        .R(clear));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[11]_i_2__0 
       (.I0(sign_curr),
        .I1(sum_in[11]),
        .O(\sum_uns[11]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[11]_i_3__0 
       (.I0(sign_curr),
        .I1(sum_in[10]),
        .O(\sum_uns[11]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[11]_i_4__0 
       (.I0(sign_curr),
        .I1(sum_in[9]),
        .O(\sum_uns[11]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[11]_i_5__0 
       (.I0(sign_curr),
        .I1(sum_in[8]),
        .O(\sum_uns[11]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[15]_i_2__0 
       (.I0(sign_curr),
        .I1(sum_in[15]),
        .O(\sum_uns[15]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[15]_i_3__0 
       (.I0(sign_curr),
        .I1(sum_in[14]),
        .O(\sum_uns[15]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[15]_i_4__0 
       (.I0(sign_curr),
        .I1(sum_in[13]),
        .O(\sum_uns[15]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[15]_i_5__0 
       (.I0(sign_curr),
        .I1(sum_in[12]),
        .O(\sum_uns[15]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[19]_i_2__0 
       (.I0(sign_curr),
        .I1(sum_in[19]),
        .O(\sum_uns[19]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[19]_i_3__0 
       (.I0(sign_curr),
        .I1(sum_in[18]),
        .O(\sum_uns[19]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[19]_i_4__0 
       (.I0(sign_curr),
        .I1(sum_in[17]),
        .O(\sum_uns[19]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[19]_i_5__0 
       (.I0(sign_curr),
        .I1(sum_in[16]),
        .O(\sum_uns[19]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[23]_i_2__0 
       (.I0(sign_curr),
        .I1(sum_in[23]),
        .O(\sum_uns[23]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[23]_i_3__0 
       (.I0(sign_curr),
        .I1(sum_in[22]),
        .O(\sum_uns[23]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[23]_i_4__0 
       (.I0(sign_curr),
        .I1(sum_in[21]),
        .O(\sum_uns[23]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[23]_i_5__0 
       (.I0(sign_curr),
        .I1(sum_in[20]),
        .O(\sum_uns[23]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[27]_i_2__0 
       (.I0(sign_curr),
        .I1(sum_in[27]),
        .O(\sum_uns[27]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[27]_i_3__0 
       (.I0(sign_curr),
        .I1(sum_in[26]),
        .O(\sum_uns[27]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[27]_i_4__0 
       (.I0(sign_curr),
        .I1(sum_in[25]),
        .O(\sum_uns[27]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[27]_i_5__0 
       (.I0(sign_curr),
        .I1(sum_in[24]),
        .O(\sum_uns[27]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[31]_i_2__0 
       (.I0(sign_curr),
        .I1(sum_in[30]),
        .O(\sum_uns[31]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[31]_i_3__0 
       (.I0(sign_curr),
        .I1(sum_in[29]),
        .O(\sum_uns[31]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[31]_i_4__0 
       (.I0(sign_curr),
        .I1(sum_in[28]),
        .O(\sum_uns[31]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[3]_i_2__0 
       (.I0(sign_curr),
        .I1(sum_in[3]),
        .O(\sum_uns[3]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[3]_i_3__0 
       (.I0(sign_curr),
        .I1(sum_in[2]),
        .O(\sum_uns[3]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[3]_i_4__0 
       (.I0(sign_curr),
        .I1(sum_in[1]),
        .O(\sum_uns[3]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_uns[3]_i_5__0 
       (.I0(sum_in[0]),
        .O(\sum_uns[3]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[7]_i_2__0 
       (.I0(sign_curr),
        .I1(sum_in[7]),
        .O(\sum_uns[7]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[7]_i_3__0 
       (.I0(sign_curr),
        .I1(sum_in[6]),
        .O(\sum_uns[7]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[7]_i_4__0 
       (.I0(sign_curr),
        .I1(sum_in[5]),
        .O(\sum_uns[7]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[7]_i_5__0 
       (.I0(sign_curr),
        .I1(sum_in[4]),
        .O(\sum_uns[7]_i_5__0_n_0 ));
  FDRE \sum_uns_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[3]_i_1__0_n_7 ),
        .Q(sum_uns[0]),
        .R(clear));
  FDRE \sum_uns_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[11]_i_1__0_n_5 ),
        .Q(sum_uns[10]),
        .R(clear));
  FDRE \sum_uns_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[11]_i_1__0_n_4 ),
        .Q(sum_uns[11]),
        .R(clear));
  CARRY4 \sum_uns_reg[11]_i_1__0 
       (.CI(\sum_uns_reg[7]_i_1__0_n_0 ),
        .CO({\sum_uns_reg[11]_i_1__0_n_0 ,\sum_uns_reg[11]_i_1__0_n_1 ,\sum_uns_reg[11]_i_1__0_n_2 ,\sum_uns_reg[11]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sum_uns_reg[11]_i_1__0_n_4 ,\sum_uns_reg[11]_i_1__0_n_5 ,\sum_uns_reg[11]_i_1__0_n_6 ,\sum_uns_reg[11]_i_1__0_n_7 }),
        .S({\sum_uns[11]_i_2__0_n_0 ,\sum_uns[11]_i_3__0_n_0 ,\sum_uns[11]_i_4__0_n_0 ,\sum_uns[11]_i_5__0_n_0 }));
  FDRE \sum_uns_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[15]_i_1__0_n_7 ),
        .Q(sum_uns[12]),
        .R(clear));
  FDRE \sum_uns_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[15]_i_1__0_n_6 ),
        .Q(sum_uns[13]),
        .R(clear));
  FDRE \sum_uns_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[15]_i_1__0_n_5 ),
        .Q(sum_uns[14]),
        .R(clear));
  FDRE \sum_uns_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[15]_i_1__0_n_4 ),
        .Q(sum_uns[15]),
        .R(clear));
  CARRY4 \sum_uns_reg[15]_i_1__0 
       (.CI(\sum_uns_reg[11]_i_1__0_n_0 ),
        .CO({\sum_uns_reg[15]_i_1__0_n_0 ,\sum_uns_reg[15]_i_1__0_n_1 ,\sum_uns_reg[15]_i_1__0_n_2 ,\sum_uns_reg[15]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sum_uns_reg[15]_i_1__0_n_4 ,\sum_uns_reg[15]_i_1__0_n_5 ,\sum_uns_reg[15]_i_1__0_n_6 ,\sum_uns_reg[15]_i_1__0_n_7 }),
        .S({\sum_uns[15]_i_2__0_n_0 ,\sum_uns[15]_i_3__0_n_0 ,\sum_uns[15]_i_4__0_n_0 ,\sum_uns[15]_i_5__0_n_0 }));
  FDRE \sum_uns_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[19]_i_1__0_n_7 ),
        .Q(sum_uns[16]),
        .R(clear));
  FDRE \sum_uns_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[19]_i_1__0_n_6 ),
        .Q(sum_uns[17]),
        .R(clear));
  FDRE \sum_uns_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[19]_i_1__0_n_5 ),
        .Q(sum_uns[18]),
        .R(clear));
  FDRE \sum_uns_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[19]_i_1__0_n_4 ),
        .Q(sum_uns[19]),
        .R(clear));
  CARRY4 \sum_uns_reg[19]_i_1__0 
       (.CI(\sum_uns_reg[15]_i_1__0_n_0 ),
        .CO({\sum_uns_reg[19]_i_1__0_n_0 ,\sum_uns_reg[19]_i_1__0_n_1 ,\sum_uns_reg[19]_i_1__0_n_2 ,\sum_uns_reg[19]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sum_uns_reg[19]_i_1__0_n_4 ,\sum_uns_reg[19]_i_1__0_n_5 ,\sum_uns_reg[19]_i_1__0_n_6 ,\sum_uns_reg[19]_i_1__0_n_7 }),
        .S({\sum_uns[19]_i_2__0_n_0 ,\sum_uns[19]_i_3__0_n_0 ,\sum_uns[19]_i_4__0_n_0 ,\sum_uns[19]_i_5__0_n_0 }));
  FDRE \sum_uns_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[3]_i_1__0_n_6 ),
        .Q(sum_uns[1]),
        .R(clear));
  FDRE \sum_uns_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[23]_i_1__0_n_7 ),
        .Q(sum_uns[20]),
        .R(clear));
  FDRE \sum_uns_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[23]_i_1__0_n_6 ),
        .Q(sum_uns[21]),
        .R(clear));
  FDRE \sum_uns_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[23]_i_1__0_n_5 ),
        .Q(sum_uns[22]),
        .R(clear));
  FDRE \sum_uns_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[23]_i_1__0_n_4 ),
        .Q(sum_uns[23]),
        .R(clear));
  CARRY4 \sum_uns_reg[23]_i_1__0 
       (.CI(\sum_uns_reg[19]_i_1__0_n_0 ),
        .CO({\sum_uns_reg[23]_i_1__0_n_0 ,\sum_uns_reg[23]_i_1__0_n_1 ,\sum_uns_reg[23]_i_1__0_n_2 ,\sum_uns_reg[23]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sum_uns_reg[23]_i_1__0_n_4 ,\sum_uns_reg[23]_i_1__0_n_5 ,\sum_uns_reg[23]_i_1__0_n_6 ,\sum_uns_reg[23]_i_1__0_n_7 }),
        .S({\sum_uns[23]_i_2__0_n_0 ,\sum_uns[23]_i_3__0_n_0 ,\sum_uns[23]_i_4__0_n_0 ,\sum_uns[23]_i_5__0_n_0 }));
  FDRE \sum_uns_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[27]_i_1__0_n_7 ),
        .Q(sum_uns[24]),
        .R(clear));
  FDRE \sum_uns_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[27]_i_1__0_n_6 ),
        .Q(sum_uns[25]),
        .R(clear));
  FDRE \sum_uns_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[27]_i_1__0_n_5 ),
        .Q(sum_uns[26]),
        .R(clear));
  FDRE \sum_uns_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[27]_i_1__0_n_4 ),
        .Q(sum_uns[27]),
        .R(clear));
  CARRY4 \sum_uns_reg[27]_i_1__0 
       (.CI(\sum_uns_reg[23]_i_1__0_n_0 ),
        .CO({\sum_uns_reg[27]_i_1__0_n_0 ,\sum_uns_reg[27]_i_1__0_n_1 ,\sum_uns_reg[27]_i_1__0_n_2 ,\sum_uns_reg[27]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sum_uns_reg[27]_i_1__0_n_4 ,\sum_uns_reg[27]_i_1__0_n_5 ,\sum_uns_reg[27]_i_1__0_n_6 ,\sum_uns_reg[27]_i_1__0_n_7 }),
        .S({\sum_uns[27]_i_2__0_n_0 ,\sum_uns[27]_i_3__0_n_0 ,\sum_uns[27]_i_4__0_n_0 ,\sum_uns[27]_i_5__0_n_0 }));
  FDRE \sum_uns_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[31]_i_1__0_n_7 ),
        .Q(sum_uns[28]),
        .R(clear));
  FDRE \sum_uns_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[31]_i_1__0_n_6 ),
        .Q(sum_uns[29]),
        .R(clear));
  FDRE \sum_uns_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[3]_i_1__0_n_5 ),
        .Q(sum_uns[2]),
        .R(clear));
  FDRE \sum_uns_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[31]_i_1__0_n_5 ),
        .Q(sum_uns[30]),
        .R(clear));
  FDRE \sum_uns_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[31]_i_1__0_n_0 ),
        .Q(sum_uns[31]),
        .R(clear));
  CARRY4 \sum_uns_reg[31]_i_1__0 
       (.CI(\sum_uns_reg[27]_i_1__0_n_0 ),
        .CO({\sum_uns_reg[31]_i_1__0_n_0 ,\NLW_sum_uns_reg[31]_i_1__0_CO_UNCONNECTED [2],\sum_uns_reg[31]_i_1__0_n_2 ,\sum_uns_reg[31]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_sum_uns_reg[31]_i_1__0_O_UNCONNECTED [3],\sum_uns_reg[31]_i_1__0_n_5 ,\sum_uns_reg[31]_i_1__0_n_6 ,\sum_uns_reg[31]_i_1__0_n_7 }),
        .S({1'b1,\sum_uns[31]_i_2__0_n_0 ,\sum_uns[31]_i_3__0_n_0 ,\sum_uns[31]_i_4__0_n_0 }));
  FDRE \sum_uns_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[3]_i_1__0_n_4 ),
        .Q(sum_uns[3]),
        .R(clear));
  CARRY4 \sum_uns_reg[3]_i_1__0 
       (.CI(1'b0),
        .CO({\sum_uns_reg[3]_i_1__0_n_0 ,\sum_uns_reg[3]_i_1__0_n_1 ,\sum_uns_reg[3]_i_1__0_n_2 ,\sum_uns_reg[3]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,sign_curr}),
        .O({\sum_uns_reg[3]_i_1__0_n_4 ,\sum_uns_reg[3]_i_1__0_n_5 ,\sum_uns_reg[3]_i_1__0_n_6 ,\sum_uns_reg[3]_i_1__0_n_7 }),
        .S({\sum_uns[3]_i_2__0_n_0 ,\sum_uns[3]_i_3__0_n_0 ,\sum_uns[3]_i_4__0_n_0 ,\sum_uns[3]_i_5__0_n_0 }));
  FDRE \sum_uns_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[7]_i_1__0_n_7 ),
        .Q(sum_uns[4]),
        .R(clear));
  FDRE \sum_uns_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[7]_i_1__0_n_6 ),
        .Q(sum_uns[5]),
        .R(clear));
  FDRE \sum_uns_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[7]_i_1__0_n_5 ),
        .Q(sum_uns[6]),
        .R(clear));
  FDRE \sum_uns_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[7]_i_1__0_n_4 ),
        .Q(sum_uns[7]),
        .R(clear));
  CARRY4 \sum_uns_reg[7]_i_1__0 
       (.CI(\sum_uns_reg[3]_i_1__0_n_0 ),
        .CO({\sum_uns_reg[7]_i_1__0_n_0 ,\sum_uns_reg[7]_i_1__0_n_1 ,\sum_uns_reg[7]_i_1__0_n_2 ,\sum_uns_reg[7]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sum_uns_reg[7]_i_1__0_n_4 ,\sum_uns_reg[7]_i_1__0_n_5 ,\sum_uns_reg[7]_i_1__0_n_6 ,\sum_uns_reg[7]_i_1__0_n_7 }),
        .S({\sum_uns[7]_i_2__0_n_0 ,\sum_uns[7]_i_3__0_n_0 ,\sum_uns[7]_i_4__0_n_0 ,\sum_uns[7]_i_5__0_n_0 }));
  FDRE \sum_uns_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[11]_i_1__0_n_7 ),
        .Q(sum_uns[8]),
        .R(clear));
  FDRE \sum_uns_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[11]_i_1__0_n_6 ),
        .Q(sum_uns[9]),
        .R(clear));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_10__0
       (.I0(\m_axis_tdata_reg[15]_0 [11]),
        .I1(trig_detect_reg_i_3__0_0[11]),
        .I2(\m_axis_tdata_reg[15]_0 [10]),
        .I3(trig_detect_reg_i_3__0_0[10]),
        .O(trig_detect_i_10__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_11__0
       (.I0(\m_axis_tdata_reg[15]_0 [9]),
        .I1(trig_detect_reg_i_3__0_0[9]),
        .I2(\m_axis_tdata_reg[15]_0 [8]),
        .I3(trig_detect_reg_i_3__0_0[8]),
        .O(trig_detect_i_11__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_12__0
       (.I0(\m_axis_tdata_reg[15]_0 [15]),
        .I1(trig_detect_reg_i_3__0_0[15]),
        .I2(trig_detect_reg_i_3__0_0[14]),
        .I3(\m_axis_tdata_reg[15]_0 [14]),
        .O(trig_detect_i_12__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_13__0
       (.I0(trig_detect_reg_i_3__0_0[13]),
        .I1(\m_axis_tdata_reg[15]_0 [13]),
        .I2(trig_detect_reg_i_3__0_0[12]),
        .I3(\m_axis_tdata_reg[15]_0 [12]),
        .O(trig_detect_i_13__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_14__0
       (.I0(trig_detect_reg_i_3__0_0[11]),
        .I1(\m_axis_tdata_reg[15]_0 [11]),
        .I2(trig_detect_reg_i_3__0_0[10]),
        .I3(\m_axis_tdata_reg[15]_0 [10]),
        .O(trig_detect_i_14__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_15__0
       (.I0(trig_detect_reg_i_3__0_0[9]),
        .I1(\m_axis_tdata_reg[15]_0 [9]),
        .I2(trig_detect_reg_i_3__0_0[8]),
        .I3(\m_axis_tdata_reg[15]_0 [8]),
        .O(trig_detect_i_15__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_17__0
       (.I0(trig_detect_reg_i_3__0_0[15]),
        .I1(\m_axis_tdata_reg[15]_0 [15]),
        .I2(\m_axis_tdata_reg[15]_0 [14]),
        .I3(trig_detect_reg_i_3__0_0[14]),
        .O(trig_detect_i_17__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_18__0
       (.I0(\m_axis_tdata_reg[15]_0 [13]),
        .I1(trig_detect_reg_i_3__0_0[13]),
        .I2(\m_axis_tdata_reg[15]_0 [12]),
        .I3(trig_detect_reg_i_3__0_0[12]),
        .O(trig_detect_i_18__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_19__0
       (.I0(\m_axis_tdata_reg[15]_0 [11]),
        .I1(trig_detect_reg_i_3__0_0[11]),
        .I2(\m_axis_tdata_reg[15]_0 [10]),
        .I3(trig_detect_reg_i_3__0_0[10]),
        .O(trig_detect_i_19__0_n_0));
  LUT4 #(
    .INIT(16'hAAEA)) 
    trig_detect_i_1__0
       (.I0(trig_detect_reg),
        .I1(dec_tvalid),
        .I2(\U_osc_trigger/trig_detect1 ),
        .I3(trig_detect_reg_0),
        .O(m_axis_tvalid_reg_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_20__0
       (.I0(\m_axis_tdata_reg[15]_0 [9]),
        .I1(trig_detect_reg_i_3__0_0[9]),
        .I2(\m_axis_tdata_reg[15]_0 [8]),
        .I3(trig_detect_reg_i_3__0_0[8]),
        .O(trig_detect_i_20__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_21__0
       (.I0(\m_axis_tdata_reg[15]_0 [15]),
        .I1(trig_detect_reg_i_3__0_0[15]),
        .I2(trig_detect_reg_i_3__0_0[14]),
        .I3(\m_axis_tdata_reg[15]_0 [14]),
        .O(trig_detect_i_21__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_22__0
       (.I0(trig_detect_reg_i_3__0_0[13]),
        .I1(\m_axis_tdata_reg[15]_0 [13]),
        .I2(trig_detect_reg_i_3__0_0[12]),
        .I3(\m_axis_tdata_reg[15]_0 [12]),
        .O(trig_detect_i_22__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_23__0
       (.I0(trig_detect_reg_i_3__0_0[11]),
        .I1(\m_axis_tdata_reg[15]_0 [11]),
        .I2(trig_detect_reg_i_3__0_0[10]),
        .I3(\m_axis_tdata_reg[15]_0 [10]),
        .O(trig_detect_i_23__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_24__0
       (.I0(trig_detect_reg_i_3__0_0[9]),
        .I1(\m_axis_tdata_reg[15]_0 [9]),
        .I2(trig_detect_reg_i_3__0_0[8]),
        .I3(\m_axis_tdata_reg[15]_0 [8]),
        .O(trig_detect_i_24__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_26__0
       (.I0(\m_axis_tdata_reg[15]_0 [15]),
        .I1(trig_detect_reg_i_5__0_0[15]),
        .I2(trig_detect_reg_i_5__0_0[14]),
        .I3(\m_axis_tdata_reg[15]_0 [14]),
        .O(trig_detect_i_26__0_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_27__0
       (.I0(\m_axis_tdata_reg[15]_0 [13]),
        .I1(trig_detect_reg_i_5__0_0[13]),
        .I2(trig_detect_reg_i_5__0_0[12]),
        .I3(\m_axis_tdata_reg[15]_0 [12]),
        .O(trig_detect_i_27__0_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_28__0
       (.I0(\m_axis_tdata_reg[15]_0 [11]),
        .I1(trig_detect_reg_i_5__0_0[11]),
        .I2(trig_detect_reg_i_5__0_0[10]),
        .I3(\m_axis_tdata_reg[15]_0 [10]),
        .O(trig_detect_i_28__0_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_29__0
       (.I0(\m_axis_tdata_reg[15]_0 [9]),
        .I1(trig_detect_reg_i_5__0_0[9]),
        .I2(trig_detect_reg_i_5__0_0[8]),
        .I3(\m_axis_tdata_reg[15]_0 [8]),
        .O(trig_detect_i_29__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_30__0
       (.I0(trig_detect_reg_i_5__0_0[15]),
        .I1(\m_axis_tdata_reg[15]_0 [15]),
        .I2(trig_detect_reg_i_5__0_0[14]),
        .I3(\m_axis_tdata_reg[15]_0 [14]),
        .O(trig_detect_i_30__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_31__0
       (.I0(trig_detect_reg_i_5__0_0[13]),
        .I1(\m_axis_tdata_reg[15]_0 [13]),
        .I2(trig_detect_reg_i_5__0_0[12]),
        .I3(\m_axis_tdata_reg[15]_0 [12]),
        .O(trig_detect_i_31__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_32__0
       (.I0(trig_detect_reg_i_5__0_0[11]),
        .I1(\m_axis_tdata_reg[15]_0 [11]),
        .I2(trig_detect_reg_i_5__0_0[10]),
        .I3(\m_axis_tdata_reg[15]_0 [10]),
        .O(trig_detect_i_32__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_33__0
       (.I0(trig_detect_reg_i_5__0_0[9]),
        .I1(\m_axis_tdata_reg[15]_0 [9]),
        .I2(trig_detect_reg_i_5__0_0[8]),
        .I3(\m_axis_tdata_reg[15]_0 [8]),
        .O(trig_detect_i_33__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_35__0
       (.I0(\m_axis_tdata_reg[15]_0 [15]),
        .I1(trig_detect_reg_i_5__0_0[15]),
        .I2(trig_detect_reg_i_5__0_0[14]),
        .I3(\m_axis_tdata_reg[15]_0 [14]),
        .O(trig_detect_i_35__0_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_36__0
       (.I0(\m_axis_tdata_reg[15]_0 [13]),
        .I1(trig_detect_reg_i_5__0_0[13]),
        .I2(trig_detect_reg_i_5__0_0[12]),
        .I3(\m_axis_tdata_reg[15]_0 [12]),
        .O(trig_detect_i_36__0_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_37__0
       (.I0(\m_axis_tdata_reg[15]_0 [11]),
        .I1(trig_detect_reg_i_5__0_0[11]),
        .I2(trig_detect_reg_i_5__0_0[10]),
        .I3(\m_axis_tdata_reg[15]_0 [10]),
        .O(trig_detect_i_37__0_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_38__0
       (.I0(\m_axis_tdata_reg[15]_0 [9]),
        .I1(trig_detect_reg_i_5__0_0[9]),
        .I2(trig_detect_reg_i_5__0_0[8]),
        .I3(\m_axis_tdata_reg[15]_0 [8]),
        .O(trig_detect_i_38__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_39__0
       (.I0(trig_detect_reg_i_5__0_0[15]),
        .I1(\m_axis_tdata_reg[15]_0 [15]),
        .I2(trig_detect_reg_i_5__0_0[14]),
        .I3(\m_axis_tdata_reg[15]_0 [14]),
        .O(trig_detect_i_39__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_40__0
       (.I0(trig_detect_reg_i_5__0_0[13]),
        .I1(\m_axis_tdata_reg[15]_0 [13]),
        .I2(trig_detect_reg_i_5__0_0[12]),
        .I3(\m_axis_tdata_reg[15]_0 [12]),
        .O(trig_detect_i_40__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_41__0
       (.I0(trig_detect_reg_i_5__0_0[11]),
        .I1(\m_axis_tdata_reg[15]_0 [11]),
        .I2(trig_detect_reg_i_5__0_0[10]),
        .I3(\m_axis_tdata_reg[15]_0 [10]),
        .O(trig_detect_i_41__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_42__0
       (.I0(trig_detect_reg_i_5__0_0[9]),
        .I1(\m_axis_tdata_reg[15]_0 [9]),
        .I2(trig_detect_reg_i_5__0_0[8]),
        .I3(\m_axis_tdata_reg[15]_0 [8]),
        .O(trig_detect_i_42__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_43__0
       (.I0(\m_axis_tdata_reg[15]_0 [7]),
        .I1(trig_detect_reg_i_3__0_0[7]),
        .I2(\m_axis_tdata_reg[15]_0 [6]),
        .I3(trig_detect_reg_i_3__0_0[6]),
        .O(trig_detect_i_43__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_44__0
       (.I0(\m_axis_tdata_reg[15]_0 [5]),
        .I1(trig_detect_reg_i_3__0_0[5]),
        .I2(\m_axis_tdata_reg[15]_0 [4]),
        .I3(trig_detect_reg_i_3__0_0[4]),
        .O(trig_detect_i_44__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_45__0
       (.I0(\m_axis_tdata_reg[15]_0 [3]),
        .I1(trig_detect_reg_i_3__0_0[3]),
        .I2(\m_axis_tdata_reg[15]_0 [2]),
        .I3(trig_detect_reg_i_3__0_0[2]),
        .O(trig_detect_i_45__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_46__0
       (.I0(\m_axis_tdata_reg[15]_0 [1]),
        .I1(trig_detect_reg_i_3__0_0[1]),
        .I2(\m_axis_tdata_reg[15]_0 [0]),
        .I3(trig_detect_reg_i_3__0_0[0]),
        .O(trig_detect_i_46__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_47__0
       (.I0(trig_detect_reg_i_3__0_0[7]),
        .I1(\m_axis_tdata_reg[15]_0 [7]),
        .I2(trig_detect_reg_i_3__0_0[6]),
        .I3(\m_axis_tdata_reg[15]_0 [6]),
        .O(trig_detect_i_47__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_48__0
       (.I0(trig_detect_reg_i_3__0_0[5]),
        .I1(\m_axis_tdata_reg[15]_0 [5]),
        .I2(trig_detect_reg_i_3__0_0[4]),
        .I3(\m_axis_tdata_reg[15]_0 [4]),
        .O(trig_detect_i_48__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_49__0
       (.I0(trig_detect_reg_i_3__0_0[3]),
        .I1(\m_axis_tdata_reg[15]_0 [3]),
        .I2(trig_detect_reg_i_3__0_0[2]),
        .I3(\m_axis_tdata_reg[15]_0 [2]),
        .O(trig_detect_i_49__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_50__0
       (.I0(trig_detect_reg_i_3__0_0[1]),
        .I1(\m_axis_tdata_reg[15]_0 [1]),
        .I2(trig_detect_reg_i_3__0_0[0]),
        .I3(\m_axis_tdata_reg[15]_0 [0]),
        .O(trig_detect_i_50__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_51__0
       (.I0(\m_axis_tdata_reg[15]_0 [7]),
        .I1(trig_detect_reg_i_3__0_0[7]),
        .I2(\m_axis_tdata_reg[15]_0 [6]),
        .I3(trig_detect_reg_i_3__0_0[6]),
        .O(trig_detect_i_51__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_52__0
       (.I0(\m_axis_tdata_reg[15]_0 [5]),
        .I1(trig_detect_reg_i_3__0_0[5]),
        .I2(\m_axis_tdata_reg[15]_0 [4]),
        .I3(trig_detect_reg_i_3__0_0[4]),
        .O(trig_detect_i_52__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_53__0
       (.I0(\m_axis_tdata_reg[15]_0 [3]),
        .I1(trig_detect_reg_i_3__0_0[3]),
        .I2(\m_axis_tdata_reg[15]_0 [2]),
        .I3(trig_detect_reg_i_3__0_0[2]),
        .O(trig_detect_i_53__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_54__0
       (.I0(\m_axis_tdata_reg[15]_0 [1]),
        .I1(trig_detect_reg_i_3__0_0[1]),
        .I2(\m_axis_tdata_reg[15]_0 [0]),
        .I3(trig_detect_reg_i_3__0_0[0]),
        .O(trig_detect_i_54__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_55__0
       (.I0(trig_detect_reg_i_3__0_0[7]),
        .I1(\m_axis_tdata_reg[15]_0 [7]),
        .I2(trig_detect_reg_i_3__0_0[6]),
        .I3(\m_axis_tdata_reg[15]_0 [6]),
        .O(trig_detect_i_55__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_56__0
       (.I0(trig_detect_reg_i_3__0_0[5]),
        .I1(\m_axis_tdata_reg[15]_0 [5]),
        .I2(trig_detect_reg_i_3__0_0[4]),
        .I3(\m_axis_tdata_reg[15]_0 [4]),
        .O(trig_detect_i_56__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_57__0
       (.I0(trig_detect_reg_i_3__0_0[3]),
        .I1(\m_axis_tdata_reg[15]_0 [3]),
        .I2(trig_detect_reg_i_3__0_0[2]),
        .I3(\m_axis_tdata_reg[15]_0 [2]),
        .O(trig_detect_i_57__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_58__0
       (.I0(trig_detect_reg_i_3__0_0[1]),
        .I1(\m_axis_tdata_reg[15]_0 [1]),
        .I2(trig_detect_reg_i_3__0_0[0]),
        .I3(\m_axis_tdata_reg[15]_0 [0]),
        .O(trig_detect_i_58__0_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_59__0
       (.I0(\m_axis_tdata_reg[15]_0 [7]),
        .I1(trig_detect_reg_i_5__0_0[7]),
        .I2(trig_detect_reg_i_5__0_0[6]),
        .I3(\m_axis_tdata_reg[15]_0 [6]),
        .O(trig_detect_i_59__0_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_60__0
       (.I0(\m_axis_tdata_reg[15]_0 [5]),
        .I1(trig_detect_reg_i_5__0_0[5]),
        .I2(trig_detect_reg_i_5__0_0[4]),
        .I3(\m_axis_tdata_reg[15]_0 [4]),
        .O(trig_detect_i_60__0_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_61__0
       (.I0(\m_axis_tdata_reg[15]_0 [3]),
        .I1(trig_detect_reg_i_5__0_0[3]),
        .I2(trig_detect_reg_i_5__0_0[2]),
        .I3(\m_axis_tdata_reg[15]_0 [2]),
        .O(trig_detect_i_61__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_62__0
       (.I0(trig_detect_reg_i_5__0_0[1]),
        .I1(\m_axis_tdata_reg[15]_0 [1]),
        .I2(trig_detect_reg_i_5__0_0[0]),
        .I3(\m_axis_tdata_reg[15]_0 [0]),
        .O(trig_detect_i_62__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_63__0
       (.I0(trig_detect_reg_i_5__0_0[7]),
        .I1(\m_axis_tdata_reg[15]_0 [7]),
        .I2(trig_detect_reg_i_5__0_0[6]),
        .I3(\m_axis_tdata_reg[15]_0 [6]),
        .O(trig_detect_i_63__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_64__0
       (.I0(trig_detect_reg_i_5__0_0[5]),
        .I1(\m_axis_tdata_reg[15]_0 [5]),
        .I2(trig_detect_reg_i_5__0_0[4]),
        .I3(\m_axis_tdata_reg[15]_0 [4]),
        .O(trig_detect_i_64__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_65__0
       (.I0(trig_detect_reg_i_5__0_0[3]),
        .I1(\m_axis_tdata_reg[15]_0 [3]),
        .I2(trig_detect_reg_i_5__0_0[2]),
        .I3(\m_axis_tdata_reg[15]_0 [2]),
        .O(trig_detect_i_65__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_66__0
       (.I0(\m_axis_tdata_reg[15]_0 [1]),
        .I1(trig_detect_reg_i_5__0_0[1]),
        .I2(\m_axis_tdata_reg[15]_0 [0]),
        .I3(trig_detect_reg_i_5__0_0[0]),
        .O(trig_detect_i_66__0_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_67__0
       (.I0(\m_axis_tdata_reg[15]_0 [7]),
        .I1(trig_detect_reg_i_5__0_0[7]),
        .I2(trig_detect_reg_i_5__0_0[6]),
        .I3(\m_axis_tdata_reg[15]_0 [6]),
        .O(trig_detect_i_67__0_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_68__0
       (.I0(\m_axis_tdata_reg[15]_0 [5]),
        .I1(trig_detect_reg_i_5__0_0[5]),
        .I2(trig_detect_reg_i_5__0_0[4]),
        .I3(\m_axis_tdata_reg[15]_0 [4]),
        .O(trig_detect_i_68__0_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_69__0
       (.I0(\m_axis_tdata_reg[15]_0 [3]),
        .I1(trig_detect_reg_i_5__0_0[3]),
        .I2(trig_detect_reg_i_5__0_0[2]),
        .I3(\m_axis_tdata_reg[15]_0 [2]),
        .O(trig_detect_i_69__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_70__0
       (.I0(trig_detect_reg_i_5__0_0[1]),
        .I1(\m_axis_tdata_reg[15]_0 [1]),
        .I2(trig_detect_reg_i_5__0_0[0]),
        .I3(\m_axis_tdata_reg[15]_0 [0]),
        .O(trig_detect_i_70__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_71__0
       (.I0(trig_detect_reg_i_5__0_0[7]),
        .I1(\m_axis_tdata_reg[15]_0 [7]),
        .I2(trig_detect_reg_i_5__0_0[6]),
        .I3(\m_axis_tdata_reg[15]_0 [6]),
        .O(trig_detect_i_71__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_72__0
       (.I0(trig_detect_reg_i_5__0_0[5]),
        .I1(\m_axis_tdata_reg[15]_0 [5]),
        .I2(trig_detect_reg_i_5__0_0[4]),
        .I3(\m_axis_tdata_reg[15]_0 [4]),
        .O(trig_detect_i_72__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_73__0
       (.I0(trig_detect_reg_i_5__0_0[3]),
        .I1(\m_axis_tdata_reg[15]_0 [3]),
        .I2(trig_detect_reg_i_5__0_0[2]),
        .I3(\m_axis_tdata_reg[15]_0 [2]),
        .O(trig_detect_i_73__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_74__0
       (.I0(\m_axis_tdata_reg[15]_0 [1]),
        .I1(trig_detect_reg_i_5__0_0[1]),
        .I2(\m_axis_tdata_reg[15]_0 [0]),
        .I3(trig_detect_reg_i_5__0_0[0]),
        .O(trig_detect_i_74__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_8__0
       (.I0(trig_detect_reg_i_3__0_0[15]),
        .I1(\m_axis_tdata_reg[15]_0 [15]),
        .I2(\m_axis_tdata_reg[15]_0 [14]),
        .I3(trig_detect_reg_i_3__0_0[14]),
        .O(trig_detect_i_8__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_9__0
       (.I0(\m_axis_tdata_reg[15]_0 [13]),
        .I1(trig_detect_reg_i_3__0_0[13]),
        .I2(\m_axis_tdata_reg[15]_0 [12]),
        .I3(trig_detect_reg_i_3__0_0[12]),
        .O(trig_detect_i_9__0_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_16__0
       (.CI(1'b0),
        .CO({trig_detect_reg_i_16__0_n_0,trig_detect_reg_i_16__0_n_1,trig_detect_reg_i_16__0_n_2,trig_detect_reg_i_16__0_n_3}),
        .CYINIT(1'b0),
        .DI({trig_detect_i_51__0_n_0,trig_detect_i_52__0_n_0,trig_detect_i_53__0_n_0,trig_detect_i_54__0_n_0}),
        .O(NLW_trig_detect_reg_i_16__0_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_55__0_n_0,trig_detect_i_56__0_n_0,trig_detect_i_57__0_n_0,trig_detect_i_58__0_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_25__0
       (.CI(1'b0),
        .CO({trig_detect_reg_i_25__0_n_0,trig_detect_reg_i_25__0_n_1,trig_detect_reg_i_25__0_n_2,trig_detect_reg_i_25__0_n_3}),
        .CYINIT(1'b1),
        .DI({trig_detect_i_59__0_n_0,trig_detect_i_60__0_n_0,trig_detect_i_61__0_n_0,trig_detect_i_62__0_n_0}),
        .O(NLW_trig_detect_reg_i_25__0_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_63__0_n_0,trig_detect_i_64__0_n_0,trig_detect_i_65__0_n_0,trig_detect_i_66__0_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_34__0
       (.CI(1'b0),
        .CO({trig_detect_reg_i_34__0_n_0,trig_detect_reg_i_34__0_n_1,trig_detect_reg_i_34__0_n_2,trig_detect_reg_i_34__0_n_3}),
        .CYINIT(1'b0),
        .DI({trig_detect_i_67__0_n_0,trig_detect_i_68__0_n_0,trig_detect_i_69__0_n_0,trig_detect_i_70__0_n_0}),
        .O(NLW_trig_detect_reg_i_34__0_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_71__0_n_0,trig_detect_i_72__0_n_0,trig_detect_i_73__0_n_0,trig_detect_i_74__0_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_3__0
       (.CI(trig_detect_reg_i_7__0_n_0),
        .CO({\U_osc_trigger/trig_detect1 ,trig_detect_reg_i_3__0_n_1,trig_detect_reg_i_3__0_n_2,trig_detect_reg_i_3__0_n_3}),
        .CYINIT(1'b0),
        .DI({trig_detect_i_8__0_n_0,trig_detect_i_9__0_n_0,trig_detect_i_10__0_n_0,trig_detect_i_11__0_n_0}),
        .O(NLW_trig_detect_reg_i_3__0_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_12__0_n_0,trig_detect_i_13__0_n_0,trig_detect_i_14__0_n_0,trig_detect_i_15__0_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_4__0
       (.CI(trig_detect_reg_i_16__0_n_0),
        .CO({\cfg_trig_high_level_reg[15] ,trig_detect_reg_i_4__0_n_1,trig_detect_reg_i_4__0_n_2,trig_detect_reg_i_4__0_n_3}),
        .CYINIT(1'b0),
        .DI({trig_detect_i_17__0_n_0,trig_detect_i_18__0_n_0,trig_detect_i_19__0_n_0,trig_detect_i_20__0_n_0}),
        .O(NLW_trig_detect_reg_i_4__0_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_21__0_n_0,trig_detect_i_22__0_n_0,trig_detect_i_23__0_n_0,trig_detect_i_24__0_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_5__0
       (.CI(trig_detect_reg_i_25__0_n_0),
        .CO({\m_axis_tdata_reg[15]_1 ,trig_detect_reg_i_5__0_n_1,trig_detect_reg_i_5__0_n_2,trig_detect_reg_i_5__0_n_3}),
        .CYINIT(1'b0),
        .DI({trig_detect_i_26__0_n_0,trig_detect_i_27__0_n_0,trig_detect_i_28__0_n_0,trig_detect_i_29__0_n_0}),
        .O(NLW_trig_detect_reg_i_5__0_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_30__0_n_0,trig_detect_i_31__0_n_0,trig_detect_i_32__0_n_0,trig_detect_i_33__0_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_6__0
       (.CI(trig_detect_reg_i_34__0_n_0),
        .CO({\m_axis_tdata_reg[15]_2 ,trig_detect_reg_i_6__0_n_1,trig_detect_reg_i_6__0_n_2,trig_detect_reg_i_6__0_n_3}),
        .CYINIT(1'b0),
        .DI({trig_detect_i_35__0_n_0,trig_detect_i_36__0_n_0,trig_detect_i_37__0_n_0,trig_detect_i_38__0_n_0}),
        .O(NLW_trig_detect_reg_i_6__0_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_39__0_n_0,trig_detect_i_40__0_n_0,trig_detect_i_41__0_n_0,trig_detect_i_42__0_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_7__0
       (.CI(1'b0),
        .CO({trig_detect_reg_i_7__0_n_0,trig_detect_reg_i_7__0_n_1,trig_detect_reg_i_7__0_n_2,trig_detect_reg_i_7__0_n_3}),
        .CYINIT(1'b1),
        .DI({trig_detect_i_43__0_n_0,trig_detect_i_44__0_n_0,trig_detect_i_45__0_n_0,trig_detect_i_46__0_n_0}),
        .O(NLW_trig_detect_reg_i_7__0_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_47__0_n_0,trig_detect_i_48__0_n_0,trig_detect_i_49__0_n_0,trig_detect_i_50__0_n_0}));
endmodule

(* ORIG_REF_NAME = "osc_decimator" *) 
module system_rp_oscilloscope_0_osc_decimator_15
   (clear,
    dec_tvalid,
    CO,
    m_axis_tvalid_reg_0,
    \adc_sum_reg[31]_0 ,
    \m_axis_tdata_reg[15]_0 ,
    \m_axis_tdata_reg[15]_1 ,
    \cfg_trig_high_level_reg[15] ,
    \m_axis_tdata_reg[15]_2 ,
    S,
    \adc_sum_reg[7]_0 ,
    \adc_sum_reg[11]_0 ,
    \adc_sum_reg[15]_0 ,
    \adc_sum_reg[19]_0 ,
    \adc_sum_reg[23]_0 ,
    \adc_sum_reg[27]_0 ,
    m_axi_osc1_aclk,
    \adc_sum_reg[31]_1 ,
    O,
    \adc_sum_reg[7]_1 ,
    \adc_sum_reg[11]_1 ,
    \adc_sum_reg[15]_1 ,
    \adc_sum_reg[19]_1 ,
    \adc_sum_reg[23]_1 ,
    \adc_sum_reg[27]_1 ,
    \adc_sum_reg[31]_2 ,
    m_axi_osc1_aresetn,
    \adc_dec_cnt_reg[16]_0 ,
    Q,
    m_axis_tvalid_reg_1,
    trig_detect_reg,
    trig_detect_reg_0,
    \adc_sum_reg[3]_0 ,
    \adc_sum_reg[3]_1 ,
    \adc_sum_reg[3]_2 ,
    \adc_sum_reg[3]_3 ,
    \adc_sum_reg[7]_2 ,
    \adc_sum_reg[7]_3 ,
    \adc_sum_reg[7]_4 ,
    \adc_sum_reg[7]_5 ,
    \adc_sum_reg[11]_2 ,
    \adc_sum_reg[11]_3 ,
    \adc_sum_reg[11]_4 ,
    \adc_sum_reg[11]_5 ,
    \adc_sum_reg[15]_2 ,
    \adc_sum_reg[15]_3 ,
    \adc_sum_reg[15]_4 ,
    \adc_sum_reg[15]_5 ,
    trig_detect_reg_i_3_0,
    trig_detect_reg_i_5_0);
  output clear;
  output dec_tvalid;
  output [0:0]CO;
  output m_axis_tvalid_reg_0;
  output [3:0]\adc_sum_reg[31]_0 ;
  output [15:0]\m_axis_tdata_reg[15]_0 ;
  output [0:0]\m_axis_tdata_reg[15]_1 ;
  output [0:0]\cfg_trig_high_level_reg[15] ;
  output [0:0]\m_axis_tdata_reg[15]_2 ;
  output [3:0]S;
  output [3:0]\adc_sum_reg[7]_0 ;
  output [3:0]\adc_sum_reg[11]_0 ;
  output [3:0]\adc_sum_reg[15]_0 ;
  output [3:0]\adc_sum_reg[19]_0 ;
  output [3:0]\adc_sum_reg[23]_0 ;
  output [3:0]\adc_sum_reg[27]_0 ;
  input m_axi_osc1_aclk;
  input \adc_sum_reg[31]_1 ;
  input [3:0]O;
  input [3:0]\adc_sum_reg[7]_1 ;
  input [3:0]\adc_sum_reg[11]_1 ;
  input [3:0]\adc_sum_reg[15]_1 ;
  input [3:0]\adc_sum_reg[19]_1 ;
  input [3:0]\adc_sum_reg[23]_1 ;
  input [3:0]\adc_sum_reg[27]_1 ;
  input [3:0]\adc_sum_reg[31]_2 ;
  input m_axi_osc1_aresetn;
  input \adc_dec_cnt_reg[16]_0 ;
  input [16:0]Q;
  input m_axis_tvalid_reg_1;
  input trig_detect_reg;
  input trig_detect_reg_0;
  input \adc_sum_reg[3]_0 ;
  input \adc_sum_reg[3]_1 ;
  input \adc_sum_reg[3]_2 ;
  input \adc_sum_reg[3]_3 ;
  input \adc_sum_reg[7]_2 ;
  input \adc_sum_reg[7]_3 ;
  input \adc_sum_reg[7]_4 ;
  input \adc_sum_reg[7]_5 ;
  input \adc_sum_reg[11]_2 ;
  input \adc_sum_reg[11]_3 ;
  input \adc_sum_reg[11]_4 ;
  input \adc_sum_reg[11]_5 ;
  input \adc_sum_reg[15]_2 ;
  input \adc_sum_reg[15]_3 ;
  input \adc_sum_reg[15]_4 ;
  input \adc_sum_reg[15]_5 ;
  input [15:0]trig_detect_reg_i_3_0;
  input [15:0]trig_detect_reg_i_5_0;

  wire [0:0]CO;
  wire [3:0]O;
  wire [16:0]Q;
  wire [3:0]S;
  wire \U_osc_trigger/trig_detect1 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_0 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_1 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_2 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_3 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_4 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_5 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_6 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__0_n_7 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_0 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_1 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_2 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_3 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_4 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_5 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_6 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__1_n_7 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__2_n_1 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__2_n_2 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__2_n_3 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__2_n_4 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__2_n_5 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__2_n_6 ;
  wire \adc_dec_cnt0_inferred__0/i__carry__2_n_7 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_0 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_1 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_2 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_3 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_4 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_5 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_6 ;
  wire \adc_dec_cnt0_inferred__0/i__carry_n_7 ;
  wire \adc_dec_cnt[0]_i_2_n_0 ;
  wire \adc_dec_cnt[16]_i_1_n_0 ;
  wire \adc_dec_cnt_reg[16]_0 ;
  wire \adc_dec_cnt_reg_n_0_[0] ;
  wire \adc_dec_cnt_reg_n_0_[10] ;
  wire \adc_dec_cnt_reg_n_0_[11] ;
  wire \adc_dec_cnt_reg_n_0_[12] ;
  wire \adc_dec_cnt_reg_n_0_[13] ;
  wire \adc_dec_cnt_reg_n_0_[14] ;
  wire \adc_dec_cnt_reg_n_0_[15] ;
  wire \adc_dec_cnt_reg_n_0_[16] ;
  wire \adc_dec_cnt_reg_n_0_[1] ;
  wire \adc_dec_cnt_reg_n_0_[2] ;
  wire \adc_dec_cnt_reg_n_0_[3] ;
  wire \adc_dec_cnt_reg_n_0_[4] ;
  wire \adc_dec_cnt_reg_n_0_[5] ;
  wire \adc_dec_cnt_reg_n_0_[6] ;
  wire \adc_dec_cnt_reg_n_0_[7] ;
  wire \adc_dec_cnt_reg_n_0_[8] ;
  wire \adc_dec_cnt_reg_n_0_[9] ;
  wire adc_dv_div;
  wire [3:0]\adc_sum_reg[11]_0 ;
  wire [3:0]\adc_sum_reg[11]_1 ;
  wire \adc_sum_reg[11]_2 ;
  wire \adc_sum_reg[11]_3 ;
  wire \adc_sum_reg[11]_4 ;
  wire \adc_sum_reg[11]_5 ;
  wire [3:0]\adc_sum_reg[15]_0 ;
  wire [3:0]\adc_sum_reg[15]_1 ;
  wire \adc_sum_reg[15]_2 ;
  wire \adc_sum_reg[15]_3 ;
  wire \adc_sum_reg[15]_4 ;
  wire \adc_sum_reg[15]_5 ;
  wire [3:0]\adc_sum_reg[19]_0 ;
  wire [3:0]\adc_sum_reg[19]_1 ;
  wire [3:0]\adc_sum_reg[23]_0 ;
  wire [3:0]\adc_sum_reg[23]_1 ;
  wire [3:0]\adc_sum_reg[27]_0 ;
  wire [3:0]\adc_sum_reg[27]_1 ;
  wire [3:0]\adc_sum_reg[31]_0 ;
  wire \adc_sum_reg[31]_1 ;
  wire [3:0]\adc_sum_reg[31]_2 ;
  wire \adc_sum_reg[3]_0 ;
  wire \adc_sum_reg[3]_1 ;
  wire \adc_sum_reg[3]_2 ;
  wire \adc_sum_reg[3]_3 ;
  wire [3:0]\adc_sum_reg[7]_0 ;
  wire [3:0]\adc_sum_reg[7]_1 ;
  wire \adc_sum_reg[7]_2 ;
  wire \adc_sum_reg[7]_3 ;
  wire \adc_sum_reg[7]_4 ;
  wire \adc_sum_reg[7]_5 ;
  wire \adc_sum_reg_n_0_[0] ;
  wire \adc_sum_reg_n_0_[17] ;
  wire \adc_sum_reg_n_0_[18] ;
  wire \adc_sum_reg_n_0_[19] ;
  wire \adc_sum_reg_n_0_[20] ;
  wire \adc_sum_reg_n_0_[21] ;
  wire \adc_sum_reg_n_0_[22] ;
  wire \adc_sum_reg_n_0_[23] ;
  wire \adc_sum_reg_n_0_[24] ;
  wire \adc_sum_reg_n_0_[25] ;
  wire \adc_sum_reg_n_0_[26] ;
  wire \adc_sum_reg_n_0_[27] ;
  wire \adc_sum_reg_n_0_[28] ;
  wire \adc_sum_reg_n_0_[29] ;
  wire \adc_sum_reg_n_0_[30] ;
  wire [0:0]\cfg_trig_high_level_reg[15] ;
  wire clear;
  wire \dat_div[11]_i_2_n_0 ;
  wire \dat_div[11]_i_3_n_0 ;
  wire \dat_div[11]_i_4_n_0 ;
  wire \dat_div[11]_i_5_n_0 ;
  wire \dat_div[15]_i_2_n_0 ;
  wire \dat_div[15]_i_3_n_0 ;
  wire \dat_div[15]_i_4_n_0 ;
  wire \dat_div[15]_i_5_n_0 ;
  wire \dat_div[3]_i_2_n_0 ;
  wire \dat_div[3]_i_3_n_0 ;
  wire \dat_div[3]_i_4_n_0 ;
  wire \dat_div[7]_i_2_n_0 ;
  wire \dat_div[7]_i_3_n_0 ;
  wire \dat_div[7]_i_4_n_0 ;
  wire \dat_div[7]_i_5_n_0 ;
  wire \dat_div_reg_n_0_[0] ;
  wire \dat_div_reg_n_0_[10] ;
  wire \dat_div_reg_n_0_[11] ;
  wire \dat_div_reg_n_0_[12] ;
  wire \dat_div_reg_n_0_[13] ;
  wire \dat_div_reg_n_0_[14] ;
  wire \dat_div_reg_n_0_[15] ;
  wire \dat_div_reg_n_0_[1] ;
  wire \dat_div_reg_n_0_[2] ;
  wire \dat_div_reg_n_0_[3] ;
  wire \dat_div_reg_n_0_[4] ;
  wire \dat_div_reg_n_0_[5] ;
  wire \dat_div_reg_n_0_[6] ;
  wire \dat_div_reg_n_0_[7] ;
  wire \dat_div_reg_n_0_[8] ;
  wire \dat_div_reg_n_0_[9] ;
  wire dat_got;
  wire dat_got_i_1_n_0;
  wire dat_got_i_2_n_0;
  wire dat_got_i_3_n_0;
  wire [15:0]data2;
  wire dec_avg_div_n_10;
  wire dec_avg_div_n_11;
  wire dec_avg_div_n_12;
  wire dec_avg_div_n_13;
  wire dec_avg_div_n_14;
  wire dec_avg_div_n_15;
  wire dec_avg_div_n_16;
  wire dec_avg_div_n_17;
  wire dec_avg_div_n_2;
  wire dec_avg_div_n_3;
  wire dec_avg_div_n_4;
  wire dec_avg_div_n_5;
  wire dec_avg_div_n_6;
  wire dec_avg_div_n_7;
  wire dec_avg_div_n_8;
  wire dec_avg_div_n_9;
  wire dec_tvalid;
  wire dec_valid_carry__0_i_1_n_0;
  wire dec_valid_carry__0_i_2_n_0;
  wire dec_valid_carry__0_i_3_n_0;
  wire dec_valid_carry__0_i_4_n_0;
  wire dec_valid_carry__0_i_5_n_0;
  wire dec_valid_carry__0_i_6_n_0;
  wire dec_valid_carry__0_i_7_n_0;
  wire dec_valid_carry__0_i_8_n_0;
  wire dec_valid_carry__0_n_0;
  wire dec_valid_carry__0_n_1;
  wire dec_valid_carry__0_n_2;
  wire dec_valid_carry__0_n_3;
  wire dec_valid_carry__1_i_1_n_0;
  wire dec_valid_carry__1_i_2_n_0;
  wire dec_valid_carry_i_1_n_0;
  wire dec_valid_carry_i_2_n_0;
  wire dec_valid_carry_i_3_n_0;
  wire dec_valid_carry_i_4_n_0;
  wire dec_valid_carry_i_5_n_0;
  wire dec_valid_carry_i_6_n_0;
  wire dec_valid_carry_i_7_n_0;
  wire dec_valid_carry_i_8_n_0;
  wire dec_valid_carry_n_0;
  wire dec_valid_carry_n_1;
  wire dec_valid_carry_n_2;
  wire dec_valid_carry_n_3;
  wire div_dat_got;
  wire div_go;
  wire dv_o;
  wire m_axi_osc1_aclk;
  wire m_axi_osc1_aresetn;
  wire \m_axis_tdata[0]_i_1_n_0 ;
  wire \m_axis_tdata[0]_i_2_n_0 ;
  wire \m_axis_tdata[0]_i_3_n_0 ;
  wire \m_axis_tdata[10]_i_1_n_0 ;
  wire \m_axis_tdata[10]_i_2_n_0 ;
  wire \m_axis_tdata[10]_i_3_n_0 ;
  wire \m_axis_tdata[11]_i_1_n_0 ;
  wire \m_axis_tdata[11]_i_2_n_0 ;
  wire \m_axis_tdata[11]_i_3_n_0 ;
  wire \m_axis_tdata[12]_i_1_n_0 ;
  wire \m_axis_tdata[12]_i_2_n_0 ;
  wire \m_axis_tdata[12]_i_3_n_0 ;
  wire \m_axis_tdata[13]_i_1_n_0 ;
  wire \m_axis_tdata[13]_i_2_n_0 ;
  wire \m_axis_tdata[13]_i_3_n_0 ;
  wire \m_axis_tdata[13]_i_4_n_0 ;
  wire \m_axis_tdata[14]_i_1_n_0 ;
  wire \m_axis_tdata[14]_i_2_n_0 ;
  wire \m_axis_tdata[14]_i_3_n_0 ;
  wire \m_axis_tdata[15]_i_1__0_n_0 ;
  wire \m_axis_tdata[15]_i_2_n_0 ;
  wire \m_axis_tdata[15]_i_3_n_0 ;
  wire \m_axis_tdata[15]_i_4_n_0 ;
  wire \m_axis_tdata[15]_i_5_n_0 ;
  wire \m_axis_tdata[15]_i_6_n_0 ;
  wire \m_axis_tdata[1]_i_1_n_0 ;
  wire \m_axis_tdata[1]_i_2_n_0 ;
  wire \m_axis_tdata[1]_i_3_n_0 ;
  wire \m_axis_tdata[2]_i_1_n_0 ;
  wire \m_axis_tdata[2]_i_2_n_0 ;
  wire \m_axis_tdata[2]_i_3_n_0 ;
  wire \m_axis_tdata[3]_i_1_n_0 ;
  wire \m_axis_tdata[3]_i_2_n_0 ;
  wire \m_axis_tdata[3]_i_3_n_0 ;
  wire \m_axis_tdata[4]_i_1_n_0 ;
  wire \m_axis_tdata[4]_i_2_n_0 ;
  wire \m_axis_tdata[4]_i_3_n_0 ;
  wire \m_axis_tdata[5]_i_1_n_0 ;
  wire \m_axis_tdata[5]_i_2_n_0 ;
  wire \m_axis_tdata[5]_i_3_n_0 ;
  wire \m_axis_tdata[6]_i_1_n_0 ;
  wire \m_axis_tdata[6]_i_2_n_0 ;
  wire \m_axis_tdata[6]_i_3_n_0 ;
  wire \m_axis_tdata[7]_i_1_n_0 ;
  wire \m_axis_tdata[7]_i_2_n_0 ;
  wire \m_axis_tdata[7]_i_3_n_0 ;
  wire \m_axis_tdata[8]_i_1_n_0 ;
  wire \m_axis_tdata[8]_i_2_n_0 ;
  wire \m_axis_tdata[8]_i_3_n_0 ;
  wire \m_axis_tdata[9]_i_1_n_0 ;
  wire \m_axis_tdata[9]_i_2_n_0 ;
  wire \m_axis_tdata[9]_i_3_n_0 ;
  wire \m_axis_tdata[9]_i_4_n_0 ;
  wire [15:0]\m_axis_tdata_reg[15]_0 ;
  wire [0:0]\m_axis_tdata_reg[15]_1 ;
  wire [0:0]\m_axis_tdata_reg[15]_2 ;
  wire m_axis_tvalid_i_1__0_n_0;
  wire m_axis_tvalid_reg_0;
  wire m_axis_tvalid_reg_1;
  wire p_2_in;
  wire p_2_out0;
  wire [15:1]q_o;
  wire sign_curr;
  wire \sign_sr_reg_n_0_[0] ;
  wire \sign_sr_reg_n_0_[10] ;
  wire \sign_sr_reg_n_0_[11] ;
  wire \sign_sr_reg_n_0_[12] ;
  wire \sign_sr_reg_n_0_[13] ;
  wire \sign_sr_reg_n_0_[14] ;
  wire \sign_sr_reg_n_0_[15] ;
  wire \sign_sr_reg_n_0_[16] ;
  wire \sign_sr_reg_n_0_[17] ;
  wire \sign_sr_reg_n_0_[18] ;
  wire \sign_sr_reg_n_0_[19] ;
  wire \sign_sr_reg_n_0_[1] ;
  wire \sign_sr_reg_n_0_[20] ;
  wire \sign_sr_reg_n_0_[21] ;
  wire \sign_sr_reg_n_0_[22] ;
  wire \sign_sr_reg_n_0_[23] ;
  wire \sign_sr_reg_n_0_[24] ;
  wire \sign_sr_reg_n_0_[25] ;
  wire \sign_sr_reg_n_0_[26] ;
  wire \sign_sr_reg_n_0_[27] ;
  wire \sign_sr_reg_n_0_[28] ;
  wire \sign_sr_reg_n_0_[29] ;
  wire \sign_sr_reg_n_0_[2] ;
  wire \sign_sr_reg_n_0_[30] ;
  wire \sign_sr_reg_n_0_[31] ;
  wire \sign_sr_reg_n_0_[32] ;
  wire \sign_sr_reg_n_0_[3] ;
  wire \sign_sr_reg_n_0_[4] ;
  wire \sign_sr_reg_n_0_[5] ;
  wire \sign_sr_reg_n_0_[6] ;
  wire \sign_sr_reg_n_0_[7] ;
  wire \sign_sr_reg_n_0_[8] ;
  wire \sign_sr_reg_n_0_[9] ;
  wire [30:0]sum_in;
  wire [31:0]sum_uns;
  wire \sum_uns[11]_i_2_n_0 ;
  wire \sum_uns[11]_i_3_n_0 ;
  wire \sum_uns[11]_i_4_n_0 ;
  wire \sum_uns[11]_i_5_n_0 ;
  wire \sum_uns[15]_i_2_n_0 ;
  wire \sum_uns[15]_i_3_n_0 ;
  wire \sum_uns[15]_i_4_n_0 ;
  wire \sum_uns[15]_i_5_n_0 ;
  wire \sum_uns[19]_i_2_n_0 ;
  wire \sum_uns[19]_i_3_n_0 ;
  wire \sum_uns[19]_i_4_n_0 ;
  wire \sum_uns[19]_i_5_n_0 ;
  wire \sum_uns[23]_i_2_n_0 ;
  wire \sum_uns[23]_i_3_n_0 ;
  wire \sum_uns[23]_i_4_n_0 ;
  wire \sum_uns[23]_i_5_n_0 ;
  wire \sum_uns[27]_i_2_n_0 ;
  wire \sum_uns[27]_i_3_n_0 ;
  wire \sum_uns[27]_i_4_n_0 ;
  wire \sum_uns[27]_i_5_n_0 ;
  wire \sum_uns[31]_i_2_n_0 ;
  wire \sum_uns[31]_i_3_n_0 ;
  wire \sum_uns[31]_i_4_n_0 ;
  wire \sum_uns[3]_i_2_n_0 ;
  wire \sum_uns[3]_i_3_n_0 ;
  wire \sum_uns[3]_i_4_n_0 ;
  wire \sum_uns[3]_i_5_n_0 ;
  wire \sum_uns[7]_i_2_n_0 ;
  wire \sum_uns[7]_i_3_n_0 ;
  wire \sum_uns[7]_i_4_n_0 ;
  wire \sum_uns[7]_i_5_n_0 ;
  wire \sum_uns_reg[11]_i_1_n_0 ;
  wire \sum_uns_reg[11]_i_1_n_1 ;
  wire \sum_uns_reg[11]_i_1_n_2 ;
  wire \sum_uns_reg[11]_i_1_n_3 ;
  wire \sum_uns_reg[11]_i_1_n_4 ;
  wire \sum_uns_reg[11]_i_1_n_5 ;
  wire \sum_uns_reg[11]_i_1_n_6 ;
  wire \sum_uns_reg[11]_i_1_n_7 ;
  wire \sum_uns_reg[15]_i_1_n_0 ;
  wire \sum_uns_reg[15]_i_1_n_1 ;
  wire \sum_uns_reg[15]_i_1_n_2 ;
  wire \sum_uns_reg[15]_i_1_n_3 ;
  wire \sum_uns_reg[15]_i_1_n_4 ;
  wire \sum_uns_reg[15]_i_1_n_5 ;
  wire \sum_uns_reg[15]_i_1_n_6 ;
  wire \sum_uns_reg[15]_i_1_n_7 ;
  wire \sum_uns_reg[19]_i_1_n_0 ;
  wire \sum_uns_reg[19]_i_1_n_1 ;
  wire \sum_uns_reg[19]_i_1_n_2 ;
  wire \sum_uns_reg[19]_i_1_n_3 ;
  wire \sum_uns_reg[19]_i_1_n_4 ;
  wire \sum_uns_reg[19]_i_1_n_5 ;
  wire \sum_uns_reg[19]_i_1_n_6 ;
  wire \sum_uns_reg[19]_i_1_n_7 ;
  wire \sum_uns_reg[23]_i_1_n_0 ;
  wire \sum_uns_reg[23]_i_1_n_1 ;
  wire \sum_uns_reg[23]_i_1_n_2 ;
  wire \sum_uns_reg[23]_i_1_n_3 ;
  wire \sum_uns_reg[23]_i_1_n_4 ;
  wire \sum_uns_reg[23]_i_1_n_5 ;
  wire \sum_uns_reg[23]_i_1_n_6 ;
  wire \sum_uns_reg[23]_i_1_n_7 ;
  wire \sum_uns_reg[27]_i_1_n_0 ;
  wire \sum_uns_reg[27]_i_1_n_1 ;
  wire \sum_uns_reg[27]_i_1_n_2 ;
  wire \sum_uns_reg[27]_i_1_n_3 ;
  wire \sum_uns_reg[27]_i_1_n_4 ;
  wire \sum_uns_reg[27]_i_1_n_5 ;
  wire \sum_uns_reg[27]_i_1_n_6 ;
  wire \sum_uns_reg[27]_i_1_n_7 ;
  wire \sum_uns_reg[31]_i_1_n_0 ;
  wire \sum_uns_reg[31]_i_1_n_2 ;
  wire \sum_uns_reg[31]_i_1_n_3 ;
  wire \sum_uns_reg[31]_i_1_n_5 ;
  wire \sum_uns_reg[31]_i_1_n_6 ;
  wire \sum_uns_reg[31]_i_1_n_7 ;
  wire \sum_uns_reg[3]_i_1_n_0 ;
  wire \sum_uns_reg[3]_i_1_n_1 ;
  wire \sum_uns_reg[3]_i_1_n_2 ;
  wire \sum_uns_reg[3]_i_1_n_3 ;
  wire \sum_uns_reg[3]_i_1_n_4 ;
  wire \sum_uns_reg[3]_i_1_n_5 ;
  wire \sum_uns_reg[3]_i_1_n_6 ;
  wire \sum_uns_reg[3]_i_1_n_7 ;
  wire \sum_uns_reg[7]_i_1_n_0 ;
  wire \sum_uns_reg[7]_i_1_n_1 ;
  wire \sum_uns_reg[7]_i_1_n_2 ;
  wire \sum_uns_reg[7]_i_1_n_3 ;
  wire \sum_uns_reg[7]_i_1_n_4 ;
  wire \sum_uns_reg[7]_i_1_n_5 ;
  wire \sum_uns_reg[7]_i_1_n_6 ;
  wire \sum_uns_reg[7]_i_1_n_7 ;
  wire trig_detect_i_10_n_0;
  wire trig_detect_i_11_n_0;
  wire trig_detect_i_12_n_0;
  wire trig_detect_i_13_n_0;
  wire trig_detect_i_14_n_0;
  wire trig_detect_i_15_n_0;
  wire trig_detect_i_17_n_0;
  wire trig_detect_i_18_n_0;
  wire trig_detect_i_19_n_0;
  wire trig_detect_i_20_n_0;
  wire trig_detect_i_21_n_0;
  wire trig_detect_i_22_n_0;
  wire trig_detect_i_23_n_0;
  wire trig_detect_i_24_n_0;
  wire trig_detect_i_26_n_0;
  wire trig_detect_i_27_n_0;
  wire trig_detect_i_28_n_0;
  wire trig_detect_i_29_n_0;
  wire trig_detect_i_30_n_0;
  wire trig_detect_i_31_n_0;
  wire trig_detect_i_32_n_0;
  wire trig_detect_i_33_n_0;
  wire trig_detect_i_35_n_0;
  wire trig_detect_i_36_n_0;
  wire trig_detect_i_37_n_0;
  wire trig_detect_i_38_n_0;
  wire trig_detect_i_39_n_0;
  wire trig_detect_i_40_n_0;
  wire trig_detect_i_41_n_0;
  wire trig_detect_i_42_n_0;
  wire trig_detect_i_43_n_0;
  wire trig_detect_i_44_n_0;
  wire trig_detect_i_45_n_0;
  wire trig_detect_i_46_n_0;
  wire trig_detect_i_47_n_0;
  wire trig_detect_i_48_n_0;
  wire trig_detect_i_49_n_0;
  wire trig_detect_i_50_n_0;
  wire trig_detect_i_51_n_0;
  wire trig_detect_i_52_n_0;
  wire trig_detect_i_53_n_0;
  wire trig_detect_i_54_n_0;
  wire trig_detect_i_55_n_0;
  wire trig_detect_i_56_n_0;
  wire trig_detect_i_57_n_0;
  wire trig_detect_i_58_n_0;
  wire trig_detect_i_59_n_0;
  wire trig_detect_i_60_n_0;
  wire trig_detect_i_61_n_0;
  wire trig_detect_i_62_n_0;
  wire trig_detect_i_63_n_0;
  wire trig_detect_i_64_n_0;
  wire trig_detect_i_65_n_0;
  wire trig_detect_i_66_n_0;
  wire trig_detect_i_67_n_0;
  wire trig_detect_i_68_n_0;
  wire trig_detect_i_69_n_0;
  wire trig_detect_i_70_n_0;
  wire trig_detect_i_71_n_0;
  wire trig_detect_i_72_n_0;
  wire trig_detect_i_73_n_0;
  wire trig_detect_i_74_n_0;
  wire trig_detect_i_8_n_0;
  wire trig_detect_i_9_n_0;
  wire trig_detect_reg;
  wire trig_detect_reg_0;
  wire trig_detect_reg_i_16_n_0;
  wire trig_detect_reg_i_16_n_1;
  wire trig_detect_reg_i_16_n_2;
  wire trig_detect_reg_i_16_n_3;
  wire trig_detect_reg_i_25_n_0;
  wire trig_detect_reg_i_25_n_1;
  wire trig_detect_reg_i_25_n_2;
  wire trig_detect_reg_i_25_n_3;
  wire trig_detect_reg_i_34_n_0;
  wire trig_detect_reg_i_34_n_1;
  wire trig_detect_reg_i_34_n_2;
  wire trig_detect_reg_i_34_n_3;
  wire [15:0]trig_detect_reg_i_3_0;
  wire trig_detect_reg_i_3_n_1;
  wire trig_detect_reg_i_3_n_2;
  wire trig_detect_reg_i_3_n_3;
  wire trig_detect_reg_i_4_n_1;
  wire trig_detect_reg_i_4_n_2;
  wire trig_detect_reg_i_4_n_3;
  wire [15:0]trig_detect_reg_i_5_0;
  wire trig_detect_reg_i_5_n_1;
  wire trig_detect_reg_i_5_n_2;
  wire trig_detect_reg_i_5_n_3;
  wire trig_detect_reg_i_6_n_1;
  wire trig_detect_reg_i_6_n_2;
  wire trig_detect_reg_i_6_n_3;
  wire trig_detect_reg_i_7_n_0;
  wire trig_detect_reg_i_7_n_1;
  wire trig_detect_reg_i_7_n_2;
  wire trig_detect_reg_i_7_n_3;
  wire [3:3]\NLW_adc_dec_cnt0_inferred__0/i__carry__2_CO_UNCONNECTED ;
  wire [3:0]NLW_dec_valid_carry_O_UNCONNECTED;
  wire [3:0]NLW_dec_valid_carry__0_O_UNCONNECTED;
  wire [3:1]NLW_dec_valid_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_dec_valid_carry__1_O_UNCONNECTED;
  wire [2:2]\NLW_sum_uns_reg[31]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_sum_uns_reg[31]_i_1_O_UNCONNECTED ;
  wire [3:0]NLW_trig_detect_reg_i_16_O_UNCONNECTED;
  wire [3:0]NLW_trig_detect_reg_i_25_O_UNCONNECTED;
  wire [3:0]NLW_trig_detect_reg_i_3_O_UNCONNECTED;
  wire [3:0]NLW_trig_detect_reg_i_34_O_UNCONNECTED;
  wire [3:0]NLW_trig_detect_reg_i_4_O_UNCONNECTED;
  wire [3:0]NLW_trig_detect_reg_i_5_O_UNCONNECTED;
  wire [3:0]NLW_trig_detect_reg_i_6_O_UNCONNECTED;
  wire [3:0]NLW_trig_detect_reg_i_7_O_UNCONNECTED;

  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \adc_dec_cnt0_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\adc_dec_cnt0_inferred__0/i__carry_n_0 ,\adc_dec_cnt0_inferred__0/i__carry_n_1 ,\adc_dec_cnt0_inferred__0/i__carry_n_2 ,\adc_dec_cnt0_inferred__0/i__carry_n_3 }),
        .CYINIT(\adc_dec_cnt_reg_n_0_[0] ),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\adc_dec_cnt0_inferred__0/i__carry_n_4 ,\adc_dec_cnt0_inferred__0/i__carry_n_5 ,\adc_dec_cnt0_inferred__0/i__carry_n_6 ,\adc_dec_cnt0_inferred__0/i__carry_n_7 }),
        .S({\adc_dec_cnt_reg_n_0_[4] ,\adc_dec_cnt_reg_n_0_[3] ,\adc_dec_cnt_reg_n_0_[2] ,\adc_dec_cnt_reg_n_0_[1] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \adc_dec_cnt0_inferred__0/i__carry__0 
       (.CI(\adc_dec_cnt0_inferred__0/i__carry_n_0 ),
        .CO({\adc_dec_cnt0_inferred__0/i__carry__0_n_0 ,\adc_dec_cnt0_inferred__0/i__carry__0_n_1 ,\adc_dec_cnt0_inferred__0/i__carry__0_n_2 ,\adc_dec_cnt0_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\adc_dec_cnt0_inferred__0/i__carry__0_n_4 ,\adc_dec_cnt0_inferred__0/i__carry__0_n_5 ,\adc_dec_cnt0_inferred__0/i__carry__0_n_6 ,\adc_dec_cnt0_inferred__0/i__carry__0_n_7 }),
        .S({\adc_dec_cnt_reg_n_0_[8] ,\adc_dec_cnt_reg_n_0_[7] ,\adc_dec_cnt_reg_n_0_[6] ,\adc_dec_cnt_reg_n_0_[5] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \adc_dec_cnt0_inferred__0/i__carry__1 
       (.CI(\adc_dec_cnt0_inferred__0/i__carry__0_n_0 ),
        .CO({\adc_dec_cnt0_inferred__0/i__carry__1_n_0 ,\adc_dec_cnt0_inferred__0/i__carry__1_n_1 ,\adc_dec_cnt0_inferred__0/i__carry__1_n_2 ,\adc_dec_cnt0_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\adc_dec_cnt0_inferred__0/i__carry__1_n_4 ,\adc_dec_cnt0_inferred__0/i__carry__1_n_5 ,\adc_dec_cnt0_inferred__0/i__carry__1_n_6 ,\adc_dec_cnt0_inferred__0/i__carry__1_n_7 }),
        .S({\adc_dec_cnt_reg_n_0_[12] ,\adc_dec_cnt_reg_n_0_[11] ,\adc_dec_cnt_reg_n_0_[10] ,\adc_dec_cnt_reg_n_0_[9] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \adc_dec_cnt0_inferred__0/i__carry__2 
       (.CI(\adc_dec_cnt0_inferred__0/i__carry__1_n_0 ),
        .CO({\NLW_adc_dec_cnt0_inferred__0/i__carry__2_CO_UNCONNECTED [3],\adc_dec_cnt0_inferred__0/i__carry__2_n_1 ,\adc_dec_cnt0_inferred__0/i__carry__2_n_2 ,\adc_dec_cnt0_inferred__0/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\adc_dec_cnt0_inferred__0/i__carry__2_n_4 ,\adc_dec_cnt0_inferred__0/i__carry__2_n_5 ,\adc_dec_cnt0_inferred__0/i__carry__2_n_6 ,\adc_dec_cnt0_inferred__0/i__carry__2_n_7 }),
        .S({\adc_dec_cnt_reg_n_0_[16] ,\adc_dec_cnt_reg_n_0_[15] ,\adc_dec_cnt_reg_n_0_[14] ,\adc_dec_cnt_reg_n_0_[13] }));
  LUT2 #(
    .INIT(4'hB)) 
    \adc_dec_cnt[0]_i_2 
       (.I0(CO),
        .I1(\adc_dec_cnt_reg_n_0_[0] ),
        .O(\adc_dec_cnt[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hEF)) 
    \adc_dec_cnt[16]_i_1 
       (.I0(CO),
        .I1(\adc_dec_cnt_reg[16]_0 ),
        .I2(m_axi_osc1_aresetn),
        .O(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt[0]_i_2_n_0 ),
        .Q(\adc_dec_cnt_reg_n_0_[0] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_dec_cnt_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__1_n_6 ),
        .Q(\adc_dec_cnt_reg_n_0_[10] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__1_n_5 ),
        .Q(\adc_dec_cnt_reg_n_0_[11] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__1_n_4 ),
        .Q(\adc_dec_cnt_reg_n_0_[12] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__2_n_7 ),
        .Q(\adc_dec_cnt_reg_n_0_[13] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__2_n_6 ),
        .Q(\adc_dec_cnt_reg_n_0_[14] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__2_n_5 ),
        .Q(\adc_dec_cnt_reg_n_0_[15] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__2_n_4 ),
        .Q(\adc_dec_cnt_reg_n_0_[16] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry_n_7 ),
        .Q(\adc_dec_cnt_reg_n_0_[1] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry_n_6 ),
        .Q(\adc_dec_cnt_reg_n_0_[2] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry_n_5 ),
        .Q(\adc_dec_cnt_reg_n_0_[3] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry_n_4 ),
        .Q(\adc_dec_cnt_reg_n_0_[4] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__0_n_7 ),
        .Q(\adc_dec_cnt_reg_n_0_[5] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__0_n_6 ),
        .Q(\adc_dec_cnt_reg_n_0_[6] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__0_n_5 ),
        .Q(\adc_dec_cnt_reg_n_0_[7] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__0_n_4 ),
        .Q(\adc_dec_cnt_reg_n_0_[8] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE \adc_dec_cnt_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_dec_cnt0_inferred__0/i__carry__1_n_7 ),
        .Q(\adc_dec_cnt_reg_n_0_[9] ),
        .R(\adc_dec_cnt[16]_i_1_n_0 ));
  FDRE adc_dv_div_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(div_dat_got),
        .Q(adc_dv_div),
        .R(clear));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[0]_i_6 
       (.I0(data2[2]),
        .I1(CO),
        .I2(\adc_sum_reg[3]_3 ),
        .O(S[3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[0]_i_7 
       (.I0(data2[1]),
        .I1(CO),
        .I2(\adc_sum_reg[3]_2 ),
        .O(S[2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[0]_i_8 
       (.I0(data2[0]),
        .I1(CO),
        .I2(\adc_sum_reg[3]_1 ),
        .O(S[1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[0]_i_9 
       (.I0(\adc_sum_reg_n_0_[0] ),
        .I1(CO),
        .I2(\adc_sum_reg[3]_0 ),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[12]_i_6 
       (.I0(data2[14]),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[15]_0 [3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[12]_i_7 
       (.I0(data2[13]),
        .I1(CO),
        .I2(\adc_sum_reg[15]_4 ),
        .O(\adc_sum_reg[15]_0 [2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[12]_i_8 
       (.I0(data2[12]),
        .I1(CO),
        .I2(\adc_sum_reg[15]_3 ),
        .O(\adc_sum_reg[15]_0 [1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[12]_i_9 
       (.I0(data2[11]),
        .I1(CO),
        .I2(\adc_sum_reg[15]_2 ),
        .O(\adc_sum_reg[15]_0 [0]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[16]_i_2 
       (.I0(\adc_sum_reg_n_0_[19] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[19]_0 [3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[16]_i_3 
       (.I0(\adc_sum_reg_n_0_[18] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[19]_0 [2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[16]_i_4 
       (.I0(\adc_sum_reg_n_0_[17] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[19]_0 [1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[16]_i_5 
       (.I0(data2[15]),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[19]_0 [0]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[20]_i_2 
       (.I0(\adc_sum_reg_n_0_[23] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[23]_0 [3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[20]_i_3 
       (.I0(\adc_sum_reg_n_0_[22] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[23]_0 [2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[20]_i_4 
       (.I0(\adc_sum_reg_n_0_[21] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[23]_0 [1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[20]_i_5 
       (.I0(\adc_sum_reg_n_0_[20] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[23]_0 [0]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[24]_i_2 
       (.I0(\adc_sum_reg_n_0_[27] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[27]_0 [3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[24]_i_3 
       (.I0(\adc_sum_reg_n_0_[26] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[27]_0 [2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[24]_i_4 
       (.I0(\adc_sum_reg_n_0_[25] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[27]_0 [1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[24]_i_5 
       (.I0(\adc_sum_reg_n_0_[24] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[27]_0 [0]));
  LUT3 #(
    .INIT(8'h9A)) 
    \adc_sum[28]_i_2 
       (.I0(\adc_sum_reg[15]_5 ),
        .I1(CO),
        .I2(p_2_in),
        .O(\adc_sum_reg[31]_0 [3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[28]_i_3 
       (.I0(\adc_sum_reg_n_0_[30] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[31]_0 [2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[28]_i_4 
       (.I0(\adc_sum_reg_n_0_[29] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[31]_0 [1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[28]_i_5 
       (.I0(\adc_sum_reg_n_0_[28] ),
        .I1(CO),
        .I2(\adc_sum_reg[15]_5 ),
        .O(\adc_sum_reg[31]_0 [0]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[4]_i_6 
       (.I0(data2[6]),
        .I1(CO),
        .I2(\adc_sum_reg[7]_5 ),
        .O(\adc_sum_reg[7]_0 [3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[4]_i_7 
       (.I0(data2[5]),
        .I1(CO),
        .I2(\adc_sum_reg[7]_4 ),
        .O(\adc_sum_reg[7]_0 [2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[4]_i_8 
       (.I0(data2[4]),
        .I1(CO),
        .I2(\adc_sum_reg[7]_3 ),
        .O(\adc_sum_reg[7]_0 [1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[4]_i_9 
       (.I0(data2[3]),
        .I1(CO),
        .I2(\adc_sum_reg[7]_2 ),
        .O(\adc_sum_reg[7]_0 [0]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[8]_i_6 
       (.I0(data2[10]),
        .I1(CO),
        .I2(\adc_sum_reg[11]_5 ),
        .O(\adc_sum_reg[11]_0 [3]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[8]_i_7 
       (.I0(data2[9]),
        .I1(CO),
        .I2(\adc_sum_reg[11]_4 ),
        .O(\adc_sum_reg[11]_0 [2]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[8]_i_8 
       (.I0(data2[8]),
        .I1(CO),
        .I2(\adc_sum_reg[11]_3 ),
        .O(\adc_sum_reg[11]_0 [1]));
  LUT3 #(
    .INIT(8'hD2)) 
    \adc_sum[8]_i_9 
       (.I0(data2[7]),
        .I1(CO),
        .I2(\adc_sum_reg[11]_2 ),
        .O(\adc_sum_reg[11]_0 [0]));
  FDRE \adc_sum_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(O[0]),
        .Q(\adc_sum_reg_n_0_[0] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[11]_1 [2]),
        .Q(data2[9]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[11]_1 [3]),
        .Q(data2[10]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[15]_1 [0]),
        .Q(data2[11]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[15]_1 [1]),
        .Q(data2[12]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[15]_1 [2]),
        .Q(data2[13]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[15]_1 [3]),
        .Q(data2[14]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[19]_1 [0]),
        .Q(data2[15]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[19]_1 [1]),
        .Q(\adc_sum_reg_n_0_[17] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[19]_1 [2]),
        .Q(\adc_sum_reg_n_0_[18] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[19]_1 [3]),
        .Q(\adc_sum_reg_n_0_[19] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(O[1]),
        .Q(data2[0]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[23]_1 [0]),
        .Q(\adc_sum_reg_n_0_[20] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[23]_1 [1]),
        .Q(\adc_sum_reg_n_0_[21] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[23]_1 [2]),
        .Q(\adc_sum_reg_n_0_[22] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[23]_1 [3]),
        .Q(\adc_sum_reg_n_0_[23] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[27]_1 [0]),
        .Q(\adc_sum_reg_n_0_[24] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[27]_1 [1]),
        .Q(\adc_sum_reg_n_0_[25] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[27]_1 [2]),
        .Q(\adc_sum_reg_n_0_[26] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[27]_1 [3]),
        .Q(\adc_sum_reg_n_0_[27] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[31]_2 [0]),
        .Q(\adc_sum_reg_n_0_[28] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[31]_2 [1]),
        .Q(\adc_sum_reg_n_0_[29] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(O[2]),
        .Q(data2[1]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[31]_2 [2]),
        .Q(\adc_sum_reg_n_0_[30] ),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[31]_2 [3]),
        .Q(p_2_in),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(O[3]),
        .Q(data2[2]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[7]_1 [0]),
        .Q(data2[3]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[7]_1 [1]),
        .Q(data2[4]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[7]_1 [2]),
        .Q(data2[5]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[7]_1 [3]),
        .Q(data2[6]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[11]_1 [0]),
        .Q(data2[7]),
        .R(\adc_sum_reg[31]_1 ));
  FDRE \adc_sum_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\adc_sum_reg[11]_1 [1]),
        .Q(data2[8]),
        .R(\adc_sum_reg[31]_1 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[11]_i_2 
       (.I0(p_2_out0),
        .I1(q_o[11]),
        .O(\dat_div[11]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[11]_i_3 
       (.I0(p_2_out0),
        .I1(q_o[10]),
        .O(\dat_div[11]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[11]_i_4 
       (.I0(p_2_out0),
        .I1(q_o[9]),
        .O(\dat_div[11]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[11]_i_5 
       (.I0(p_2_out0),
        .I1(q_o[8]),
        .O(\dat_div[11]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[15]_i_2 
       (.I0(p_2_out0),
        .I1(q_o[15]),
        .O(\dat_div[15]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[15]_i_3 
       (.I0(p_2_out0),
        .I1(q_o[14]),
        .O(\dat_div[15]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[15]_i_4 
       (.I0(p_2_out0),
        .I1(q_o[13]),
        .O(\dat_div[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[15]_i_5 
       (.I0(p_2_out0),
        .I1(q_o[12]),
        .O(\dat_div[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[3]_i_2 
       (.I0(p_2_out0),
        .I1(q_o[3]),
        .O(\dat_div[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[3]_i_3 
       (.I0(p_2_out0),
        .I1(q_o[2]),
        .O(\dat_div[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[3]_i_4 
       (.I0(p_2_out0),
        .I1(q_o[1]),
        .O(\dat_div[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[7]_i_2 
       (.I0(p_2_out0),
        .I1(q_o[7]),
        .O(\dat_div[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[7]_i_3 
       (.I0(p_2_out0),
        .I1(q_o[6]),
        .O(\dat_div[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[7]_i_4 
       (.I0(p_2_out0),
        .I1(q_o[5]),
        .O(\dat_div[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \dat_div[7]_i_5 
       (.I0(p_2_out0),
        .I1(q_o[4]),
        .O(\dat_div[7]_i_5_n_0 ));
  FDRE \dat_div_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_17),
        .Q(\dat_div_reg_n_0_[0] ),
        .R(clear));
  FDRE \dat_div_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_7),
        .Q(\dat_div_reg_n_0_[10] ),
        .R(clear));
  FDRE \dat_div_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_6),
        .Q(\dat_div_reg_n_0_[11] ),
        .R(clear));
  FDRE \dat_div_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_5),
        .Q(\dat_div_reg_n_0_[12] ),
        .R(clear));
  FDRE \dat_div_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_4),
        .Q(\dat_div_reg_n_0_[13] ),
        .R(clear));
  FDRE \dat_div_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_3),
        .Q(\dat_div_reg_n_0_[14] ),
        .R(clear));
  FDRE \dat_div_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_2),
        .Q(\dat_div_reg_n_0_[15] ),
        .R(clear));
  FDRE \dat_div_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_16),
        .Q(\dat_div_reg_n_0_[1] ),
        .R(clear));
  FDRE \dat_div_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_15),
        .Q(\dat_div_reg_n_0_[2] ),
        .R(clear));
  FDRE \dat_div_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_14),
        .Q(\dat_div_reg_n_0_[3] ),
        .R(clear));
  FDRE \dat_div_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_13),
        .Q(\dat_div_reg_n_0_[4] ),
        .R(clear));
  FDRE \dat_div_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_12),
        .Q(\dat_div_reg_n_0_[5] ),
        .R(clear));
  FDRE \dat_div_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_11),
        .Q(\dat_div_reg_n_0_[6] ),
        .R(clear));
  FDRE \dat_div_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_10),
        .Q(\dat_div_reg_n_0_[7] ),
        .R(clear));
  FDRE \dat_div_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_9),
        .Q(\dat_div_reg_n_0_[8] ),
        .R(clear));
  FDRE \dat_div_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(div_dat_got),
        .D(dec_avg_div_n_8),
        .Q(\dat_div_reg_n_0_[9] ),
        .R(clear));
  LUT6 #(
    .INIT(64'hFFFFFFFD00000000)) 
    dat_got_i_1
       (.I0(dat_got_i_2_n_0),
        .I1(dat_got_i_3_n_0),
        .I2(Q[5]),
        .I3(Q[6]),
        .I4(Q[4]),
        .I5(CO),
        .O(dat_got_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    dat_got_i_2
       (.I0(Q[15]),
        .I1(Q[12]),
        .I2(Q[8]),
        .I3(Q[14]),
        .I4(Q[13]),
        .I5(Q[16]),
        .O(dat_got_i_2_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    dat_got_i_3
       (.I0(Q[11]),
        .I1(Q[10]),
        .I2(Q[9]),
        .I3(Q[7]),
        .O(dat_got_i_3_n_0));
  FDRE dat_got_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(dat_got_i_1_n_0),
        .Q(dat_got),
        .R(clear));
  system_rp_oscilloscope_0_divide_18 dec_avg_div
       (.D({dec_avg_div_n_2,dec_avg_div_n_3,dec_avg_div_n_4,dec_avg_div_n_5,dec_avg_div_n_6,dec_avg_div_n_7,dec_avg_div_n_8,dec_avg_div_n_9,dec_avg_div_n_10,dec_avg_div_n_11,dec_avg_div_n_12,dec_avg_div_n_13,dec_avg_div_n_14,dec_avg_div_n_15,dec_avg_div_n_16,dec_avg_div_n_17}),
        .Q(sum_uns),
        .S({\dat_div[3]_i_2_n_0 ,\dat_div[3]_i_3_n_0 ,\dat_div[3]_i_4_n_0 }),
        .SR(clear),
        .\dat_div_reg[11] ({\dat_div[11]_i_2_n_0 ,\dat_div[11]_i_3_n_0 ,\dat_div[11]_i_4_n_0 ,\dat_div[11]_i_5_n_0 }),
        .\dat_div_reg[15] ({\dat_div[15]_i_2_n_0 ,\dat_div[15]_i_3_n_0 ,\dat_div[15]_i_4_n_0 ,\dat_div[15]_i_5_n_0 }),
        .\dat_div_reg[3] (p_2_out0),
        .\dat_div_reg[7] ({\dat_div[7]_i_2_n_0 ,\dat_div[7]_i_3_n_0 ,\dat_div[7]_i_4_n_0 ,\dat_div[7]_i_5_n_0 }),
        .div_go(div_go),
        .dv_o(dv_o),
        .m_axi_osc1_aclk(m_axi_osc1_aclk),
        .m_axi_osc1_aresetn(m_axi_osc1_aresetn),
        .\q_o_reg[15]_0 (q_o),
        .\reg_Y_reg[0][16]_0 (Q));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 dec_valid_carry
       (.CI(1'b0),
        .CO({dec_valid_carry_n_0,dec_valid_carry_n_1,dec_valid_carry_n_2,dec_valid_carry_n_3}),
        .CYINIT(1'b1),
        .DI({dec_valid_carry_i_1_n_0,dec_valid_carry_i_2_n_0,dec_valid_carry_i_3_n_0,dec_valid_carry_i_4_n_0}),
        .O(NLW_dec_valid_carry_O_UNCONNECTED[3:0]),
        .S({dec_valid_carry_i_5_n_0,dec_valid_carry_i_6_n_0,dec_valid_carry_i_7_n_0,dec_valid_carry_i_8_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 dec_valid_carry__0
       (.CI(dec_valid_carry_n_0),
        .CO({dec_valid_carry__0_n_0,dec_valid_carry__0_n_1,dec_valid_carry__0_n_2,dec_valid_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({dec_valid_carry__0_i_1_n_0,dec_valid_carry__0_i_2_n_0,dec_valid_carry__0_i_3_n_0,dec_valid_carry__0_i_4_n_0}),
        .O(NLW_dec_valid_carry__0_O_UNCONNECTED[3:0]),
        .S({dec_valid_carry__0_i_5_n_0,dec_valid_carry__0_i_6_n_0,dec_valid_carry__0_i_7_n_0,dec_valid_carry__0_i_8_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry__0_i_1
       (.I0(\adc_dec_cnt_reg_n_0_[15] ),
        .I1(Q[15]),
        .I2(\adc_dec_cnt_reg_n_0_[14] ),
        .I3(Q[14]),
        .O(dec_valid_carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry__0_i_2
       (.I0(\adc_dec_cnt_reg_n_0_[13] ),
        .I1(Q[13]),
        .I2(\adc_dec_cnt_reg_n_0_[12] ),
        .I3(Q[12]),
        .O(dec_valid_carry__0_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry__0_i_3
       (.I0(\adc_dec_cnt_reg_n_0_[11] ),
        .I1(Q[11]),
        .I2(\adc_dec_cnt_reg_n_0_[10] ),
        .I3(Q[10]),
        .O(dec_valid_carry__0_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry__0_i_4
       (.I0(\adc_dec_cnt_reg_n_0_[9] ),
        .I1(Q[9]),
        .I2(\adc_dec_cnt_reg_n_0_[8] ),
        .I3(Q[8]),
        .O(dec_valid_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry__0_i_5
       (.I0(Q[15]),
        .I1(\adc_dec_cnt_reg_n_0_[15] ),
        .I2(Q[14]),
        .I3(\adc_dec_cnt_reg_n_0_[14] ),
        .O(dec_valid_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry__0_i_6
       (.I0(Q[13]),
        .I1(\adc_dec_cnt_reg_n_0_[13] ),
        .I2(Q[12]),
        .I3(\adc_dec_cnt_reg_n_0_[12] ),
        .O(dec_valid_carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry__0_i_7
       (.I0(Q[11]),
        .I1(\adc_dec_cnt_reg_n_0_[11] ),
        .I2(Q[10]),
        .I3(\adc_dec_cnt_reg_n_0_[10] ),
        .O(dec_valid_carry__0_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry__0_i_8
       (.I0(Q[9]),
        .I1(\adc_dec_cnt_reg_n_0_[9] ),
        .I2(Q[8]),
        .I3(\adc_dec_cnt_reg_n_0_[8] ),
        .O(dec_valid_carry__0_i_8_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 dec_valid_carry__1
       (.CI(dec_valid_carry__0_n_0),
        .CO({NLW_dec_valid_carry__1_CO_UNCONNECTED[3:1],CO}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,dec_valid_carry__1_i_1_n_0}),
        .O(NLW_dec_valid_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,dec_valid_carry__1_i_2_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    dec_valid_carry__1_i_1
       (.I0(\adc_dec_cnt_reg_n_0_[16] ),
        .I1(Q[16]),
        .O(dec_valid_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    dec_valid_carry__1_i_2
       (.I0(Q[16]),
        .I1(\adc_dec_cnt_reg_n_0_[16] ),
        .O(dec_valid_carry__1_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry_i_1
       (.I0(\adc_dec_cnt_reg_n_0_[7] ),
        .I1(Q[7]),
        .I2(\adc_dec_cnt_reg_n_0_[6] ),
        .I3(Q[6]),
        .O(dec_valid_carry_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry_i_2
       (.I0(\adc_dec_cnt_reg_n_0_[5] ),
        .I1(Q[5]),
        .I2(\adc_dec_cnt_reg_n_0_[4] ),
        .I3(Q[4]),
        .O(dec_valid_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry_i_3
       (.I0(\adc_dec_cnt_reg_n_0_[3] ),
        .I1(Q[3]),
        .I2(\adc_dec_cnt_reg_n_0_[2] ),
        .I3(Q[2]),
        .O(dec_valid_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    dec_valid_carry_i_4
       (.I0(\adc_dec_cnt_reg_n_0_[1] ),
        .I1(Q[1]),
        .I2(\adc_dec_cnt_reg_n_0_[0] ),
        .I3(Q[0]),
        .O(dec_valid_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry_i_5
       (.I0(Q[7]),
        .I1(\adc_dec_cnt_reg_n_0_[7] ),
        .I2(Q[6]),
        .I3(\adc_dec_cnt_reg_n_0_[6] ),
        .O(dec_valid_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry_i_6
       (.I0(Q[5]),
        .I1(\adc_dec_cnt_reg_n_0_[5] ),
        .I2(Q[4]),
        .I3(\adc_dec_cnt_reg_n_0_[4] ),
        .O(dec_valid_carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry_i_7
       (.I0(Q[3]),
        .I1(\adc_dec_cnt_reg_n_0_[3] ),
        .I2(Q[2]),
        .I3(\adc_dec_cnt_reg_n_0_[2] ),
        .O(dec_valid_carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    dec_valid_carry_i_8
       (.I0(Q[1]),
        .I1(\adc_dec_cnt_reg_n_0_[1] ),
        .I2(Q[0]),
        .I3(\adc_dec_cnt_reg_n_0_[0] ),
        .O(dec_valid_carry_i_8_n_0));
  FDRE div_dat_got_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(dv_o),
        .Q(div_dat_got),
        .R(clear));
  FDRE div_go_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(dat_got),
        .Q(div_go),
        .R(clear));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[0]_i_1 
       (.I0(\dat_div_reg_n_0_[0] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[0]_i_2_n_0 ),
        .I3(\m_axis_tdata[13]_i_3_n_0 ),
        .I4(\m_axis_tdata[0]_i_3_n_0 ),
        .O(\m_axis_tdata[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[0]_i_2 
       (.I0(data2[1]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[2]),
        .O(\m_axis_tdata[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[0]_i_3 
       (.I0(\adc_sum_reg_n_0_[0] ),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[0]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[3]_0 ),
        .O(\m_axis_tdata[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[10]_i_1 
       (.I0(\dat_div_reg_n_0_[10] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[10]_i_2_n_0 ),
        .I3(\m_axis_tdata[13]_i_3_n_0 ),
        .I4(\m_axis_tdata[10]_i_3_n_0 ),
        .O(\m_axis_tdata[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[10]_i_2 
       (.I0(data2[11]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[12]),
        .O(\m_axis_tdata[10]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[10]_i_3 
       (.I0(data2[9]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[10]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[11]_4 ),
        .O(\m_axis_tdata[10]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[11]_i_1 
       (.I0(\dat_div_reg_n_0_[11] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[11]_i_2_n_0 ),
        .I3(\m_axis_tdata[13]_i_3_n_0 ),
        .I4(\m_axis_tdata[11]_i_3_n_0 ),
        .O(\m_axis_tdata[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[11]_i_2 
       (.I0(data2[12]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[13]),
        .O(\m_axis_tdata[11]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[11]_i_3 
       (.I0(data2[10]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[11]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[11]_5 ),
        .O(\m_axis_tdata[11]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[12]_i_1 
       (.I0(\dat_div_reg_n_0_[12] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[12]_i_2_n_0 ),
        .I3(\m_axis_tdata[13]_i_3_n_0 ),
        .I4(\m_axis_tdata[12]_i_3_n_0 ),
        .O(\m_axis_tdata[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[12]_i_2 
       (.I0(data2[13]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[14]),
        .O(\m_axis_tdata[12]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[12]_i_3 
       (.I0(data2[11]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[12]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[15]_2 ),
        .O(\m_axis_tdata[12]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[13]_i_1 
       (.I0(\dat_div_reg_n_0_[13] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[13]_i_2_n_0 ),
        .I3(\m_axis_tdata[13]_i_3_n_0 ),
        .I4(\m_axis_tdata[13]_i_4_n_0 ),
        .O(\m_axis_tdata[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \m_axis_tdata[13]_i_2 
       (.I0(data2[15]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[14]),
        .O(\m_axis_tdata[13]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT5 #(
    .INIT(32'h01001000)) 
    \m_axis_tdata[13]_i_3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(m_axis_tvalid_reg_1),
        .I4(Q[2]),
        .O(\m_axis_tdata[13]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[13]_i_4 
       (.I0(data2[12]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[13]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[15]_3 ),
        .O(\m_axis_tdata[13]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[14]_i_1 
       (.I0(\dat_div_reg_n_0_[14] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[14]_i_2_n_0 ),
        .O(\m_axis_tdata[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEFFFFFEAE0000)) 
    \m_axis_tdata[14]_i_2 
       (.I0(\m_axis_tdata[9]_i_2_n_0 ),
        .I1(\adc_sum_reg_n_0_[17] ),
        .I2(\m_axis_tdata[15]_i_5_n_0 ),
        .I3(data2[15]),
        .I4(\m_axis_tdata[13]_i_3_n_0 ),
        .I5(\m_axis_tdata[14]_i_3_n_0 ),
        .O(\m_axis_tdata[14]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[14]_i_3 
       (.I0(data2[13]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[14]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[15]_4 ),
        .O(\m_axis_tdata[14]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_tdata[15]_i_1__0 
       (.I0(m_axi_osc1_aresetn),
        .I1(\adc_dec_cnt_reg[16]_0 ),
        .O(\m_axis_tdata[15]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[15]_i_2 
       (.I0(\dat_div_reg_n_0_[15] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[15]_i_4_n_0 ),
        .O(\m_axis_tdata[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFD00000000)) 
    \m_axis_tdata[15]_i_3 
       (.I0(dat_got_i_2_n_0),
        .I1(dat_got_i_3_n_0),
        .I2(Q[5]),
        .I3(Q[6]),
        .I4(Q[4]),
        .I5(m_axis_tvalid_reg_1),
        .O(\m_axis_tdata[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEFFFFFEAE0000)) 
    \m_axis_tdata[15]_i_4 
       (.I0(\m_axis_tdata[9]_i_2_n_0 ),
        .I1(\adc_sum_reg_n_0_[18] ),
        .I2(\m_axis_tdata[15]_i_5_n_0 ),
        .I3(\adc_sum_reg_n_0_[17] ),
        .I4(\m_axis_tdata[13]_i_3_n_0 ),
        .I5(\m_axis_tdata[15]_i_6_n_0 ),
        .O(\m_axis_tdata[15]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00000600)) 
    \m_axis_tdata[15]_i_5 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(m_axis_tvalid_reg_1),
        .I4(Q[1]),
        .O(\m_axis_tdata[15]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT5 #(
    .INIT(32'hE2FFE200)) 
    \m_axis_tdata[15]_i_6 
       (.I0(data2[15]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[14]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[15]_5 ),
        .O(\m_axis_tdata[15]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[1]_i_1 
       (.I0(\dat_div_reg_n_0_[1] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[1]_i_2_n_0 ),
        .I3(\m_axis_tdata[13]_i_3_n_0 ),
        .I4(\m_axis_tdata[1]_i_3_n_0 ),
        .O(\m_axis_tdata[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[1]_i_2 
       (.I0(data2[2]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[3]),
        .O(\m_axis_tdata[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[1]_i_3 
       (.I0(data2[0]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[1]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[3]_1 ),
        .O(\m_axis_tdata[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[2]_i_1 
       (.I0(\dat_div_reg_n_0_[2] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[2]_i_2_n_0 ),
        .I3(\m_axis_tdata[13]_i_3_n_0 ),
        .I4(\m_axis_tdata[2]_i_3_n_0 ),
        .O(\m_axis_tdata[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[2]_i_2 
       (.I0(data2[3]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[4]),
        .O(\m_axis_tdata[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[2]_i_3 
       (.I0(data2[1]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[2]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[3]_2 ),
        .O(\m_axis_tdata[2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[3]_i_1 
       (.I0(\dat_div_reg_n_0_[3] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[3]_i_2_n_0 ),
        .I3(\m_axis_tdata[13]_i_3_n_0 ),
        .I4(\m_axis_tdata[3]_i_3_n_0 ),
        .O(\m_axis_tdata[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[3]_i_2 
       (.I0(data2[4]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[5]),
        .O(\m_axis_tdata[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[3]_i_3 
       (.I0(data2[2]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[3]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[3]_3 ),
        .O(\m_axis_tdata[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBBBBBB88888)) 
    \m_axis_tdata[4]_i_1 
       (.I0(\dat_div_reg_n_0_[4] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[9]_i_2_n_0 ),
        .I3(\m_axis_tdata[4]_i_2_n_0 ),
        .I4(\m_axis_tdata[13]_i_3_n_0 ),
        .I5(\m_axis_tdata[4]_i_3_n_0 ),
        .O(\m_axis_tdata[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[4]_i_2 
       (.I0(data2[5]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[6]),
        .O(\m_axis_tdata[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[4]_i_3 
       (.I0(data2[3]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[4]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[7]_2 ),
        .O(\m_axis_tdata[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[5]_i_1 
       (.I0(\dat_div_reg_n_0_[5] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[5]_i_2_n_0 ),
        .I3(\m_axis_tdata[13]_i_3_n_0 ),
        .I4(\m_axis_tdata[5]_i_3_n_0 ),
        .O(\m_axis_tdata[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[5]_i_2 
       (.I0(data2[6]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[7]),
        .O(\m_axis_tdata[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[5]_i_3 
       (.I0(data2[4]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[5]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[7]_3 ),
        .O(\m_axis_tdata[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBBBBBB88888)) 
    \m_axis_tdata[6]_i_1 
       (.I0(\dat_div_reg_n_0_[6] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[9]_i_2_n_0 ),
        .I3(\m_axis_tdata[6]_i_2_n_0 ),
        .I4(\m_axis_tdata[13]_i_3_n_0 ),
        .I5(\m_axis_tdata[6]_i_3_n_0 ),
        .O(\m_axis_tdata[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[6]_i_2 
       (.I0(data2[7]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[8]),
        .O(\m_axis_tdata[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[6]_i_3 
       (.I0(data2[5]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[6]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[7]_4 ),
        .O(\m_axis_tdata[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_axis_tdata[7]_i_1 
       (.I0(\dat_div_reg_n_0_[7] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[7]_i_2_n_0 ),
        .I3(\m_axis_tdata[13]_i_3_n_0 ),
        .I4(\m_axis_tdata[7]_i_3_n_0 ),
        .O(\m_axis_tdata[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[7]_i_2 
       (.I0(data2[8]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[9]),
        .O(\m_axis_tdata[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[7]_i_3 
       (.I0(data2[6]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[7]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[7]_5 ),
        .O(\m_axis_tdata[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBBBBBB88888)) 
    \m_axis_tdata[8]_i_1 
       (.I0(\dat_div_reg_n_0_[8] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[9]_i_2_n_0 ),
        .I3(\m_axis_tdata[8]_i_2_n_0 ),
        .I4(\m_axis_tdata[13]_i_3_n_0 ),
        .I5(\m_axis_tdata[8]_i_3_n_0 ),
        .O(\m_axis_tdata[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[8]_i_2 
       (.I0(data2[9]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[10]),
        .O(\m_axis_tdata[8]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[8]_i_3 
       (.I0(data2[7]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[8]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[11]_2 ),
        .O(\m_axis_tdata[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBBBBBB88888)) 
    \m_axis_tdata[9]_i_1 
       (.I0(\dat_div_reg_n_0_[9] ),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(\m_axis_tdata[9]_i_2_n_0 ),
        .I3(\m_axis_tdata[9]_i_3_n_0 ),
        .I4(\m_axis_tdata[13]_i_3_n_0 ),
        .I5(\m_axis_tdata[9]_i_4_n_0 ),
        .O(\m_axis_tdata[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT5 #(
    .INIT(32'h01001000)) 
    \m_axis_tdata[9]_i_2 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(m_axis_tvalid_reg_1),
        .I4(Q[1]),
        .O(\m_axis_tdata[9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_tdata[9]_i_3 
       (.I0(data2[10]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[11]),
        .O(\m_axis_tdata[9]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \m_axis_tdata[9]_i_4 
       (.I0(data2[8]),
        .I1(\m_axis_tdata[15]_i_5_n_0 ),
        .I2(data2[9]),
        .I3(\m_axis_tdata[9]_i_2_n_0 ),
        .I4(\adc_sum_reg[11]_3 ),
        .O(\m_axis_tdata[9]_i_4_n_0 ));
  FDRE \m_axis_tdata_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[0]_i_1_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [0]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[10]_i_1_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [10]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[11]_i_1_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [11]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[12]_i_1_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [12]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[13]_i_1_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [13]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[14]_i_1_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [14]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[15]_i_2_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [15]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[1]_i_1_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [1]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[2]_i_1_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [2]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[3]_i_1_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [3]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[4]_i_1_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [4]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[5]_i_1_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [5]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[6]_i_1_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [6]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[7]_i_1_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [7]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[8]_i_1_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [8]),
        .R(1'b0));
  FDRE \m_axis_tdata_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(\m_axis_tdata[9]_i_1_n_0 ),
        .Q(\m_axis_tdata_reg[15]_0 [9]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    m_axis_tvalid_i_1__0
       (.I0(adc_dv_div),
        .I1(\m_axis_tdata[15]_i_3_n_0 ),
        .I2(CO),
        .O(m_axis_tvalid_i_1__0_n_0));
  FDRE m_axis_tvalid_reg
       (.C(m_axi_osc1_aclk),
        .CE(\m_axis_tdata[15]_i_1__0_n_0 ),
        .D(m_axis_tvalid_i_1__0_n_0),
        .Q(dec_tvalid),
        .R(1'b0));
  FDRE sign_curr_reg
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(p_2_in),
        .Q(sign_curr),
        .R(clear));
  FDRE \sign_sr_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(sign_curr),
        .Q(\sign_sr_reg_n_0_[0] ),
        .R(clear));
  FDRE \sign_sr_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[9] ),
        .Q(\sign_sr_reg_n_0_[10] ),
        .R(clear));
  FDRE \sign_sr_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[10] ),
        .Q(\sign_sr_reg_n_0_[11] ),
        .R(clear));
  FDRE \sign_sr_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[11] ),
        .Q(\sign_sr_reg_n_0_[12] ),
        .R(clear));
  FDRE \sign_sr_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[12] ),
        .Q(\sign_sr_reg_n_0_[13] ),
        .R(clear));
  FDRE \sign_sr_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[13] ),
        .Q(\sign_sr_reg_n_0_[14] ),
        .R(clear));
  FDRE \sign_sr_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[14] ),
        .Q(\sign_sr_reg_n_0_[15] ),
        .R(clear));
  FDRE \sign_sr_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[15] ),
        .Q(\sign_sr_reg_n_0_[16] ),
        .R(clear));
  FDRE \sign_sr_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[16] ),
        .Q(\sign_sr_reg_n_0_[17] ),
        .R(clear));
  FDRE \sign_sr_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[17] ),
        .Q(\sign_sr_reg_n_0_[18] ),
        .R(clear));
  FDRE \sign_sr_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[18] ),
        .Q(\sign_sr_reg_n_0_[19] ),
        .R(clear));
  FDRE \sign_sr_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[0] ),
        .Q(\sign_sr_reg_n_0_[1] ),
        .R(clear));
  FDRE \sign_sr_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[19] ),
        .Q(\sign_sr_reg_n_0_[20] ),
        .R(clear));
  FDRE \sign_sr_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[20] ),
        .Q(\sign_sr_reg_n_0_[21] ),
        .R(clear));
  FDRE \sign_sr_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[21] ),
        .Q(\sign_sr_reg_n_0_[22] ),
        .R(clear));
  FDRE \sign_sr_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[22] ),
        .Q(\sign_sr_reg_n_0_[23] ),
        .R(clear));
  FDRE \sign_sr_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[23] ),
        .Q(\sign_sr_reg_n_0_[24] ),
        .R(clear));
  FDRE \sign_sr_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[24] ),
        .Q(\sign_sr_reg_n_0_[25] ),
        .R(clear));
  FDRE \sign_sr_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[25] ),
        .Q(\sign_sr_reg_n_0_[26] ),
        .R(clear));
  FDRE \sign_sr_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[26] ),
        .Q(\sign_sr_reg_n_0_[27] ),
        .R(clear));
  FDRE \sign_sr_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[27] ),
        .Q(\sign_sr_reg_n_0_[28] ),
        .R(clear));
  FDRE \sign_sr_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[28] ),
        .Q(\sign_sr_reg_n_0_[29] ),
        .R(clear));
  FDRE \sign_sr_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[1] ),
        .Q(\sign_sr_reg_n_0_[2] ),
        .R(clear));
  FDRE \sign_sr_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[29] ),
        .Q(\sign_sr_reg_n_0_[30] ),
        .R(clear));
  FDRE \sign_sr_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[30] ),
        .Q(\sign_sr_reg_n_0_[31] ),
        .R(clear));
  FDRE \sign_sr_reg[32] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[31] ),
        .Q(\sign_sr_reg_n_0_[32] ),
        .R(clear));
  FDRE \sign_sr_reg[33] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[32] ),
        .Q(p_2_out0),
        .R(clear));
  FDRE \sign_sr_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[2] ),
        .Q(\sign_sr_reg_n_0_[3] ),
        .R(clear));
  FDRE \sign_sr_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[3] ),
        .Q(\sign_sr_reg_n_0_[4] ),
        .R(clear));
  FDRE \sign_sr_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[4] ),
        .Q(\sign_sr_reg_n_0_[5] ),
        .R(clear));
  FDRE \sign_sr_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[5] ),
        .Q(\sign_sr_reg_n_0_[6] ),
        .R(clear));
  FDRE \sign_sr_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[6] ),
        .Q(\sign_sr_reg_n_0_[7] ),
        .R(clear));
  FDRE \sign_sr_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[7] ),
        .Q(\sign_sr_reg_n_0_[8] ),
        .R(clear));
  FDRE \sign_sr_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\sign_sr_reg_n_0_[8] ),
        .Q(\sign_sr_reg_n_0_[9] ),
        .R(clear));
  FDRE \sum_in_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(\adc_sum_reg_n_0_[0] ),
        .Q(sum_in[0]),
        .R(clear));
  FDRE \sum_in_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[9]),
        .Q(sum_in[10]),
        .R(clear));
  FDRE \sum_in_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[10]),
        .Q(sum_in[11]),
        .R(clear));
  FDRE \sum_in_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[11]),
        .Q(sum_in[12]),
        .R(clear));
  FDRE \sum_in_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[12]),
        .Q(sum_in[13]),
        .R(clear));
  FDRE \sum_in_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[13]),
        .Q(sum_in[14]),
        .R(clear));
  FDRE \sum_in_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[14]),
        .Q(sum_in[15]),
        .R(clear));
  FDRE \sum_in_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[15]),
        .Q(sum_in[16]),
        .R(clear));
  FDRE \sum_in_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(\adc_sum_reg_n_0_[17] ),
        .Q(sum_in[17]),
        .R(clear));
  FDRE \sum_in_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(\adc_sum_reg_n_0_[18] ),
        .Q(sum_in[18]),
        .R(clear));
  FDRE \sum_in_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(\adc_sum_reg_n_0_[19] ),
        .Q(sum_in[19]),
        .R(clear));
  FDRE \sum_in_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[0]),
        .Q(sum_in[1]),
        .R(clear));
  FDRE \sum_in_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(\adc_sum_reg_n_0_[20] ),
        .Q(sum_in[20]),
        .R(clear));
  FDRE \sum_in_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(\adc_sum_reg_n_0_[21] ),
        .Q(sum_in[21]),
        .R(clear));
  FDRE \sum_in_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(\adc_sum_reg_n_0_[22] ),
        .Q(sum_in[22]),
        .R(clear));
  FDRE \sum_in_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(\adc_sum_reg_n_0_[23] ),
        .Q(sum_in[23]),
        .R(clear));
  FDRE \sum_in_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(\adc_sum_reg_n_0_[24] ),
        .Q(sum_in[24]),
        .R(clear));
  FDRE \sum_in_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(\adc_sum_reg_n_0_[25] ),
        .Q(sum_in[25]),
        .R(clear));
  FDRE \sum_in_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(\adc_sum_reg_n_0_[26] ),
        .Q(sum_in[26]),
        .R(clear));
  FDRE \sum_in_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(\adc_sum_reg_n_0_[27] ),
        .Q(sum_in[27]),
        .R(clear));
  FDRE \sum_in_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(\adc_sum_reg_n_0_[28] ),
        .Q(sum_in[28]),
        .R(clear));
  FDRE \sum_in_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(\adc_sum_reg_n_0_[29] ),
        .Q(sum_in[29]),
        .R(clear));
  FDRE \sum_in_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[1]),
        .Q(sum_in[2]),
        .R(clear));
  FDRE \sum_in_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(\adc_sum_reg_n_0_[30] ),
        .Q(sum_in[30]),
        .R(clear));
  FDRE \sum_in_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[2]),
        .Q(sum_in[3]),
        .R(clear));
  FDRE \sum_in_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[3]),
        .Q(sum_in[4]),
        .R(clear));
  FDRE \sum_in_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[4]),
        .Q(sum_in[5]),
        .R(clear));
  FDRE \sum_in_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[5]),
        .Q(sum_in[6]),
        .R(clear));
  FDRE \sum_in_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[6]),
        .Q(sum_in[7]),
        .R(clear));
  FDRE \sum_in_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[7]),
        .Q(sum_in[8]),
        .R(clear));
  FDRE \sum_in_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got_i_1_n_0),
        .D(data2[8]),
        .Q(sum_in[9]),
        .R(clear));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[11]_i_2 
       (.I0(sign_curr),
        .I1(sum_in[11]),
        .O(\sum_uns[11]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[11]_i_3 
       (.I0(sign_curr),
        .I1(sum_in[10]),
        .O(\sum_uns[11]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[11]_i_4 
       (.I0(sign_curr),
        .I1(sum_in[9]),
        .O(\sum_uns[11]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[11]_i_5 
       (.I0(sign_curr),
        .I1(sum_in[8]),
        .O(\sum_uns[11]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[15]_i_2 
       (.I0(sign_curr),
        .I1(sum_in[15]),
        .O(\sum_uns[15]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[15]_i_3 
       (.I0(sign_curr),
        .I1(sum_in[14]),
        .O(\sum_uns[15]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[15]_i_4 
       (.I0(sign_curr),
        .I1(sum_in[13]),
        .O(\sum_uns[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[15]_i_5 
       (.I0(sign_curr),
        .I1(sum_in[12]),
        .O(\sum_uns[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[19]_i_2 
       (.I0(sign_curr),
        .I1(sum_in[19]),
        .O(\sum_uns[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[19]_i_3 
       (.I0(sign_curr),
        .I1(sum_in[18]),
        .O(\sum_uns[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[19]_i_4 
       (.I0(sign_curr),
        .I1(sum_in[17]),
        .O(\sum_uns[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[19]_i_5 
       (.I0(sign_curr),
        .I1(sum_in[16]),
        .O(\sum_uns[19]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[23]_i_2 
       (.I0(sign_curr),
        .I1(sum_in[23]),
        .O(\sum_uns[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[23]_i_3 
       (.I0(sign_curr),
        .I1(sum_in[22]),
        .O(\sum_uns[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[23]_i_4 
       (.I0(sign_curr),
        .I1(sum_in[21]),
        .O(\sum_uns[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[23]_i_5 
       (.I0(sign_curr),
        .I1(sum_in[20]),
        .O(\sum_uns[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[27]_i_2 
       (.I0(sign_curr),
        .I1(sum_in[27]),
        .O(\sum_uns[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[27]_i_3 
       (.I0(sign_curr),
        .I1(sum_in[26]),
        .O(\sum_uns[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[27]_i_4 
       (.I0(sign_curr),
        .I1(sum_in[25]),
        .O(\sum_uns[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[27]_i_5 
       (.I0(sign_curr),
        .I1(sum_in[24]),
        .O(\sum_uns[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[31]_i_2 
       (.I0(sign_curr),
        .I1(sum_in[30]),
        .O(\sum_uns[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[31]_i_3 
       (.I0(sign_curr),
        .I1(sum_in[29]),
        .O(\sum_uns[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[31]_i_4 
       (.I0(sign_curr),
        .I1(sum_in[28]),
        .O(\sum_uns[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[3]_i_2 
       (.I0(sign_curr),
        .I1(sum_in[3]),
        .O(\sum_uns[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[3]_i_3 
       (.I0(sign_curr),
        .I1(sum_in[2]),
        .O(\sum_uns[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[3]_i_4 
       (.I0(sign_curr),
        .I1(sum_in[1]),
        .O(\sum_uns[3]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_uns[3]_i_5 
       (.I0(sum_in[0]),
        .O(\sum_uns[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[7]_i_2 
       (.I0(sign_curr),
        .I1(sum_in[7]),
        .O(\sum_uns[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[7]_i_3 
       (.I0(sign_curr),
        .I1(sum_in[6]),
        .O(\sum_uns[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[7]_i_4 
       (.I0(sign_curr),
        .I1(sum_in[5]),
        .O(\sum_uns[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \sum_uns[7]_i_5 
       (.I0(sign_curr),
        .I1(sum_in[4]),
        .O(\sum_uns[7]_i_5_n_0 ));
  FDRE \sum_uns_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[3]_i_1_n_7 ),
        .Q(sum_uns[0]),
        .R(clear));
  FDRE \sum_uns_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[11]_i_1_n_5 ),
        .Q(sum_uns[10]),
        .R(clear));
  FDRE \sum_uns_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[11]_i_1_n_4 ),
        .Q(sum_uns[11]),
        .R(clear));
  CARRY4 \sum_uns_reg[11]_i_1 
       (.CI(\sum_uns_reg[7]_i_1_n_0 ),
        .CO({\sum_uns_reg[11]_i_1_n_0 ,\sum_uns_reg[11]_i_1_n_1 ,\sum_uns_reg[11]_i_1_n_2 ,\sum_uns_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sum_uns_reg[11]_i_1_n_4 ,\sum_uns_reg[11]_i_1_n_5 ,\sum_uns_reg[11]_i_1_n_6 ,\sum_uns_reg[11]_i_1_n_7 }),
        .S({\sum_uns[11]_i_2_n_0 ,\sum_uns[11]_i_3_n_0 ,\sum_uns[11]_i_4_n_0 ,\sum_uns[11]_i_5_n_0 }));
  FDRE \sum_uns_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[15]_i_1_n_7 ),
        .Q(sum_uns[12]),
        .R(clear));
  FDRE \sum_uns_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[15]_i_1_n_6 ),
        .Q(sum_uns[13]),
        .R(clear));
  FDRE \sum_uns_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[15]_i_1_n_5 ),
        .Q(sum_uns[14]),
        .R(clear));
  FDRE \sum_uns_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[15]_i_1_n_4 ),
        .Q(sum_uns[15]),
        .R(clear));
  CARRY4 \sum_uns_reg[15]_i_1 
       (.CI(\sum_uns_reg[11]_i_1_n_0 ),
        .CO({\sum_uns_reg[15]_i_1_n_0 ,\sum_uns_reg[15]_i_1_n_1 ,\sum_uns_reg[15]_i_1_n_2 ,\sum_uns_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sum_uns_reg[15]_i_1_n_4 ,\sum_uns_reg[15]_i_1_n_5 ,\sum_uns_reg[15]_i_1_n_6 ,\sum_uns_reg[15]_i_1_n_7 }),
        .S({\sum_uns[15]_i_2_n_0 ,\sum_uns[15]_i_3_n_0 ,\sum_uns[15]_i_4_n_0 ,\sum_uns[15]_i_5_n_0 }));
  FDRE \sum_uns_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[19]_i_1_n_7 ),
        .Q(sum_uns[16]),
        .R(clear));
  FDRE \sum_uns_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[19]_i_1_n_6 ),
        .Q(sum_uns[17]),
        .R(clear));
  FDRE \sum_uns_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[19]_i_1_n_5 ),
        .Q(sum_uns[18]),
        .R(clear));
  FDRE \sum_uns_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[19]_i_1_n_4 ),
        .Q(sum_uns[19]),
        .R(clear));
  CARRY4 \sum_uns_reg[19]_i_1 
       (.CI(\sum_uns_reg[15]_i_1_n_0 ),
        .CO({\sum_uns_reg[19]_i_1_n_0 ,\sum_uns_reg[19]_i_1_n_1 ,\sum_uns_reg[19]_i_1_n_2 ,\sum_uns_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sum_uns_reg[19]_i_1_n_4 ,\sum_uns_reg[19]_i_1_n_5 ,\sum_uns_reg[19]_i_1_n_6 ,\sum_uns_reg[19]_i_1_n_7 }),
        .S({\sum_uns[19]_i_2_n_0 ,\sum_uns[19]_i_3_n_0 ,\sum_uns[19]_i_4_n_0 ,\sum_uns[19]_i_5_n_0 }));
  FDRE \sum_uns_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[3]_i_1_n_6 ),
        .Q(sum_uns[1]),
        .R(clear));
  FDRE \sum_uns_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[23]_i_1_n_7 ),
        .Q(sum_uns[20]),
        .R(clear));
  FDRE \sum_uns_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[23]_i_1_n_6 ),
        .Q(sum_uns[21]),
        .R(clear));
  FDRE \sum_uns_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[23]_i_1_n_5 ),
        .Q(sum_uns[22]),
        .R(clear));
  FDRE \sum_uns_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[23]_i_1_n_4 ),
        .Q(sum_uns[23]),
        .R(clear));
  CARRY4 \sum_uns_reg[23]_i_1 
       (.CI(\sum_uns_reg[19]_i_1_n_0 ),
        .CO({\sum_uns_reg[23]_i_1_n_0 ,\sum_uns_reg[23]_i_1_n_1 ,\sum_uns_reg[23]_i_1_n_2 ,\sum_uns_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sum_uns_reg[23]_i_1_n_4 ,\sum_uns_reg[23]_i_1_n_5 ,\sum_uns_reg[23]_i_1_n_6 ,\sum_uns_reg[23]_i_1_n_7 }),
        .S({\sum_uns[23]_i_2_n_0 ,\sum_uns[23]_i_3_n_0 ,\sum_uns[23]_i_4_n_0 ,\sum_uns[23]_i_5_n_0 }));
  FDRE \sum_uns_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[27]_i_1_n_7 ),
        .Q(sum_uns[24]),
        .R(clear));
  FDRE \sum_uns_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[27]_i_1_n_6 ),
        .Q(sum_uns[25]),
        .R(clear));
  FDRE \sum_uns_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[27]_i_1_n_5 ),
        .Q(sum_uns[26]),
        .R(clear));
  FDRE \sum_uns_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[27]_i_1_n_4 ),
        .Q(sum_uns[27]),
        .R(clear));
  CARRY4 \sum_uns_reg[27]_i_1 
       (.CI(\sum_uns_reg[23]_i_1_n_0 ),
        .CO({\sum_uns_reg[27]_i_1_n_0 ,\sum_uns_reg[27]_i_1_n_1 ,\sum_uns_reg[27]_i_1_n_2 ,\sum_uns_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sum_uns_reg[27]_i_1_n_4 ,\sum_uns_reg[27]_i_1_n_5 ,\sum_uns_reg[27]_i_1_n_6 ,\sum_uns_reg[27]_i_1_n_7 }),
        .S({\sum_uns[27]_i_2_n_0 ,\sum_uns[27]_i_3_n_0 ,\sum_uns[27]_i_4_n_0 ,\sum_uns[27]_i_5_n_0 }));
  FDRE \sum_uns_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[31]_i_1_n_7 ),
        .Q(sum_uns[28]),
        .R(clear));
  FDRE \sum_uns_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[31]_i_1_n_6 ),
        .Q(sum_uns[29]),
        .R(clear));
  FDRE \sum_uns_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[3]_i_1_n_5 ),
        .Q(sum_uns[2]),
        .R(clear));
  FDRE \sum_uns_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[31]_i_1_n_5 ),
        .Q(sum_uns[30]),
        .R(clear));
  FDRE \sum_uns_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[31]_i_1_n_0 ),
        .Q(sum_uns[31]),
        .R(clear));
  CARRY4 \sum_uns_reg[31]_i_1 
       (.CI(\sum_uns_reg[27]_i_1_n_0 ),
        .CO({\sum_uns_reg[31]_i_1_n_0 ,\NLW_sum_uns_reg[31]_i_1_CO_UNCONNECTED [2],\sum_uns_reg[31]_i_1_n_2 ,\sum_uns_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_sum_uns_reg[31]_i_1_O_UNCONNECTED [3],\sum_uns_reg[31]_i_1_n_5 ,\sum_uns_reg[31]_i_1_n_6 ,\sum_uns_reg[31]_i_1_n_7 }),
        .S({1'b1,\sum_uns[31]_i_2_n_0 ,\sum_uns[31]_i_3_n_0 ,\sum_uns[31]_i_4_n_0 }));
  FDRE \sum_uns_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[3]_i_1_n_4 ),
        .Q(sum_uns[3]),
        .R(clear));
  CARRY4 \sum_uns_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\sum_uns_reg[3]_i_1_n_0 ,\sum_uns_reg[3]_i_1_n_1 ,\sum_uns_reg[3]_i_1_n_2 ,\sum_uns_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,sign_curr}),
        .O({\sum_uns_reg[3]_i_1_n_4 ,\sum_uns_reg[3]_i_1_n_5 ,\sum_uns_reg[3]_i_1_n_6 ,\sum_uns_reg[3]_i_1_n_7 }),
        .S({\sum_uns[3]_i_2_n_0 ,\sum_uns[3]_i_3_n_0 ,\sum_uns[3]_i_4_n_0 ,\sum_uns[3]_i_5_n_0 }));
  FDRE \sum_uns_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[7]_i_1_n_7 ),
        .Q(sum_uns[4]),
        .R(clear));
  FDRE \sum_uns_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[7]_i_1_n_6 ),
        .Q(sum_uns[5]),
        .R(clear));
  FDRE \sum_uns_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[7]_i_1_n_5 ),
        .Q(sum_uns[6]),
        .R(clear));
  FDRE \sum_uns_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[7]_i_1_n_4 ),
        .Q(sum_uns[7]),
        .R(clear));
  CARRY4 \sum_uns_reg[7]_i_1 
       (.CI(\sum_uns_reg[3]_i_1_n_0 ),
        .CO({\sum_uns_reg[7]_i_1_n_0 ,\sum_uns_reg[7]_i_1_n_1 ,\sum_uns_reg[7]_i_1_n_2 ,\sum_uns_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sum_uns_reg[7]_i_1_n_4 ,\sum_uns_reg[7]_i_1_n_5 ,\sum_uns_reg[7]_i_1_n_6 ,\sum_uns_reg[7]_i_1_n_7 }),
        .S({\sum_uns[7]_i_2_n_0 ,\sum_uns[7]_i_3_n_0 ,\sum_uns[7]_i_4_n_0 ,\sum_uns[7]_i_5_n_0 }));
  FDRE \sum_uns_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[11]_i_1_n_7 ),
        .Q(sum_uns[8]),
        .R(clear));
  FDRE \sum_uns_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(dat_got),
        .D(\sum_uns_reg[11]_i_1_n_6 ),
        .Q(sum_uns[9]),
        .R(clear));
  LUT4 #(
    .INIT(16'hAAEA)) 
    trig_detect_i_1
       (.I0(trig_detect_reg),
        .I1(dec_tvalid),
        .I2(\U_osc_trigger/trig_detect1 ),
        .I3(trig_detect_reg_0),
        .O(m_axis_tvalid_reg_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_10
       (.I0(\m_axis_tdata_reg[15]_0 [11]),
        .I1(trig_detect_reg_i_3_0[11]),
        .I2(\m_axis_tdata_reg[15]_0 [10]),
        .I3(trig_detect_reg_i_3_0[10]),
        .O(trig_detect_i_10_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_11
       (.I0(\m_axis_tdata_reg[15]_0 [9]),
        .I1(trig_detect_reg_i_3_0[9]),
        .I2(\m_axis_tdata_reg[15]_0 [8]),
        .I3(trig_detect_reg_i_3_0[8]),
        .O(trig_detect_i_11_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_12
       (.I0(\m_axis_tdata_reg[15]_0 [15]),
        .I1(trig_detect_reg_i_3_0[15]),
        .I2(trig_detect_reg_i_3_0[14]),
        .I3(\m_axis_tdata_reg[15]_0 [14]),
        .O(trig_detect_i_12_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_13
       (.I0(trig_detect_reg_i_3_0[13]),
        .I1(\m_axis_tdata_reg[15]_0 [13]),
        .I2(trig_detect_reg_i_3_0[12]),
        .I3(\m_axis_tdata_reg[15]_0 [12]),
        .O(trig_detect_i_13_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_14
       (.I0(trig_detect_reg_i_3_0[11]),
        .I1(\m_axis_tdata_reg[15]_0 [11]),
        .I2(trig_detect_reg_i_3_0[10]),
        .I3(\m_axis_tdata_reg[15]_0 [10]),
        .O(trig_detect_i_14_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_15
       (.I0(trig_detect_reg_i_3_0[9]),
        .I1(\m_axis_tdata_reg[15]_0 [9]),
        .I2(trig_detect_reg_i_3_0[8]),
        .I3(\m_axis_tdata_reg[15]_0 [8]),
        .O(trig_detect_i_15_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_17
       (.I0(trig_detect_reg_i_3_0[15]),
        .I1(\m_axis_tdata_reg[15]_0 [15]),
        .I2(\m_axis_tdata_reg[15]_0 [14]),
        .I3(trig_detect_reg_i_3_0[14]),
        .O(trig_detect_i_17_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_18
       (.I0(\m_axis_tdata_reg[15]_0 [13]),
        .I1(trig_detect_reg_i_3_0[13]),
        .I2(\m_axis_tdata_reg[15]_0 [12]),
        .I3(trig_detect_reg_i_3_0[12]),
        .O(trig_detect_i_18_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_19
       (.I0(\m_axis_tdata_reg[15]_0 [11]),
        .I1(trig_detect_reg_i_3_0[11]),
        .I2(\m_axis_tdata_reg[15]_0 [10]),
        .I3(trig_detect_reg_i_3_0[10]),
        .O(trig_detect_i_19_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_20
       (.I0(\m_axis_tdata_reg[15]_0 [9]),
        .I1(trig_detect_reg_i_3_0[9]),
        .I2(\m_axis_tdata_reg[15]_0 [8]),
        .I3(trig_detect_reg_i_3_0[8]),
        .O(trig_detect_i_20_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_21
       (.I0(\m_axis_tdata_reg[15]_0 [15]),
        .I1(trig_detect_reg_i_3_0[15]),
        .I2(trig_detect_reg_i_3_0[14]),
        .I3(\m_axis_tdata_reg[15]_0 [14]),
        .O(trig_detect_i_21_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_22
       (.I0(trig_detect_reg_i_3_0[13]),
        .I1(\m_axis_tdata_reg[15]_0 [13]),
        .I2(trig_detect_reg_i_3_0[12]),
        .I3(\m_axis_tdata_reg[15]_0 [12]),
        .O(trig_detect_i_22_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_23
       (.I0(trig_detect_reg_i_3_0[11]),
        .I1(\m_axis_tdata_reg[15]_0 [11]),
        .I2(trig_detect_reg_i_3_0[10]),
        .I3(\m_axis_tdata_reg[15]_0 [10]),
        .O(trig_detect_i_23_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_24
       (.I0(trig_detect_reg_i_3_0[9]),
        .I1(\m_axis_tdata_reg[15]_0 [9]),
        .I2(trig_detect_reg_i_3_0[8]),
        .I3(\m_axis_tdata_reg[15]_0 [8]),
        .O(trig_detect_i_24_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_26
       (.I0(\m_axis_tdata_reg[15]_0 [15]),
        .I1(trig_detect_reg_i_5_0[15]),
        .I2(trig_detect_reg_i_5_0[14]),
        .I3(\m_axis_tdata_reg[15]_0 [14]),
        .O(trig_detect_i_26_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_27
       (.I0(\m_axis_tdata_reg[15]_0 [13]),
        .I1(trig_detect_reg_i_5_0[13]),
        .I2(trig_detect_reg_i_5_0[12]),
        .I3(\m_axis_tdata_reg[15]_0 [12]),
        .O(trig_detect_i_27_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_28
       (.I0(\m_axis_tdata_reg[15]_0 [11]),
        .I1(trig_detect_reg_i_5_0[11]),
        .I2(trig_detect_reg_i_5_0[10]),
        .I3(\m_axis_tdata_reg[15]_0 [10]),
        .O(trig_detect_i_28_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_29
       (.I0(\m_axis_tdata_reg[15]_0 [9]),
        .I1(trig_detect_reg_i_5_0[9]),
        .I2(trig_detect_reg_i_5_0[8]),
        .I3(\m_axis_tdata_reg[15]_0 [8]),
        .O(trig_detect_i_29_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_30
       (.I0(trig_detect_reg_i_5_0[15]),
        .I1(\m_axis_tdata_reg[15]_0 [15]),
        .I2(trig_detect_reg_i_5_0[14]),
        .I3(\m_axis_tdata_reg[15]_0 [14]),
        .O(trig_detect_i_30_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_31
       (.I0(trig_detect_reg_i_5_0[13]),
        .I1(\m_axis_tdata_reg[15]_0 [13]),
        .I2(trig_detect_reg_i_5_0[12]),
        .I3(\m_axis_tdata_reg[15]_0 [12]),
        .O(trig_detect_i_31_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_32
       (.I0(trig_detect_reg_i_5_0[11]),
        .I1(\m_axis_tdata_reg[15]_0 [11]),
        .I2(trig_detect_reg_i_5_0[10]),
        .I3(\m_axis_tdata_reg[15]_0 [10]),
        .O(trig_detect_i_32_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_33
       (.I0(trig_detect_reg_i_5_0[9]),
        .I1(\m_axis_tdata_reg[15]_0 [9]),
        .I2(trig_detect_reg_i_5_0[8]),
        .I3(\m_axis_tdata_reg[15]_0 [8]),
        .O(trig_detect_i_33_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_35
       (.I0(\m_axis_tdata_reg[15]_0 [15]),
        .I1(trig_detect_reg_i_5_0[15]),
        .I2(trig_detect_reg_i_5_0[14]),
        .I3(\m_axis_tdata_reg[15]_0 [14]),
        .O(trig_detect_i_35_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_36
       (.I0(\m_axis_tdata_reg[15]_0 [13]),
        .I1(trig_detect_reg_i_5_0[13]),
        .I2(trig_detect_reg_i_5_0[12]),
        .I3(\m_axis_tdata_reg[15]_0 [12]),
        .O(trig_detect_i_36_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_37
       (.I0(\m_axis_tdata_reg[15]_0 [11]),
        .I1(trig_detect_reg_i_5_0[11]),
        .I2(trig_detect_reg_i_5_0[10]),
        .I3(\m_axis_tdata_reg[15]_0 [10]),
        .O(trig_detect_i_37_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_38
       (.I0(\m_axis_tdata_reg[15]_0 [9]),
        .I1(trig_detect_reg_i_5_0[9]),
        .I2(trig_detect_reg_i_5_0[8]),
        .I3(\m_axis_tdata_reg[15]_0 [8]),
        .O(trig_detect_i_38_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_39
       (.I0(trig_detect_reg_i_5_0[15]),
        .I1(\m_axis_tdata_reg[15]_0 [15]),
        .I2(trig_detect_reg_i_5_0[14]),
        .I3(\m_axis_tdata_reg[15]_0 [14]),
        .O(trig_detect_i_39_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_40
       (.I0(trig_detect_reg_i_5_0[13]),
        .I1(\m_axis_tdata_reg[15]_0 [13]),
        .I2(trig_detect_reg_i_5_0[12]),
        .I3(\m_axis_tdata_reg[15]_0 [12]),
        .O(trig_detect_i_40_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_41
       (.I0(trig_detect_reg_i_5_0[11]),
        .I1(\m_axis_tdata_reg[15]_0 [11]),
        .I2(trig_detect_reg_i_5_0[10]),
        .I3(\m_axis_tdata_reg[15]_0 [10]),
        .O(trig_detect_i_41_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_42
       (.I0(trig_detect_reg_i_5_0[9]),
        .I1(\m_axis_tdata_reg[15]_0 [9]),
        .I2(trig_detect_reg_i_5_0[8]),
        .I3(\m_axis_tdata_reg[15]_0 [8]),
        .O(trig_detect_i_42_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_43
       (.I0(\m_axis_tdata_reg[15]_0 [7]),
        .I1(trig_detect_reg_i_3_0[7]),
        .I2(\m_axis_tdata_reg[15]_0 [6]),
        .I3(trig_detect_reg_i_3_0[6]),
        .O(trig_detect_i_43_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_44
       (.I0(\m_axis_tdata_reg[15]_0 [5]),
        .I1(trig_detect_reg_i_3_0[5]),
        .I2(\m_axis_tdata_reg[15]_0 [4]),
        .I3(trig_detect_reg_i_3_0[4]),
        .O(trig_detect_i_44_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_45
       (.I0(\m_axis_tdata_reg[15]_0 [3]),
        .I1(trig_detect_reg_i_3_0[3]),
        .I2(\m_axis_tdata_reg[15]_0 [2]),
        .I3(trig_detect_reg_i_3_0[2]),
        .O(trig_detect_i_45_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_46
       (.I0(\m_axis_tdata_reg[15]_0 [1]),
        .I1(trig_detect_reg_i_3_0[1]),
        .I2(\m_axis_tdata_reg[15]_0 [0]),
        .I3(trig_detect_reg_i_3_0[0]),
        .O(trig_detect_i_46_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_47
       (.I0(trig_detect_reg_i_3_0[7]),
        .I1(\m_axis_tdata_reg[15]_0 [7]),
        .I2(trig_detect_reg_i_3_0[6]),
        .I3(\m_axis_tdata_reg[15]_0 [6]),
        .O(trig_detect_i_47_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_48
       (.I0(trig_detect_reg_i_3_0[5]),
        .I1(\m_axis_tdata_reg[15]_0 [5]),
        .I2(trig_detect_reg_i_3_0[4]),
        .I3(\m_axis_tdata_reg[15]_0 [4]),
        .O(trig_detect_i_48_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_49
       (.I0(trig_detect_reg_i_3_0[3]),
        .I1(\m_axis_tdata_reg[15]_0 [3]),
        .I2(trig_detect_reg_i_3_0[2]),
        .I3(\m_axis_tdata_reg[15]_0 [2]),
        .O(trig_detect_i_49_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_50
       (.I0(trig_detect_reg_i_3_0[1]),
        .I1(\m_axis_tdata_reg[15]_0 [1]),
        .I2(trig_detect_reg_i_3_0[0]),
        .I3(\m_axis_tdata_reg[15]_0 [0]),
        .O(trig_detect_i_50_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_51
       (.I0(\m_axis_tdata_reg[15]_0 [7]),
        .I1(trig_detect_reg_i_3_0[7]),
        .I2(\m_axis_tdata_reg[15]_0 [6]),
        .I3(trig_detect_reg_i_3_0[6]),
        .O(trig_detect_i_51_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_52
       (.I0(\m_axis_tdata_reg[15]_0 [5]),
        .I1(trig_detect_reg_i_3_0[5]),
        .I2(\m_axis_tdata_reg[15]_0 [4]),
        .I3(trig_detect_reg_i_3_0[4]),
        .O(trig_detect_i_52_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_53
       (.I0(\m_axis_tdata_reg[15]_0 [3]),
        .I1(trig_detect_reg_i_3_0[3]),
        .I2(\m_axis_tdata_reg[15]_0 [2]),
        .I3(trig_detect_reg_i_3_0[2]),
        .O(trig_detect_i_53_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_54
       (.I0(\m_axis_tdata_reg[15]_0 [1]),
        .I1(trig_detect_reg_i_3_0[1]),
        .I2(\m_axis_tdata_reg[15]_0 [0]),
        .I3(trig_detect_reg_i_3_0[0]),
        .O(trig_detect_i_54_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_55
       (.I0(trig_detect_reg_i_3_0[7]),
        .I1(\m_axis_tdata_reg[15]_0 [7]),
        .I2(trig_detect_reg_i_3_0[6]),
        .I3(\m_axis_tdata_reg[15]_0 [6]),
        .O(trig_detect_i_55_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_56
       (.I0(trig_detect_reg_i_3_0[5]),
        .I1(\m_axis_tdata_reg[15]_0 [5]),
        .I2(trig_detect_reg_i_3_0[4]),
        .I3(\m_axis_tdata_reg[15]_0 [4]),
        .O(trig_detect_i_56_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_57
       (.I0(trig_detect_reg_i_3_0[3]),
        .I1(\m_axis_tdata_reg[15]_0 [3]),
        .I2(trig_detect_reg_i_3_0[2]),
        .I3(\m_axis_tdata_reg[15]_0 [2]),
        .O(trig_detect_i_57_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_58
       (.I0(trig_detect_reg_i_3_0[1]),
        .I1(\m_axis_tdata_reg[15]_0 [1]),
        .I2(trig_detect_reg_i_3_0[0]),
        .I3(\m_axis_tdata_reg[15]_0 [0]),
        .O(trig_detect_i_58_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_59
       (.I0(\m_axis_tdata_reg[15]_0 [7]),
        .I1(trig_detect_reg_i_5_0[7]),
        .I2(trig_detect_reg_i_5_0[6]),
        .I3(\m_axis_tdata_reg[15]_0 [6]),
        .O(trig_detect_i_59_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_60
       (.I0(\m_axis_tdata_reg[15]_0 [5]),
        .I1(trig_detect_reg_i_5_0[5]),
        .I2(trig_detect_reg_i_5_0[4]),
        .I3(\m_axis_tdata_reg[15]_0 [4]),
        .O(trig_detect_i_60_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_61
       (.I0(\m_axis_tdata_reg[15]_0 [3]),
        .I1(trig_detect_reg_i_5_0[3]),
        .I2(trig_detect_reg_i_5_0[2]),
        .I3(\m_axis_tdata_reg[15]_0 [2]),
        .O(trig_detect_i_61_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_62
       (.I0(trig_detect_reg_i_5_0[1]),
        .I1(\m_axis_tdata_reg[15]_0 [1]),
        .I2(trig_detect_reg_i_5_0[0]),
        .I3(\m_axis_tdata_reg[15]_0 [0]),
        .O(trig_detect_i_62_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_63
       (.I0(trig_detect_reg_i_5_0[7]),
        .I1(\m_axis_tdata_reg[15]_0 [7]),
        .I2(trig_detect_reg_i_5_0[6]),
        .I3(\m_axis_tdata_reg[15]_0 [6]),
        .O(trig_detect_i_63_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_64
       (.I0(trig_detect_reg_i_5_0[5]),
        .I1(\m_axis_tdata_reg[15]_0 [5]),
        .I2(trig_detect_reg_i_5_0[4]),
        .I3(\m_axis_tdata_reg[15]_0 [4]),
        .O(trig_detect_i_64_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_65
       (.I0(trig_detect_reg_i_5_0[3]),
        .I1(\m_axis_tdata_reg[15]_0 [3]),
        .I2(trig_detect_reg_i_5_0[2]),
        .I3(\m_axis_tdata_reg[15]_0 [2]),
        .O(trig_detect_i_65_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_66
       (.I0(\m_axis_tdata_reg[15]_0 [1]),
        .I1(trig_detect_reg_i_5_0[1]),
        .I2(\m_axis_tdata_reg[15]_0 [0]),
        .I3(trig_detect_reg_i_5_0[0]),
        .O(trig_detect_i_66_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_67
       (.I0(\m_axis_tdata_reg[15]_0 [7]),
        .I1(trig_detect_reg_i_5_0[7]),
        .I2(trig_detect_reg_i_5_0[6]),
        .I3(\m_axis_tdata_reg[15]_0 [6]),
        .O(trig_detect_i_67_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_68
       (.I0(\m_axis_tdata_reg[15]_0 [5]),
        .I1(trig_detect_reg_i_5_0[5]),
        .I2(trig_detect_reg_i_5_0[4]),
        .I3(\m_axis_tdata_reg[15]_0 [4]),
        .O(trig_detect_i_68_n_0));
  LUT4 #(
    .INIT(16'h44D4)) 
    trig_detect_i_69
       (.I0(\m_axis_tdata_reg[15]_0 [3]),
        .I1(trig_detect_reg_i_5_0[3]),
        .I2(trig_detect_reg_i_5_0[2]),
        .I3(\m_axis_tdata_reg[15]_0 [2]),
        .O(trig_detect_i_69_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_70
       (.I0(trig_detect_reg_i_5_0[1]),
        .I1(\m_axis_tdata_reg[15]_0 [1]),
        .I2(trig_detect_reg_i_5_0[0]),
        .I3(\m_axis_tdata_reg[15]_0 [0]),
        .O(trig_detect_i_70_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_71
       (.I0(trig_detect_reg_i_5_0[7]),
        .I1(\m_axis_tdata_reg[15]_0 [7]),
        .I2(trig_detect_reg_i_5_0[6]),
        .I3(\m_axis_tdata_reg[15]_0 [6]),
        .O(trig_detect_i_71_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_72
       (.I0(trig_detect_reg_i_5_0[5]),
        .I1(\m_axis_tdata_reg[15]_0 [5]),
        .I2(trig_detect_reg_i_5_0[4]),
        .I3(\m_axis_tdata_reg[15]_0 [4]),
        .O(trig_detect_i_72_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_73
       (.I0(trig_detect_reg_i_5_0[3]),
        .I1(\m_axis_tdata_reg[15]_0 [3]),
        .I2(trig_detect_reg_i_5_0[2]),
        .I3(\m_axis_tdata_reg[15]_0 [2]),
        .O(trig_detect_i_73_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    trig_detect_i_74
       (.I0(\m_axis_tdata_reg[15]_0 [1]),
        .I1(trig_detect_reg_i_5_0[1]),
        .I2(\m_axis_tdata_reg[15]_0 [0]),
        .I3(trig_detect_reg_i_5_0[0]),
        .O(trig_detect_i_74_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_8
       (.I0(trig_detect_reg_i_3_0[15]),
        .I1(\m_axis_tdata_reg[15]_0 [15]),
        .I2(\m_axis_tdata_reg[15]_0 [14]),
        .I3(trig_detect_reg_i_3_0[14]),
        .O(trig_detect_i_8_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    trig_detect_i_9
       (.I0(\m_axis_tdata_reg[15]_0 [13]),
        .I1(trig_detect_reg_i_3_0[13]),
        .I2(\m_axis_tdata_reg[15]_0 [12]),
        .I3(trig_detect_reg_i_3_0[12]),
        .O(trig_detect_i_9_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_16
       (.CI(1'b0),
        .CO({trig_detect_reg_i_16_n_0,trig_detect_reg_i_16_n_1,trig_detect_reg_i_16_n_2,trig_detect_reg_i_16_n_3}),
        .CYINIT(1'b0),
        .DI({trig_detect_i_51_n_0,trig_detect_i_52_n_0,trig_detect_i_53_n_0,trig_detect_i_54_n_0}),
        .O(NLW_trig_detect_reg_i_16_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_55_n_0,trig_detect_i_56_n_0,trig_detect_i_57_n_0,trig_detect_i_58_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_25
       (.CI(1'b0),
        .CO({trig_detect_reg_i_25_n_0,trig_detect_reg_i_25_n_1,trig_detect_reg_i_25_n_2,trig_detect_reg_i_25_n_3}),
        .CYINIT(1'b1),
        .DI({trig_detect_i_59_n_0,trig_detect_i_60_n_0,trig_detect_i_61_n_0,trig_detect_i_62_n_0}),
        .O(NLW_trig_detect_reg_i_25_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_63_n_0,trig_detect_i_64_n_0,trig_detect_i_65_n_0,trig_detect_i_66_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_3
       (.CI(trig_detect_reg_i_7_n_0),
        .CO({\U_osc_trigger/trig_detect1 ,trig_detect_reg_i_3_n_1,trig_detect_reg_i_3_n_2,trig_detect_reg_i_3_n_3}),
        .CYINIT(1'b0),
        .DI({trig_detect_i_8_n_0,trig_detect_i_9_n_0,trig_detect_i_10_n_0,trig_detect_i_11_n_0}),
        .O(NLW_trig_detect_reg_i_3_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_12_n_0,trig_detect_i_13_n_0,trig_detect_i_14_n_0,trig_detect_i_15_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_34
       (.CI(1'b0),
        .CO({trig_detect_reg_i_34_n_0,trig_detect_reg_i_34_n_1,trig_detect_reg_i_34_n_2,trig_detect_reg_i_34_n_3}),
        .CYINIT(1'b0),
        .DI({trig_detect_i_67_n_0,trig_detect_i_68_n_0,trig_detect_i_69_n_0,trig_detect_i_70_n_0}),
        .O(NLW_trig_detect_reg_i_34_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_71_n_0,trig_detect_i_72_n_0,trig_detect_i_73_n_0,trig_detect_i_74_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_4
       (.CI(trig_detect_reg_i_16_n_0),
        .CO({\cfg_trig_high_level_reg[15] ,trig_detect_reg_i_4_n_1,trig_detect_reg_i_4_n_2,trig_detect_reg_i_4_n_3}),
        .CYINIT(1'b0),
        .DI({trig_detect_i_17_n_0,trig_detect_i_18_n_0,trig_detect_i_19_n_0,trig_detect_i_20_n_0}),
        .O(NLW_trig_detect_reg_i_4_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_21_n_0,trig_detect_i_22_n_0,trig_detect_i_23_n_0,trig_detect_i_24_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_5
       (.CI(trig_detect_reg_i_25_n_0),
        .CO({\m_axis_tdata_reg[15]_1 ,trig_detect_reg_i_5_n_1,trig_detect_reg_i_5_n_2,trig_detect_reg_i_5_n_3}),
        .CYINIT(1'b0),
        .DI({trig_detect_i_26_n_0,trig_detect_i_27_n_0,trig_detect_i_28_n_0,trig_detect_i_29_n_0}),
        .O(NLW_trig_detect_reg_i_5_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_30_n_0,trig_detect_i_31_n_0,trig_detect_i_32_n_0,trig_detect_i_33_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_6
       (.CI(trig_detect_reg_i_34_n_0),
        .CO({\m_axis_tdata_reg[15]_2 ,trig_detect_reg_i_6_n_1,trig_detect_reg_i_6_n_2,trig_detect_reg_i_6_n_3}),
        .CYINIT(1'b0),
        .DI({trig_detect_i_35_n_0,trig_detect_i_36_n_0,trig_detect_i_37_n_0,trig_detect_i_38_n_0}),
        .O(NLW_trig_detect_reg_i_6_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_39_n_0,trig_detect_i_40_n_0,trig_detect_i_41_n_0,trig_detect_i_42_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 trig_detect_reg_i_7
       (.CI(1'b0),
        .CO({trig_detect_reg_i_7_n_0,trig_detect_reg_i_7_n_1,trig_detect_reg_i_7_n_2,trig_detect_reg_i_7_n_3}),
        .CYINIT(1'b1),
        .DI({trig_detect_i_43_n_0,trig_detect_i_44_n_0,trig_detect_i_45_n_0,trig_detect_i_46_n_0}),
        .O(NLW_trig_detect_reg_i_7_O_UNCONNECTED[3:0]),
        .S({trig_detect_i_47_n_0,trig_detect_i_48_n_0,trig_detect_i_49_n_0,trig_detect_i_50_n_0}));
endmodule

(* ORIG_REF_NAME = "osc_filter" *) 
module system_rp_oscilloscope_0_osc_filter
   (E,
    \s_axi_reg_araddr[4] ,
    \s_axi_reg_araddr[4]_0 ,
    D,
    \s_axi_reg_araddr[5] ,
    \s_axi_reg_araddr[5]_0 ,
    \s_axi_reg_araddr[3] ,
    bypass_reg_reg_0,
    m_axi_osc2_aclk,
    clear,
    bram_wrdata_a,
    Q,
    kk_mult_0,
    m_axi_osc2_aresetn,
    bb_mult_0,
    bram_addr_a);
  output [0:0]E;
  output [0:0]\s_axi_reg_araddr[4] ;
  output [0:0]\s_axi_reg_araddr[4]_0 ;
  output [15:0]D;
  output \s_axi_reg_araddr[5] ;
  output \s_axi_reg_araddr[5]_0 ;
  output \s_axi_reg_araddr[3] ;
  input bypass_reg_reg_0;
  input m_axi_osc2_aclk;
  input clear;
  input [24:0]bram_wrdata_a;
  input [13:0]Q;
  input [24:0]kk_mult_0;
  input m_axi_osc2_aresetn;
  input bb_mult_0;
  input [7:0]bram_addr_a;

  wire [24:0]A;
  wire [16:0]B;
  wire [15:0]D;
  wire [0:0]E;
  wire [13:0]Q;
  wire aa_mult_n_100;
  wire aa_mult_n_101;
  wire aa_mult_n_102;
  wire aa_mult_n_103;
  wire aa_mult_n_104;
  wire aa_mult_n_105;
  wire aa_mult_n_63;
  wire aa_mult_n_64;
  wire aa_mult_n_65;
  wire aa_mult_n_66;
  wire aa_mult_n_67;
  wire aa_mult_n_68;
  wire aa_mult_n_69;
  wire aa_mult_n_70;
  wire aa_mult_n_71;
  wire aa_mult_n_72;
  wire aa_mult_n_73;
  wire aa_mult_n_74;
  wire aa_mult_n_75;
  wire aa_mult_n_76;
  wire aa_mult_n_77;
  wire aa_mult_n_78;
  wire aa_mult_n_79;
  wire aa_mult_n_80;
  wire aa_mult_n_81;
  wire aa_mult_n_82;
  wire aa_mult_n_83;
  wire aa_mult_n_84;
  wire aa_mult_n_85;
  wire aa_mult_n_86;
  wire aa_mult_n_87;
  wire aa_mult_n_88;
  wire aa_mult_n_89;
  wire aa_mult_n_90;
  wire aa_mult_n_91;
  wire aa_mult_n_92;
  wire aa_mult_n_93;
  wire aa_mult_n_94;
  wire aa_mult_n_95;
  wire aa_mult_n_96;
  wire aa_mult_n_97;
  wire aa_mult_n_98;
  wire aa_mult_n_99;
  wire bb_mult_0;
  wire bb_mult_n_100;
  wire bb_mult_n_101;
  wire bb_mult_n_102;
  wire bb_mult_n_103;
  wire bb_mult_n_104;
  wire bb_mult_n_105;
  wire bb_mult_n_96;
  wire bb_mult_n_97;
  wire bb_mult_n_98;
  wire bb_mult_n_99;
  wire [7:0]bram_addr_a;
  wire [24:0]bram_wrdata_a;
  wire bypass_reg;
  wire bypass_reg_reg_0;
  wire clear;
  wire i__carry__0_i_1__10_n_0;
  wire i__carry__0_i_1__9_n_0;
  wire i__carry__0_i_2__10_n_0;
  wire i__carry__0_i_2__9_n_0;
  wire i__carry__0_i_3__10_n_0;
  wire i__carry__0_i_3__9_n_0;
  wire i__carry__0_i_4__10_n_0;
  wire i__carry__0_i_4__9_n_0;
  wire i__carry__1_i_1__10_n_0;
  wire i__carry__1_i_1__9_n_0;
  wire i__carry__1_i_2__10_n_0;
  wire i__carry__1_i_2__9_n_0;
  wire i__carry__1_i_3__10_n_0;
  wire i__carry__1_i_3__9_n_0;
  wire i__carry__1_i_4__7_n_0;
  wire i__carry__1_i_4__8_n_0;
  wire i__carry__2_i_1__7_n_0;
  wire i__carry__2_i_1__8_n_0;
  wire i__carry__2_i_2__7_n_0;
  wire i__carry__2_i_2__8_n_0;
  wire i__carry__2_i_3__6_n_0;
  wire i__carry__2_i_4__6_n_0;
  wire i__carry__3_i_1__6_n_0;
  wire i__carry__3_i_2__6_n_0;
  wire i__carry__3_i_3__6_n_0;
  wire i__carry__3_i_4__2_n_0;
  wire i__carry__4_i_1__2_n_0;
  wire i__carry__4_i_2__2_n_0;
  wire i__carry__4_i_3__2_n_0;
  wire i__carry__4_i_4__2_n_0;
  wire i__carry__5_i_1__2_n_0;
  wire i__carry__5_i_2__2_n_0;
  wire i__carry__5_i_3__2_n_0;
  wire i__carry__5_i_4__2_n_0;
  wire i__carry__6_i_1__2_n_0;
  wire i__carry__6_i_2__2_n_0;
  wire i__carry__6_i_3__2_n_0;
  wire i__carry__6_i_4__0_n_0;
  wire i__carry__7_i_1__0_n_0;
  wire i__carry__7_i_2__0_n_0;
  wire i__carry_i_1__11_n_0;
  wire i__carry_i_1__12_n_0;
  wire i__carry_i_2__10_n_0;
  wire i__carry_i_2__9_n_0;
  wire i__carry_i_3__10_n_0;
  wire i__carry_i_3__9_n_0;
  wire i__carry_i_4__10_n_0;
  wire i__carry_i_4__8_n_0;
  wire i__carry_i_5__0_n_0;
  wire [24:0]kk_mult_0;
  wire kk_mult_n_100;
  wire kk_mult_n_101;
  wire kk_mult_n_102;
  wire kk_mult_n_103;
  wire kk_mult_n_104;
  wire kk_mult_n_105;
  wire kk_mult_n_65;
  wire kk_mult_n_66;
  wire kk_mult_n_67;
  wire kk_mult_n_68;
  wire kk_mult_n_69;
  wire kk_mult_n_70;
  wire kk_mult_n_71;
  wire kk_mult_n_72;
  wire kk_mult_n_73;
  wire kk_mult_n_74;
  wire kk_mult_n_75;
  wire kk_mult_n_76;
  wire kk_mult_n_77;
  wire kk_mult_n_78;
  wire kk_mult_n_79;
  wire kk_mult_n_80;
  wire kk_mult_n_81;
  wire kk_mult_n_82;
  wire kk_mult_n_83;
  wire kk_mult_n_84;
  wire kk_mult_n_85;
  wire kk_mult_n_86;
  wire kk_mult_n_87;
  wire kk_mult_n_88;
  wire kk_mult_n_89;
  wire kk_mult_n_90;
  wire kk_mult_n_91;
  wire kk_mult_n_92;
  wire kk_mult_n_93;
  wire kk_mult_n_94;
  wire kk_mult_n_95;
  wire kk_mult_n_96;
  wire kk_mult_n_97;
  wire kk_mult_n_98;
  wire kk_mult_n_99;
  wire m_axi_osc2_aclk;
  wire m_axi_osc2_aresetn;
  wire [24:8]p_1_in;
  wire pp_mult_i_10_n_0;
  wire pp_mult_i_11_n_0;
  wire pp_mult_i_12_n_0;
  wire pp_mult_i_13_n_0;
  wire pp_mult_i_14_n_0;
  wire pp_mult_i_15_n_0;
  wire pp_mult_i_16_n_0;
  wire pp_mult_i_17_n_0;
  wire pp_mult_i_18_n_0;
  wire pp_mult_i_19_n_0;
  wire pp_mult_i_20_n_0;
  wire pp_mult_i_21_n_0;
  wire pp_mult_i_22_n_0;
  wire pp_mult_i_23_n_0;
  wire pp_mult_i_24_n_0;
  wire pp_mult_i_25_n_0;
  wire pp_mult_i_2__0_n_0;
  wire pp_mult_i_4_n_0;
  wire pp_mult_i_4_n_1;
  wire pp_mult_i_4_n_2;
  wire pp_mult_i_4_n_3;
  wire pp_mult_i_5_n_0;
  wire pp_mult_i_5_n_1;
  wire pp_mult_i_5_n_2;
  wire pp_mult_i_5_n_3;
  wire pp_mult_i_6_n_0;
  wire pp_mult_i_6_n_1;
  wire pp_mult_i_6_n_2;
  wire pp_mult_i_6_n_3;
  wire pp_mult_i_7_n_0;
  wire pp_mult_i_7_n_1;
  wire pp_mult_i_7_n_2;
  wire pp_mult_i_7_n_3;
  wire pp_mult_i_9_n_0;
  wire pp_mult_n_100;
  wire pp_mult_n_101;
  wire pp_mult_n_102;
  wire pp_mult_n_103;
  wire pp_mult_n_104;
  wire pp_mult_n_105;
  wire pp_mult_n_64;
  wire pp_mult_n_65;
  wire pp_mult_n_66;
  wire pp_mult_n_67;
  wire pp_mult_n_68;
  wire pp_mult_n_69;
  wire pp_mult_n_70;
  wire pp_mult_n_71;
  wire pp_mult_n_72;
  wire pp_mult_n_90;
  wire pp_mult_n_91;
  wire pp_mult_n_92;
  wire pp_mult_n_93;
  wire pp_mult_n_94;
  wire pp_mult_n_95;
  wire pp_mult_n_96;
  wire pp_mult_n_97;
  wire pp_mult_n_98;
  wire pp_mult_n_99;
  wire [34:20]r01_reg;
  wire [31:0]r02_reg;
  wire [34:10]r1_reg;
  wire [34:10]r1_reg0;
  wire \r1_reg0_inferred__0/i__carry__0_n_0 ;
  wire \r1_reg0_inferred__0/i__carry__0_n_1 ;
  wire \r1_reg0_inferred__0/i__carry__0_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__0_n_3 ;
  wire \r1_reg0_inferred__0/i__carry__1_n_0 ;
  wire \r1_reg0_inferred__0/i__carry__1_n_1 ;
  wire \r1_reg0_inferred__0/i__carry__1_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__1_n_3 ;
  wire \r1_reg0_inferred__0/i__carry__2_n_0 ;
  wire \r1_reg0_inferred__0/i__carry__2_n_1 ;
  wire \r1_reg0_inferred__0/i__carry__2_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__2_n_3 ;
  wire \r1_reg0_inferred__0/i__carry__3_n_0 ;
  wire \r1_reg0_inferred__0/i__carry__3_n_1 ;
  wire \r1_reg0_inferred__0/i__carry__3_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__3_n_3 ;
  wire \r1_reg0_inferred__0/i__carry__4_n_0 ;
  wire \r1_reg0_inferred__0/i__carry__4_n_1 ;
  wire \r1_reg0_inferred__0/i__carry__4_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__4_n_3 ;
  wire \r1_reg0_inferred__0/i__carry__5_n_0 ;
  wire \r1_reg0_inferred__0/i__carry__5_n_1 ;
  wire \r1_reg0_inferred__0/i__carry__5_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__5_n_3 ;
  wire \r1_reg0_inferred__0/i__carry__6_n_0 ;
  wire \r1_reg0_inferred__0/i__carry__6_n_1 ;
  wire \r1_reg0_inferred__0/i__carry__6_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__6_n_3 ;
  wire \r1_reg0_inferred__0/i__carry__7_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__7_n_3 ;
  wire \r1_reg0_inferred__0/i__carry_n_0 ;
  wire \r1_reg0_inferred__0/i__carry_n_1 ;
  wire \r1_reg0_inferred__0/i__carry_n_2 ;
  wire \r1_reg0_inferred__0/i__carry_n_3 ;
  wire r2_sum_carry__0_i_1__0_n_0;
  wire r2_sum_carry__0_i_2__0_n_0;
  wire r2_sum_carry__0_i_3__0_n_0;
  wire r2_sum_carry__0_i_4__0_n_0;
  wire r2_sum_carry__0_n_0;
  wire r2_sum_carry__0_n_1;
  wire r2_sum_carry__0_n_2;
  wire r2_sum_carry__0_n_3;
  wire r2_sum_carry__1_i_1__0_n_0;
  wire r2_sum_carry__1_i_2__0_n_0;
  wire r2_sum_carry__1_i_3__0_n_0;
  wire r2_sum_carry__1_i_4__0_n_0;
  wire r2_sum_carry__1_n_0;
  wire r2_sum_carry__1_n_1;
  wire r2_sum_carry__1_n_2;
  wire r2_sum_carry__1_n_3;
  wire r2_sum_carry__2_i_1__0_n_0;
  wire r2_sum_carry__2_i_2__0_n_0;
  wire r2_sum_carry__2_i_3__0_n_0;
  wire r2_sum_carry__2_i_4__0_n_0;
  wire r2_sum_carry__2_n_0;
  wire r2_sum_carry__2_n_1;
  wire r2_sum_carry__2_n_2;
  wire r2_sum_carry__2_n_3;
  wire r2_sum_carry__3_i_1__0_n_0;
  wire r2_sum_carry_i_1__0_n_0;
  wire r2_sum_carry_i_2__0_n_0;
  wire r2_sum_carry_i_3__0_n_0;
  wire r2_sum_carry_i_4__0_n_0;
  wire r2_sum_carry_n_0;
  wire r2_sum_carry_n_1;
  wire r2_sum_carry_n_2;
  wire r2_sum_carry_n_3;
  wire [7:0]r3_reg_dsp1;
  wire \r3_reg_dsp3_reg_n_0_[0] ;
  wire \r3_reg_dsp3_reg_n_0_[10] ;
  wire \r3_reg_dsp3_reg_n_0_[11] ;
  wire \r3_reg_dsp3_reg_n_0_[12] ;
  wire \r3_reg_dsp3_reg_n_0_[13] ;
  wire \r3_reg_dsp3_reg_n_0_[14] ;
  wire \r3_reg_dsp3_reg_n_0_[15] ;
  wire \r3_reg_dsp3_reg_n_0_[16] ;
  wire \r3_reg_dsp3_reg_n_0_[1] ;
  wire \r3_reg_dsp3_reg_n_0_[2] ;
  wire \r3_reg_dsp3_reg_n_0_[3] ;
  wire \r3_reg_dsp3_reg_n_0_[4] ;
  wire \r3_reg_dsp3_reg_n_0_[5] ;
  wire \r3_reg_dsp3_reg_n_0_[6] ;
  wire \r3_reg_dsp3_reg_n_0_[7] ;
  wire \r3_reg_dsp3_reg_n_0_[8] ;
  wire \r3_reg_dsp3_reg_n_0_[9] ;
  wire [16:0]r3_shr;
  wire [24:0]r3_sum10_in;
  wire [49:25]r3_sum11_in;
  wire r3_sum__2_carry__0_n_0;
  wire r3_sum__2_carry__0_n_1;
  wire r3_sum__2_carry__0_n_2;
  wire r3_sum__2_carry__0_n_3;
  wire r3_sum__2_carry__10_i_1__0_n_0;
  wire r3_sum__2_carry__10_i_2__0_n_0;
  wire r3_sum__2_carry__10_i_3__0_n_0;
  wire r3_sum__2_carry__10_i_4__0_n_0;
  wire r3_sum__2_carry__10_i_5__0_n_0;
  wire r3_sum__2_carry__10_i_6__0_n_0;
  wire r3_sum__2_carry__10_i_7__0_n_0;
  wire r3_sum__2_carry__10_i_8__0_n_0;
  wire r3_sum__2_carry__10_n_0;
  wire r3_sum__2_carry__10_n_1;
  wire r3_sum__2_carry__10_n_2;
  wire r3_sum__2_carry__10_n_3;
  wire r3_sum__2_carry__11_i_1__0_n_0;
  wire r3_sum__2_carry__1_n_0;
  wire r3_sum__2_carry__1_n_1;
  wire r3_sum__2_carry__1_n_2;
  wire r3_sum__2_carry__1_n_3;
  wire r3_sum__2_carry__2_n_0;
  wire r3_sum__2_carry__2_n_1;
  wire r3_sum__2_carry__2_n_2;
  wire r3_sum__2_carry__2_n_3;
  wire r3_sum__2_carry__3_n_0;
  wire r3_sum__2_carry__3_n_1;
  wire r3_sum__2_carry__3_n_2;
  wire r3_sum__2_carry__3_n_3;
  wire r3_sum__2_carry__4_n_0;
  wire r3_sum__2_carry__4_n_1;
  wire r3_sum__2_carry__4_n_2;
  wire r3_sum__2_carry__4_n_3;
  wire r3_sum__2_carry__5_i_1__0_n_0;
  wire r3_sum__2_carry__5_i_2__0_n_0;
  wire r3_sum__2_carry__5_i_3__0_n_0;
  wire r3_sum__2_carry__5_i_4__0_n_0;
  wire r3_sum__2_carry__5_i_5__0_n_0;
  wire r3_sum__2_carry__5_i_6__0_n_0;
  wire r3_sum__2_carry__5_i_7__0_n_0;
  wire r3_sum__2_carry__5_n_0;
  wire r3_sum__2_carry__5_n_1;
  wire r3_sum__2_carry__5_n_2;
  wire r3_sum__2_carry__5_n_3;
  wire r3_sum__2_carry__6_i_1__0_n_0;
  wire r3_sum__2_carry__6_i_2__0_n_0;
  wire r3_sum__2_carry__6_i_3__0_n_0;
  wire r3_sum__2_carry__6_i_4__0_n_0;
  wire r3_sum__2_carry__6_i_5__0_n_0;
  wire r3_sum__2_carry__6_i_6__0_n_0;
  wire r3_sum__2_carry__6_i_7__0_n_0;
  wire r3_sum__2_carry__6_i_8__0_n_0;
  wire r3_sum__2_carry__6_n_0;
  wire r3_sum__2_carry__6_n_1;
  wire r3_sum__2_carry__6_n_2;
  wire r3_sum__2_carry__6_n_3;
  wire r3_sum__2_carry__7_i_1__0_n_0;
  wire r3_sum__2_carry__7_i_2__0_n_0;
  wire r3_sum__2_carry__7_i_3__0_n_0;
  wire r3_sum__2_carry__7_i_4__0_n_0;
  wire r3_sum__2_carry__7_i_5__0_n_0;
  wire r3_sum__2_carry__7_i_6__0_n_0;
  wire r3_sum__2_carry__7_i_7__0_n_0;
  wire r3_sum__2_carry__7_i_8__0_n_0;
  wire r3_sum__2_carry__7_n_0;
  wire r3_sum__2_carry__7_n_1;
  wire r3_sum__2_carry__7_n_2;
  wire r3_sum__2_carry__7_n_3;
  wire r3_sum__2_carry__8_i_1__0_n_0;
  wire r3_sum__2_carry__8_i_2__0_n_0;
  wire r3_sum__2_carry__8_i_3__0_n_0;
  wire r3_sum__2_carry__8_i_4__0_n_0;
  wire r3_sum__2_carry__8_i_5__0_n_0;
  wire r3_sum__2_carry__8_i_6__0_n_0;
  wire r3_sum__2_carry__8_i_7__0_n_0;
  wire r3_sum__2_carry__8_i_8__0_n_0;
  wire r3_sum__2_carry__8_n_0;
  wire r3_sum__2_carry__8_n_1;
  wire r3_sum__2_carry__8_n_2;
  wire r3_sum__2_carry__8_n_3;
  wire r3_sum__2_carry__9_i_1__0_n_0;
  wire r3_sum__2_carry__9_i_2__0_n_0;
  wire r3_sum__2_carry__9_i_3__0_n_0;
  wire r3_sum__2_carry__9_i_4__0_n_0;
  wire r3_sum__2_carry__9_i_5__0_n_0;
  wire r3_sum__2_carry__9_i_6__0_n_0;
  wire r3_sum__2_carry__9_i_7__0_n_0;
  wire r3_sum__2_carry__9_i_8__0_n_0;
  wire r3_sum__2_carry__9_n_0;
  wire r3_sum__2_carry__9_n_1;
  wire r3_sum__2_carry__9_n_2;
  wire r3_sum__2_carry__9_n_3;
  wire r3_sum__2_carry_n_0;
  wire r3_sum__2_carry_n_1;
  wire r3_sum__2_carry_n_2;
  wire r3_sum__2_carry_n_3;
  wire [16:0]r4_sum0;
  wire [15:0]r5_reg;
  wire r5_reg1;
  wire r5_reg10_in;
  wire r5_reg1_carry__0_i_1__0_n_0;
  wire r5_reg1_carry__0_i_2__0_n_0;
  wire r5_reg1_carry__0_i_3__0_n_0;
  wire r5_reg1_carry__0_i_4__0_n_0;
  wire r5_reg1_carry__0_n_0;
  wire r5_reg1_carry__0_n_1;
  wire r5_reg1_carry__0_n_2;
  wire r5_reg1_carry__0_n_3;
  wire r5_reg1_carry__1_i_1__0_n_0;
  wire r5_reg1_carry__1_i_2__0_n_0;
  wire r5_reg1_carry__1_i_3__0_n_0;
  wire r5_reg1_carry__1_i_4__0_n_0;
  wire r5_reg1_carry__1_n_0;
  wire r5_reg1_carry__1_n_1;
  wire r5_reg1_carry__1_n_2;
  wire r5_reg1_carry__1_n_3;
  wire r5_reg1_carry__2_i_1__0_n_0;
  wire r5_reg1_carry__2_n_3;
  wire r5_reg1_carry_i_1__0_n_0;
  wire r5_reg1_carry_i_2__0_n_0;
  wire r5_reg1_carry_i_3__0_n_0;
  wire r5_reg1_carry_i_4__0_n_0;
  wire r5_reg1_carry_i_5__0_n_0;
  wire r5_reg1_carry_i_6__0_n_0;
  wire r5_reg1_carry_n_0;
  wire r5_reg1_carry_n_1;
  wire r5_reg1_carry_n_2;
  wire r5_reg1_carry_n_3;
  wire \r5_reg1_inferred__0/i__carry__0_n_0 ;
  wire \r5_reg1_inferred__0/i__carry__0_n_1 ;
  wire \r5_reg1_inferred__0/i__carry__0_n_2 ;
  wire \r5_reg1_inferred__0/i__carry__0_n_3 ;
  wire \r5_reg1_inferred__0/i__carry__1_n_0 ;
  wire \r5_reg1_inferred__0/i__carry__1_n_1 ;
  wire \r5_reg1_inferred__0/i__carry__1_n_2 ;
  wire \r5_reg1_inferred__0/i__carry__1_n_3 ;
  wire \r5_reg1_inferred__0/i__carry__2_n_3 ;
  wire \r5_reg1_inferred__0/i__carry_n_0 ;
  wire \r5_reg1_inferred__0/i__carry_n_1 ;
  wire \r5_reg1_inferred__0/i__carry_n_2 ;
  wire \r5_reg1_inferred__0/i__carry_n_3 ;
  wire r5_reg20;
  wire \r5_reg[0]_i_1__0_n_0 ;
  wire \r5_reg[10]_i_1__0_n_0 ;
  wire \r5_reg[11]_i_1__0_n_0 ;
  wire \r5_reg[12]_i_1__0_n_0 ;
  wire \r5_reg[13]_i_1__0_n_0 ;
  wire \r5_reg[14]_i_1__0_n_0 ;
  wire \r5_reg[15]_i_1__0_n_0 ;
  wire \r5_reg[1]_i_1__0_n_0 ;
  wire \r5_reg[2]_i_1__0_n_0 ;
  wire \r5_reg[3]_i_1__0_n_0 ;
  wire \r5_reg[4]_i_1__0_n_0 ;
  wire \r5_reg[5]_i_1__0_n_0 ;
  wire \r5_reg[6]_i_1__0_n_0 ;
  wire \r5_reg[7]_i_1__0_n_0 ;
  wire \r5_reg[8]_i_1__0_n_0 ;
  wire \r5_reg[9]_i_1__0_n_0 ;
  wire \s_axi_reg_araddr[3] ;
  wire [0:0]\s_axi_reg_araddr[4] ;
  wire [0:0]\s_axi_reg_araddr[4]_0 ;
  wire \s_axi_reg_araddr[5] ;
  wire \s_axi_reg_araddr[5]_0 ;
  wire NLW_aa_mult_CARRYCASCOUT_UNCONNECTED;
  wire NLW_aa_mult_MULTSIGNOUT_UNCONNECTED;
  wire NLW_aa_mult_OVERFLOW_UNCONNECTED;
  wire NLW_aa_mult_PATTERNBDETECT_UNCONNECTED;
  wire NLW_aa_mult_PATTERNDETECT_UNCONNECTED;
  wire NLW_aa_mult_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_aa_mult_ACOUT_UNCONNECTED;
  wire [17:0]NLW_aa_mult_BCOUT_UNCONNECTED;
  wire [3:0]NLW_aa_mult_CARRYOUT_UNCONNECTED;
  wire [47:43]NLW_aa_mult_P_UNCONNECTED;
  wire [47:0]NLW_aa_mult_PCOUT_UNCONNECTED;
  wire NLW_bb_mult_CARRYCASCOUT_UNCONNECTED;
  wire NLW_bb_mult_MULTSIGNOUT_UNCONNECTED;
  wire NLW_bb_mult_OVERFLOW_UNCONNECTED;
  wire NLW_bb_mult_PATTERNBDETECT_UNCONNECTED;
  wire NLW_bb_mult_PATTERNDETECT_UNCONNECTED;
  wire NLW_bb_mult_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_bb_mult_ACOUT_UNCONNECTED;
  wire [17:0]NLW_bb_mult_BCOUT_UNCONNECTED;
  wire [3:0]NLW_bb_mult_CARRYOUT_UNCONNECTED;
  wire [47:41]NLW_bb_mult_P_UNCONNECTED;
  wire [47:0]NLW_bb_mult_PCOUT_UNCONNECTED;
  wire NLW_kk_mult_CARRYCASCOUT_UNCONNECTED;
  wire NLW_kk_mult_MULTSIGNOUT_UNCONNECTED;
  wire NLW_kk_mult_OVERFLOW_UNCONNECTED;
  wire NLW_kk_mult_PATTERNBDETECT_UNCONNECTED;
  wire NLW_kk_mult_PATTERNDETECT_UNCONNECTED;
  wire NLW_kk_mult_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_kk_mult_ACOUT_UNCONNECTED;
  wire [17:0]NLW_kk_mult_BCOUT_UNCONNECTED;
  wire [3:0]NLW_kk_mult_CARRYOUT_UNCONNECTED;
  wire [47:42]NLW_kk_mult_P_UNCONNECTED;
  wire [47:0]NLW_kk_mult_PCOUT_UNCONNECTED;
  wire NLW_pp_mult_CARRYCASCOUT_UNCONNECTED;
  wire NLW_pp_mult_MULTSIGNOUT_UNCONNECTED;
  wire NLW_pp_mult_OVERFLOW_UNCONNECTED;
  wire NLW_pp_mult_PATTERNBDETECT_UNCONNECTED;
  wire NLW_pp_mult_PATTERNDETECT_UNCONNECTED;
  wire NLW_pp_mult_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_pp_mult_ACOUT_UNCONNECTED;
  wire [17:0]NLW_pp_mult_BCOUT_UNCONNECTED;
  wire [3:0]NLW_pp_mult_CARRYOUT_UNCONNECTED;
  wire [47:42]NLW_pp_mult_P_UNCONNECTED;
  wire [47:0]NLW_pp_mult_PCOUT_UNCONNECTED;
  wire [3:0]NLW_pp_mult_i_3_CO_UNCONNECTED;
  wire [3:1]NLW_pp_mult_i_3_O_UNCONNECTED;
  wire [3:0]\NLW_r1_reg0_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_r1_reg0_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [1:0]\NLW_r1_reg0_inferred__0/i__carry__1_O_UNCONNECTED ;
  wire [3:2]\NLW_r1_reg0_inferred__0/i__carry__7_CO_UNCONNECTED ;
  wire [3:3]\NLW_r1_reg0_inferred__0/i__carry__7_O_UNCONNECTED ;
  wire [0:0]NLW_r2_sum_carry_O_UNCONNECTED;
  wire [3:0]NLW_r2_sum_carry__3_CO_UNCONNECTED;
  wire [3:1]NLW_r2_sum_carry__3_O_UNCONNECTED;
  wire [3:0]NLW_r3_sum__2_carry_O_UNCONNECTED;
  wire [3:0]NLW_r3_sum__2_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_r3_sum__2_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_r3_sum__2_carry__11_CO_UNCONNECTED;
  wire [3:1]NLW_r3_sum__2_carry__11_O_UNCONNECTED;
  wire [3:0]NLW_r3_sum__2_carry__2_O_UNCONNECTED;
  wire [3:0]NLW_r3_sum__2_carry__3_O_UNCONNECTED;
  wire [3:0]NLW_r3_sum__2_carry__4_O_UNCONNECTED;
  wire [3:0]NLW_r5_reg1_carry_O_UNCONNECTED;
  wire [3:0]NLW_r5_reg1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_r5_reg1_carry__1_O_UNCONNECTED;
  wire [3:2]NLW_r5_reg1_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_r5_reg1_carry__2_O_UNCONNECTED;
  wire [3:0]\NLW_r5_reg1_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_r5_reg1_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:0]\NLW_r5_reg1_inferred__0/i__carry__1_O_UNCONNECTED ;
  wire [3:2]\NLW_r5_reg1_inferred__0/i__carry__2_CO_UNCONNECTED ;
  wire [3:0]\NLW_r5_reg1_inferred__0/i__carry__2_O_UNCONNECTED ;

  (* METHODOLOGY_DRC_VIOS = "{SYNTH-11 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    aa_mult
       (.A({A[24],A[24],A[24],A[24],A[24],A}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_aa_mult_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B(bram_wrdata_a[17:0]),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_aa_mult_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_aa_mult_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_aa_mult_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(\s_axi_reg_araddr[4] ),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(m_axi_osc2_aclk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_aa_mult_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_aa_mult_OVERFLOW_UNCONNECTED),
        .P({NLW_aa_mult_P_UNCONNECTED[47:43],aa_mult_n_63,aa_mult_n_64,aa_mult_n_65,aa_mult_n_66,aa_mult_n_67,aa_mult_n_68,aa_mult_n_69,aa_mult_n_70,aa_mult_n_71,aa_mult_n_72,aa_mult_n_73,aa_mult_n_74,aa_mult_n_75,aa_mult_n_76,aa_mult_n_77,aa_mult_n_78,aa_mult_n_79,aa_mult_n_80,aa_mult_n_81,aa_mult_n_82,aa_mult_n_83,aa_mult_n_84,aa_mult_n_85,aa_mult_n_86,aa_mult_n_87,aa_mult_n_88,aa_mult_n_89,aa_mult_n_90,aa_mult_n_91,aa_mult_n_92,aa_mult_n_93,aa_mult_n_94,aa_mult_n_95,aa_mult_n_96,aa_mult_n_97,aa_mult_n_98,aa_mult_n_99,aa_mult_n_100,aa_mult_n_101,aa_mult_n_102,aa_mult_n_103,aa_mult_n_104,aa_mult_n_105}),
        .PATTERNBDETECT(NLW_aa_mult_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_aa_mult_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_aa_mult_PCOUT_UNCONNECTED[47:0]),
        .RSTA(pp_mult_i_2__0_n_0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(clear),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_aa_mult_UNDERFLOW_UNCONNECTED));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    aa_mult_i_1
       (.I0(\s_axi_reg_araddr[5] ),
        .I1(bb_mult_0),
        .I2(bram_addr_a[4]),
        .I3(bram_addr_a[7]),
        .I4(bram_addr_a[3]),
        .I5(bram_addr_a[6]),
        .O(\s_axi_reg_araddr[4] ));
  LUT4 #(
    .INIT(16'h0001)) 
    aa_mult_i_2
       (.I0(bram_addr_a[0]),
        .I1(bram_addr_a[1]),
        .I2(bram_addr_a[5]),
        .I3(bram_addr_a[2]),
        .O(\s_axi_reg_araddr[5] ));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[0]_i_1__0 
       (.I0(Q[13]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[10]_i_1__0 
       (.I0(Q[8]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[10]),
        .O(D[10]));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[11]_i_1__0 
       (.I0(Q[9]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[11]),
        .O(D[11]));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[12]_i_1__0 
       (.I0(Q[10]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[12]),
        .O(D[12]));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[13]_i_1__0 
       (.I0(Q[11]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[13]),
        .O(D[13]));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[14]_i_1__0 
       (.I0(Q[12]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[14]),
        .O(D[14]));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[15]_i_1__0 
       (.I0(Q[13]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[15]),
        .O(D[15]));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[1]_i_1__0 
       (.I0(Q[13]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[1]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[2]_i_1__0 
       (.I0(Q[0]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[2]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[3]_i_1__0 
       (.I0(Q[1]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[3]),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[4]_i_1__0 
       (.I0(Q[2]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[4]),
        .O(D[4]));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[5]_i_1__0 
       (.I0(Q[3]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[5]),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[6]_i_1__0 
       (.I0(Q[4]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[6]),
        .O(D[6]));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[7]_i_1__0 
       (.I0(Q[5]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[7]),
        .O(D[7]));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[8]_i_1__0 
       (.I0(Q[6]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[8]),
        .O(D[8]));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[9]_i_1__0 
       (.I0(Q[7]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[9]),
        .O(D[9]));
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    bb_mult
       (.A({bram_wrdata_a[24],bram_wrdata_a[24],bram_wrdata_a[24],bram_wrdata_a[24],bram_wrdata_a[24],bram_wrdata_a}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_bb_mult_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({Q[13],Q[13],Q,Q[13],Q[13]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_bb_mult_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_bb_mult_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_bb_mult_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(\s_axi_reg_araddr[4]_0 ),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_bb_mult_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_bb_mult_OVERFLOW_UNCONNECTED),
        .P({NLW_bb_mult_P_UNCONNECTED[47:41],r02_reg[31],r02_reg[29:0],bb_mult_n_96,bb_mult_n_97,bb_mult_n_98,bb_mult_n_99,bb_mult_n_100,bb_mult_n_101,bb_mult_n_102,bb_mult_n_103,bb_mult_n_104,bb_mult_n_105}),
        .PATTERNBDETECT(NLW_bb_mult_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_bb_mult_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_bb_mult_PCOUT_UNCONNECTED[47:0]),
        .RSTA(clear),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(pp_mult_i_2__0_n_0),
        .UNDERFLOW(NLW_bb_mult_UNDERFLOW_UNCONNECTED));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    bb_mult_i_1__0
       (.I0(\s_axi_reg_araddr[3] ),
        .I1(bb_mult_0),
        .I2(bram_addr_a[4]),
        .I3(bram_addr_a[7]),
        .I4(bram_addr_a[2]),
        .I5(bram_addr_a[6]),
        .O(\s_axi_reg_araddr[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    bb_mult_i_2
       (.I0(bram_addr_a[3]),
        .I1(bram_addr_a[1]),
        .I2(bram_addr_a[0]),
        .I3(bram_addr_a[5]),
        .O(\s_axi_reg_araddr[3] ));
  FDRE bypass_reg_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(bypass_reg_reg_0),
        .Q(bypass_reg),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_1__10
       (.I0(r5_reg20),
        .O(i__carry__0_i_1__10_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_1__9
       (.I0(r02_reg[7]),
        .O(i__carry__0_i_1__9_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_2__10
       (.I0(r5_reg20),
        .O(i__carry__0_i_2__10_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_2__9
       (.I0(r02_reg[6]),
        .O(i__carry__0_i_2__9_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_3__10
       (.I0(r5_reg20),
        .O(i__carry__0_i_3__10_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_3__9
       (.I0(r02_reg[5]),
        .O(i__carry__0_i_3__9_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_4__10
       (.I0(r5_reg20),
        .O(i__carry__0_i_4__10_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_4__9
       (.I0(r02_reg[4]),
        .O(i__carry__0_i_4__9_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_1__10
       (.I0(r5_reg20),
        .O(i__carry__1_i_1__10_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_1__9
       (.I0(r02_reg[11]),
        .O(i__carry__1_i_1__9_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_2__10
       (.I0(r5_reg20),
        .O(i__carry__1_i_2__10_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_2__9
       (.I0(r02_reg[10]),
        .O(i__carry__1_i_2__9_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_3__10
       (.I0(r5_reg20),
        .O(i__carry__1_i_3__10_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_3__9
       (.I0(r02_reg[9]),
        .O(i__carry__1_i_3__9_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_4__7
       (.I0(r02_reg[8]),
        .O(i__carry__1_i_4__7_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_4__8
       (.I0(r5_reg20),
        .O(i__carry__1_i_4__8_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_1__7
       (.I0(r02_reg[15]),
        .O(i__carry__2_i_1__7_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_1__8
       (.I0(r5_reg20),
        .O(i__carry__2_i_1__8_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_2__7
       (.I0(r02_reg[14]),
        .O(i__carry__2_i_2__7_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_2__8
       (.I0(r5_reg20),
        .O(i__carry__2_i_2__8_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_3__6
       (.I0(r02_reg[13]),
        .O(i__carry__2_i_3__6_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_4__6
       (.I0(r02_reg[12]),
        .O(i__carry__2_i_4__6_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__3_i_1__6
       (.I0(r02_reg[19]),
        .I1(r01_reg[34]),
        .O(i__carry__3_i_1__6_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__3_i_2__6
       (.I0(r02_reg[18]),
        .I1(r01_reg[34]),
        .O(i__carry__3_i_2__6_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__3_i_3__6
       (.I0(r02_reg[17]),
        .O(i__carry__3_i_3__6_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__3_i_4__2
       (.I0(r02_reg[16]),
        .O(i__carry__3_i_4__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__4_i_1__2
       (.I0(r02_reg[23]),
        .I1(r01_reg[23]),
        .O(i__carry__4_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__4_i_2__2
       (.I0(r02_reg[22]),
        .I1(r01_reg[22]),
        .O(i__carry__4_i_2__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__4_i_3__2
       (.I0(r02_reg[21]),
        .I1(r01_reg[21]),
        .O(i__carry__4_i_3__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__4_i_4__2
       (.I0(r02_reg[20]),
        .I1(r01_reg[20]),
        .O(i__carry__4_i_4__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__5_i_1__2
       (.I0(r02_reg[27]),
        .I1(r01_reg[27]),
        .O(i__carry__5_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__5_i_2__2
       (.I0(r02_reg[26]),
        .I1(r01_reg[26]),
        .O(i__carry__5_i_2__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__5_i_3__2
       (.I0(r02_reg[25]),
        .I1(r01_reg[25]),
        .O(i__carry__5_i_3__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__5_i_4__2
       (.I0(r02_reg[24]),
        .I1(r01_reg[24]),
        .O(i__carry__5_i_4__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__6_i_1__2
       (.I0(r01_reg[31]),
        .I1(r02_reg[31]),
        .O(i__carry__6_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__6_i_2__2
       (.I0(r02_reg[31]),
        .I1(r01_reg[30]),
        .O(i__carry__6_i_2__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__6_i_3__2
       (.I0(r02_reg[29]),
        .I1(r01_reg[29]),
        .O(i__carry__6_i_3__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__6_i_4__0
       (.I0(r02_reg[28]),
        .I1(r01_reg[28]),
        .O(i__carry__6_i_4__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__7_i_1__0
       (.I0(r01_reg[32]),
        .I1(r01_reg[34]),
        .O(i__carry__7_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__7_i_2__0
       (.I0(r01_reg[31]),
        .I1(r01_reg[32]),
        .O(i__carry__7_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1__11
       (.I0(r02_reg[3]),
        .O(i__carry_i_1__11_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry_i_1__12
       (.I0(kk_mult_n_65),
        .I1(r5_reg20),
        .O(i__carry_i_1__12_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_2__10
       (.I0(r5_reg20),
        .O(i__carry_i_2__10_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_2__9
       (.I0(r02_reg[2]),
        .O(i__carry_i_2__9_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_3__10
       (.I0(r5_reg20),
        .O(i__carry_i_3__10_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_3__9
       (.I0(r02_reg[1]),
        .O(i__carry_i_3__9_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_4__10
       (.I0(kk_mult_n_65),
        .I1(r5_reg20),
        .O(i__carry_i_4__10_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_4__8
       (.I0(r02_reg[0]),
        .O(i__carry_i_4__8_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_5__0
       (.I0(kk_mult_n_67),
        .I1(kk_mult_n_66),
        .O(i__carry_i_5__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-11 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    kk_mult
       (.A({kk_mult_0[24],kk_mult_0[24],kk_mult_0[24],kk_mult_0[24],kk_mult_0[24],kk_mult_0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_kk_mult_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({B[16],B}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_kk_mult_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_kk_mult_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_kk_mult_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(m_axi_osc2_aclk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_kk_mult_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_kk_mult_OVERFLOW_UNCONNECTED),
        .P({NLW_kk_mult_P_UNCONNECTED[47:42],r5_reg20,kk_mult_n_65,kk_mult_n_66,kk_mult_n_67,kk_mult_n_68,kk_mult_n_69,kk_mult_n_70,kk_mult_n_71,kk_mult_n_72,kk_mult_n_73,kk_mult_n_74,kk_mult_n_75,kk_mult_n_76,kk_mult_n_77,kk_mult_n_78,kk_mult_n_79,kk_mult_n_80,kk_mult_n_81,kk_mult_n_82,kk_mult_n_83,kk_mult_n_84,kk_mult_n_85,kk_mult_n_86,kk_mult_n_87,kk_mult_n_88,kk_mult_n_89,kk_mult_n_90,kk_mult_n_91,kk_mult_n_92,kk_mult_n_93,kk_mult_n_94,kk_mult_n_95,kk_mult_n_96,kk_mult_n_97,kk_mult_n_98,kk_mult_n_99,kk_mult_n_100,kk_mult_n_101,kk_mult_n_102,kk_mult_n_103,kk_mult_n_104,kk_mult_n_105}),
        .PATTERNBDETECT(NLW_kk_mult_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_kk_mult_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_kk_mult_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(pp_mult_i_2__0_n_0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_kk_mult_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-11 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    pp_mult
       (.A({bram_wrdata_a[24],bram_wrdata_a[24],bram_wrdata_a[24],bram_wrdata_a[24],bram_wrdata_a[24],bram_wrdata_a}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_pp_mult_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({B[16],B}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_pp_mult_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_pp_mult_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_pp_mult_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(E),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(m_axi_osc2_aclk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_pp_mult_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_pp_mult_OVERFLOW_UNCONNECTED),
        .P({NLW_pp_mult_P_UNCONNECTED[47:42],pp_mult_n_64,pp_mult_n_65,pp_mult_n_66,pp_mult_n_67,pp_mult_n_68,pp_mult_n_69,pp_mult_n_70,pp_mult_n_71,pp_mult_n_72,r4_sum0,pp_mult_n_90,pp_mult_n_91,pp_mult_n_92,pp_mult_n_93,pp_mult_n_94,pp_mult_n_95,pp_mult_n_96,pp_mult_n_97,pp_mult_n_98,pp_mult_n_99,pp_mult_n_100,pp_mult_n_101,pp_mult_n_102,pp_mult_n_103,pp_mult_n_104,pp_mult_n_105}),
        .PATTERNBDETECT(NLW_pp_mult_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_pp_mult_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_pp_mult_PCOUT_UNCONNECTED[47:0]),
        .RSTA(clear),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(pp_mult_i_2__0_n_0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_pp_mult_UNDERFLOW_UNCONNECTED));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_10
       (.I0(r3_shr[15]),
        .I1(r4_sum0[15]),
        .O(pp_mult_i_10_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_11
       (.I0(r3_shr[14]),
        .I1(r4_sum0[14]),
        .O(pp_mult_i_11_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_12
       (.I0(r3_shr[13]),
        .I1(r4_sum0[13]),
        .O(pp_mult_i_12_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_13
       (.I0(r3_shr[12]),
        .I1(r4_sum0[12]),
        .O(pp_mult_i_13_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_14
       (.I0(r3_shr[11]),
        .I1(r4_sum0[11]),
        .O(pp_mult_i_14_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_15
       (.I0(r3_shr[10]),
        .I1(r4_sum0[10]),
        .O(pp_mult_i_15_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_16
       (.I0(r3_shr[9]),
        .I1(r4_sum0[9]),
        .O(pp_mult_i_16_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_17
       (.I0(r3_shr[8]),
        .I1(r4_sum0[8]),
        .O(pp_mult_i_17_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_18
       (.I0(r3_shr[7]),
        .I1(r4_sum0[7]),
        .O(pp_mult_i_18_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_19
       (.I0(r3_shr[6]),
        .I1(r4_sum0[6]),
        .O(pp_mult_i_19_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    pp_mult_i_1__0
       (.I0(bram_addr_a[7]),
        .I1(bram_addr_a[4]),
        .I2(bb_mult_0),
        .I3(bram_addr_a[2]),
        .I4(bram_addr_a[3]),
        .I5(\s_axi_reg_araddr[5]_0 ),
        .O(E));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_20
       (.I0(r3_shr[5]),
        .I1(r4_sum0[5]),
        .O(pp_mult_i_20_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_21
       (.I0(r3_shr[4]),
        .I1(r4_sum0[4]),
        .O(pp_mult_i_21_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_22
       (.I0(r3_shr[3]),
        .I1(r4_sum0[3]),
        .O(pp_mult_i_22_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_23
       (.I0(r3_shr[2]),
        .I1(r4_sum0[2]),
        .O(pp_mult_i_23_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_24
       (.I0(r3_shr[1]),
        .I1(r4_sum0[1]),
        .O(pp_mult_i_24_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_25
       (.I0(r3_shr[0]),
        .I1(r4_sum0[0]),
        .O(pp_mult_i_25_n_0));
  LUT3 #(
    .INIT(8'h4F)) 
    pp_mult_i_2__0
       (.I0(bypass_reg_reg_0),
        .I1(bypass_reg),
        .I2(m_axi_osc2_aresetn),
        .O(pp_mult_i_2__0_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 pp_mult_i_3
       (.CI(pp_mult_i_4_n_0),
        .CO(NLW_pp_mult_i_3_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_pp_mult_i_3_O_UNCONNECTED[3:1],B[16]}),
        .S({1'b0,1'b0,1'b0,pp_mult_i_9_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 pp_mult_i_4
       (.CI(pp_mult_i_5_n_0),
        .CO({pp_mult_i_4_n_0,pp_mult_i_4_n_1,pp_mult_i_4_n_2,pp_mult_i_4_n_3}),
        .CYINIT(1'b0),
        .DI(r3_shr[15:12]),
        .O(B[15:12]),
        .S({pp_mult_i_10_n_0,pp_mult_i_11_n_0,pp_mult_i_12_n_0,pp_mult_i_13_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 pp_mult_i_5
       (.CI(pp_mult_i_6_n_0),
        .CO({pp_mult_i_5_n_0,pp_mult_i_5_n_1,pp_mult_i_5_n_2,pp_mult_i_5_n_3}),
        .CYINIT(1'b0),
        .DI(r3_shr[11:8]),
        .O(B[11:8]),
        .S({pp_mult_i_14_n_0,pp_mult_i_15_n_0,pp_mult_i_16_n_0,pp_mult_i_17_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 pp_mult_i_6
       (.CI(pp_mult_i_7_n_0),
        .CO({pp_mult_i_6_n_0,pp_mult_i_6_n_1,pp_mult_i_6_n_2,pp_mult_i_6_n_3}),
        .CYINIT(1'b0),
        .DI(r3_shr[7:4]),
        .O(B[7:4]),
        .S({pp_mult_i_18_n_0,pp_mult_i_19_n_0,pp_mult_i_20_n_0,pp_mult_i_21_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 pp_mult_i_7
       (.CI(1'b0),
        .CO({pp_mult_i_7_n_0,pp_mult_i_7_n_1,pp_mult_i_7_n_2,pp_mult_i_7_n_3}),
        .CYINIT(1'b0),
        .DI(r3_shr[3:0]),
        .O(B[3:0]),
        .S({pp_mult_i_22_n_0,pp_mult_i_23_n_0,pp_mult_i_24_n_0,pp_mult_i_25_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    pp_mult_i_8__0
       (.I0(bram_addr_a[5]),
        .I1(bram_addr_a[0]),
        .I2(bram_addr_a[6]),
        .I3(bram_addr_a[1]),
        .O(\s_axi_reg_araddr[5]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_9
       (.I0(r3_shr[16]),
        .I1(r4_sum0[16]),
        .O(pp_mult_i_9_n_0));
  FDRE \r01_reg_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(r01_reg[20]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r01_reg_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(r01_reg[21]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r01_reg_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(r01_reg[22]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r01_reg_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(r01_reg[23]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r01_reg_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(r01_reg[24]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r01_reg_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(r01_reg[25]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r01_reg_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(r01_reg[26]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r01_reg_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(r01_reg[27]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r01_reg_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(r01_reg[28]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r01_reg_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(r01_reg[29]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r01_reg_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(r01_reg[30]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r01_reg_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(r01_reg[31]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r01_reg_reg[32] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(r01_reg[32]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r01_reg_reg[34] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(r01_reg[34]),
        .R(pp_mult_i_2__0_n_0));
  CARRY4 \r1_reg0_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\r1_reg0_inferred__0/i__carry_n_0 ,\r1_reg0_inferred__0/i__carry_n_1 ,\r1_reg0_inferred__0/i__carry_n_2 ,\r1_reg0_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI(r02_reg[3:0]),
        .O(\NLW_r1_reg0_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_1__11_n_0,i__carry_i_2__9_n_0,i__carry_i_3__9_n_0,i__carry_i_4__8_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__0 
       (.CI(\r1_reg0_inferred__0/i__carry_n_0 ),
        .CO({\r1_reg0_inferred__0/i__carry__0_n_0 ,\r1_reg0_inferred__0/i__carry__0_n_1 ,\r1_reg0_inferred__0/i__carry__0_n_2 ,\r1_reg0_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI(r02_reg[7:4]),
        .O(\NLW_r1_reg0_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_1__9_n_0,i__carry__0_i_2__9_n_0,i__carry__0_i_3__9_n_0,i__carry__0_i_4__9_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__1 
       (.CI(\r1_reg0_inferred__0/i__carry__0_n_0 ),
        .CO({\r1_reg0_inferred__0/i__carry__1_n_0 ,\r1_reg0_inferred__0/i__carry__1_n_1 ,\r1_reg0_inferred__0/i__carry__1_n_2 ,\r1_reg0_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI(r02_reg[11:8]),
        .O({r1_reg0[11:10],\NLW_r1_reg0_inferred__0/i__carry__1_O_UNCONNECTED [1:0]}),
        .S({i__carry__1_i_1__9_n_0,i__carry__1_i_2__9_n_0,i__carry__1_i_3__9_n_0,i__carry__1_i_4__7_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__2 
       (.CI(\r1_reg0_inferred__0/i__carry__1_n_0 ),
        .CO({\r1_reg0_inferred__0/i__carry__2_n_0 ,\r1_reg0_inferred__0/i__carry__2_n_1 ,\r1_reg0_inferred__0/i__carry__2_n_2 ,\r1_reg0_inferred__0/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI(r02_reg[15:12]),
        .O(r1_reg0[15:12]),
        .S({i__carry__2_i_1__7_n_0,i__carry__2_i_2__7_n_0,i__carry__2_i_3__6_n_0,i__carry__2_i_4__6_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__3 
       (.CI(\r1_reg0_inferred__0/i__carry__2_n_0 ),
        .CO({\r1_reg0_inferred__0/i__carry__3_n_0 ,\r1_reg0_inferred__0/i__carry__3_n_1 ,\r1_reg0_inferred__0/i__carry__3_n_2 ,\r1_reg0_inferred__0/i__carry__3_n_3 }),
        .CYINIT(1'b0),
        .DI(r02_reg[19:16]),
        .O(r1_reg0[19:16]),
        .S({i__carry__3_i_1__6_n_0,i__carry__3_i_2__6_n_0,i__carry__3_i_3__6_n_0,i__carry__3_i_4__2_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__4 
       (.CI(\r1_reg0_inferred__0/i__carry__3_n_0 ),
        .CO({\r1_reg0_inferred__0/i__carry__4_n_0 ,\r1_reg0_inferred__0/i__carry__4_n_1 ,\r1_reg0_inferred__0/i__carry__4_n_2 ,\r1_reg0_inferred__0/i__carry__4_n_3 }),
        .CYINIT(1'b0),
        .DI(r02_reg[23:20]),
        .O(r1_reg0[23:20]),
        .S({i__carry__4_i_1__2_n_0,i__carry__4_i_2__2_n_0,i__carry__4_i_3__2_n_0,i__carry__4_i_4__2_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__5 
       (.CI(\r1_reg0_inferred__0/i__carry__4_n_0 ),
        .CO({\r1_reg0_inferred__0/i__carry__5_n_0 ,\r1_reg0_inferred__0/i__carry__5_n_1 ,\r1_reg0_inferred__0/i__carry__5_n_2 ,\r1_reg0_inferred__0/i__carry__5_n_3 }),
        .CYINIT(1'b0),
        .DI(r02_reg[27:24]),
        .O(r1_reg0[27:24]),
        .S({i__carry__5_i_1__2_n_0,i__carry__5_i_2__2_n_0,i__carry__5_i_3__2_n_0,i__carry__5_i_4__2_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__6 
       (.CI(\r1_reg0_inferred__0/i__carry__5_n_0 ),
        .CO({\r1_reg0_inferred__0/i__carry__6_n_0 ,\r1_reg0_inferred__0/i__carry__6_n_1 ,\r1_reg0_inferred__0/i__carry__6_n_2 ,\r1_reg0_inferred__0/i__carry__6_n_3 }),
        .CYINIT(1'b0),
        .DI({r01_reg[31],r02_reg[31],r02_reg[29:28]}),
        .O(r1_reg0[31:28]),
        .S({i__carry__6_i_1__2_n_0,i__carry__6_i_2__2_n_0,i__carry__6_i_3__2_n_0,i__carry__6_i_4__0_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__7 
       (.CI(\r1_reg0_inferred__0/i__carry__6_n_0 ),
        .CO({\NLW_r1_reg0_inferred__0/i__carry__7_CO_UNCONNECTED [3:2],\r1_reg0_inferred__0/i__carry__7_n_2 ,\r1_reg0_inferred__0/i__carry__7_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,r01_reg[34],r01_reg[32]}),
        .O({\NLW_r1_reg0_inferred__0/i__carry__7_O_UNCONNECTED [3],r1_reg0[34:32]}),
        .S({1'b0,1'b1,i__carry__7_i_1__0_n_0,i__carry__7_i_2__0_n_0}));
  FDRE \r1_reg_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[10]),
        .Q(r1_reg[10]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[11]),
        .Q(r1_reg[11]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[12]),
        .Q(r1_reg[12]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[13]),
        .Q(r1_reg[13]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[14]),
        .Q(r1_reg[14]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[15]),
        .Q(r1_reg[15]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[16]),
        .Q(r1_reg[16]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[17]),
        .Q(r1_reg[17]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[18]),
        .Q(r1_reg[18]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[19]),
        .Q(r1_reg[19]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[20]),
        .Q(r1_reg[20]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[21]),
        .Q(r1_reg[21]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[22]),
        .Q(r1_reg[22]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[23]),
        .Q(r1_reg[23]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[24]),
        .Q(r1_reg[24]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[25]),
        .Q(r1_reg[25]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[26]),
        .Q(r1_reg[26]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[27]),
        .Q(r1_reg[27]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[28]),
        .Q(r1_reg[28]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[29]),
        .Q(r1_reg[29]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[30]),
        .Q(r1_reg[30]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[31]),
        .Q(r1_reg[31]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[32] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[32]),
        .Q(r1_reg[32]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[33] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[33]),
        .Q(r1_reg[33]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r1_reg_reg[34] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg0[34]),
        .Q(r1_reg[34]),
        .R(pp_mult_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    \r2_reg[8]_i_1__0 
       (.I0(r01_reg[34]),
        .I1(r1_reg[18]),
        .O(p_1_in[8]));
  FDRE \r2_reg_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg[10]),
        .Q(r3_sum11_in[25]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[10]),
        .Q(r3_sum11_in[35]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[11]),
        .Q(r3_sum11_in[36]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[12]),
        .Q(r3_sum11_in[37]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[13]),
        .Q(r3_sum11_in[38]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[14]),
        .Q(r3_sum11_in[39]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[15]),
        .Q(r3_sum11_in[40]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[16]),
        .Q(r3_sum11_in[41]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[17]),
        .Q(r3_sum11_in[42]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[18]),
        .Q(r3_sum11_in[43]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[19]),
        .Q(r3_sum11_in[44]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg[11]),
        .Q(r3_sum11_in[26]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[20]),
        .Q(r3_sum11_in[45]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[21]),
        .Q(r3_sum11_in[46]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[22]),
        .Q(r3_sum11_in[47]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[23]),
        .Q(r3_sum11_in[48]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[24]),
        .Q(r3_sum11_in[49]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg[12]),
        .Q(r3_sum11_in[27]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg[13]),
        .Q(r3_sum11_in[28]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg[14]),
        .Q(r3_sum11_in[29]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg[15]),
        .Q(r3_sum11_in[30]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg[16]),
        .Q(r3_sum11_in[31]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(r1_reg[17]),
        .Q(r3_sum11_in[32]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[8]),
        .Q(r3_sum11_in[33]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r2_reg_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_1_in[9]),
        .Q(r3_sum11_in[34]),
        .R(pp_mult_i_2__0_n_0));
  CARRY4 r2_sum_carry
       (.CI(1'b0),
        .CO({r2_sum_carry_n_0,r2_sum_carry_n_1,r2_sum_carry_n_2,r2_sum_carry_n_3}),
        .CYINIT(1'b0),
        .DI({r01_reg[21:20],r01_reg[34],r01_reg[34]}),
        .O({p_1_in[11:9],NLW_r2_sum_carry_O_UNCONNECTED[0]}),
        .S({r2_sum_carry_i_1__0_n_0,r2_sum_carry_i_2__0_n_0,r2_sum_carry_i_3__0_n_0,r2_sum_carry_i_4__0_n_0}));
  CARRY4 r2_sum_carry__0
       (.CI(r2_sum_carry_n_0),
        .CO({r2_sum_carry__0_n_0,r2_sum_carry__0_n_1,r2_sum_carry__0_n_2,r2_sum_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(r01_reg[25:22]),
        .O(p_1_in[15:12]),
        .S({r2_sum_carry__0_i_1__0_n_0,r2_sum_carry__0_i_2__0_n_0,r2_sum_carry__0_i_3__0_n_0,r2_sum_carry__0_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__0_i_1__0
       (.I0(r01_reg[25]),
        .I1(r1_reg[25]),
        .O(r2_sum_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__0_i_2__0
       (.I0(r01_reg[24]),
        .I1(r1_reg[24]),
        .O(r2_sum_carry__0_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__0_i_3__0
       (.I0(r01_reg[23]),
        .I1(r1_reg[23]),
        .O(r2_sum_carry__0_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__0_i_4__0
       (.I0(r01_reg[22]),
        .I1(r1_reg[22]),
        .O(r2_sum_carry__0_i_4__0_n_0));
  CARRY4 r2_sum_carry__1
       (.CI(r2_sum_carry__0_n_0),
        .CO({r2_sum_carry__1_n_0,r2_sum_carry__1_n_1,r2_sum_carry__1_n_2,r2_sum_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI(r01_reg[29:26]),
        .O(p_1_in[19:16]),
        .S({r2_sum_carry__1_i_1__0_n_0,r2_sum_carry__1_i_2__0_n_0,r2_sum_carry__1_i_3__0_n_0,r2_sum_carry__1_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__1_i_1__0
       (.I0(r01_reg[29]),
        .I1(r1_reg[29]),
        .O(r2_sum_carry__1_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__1_i_2__0
       (.I0(r01_reg[28]),
        .I1(r1_reg[28]),
        .O(r2_sum_carry__1_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__1_i_3__0
       (.I0(r01_reg[27]),
        .I1(r1_reg[27]),
        .O(r2_sum_carry__1_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__1_i_4__0
       (.I0(r01_reg[26]),
        .I1(r1_reg[26]),
        .O(r2_sum_carry__1_i_4__0_n_0));
  CARRY4 r2_sum_carry__2
       (.CI(r2_sum_carry__1_n_0),
        .CO({r2_sum_carry__2_n_0,r2_sum_carry__2_n_1,r2_sum_carry__2_n_2,r2_sum_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({r01_reg[34],r01_reg[32:30]}),
        .O(p_1_in[23:20]),
        .S({r2_sum_carry__2_i_1__0_n_0,r2_sum_carry__2_i_2__0_n_0,r2_sum_carry__2_i_3__0_n_0,r2_sum_carry__2_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__2_i_1__0
       (.I0(r01_reg[34]),
        .I1(r1_reg[33]),
        .O(r2_sum_carry__2_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__2_i_2__0
       (.I0(r01_reg[32]),
        .I1(r1_reg[32]),
        .O(r2_sum_carry__2_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__2_i_3__0
       (.I0(r01_reg[31]),
        .I1(r1_reg[31]),
        .O(r2_sum_carry__2_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__2_i_4__0
       (.I0(r01_reg[30]),
        .I1(r1_reg[30]),
        .O(r2_sum_carry__2_i_4__0_n_0));
  CARRY4 r2_sum_carry__3
       (.CI(r2_sum_carry__2_n_0),
        .CO(NLW_r2_sum_carry__3_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_r2_sum_carry__3_O_UNCONNECTED[3:1],p_1_in[24]}),
        .S({1'b0,1'b0,1'b0,r2_sum_carry__3_i_1__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__3_i_1__0
       (.I0(r01_reg[34]),
        .I1(r1_reg[34]),
        .O(r2_sum_carry__3_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry_i_1__0
       (.I0(r01_reg[21]),
        .I1(r1_reg[21]),
        .O(r2_sum_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry_i_2__0
       (.I0(r01_reg[20]),
        .I1(r1_reg[20]),
        .O(r2_sum_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry_i_3__0
       (.I0(r01_reg[34]),
        .I1(r1_reg[19]),
        .O(r2_sum_carry_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry_i_4__0
       (.I0(r01_reg[34]),
        .I1(r1_reg[18]),
        .O(r2_sum_carry_i_4__0_n_0));
  FDRE \r3_reg_dsp1_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[0]),
        .Q(r3_reg_dsp1[0]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp1_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[1]),
        .Q(r3_reg_dsp1[1]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp1_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[2]),
        .Q(r3_reg_dsp1[2]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp1_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[3]),
        .Q(r3_reg_dsp1[3]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp1_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[4]),
        .Q(r3_reg_dsp1[4]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp1_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[5]),
        .Q(r3_reg_dsp1[5]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp1_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[6]),
        .Q(r3_reg_dsp1[6]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp1_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[7]),
        .Q(r3_reg_dsp1[7]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[8]),
        .Q(\r3_reg_dsp3_reg_n_0_[0] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[18]),
        .Q(\r3_reg_dsp3_reg_n_0_[10] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[19]),
        .Q(\r3_reg_dsp3_reg_n_0_[11] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[20]),
        .Q(\r3_reg_dsp3_reg_n_0_[12] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[21]),
        .Q(\r3_reg_dsp3_reg_n_0_[13] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[22]),
        .Q(\r3_reg_dsp3_reg_n_0_[14] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[23]),
        .Q(\r3_reg_dsp3_reg_n_0_[15] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[24]),
        .Q(\r3_reg_dsp3_reg_n_0_[16] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[9]),
        .Q(\r3_reg_dsp3_reg_n_0_[1] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[10]),
        .Q(\r3_reg_dsp3_reg_n_0_[2] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[11]),
        .Q(\r3_reg_dsp3_reg_n_0_[3] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[12]),
        .Q(\r3_reg_dsp3_reg_n_0_[4] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[13]),
        .Q(\r3_reg_dsp3_reg_n_0_[5] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[14]),
        .Q(\r3_reg_dsp3_reg_n_0_[6] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[15]),
        .Q(\r3_reg_dsp3_reg_n_0_[7] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[16]),
        .Q(\r3_reg_dsp3_reg_n_0_[8] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_reg_dsp3_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(A[17]),
        .Q(\r3_reg_dsp3_reg_n_0_[9] ),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[0] ),
        .Q(r3_shr[0]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[10] ),
        .Q(r3_shr[10]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[11] ),
        .Q(r3_shr[11]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[12] ),
        .Q(r3_shr[12]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[13] ),
        .Q(r3_shr[13]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[14] ),
        .Q(r3_shr[14]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[15] ),
        .Q(r3_shr[15]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[16] ),
        .Q(r3_shr[16]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[1] ),
        .Q(r3_shr[1]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[2] ),
        .Q(r3_shr[2]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[3] ),
        .Q(r3_shr[3]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[4] ),
        .Q(r3_shr[4]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[5] ),
        .Q(r3_shr[5]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[6] ),
        .Q(r3_shr[6]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[7] ),
        .Q(r3_shr[7]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[8] ),
        .Q(r3_shr[8]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r3_shr_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[9] ),
        .Q(r3_shr[9]),
        .R(pp_mult_i_2__0_n_0));
  CARRY4 r3_sum__2_carry
       (.CI(1'b0),
        .CO({r3_sum__2_carry_n_0,r3_sum__2_carry_n_1,r3_sum__2_carry_n_2,r3_sum__2_carry_n_3}),
        .CYINIT(r3_sum10_in[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_r3_sum__2_carry_O_UNCONNECTED[3:0]),
        .S(r3_sum10_in[4:1]));
  CARRY4 r3_sum__2_carry__0
       (.CI(r3_sum__2_carry_n_0),
        .CO({r3_sum__2_carry__0_n_0,r3_sum__2_carry__0_n_1,r3_sum__2_carry__0_n_2,r3_sum__2_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_r3_sum__2_carry__0_O_UNCONNECTED[3:0]),
        .S(r3_sum10_in[8:5]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__0_i_1__0
       (.I0(aa_mult_n_97),
        .O(r3_sum10_in[8]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__0_i_2__0
       (.I0(aa_mult_n_98),
        .O(r3_sum10_in[7]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__0_i_3__0
       (.I0(aa_mult_n_99),
        .O(r3_sum10_in[6]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__0_i_4__0
       (.I0(aa_mult_n_100),
        .O(r3_sum10_in[5]));
  CARRY4 r3_sum__2_carry__1
       (.CI(r3_sum__2_carry__0_n_0),
        .CO({r3_sum__2_carry__1_n_0,r3_sum__2_carry__1_n_1,r3_sum__2_carry__1_n_2,r3_sum__2_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_r3_sum__2_carry__1_O_UNCONNECTED[3:0]),
        .S(r3_sum10_in[12:9]));
  CARRY4 r3_sum__2_carry__10
       (.CI(r3_sum__2_carry__9_n_0),
        .CO({r3_sum__2_carry__10_n_0,r3_sum__2_carry__10_n_1,r3_sum__2_carry__10_n_2,r3_sum__2_carry__10_n_3}),
        .CYINIT(1'b0),
        .DI({r3_sum__2_carry__10_i_1__0_n_0,r3_sum__2_carry__10_i_2__0_n_0,r3_sum__2_carry__10_i_3__0_n_0,r3_sum__2_carry__10_i_4__0_n_0}),
        .O(A[23:20]),
        .S({r3_sum__2_carry__10_i_5__0_n_0,r3_sum__2_carry__10_i_6__0_n_0,r3_sum__2_carry__10_i_7__0_n_0,r3_sum__2_carry__10_i_8__0_n_0}));
  LUT4 #(
    .INIT(16'hE00E)) 
    r3_sum__2_carry__10_i_1__0
       (.I0(\r3_reg_dsp3_reg_n_0_[13] ),
        .I1(r3_sum11_in[46]),
        .I2(\r3_reg_dsp3_reg_n_0_[14] ),
        .I3(r3_sum11_in[47]),
        .O(r3_sum__2_carry__10_i_1__0_n_0));
  LUT4 #(
    .INIT(16'hE00E)) 
    r3_sum__2_carry__10_i_2__0
       (.I0(\r3_reg_dsp3_reg_n_0_[12] ),
        .I1(r3_sum11_in[45]),
        .I2(\r3_reg_dsp3_reg_n_0_[13] ),
        .I3(r3_sum11_in[46]),
        .O(r3_sum__2_carry__10_i_2__0_n_0));
  LUT4 #(
    .INIT(16'hE00E)) 
    r3_sum__2_carry__10_i_3__0
       (.I0(\r3_reg_dsp3_reg_n_0_[11] ),
        .I1(r3_sum11_in[44]),
        .I2(\r3_reg_dsp3_reg_n_0_[12] ),
        .I3(r3_sum11_in[45]),
        .O(r3_sum__2_carry__10_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hE00E)) 
    r3_sum__2_carry__10_i_4__0
       (.I0(\r3_reg_dsp3_reg_n_0_[10] ),
        .I1(r3_sum11_in[43]),
        .I2(\r3_reg_dsp3_reg_n_0_[11] ),
        .I3(r3_sum11_in[44]),
        .O(r3_sum__2_carry__10_i_4__0_n_0));
  LUT6 #(
    .INIT(64'hE11E0FF00FF01EE1)) 
    r3_sum__2_carry__10_i_5__0
       (.I0(r3_sum11_in[46]),
        .I1(\r3_reg_dsp3_reg_n_0_[13] ),
        .I2(r3_sum11_in[48]),
        .I3(\r3_reg_dsp3_reg_n_0_[15] ),
        .I4(r3_sum11_in[47]),
        .I5(\r3_reg_dsp3_reg_n_0_[14] ),
        .O(r3_sum__2_carry__10_i_5__0_n_0));
  LUT6 #(
    .INIT(64'hE11E0FF00FF01EE1)) 
    r3_sum__2_carry__10_i_6__0
       (.I0(r3_sum11_in[45]),
        .I1(\r3_reg_dsp3_reg_n_0_[12] ),
        .I2(r3_sum11_in[47]),
        .I3(\r3_reg_dsp3_reg_n_0_[14] ),
        .I4(r3_sum11_in[46]),
        .I5(\r3_reg_dsp3_reg_n_0_[13] ),
        .O(r3_sum__2_carry__10_i_6__0_n_0));
  LUT6 #(
    .INIT(64'hE11E0FF00FF01EE1)) 
    r3_sum__2_carry__10_i_7__0
       (.I0(r3_sum11_in[44]),
        .I1(\r3_reg_dsp3_reg_n_0_[11] ),
        .I2(r3_sum11_in[46]),
        .I3(\r3_reg_dsp3_reg_n_0_[13] ),
        .I4(r3_sum11_in[45]),
        .I5(\r3_reg_dsp3_reg_n_0_[12] ),
        .O(r3_sum__2_carry__10_i_7__0_n_0));
  LUT6 #(
    .INIT(64'hE11E0FF00FF01EE1)) 
    r3_sum__2_carry__10_i_8__0
       (.I0(r3_sum11_in[43]),
        .I1(\r3_reg_dsp3_reg_n_0_[10] ),
        .I2(r3_sum11_in[45]),
        .I3(\r3_reg_dsp3_reg_n_0_[12] ),
        .I4(r3_sum11_in[44]),
        .I5(\r3_reg_dsp3_reg_n_0_[11] ),
        .O(r3_sum__2_carry__10_i_8__0_n_0));
  CARRY4 r3_sum__2_carry__11
       (.CI(r3_sum__2_carry__10_n_0),
        .CO(NLW_r3_sum__2_carry__11_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_r3_sum__2_carry__11_O_UNCONNECTED[3:1],A[24]}),
        .S({1'b0,1'b0,1'b0,r3_sum__2_carry__11_i_1__0_n_0}));
  LUT6 #(
    .INIT(64'hE11E0FF00FF01EE1)) 
    r3_sum__2_carry__11_i_1__0
       (.I0(r3_sum11_in[47]),
        .I1(\r3_reg_dsp3_reg_n_0_[14] ),
        .I2(r3_sum11_in[49]),
        .I3(\r3_reg_dsp3_reg_n_0_[16] ),
        .I4(r3_sum11_in[48]),
        .I5(\r3_reg_dsp3_reg_n_0_[15] ),
        .O(r3_sum__2_carry__11_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__1_i_1__0
       (.I0(aa_mult_n_93),
        .O(r3_sum10_in[12]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__1_i_2__0
       (.I0(aa_mult_n_94),
        .O(r3_sum10_in[11]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__1_i_3__0
       (.I0(aa_mult_n_95),
        .O(r3_sum10_in[10]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__1_i_4__0
       (.I0(aa_mult_n_96),
        .O(r3_sum10_in[9]));
  CARRY4 r3_sum__2_carry__2
       (.CI(r3_sum__2_carry__1_n_0),
        .CO({r3_sum__2_carry__2_n_0,r3_sum__2_carry__2_n_1,r3_sum__2_carry__2_n_2,r3_sum__2_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_r3_sum__2_carry__2_O_UNCONNECTED[3:0]),
        .S(r3_sum10_in[16:13]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__2_i_1__0
       (.I0(aa_mult_n_89),
        .O(r3_sum10_in[16]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__2_i_2__0
       (.I0(aa_mult_n_90),
        .O(r3_sum10_in[15]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__2_i_3__0
       (.I0(aa_mult_n_91),
        .O(r3_sum10_in[14]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__2_i_4__0
       (.I0(aa_mult_n_92),
        .O(r3_sum10_in[13]));
  CARRY4 r3_sum__2_carry__3
       (.CI(r3_sum__2_carry__2_n_0),
        .CO({r3_sum__2_carry__3_n_0,r3_sum__2_carry__3_n_1,r3_sum__2_carry__3_n_2,r3_sum__2_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_r3_sum__2_carry__3_O_UNCONNECTED[3:0]),
        .S(r3_sum10_in[20:17]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__3_i_1__0
       (.I0(aa_mult_n_85),
        .O(r3_sum10_in[20]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__3_i_2__0
       (.I0(aa_mult_n_86),
        .O(r3_sum10_in[19]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__3_i_3__0
       (.I0(aa_mult_n_87),
        .O(r3_sum10_in[18]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__3_i_4__0
       (.I0(aa_mult_n_88),
        .O(r3_sum10_in[17]));
  CARRY4 r3_sum__2_carry__4
       (.CI(r3_sum__2_carry__3_n_0),
        .CO({r3_sum__2_carry__4_n_0,r3_sum__2_carry__4_n_1,r3_sum__2_carry__4_n_2,r3_sum__2_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_r3_sum__2_carry__4_O_UNCONNECTED[3:0]),
        .S(r3_sum10_in[24:21]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__4_i_1__0
       (.I0(aa_mult_n_81),
        .O(r3_sum10_in[24]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__4_i_2__0
       (.I0(aa_mult_n_82),
        .O(r3_sum10_in[23]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__4_i_3__0
       (.I0(aa_mult_n_83),
        .O(r3_sum10_in[22]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__4_i_4__0
       (.I0(aa_mult_n_84),
        .O(r3_sum10_in[21]));
  CARRY4 r3_sum__2_carry__5
       (.CI(r3_sum__2_carry__4_n_0),
        .CO({r3_sum__2_carry__5_n_0,r3_sum__2_carry__5_n_1,r3_sum__2_carry__5_n_2,r3_sum__2_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI({r3_sum__2_carry__5_i_1__0_n_0,r3_sum__2_carry__5_i_2__0_n_0,r3_sum__2_carry__5_i_3__0_n_0,r3_sum11_in[25]}),
        .O(A[3:0]),
        .S({r3_sum__2_carry__5_i_4__0_n_0,r3_sum__2_carry__5_i_5__0_n_0,r3_sum__2_carry__5_i_6__0_n_0,r3_sum__2_carry__5_i_7__0_n_0}));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__5_i_1__0
       (.I0(aa_mult_n_78),
        .I1(r3_reg_dsp1[2]),
        .I2(r3_sum11_in[27]),
        .O(r3_sum__2_carry__5_i_1__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__5_i_2__0
       (.I0(aa_mult_n_79),
        .I1(r3_reg_dsp1[1]),
        .I2(r3_sum11_in[26]),
        .O(r3_sum__2_carry__5_i_2__0_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    r3_sum__2_carry__5_i_3__0
       (.I0(r3_sum11_in[26]),
        .I1(r3_reg_dsp1[1]),
        .I2(aa_mult_n_79),
        .O(r3_sum__2_carry__5_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__5_i_4__0
       (.I0(aa_mult_n_77),
        .I1(r3_reg_dsp1[3]),
        .I2(r3_sum11_in[28]),
        .I3(r3_sum__2_carry__5_i_1__0_n_0),
        .O(r3_sum__2_carry__5_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__5_i_5__0
       (.I0(aa_mult_n_78),
        .I1(r3_reg_dsp1[2]),
        .I2(r3_sum11_in[27]),
        .I3(r3_sum__2_carry__5_i_2__0_n_0),
        .O(r3_sum__2_carry__5_i_5__0_n_0));
  LUT5 #(
    .INIT(32'h69966969)) 
    r3_sum__2_carry__5_i_6__0
       (.I0(aa_mult_n_79),
        .I1(r3_reg_dsp1[1]),
        .I2(r3_sum11_in[26]),
        .I3(aa_mult_n_80),
        .I4(r3_reg_dsp1[0]),
        .O(r3_sum__2_carry__5_i_6__0_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    r3_sum__2_carry__5_i_7__0
       (.I0(r3_reg_dsp1[0]),
        .I1(aa_mult_n_80),
        .I2(r3_sum11_in[25]),
        .O(r3_sum__2_carry__5_i_7__0_n_0));
  CARRY4 r3_sum__2_carry__6
       (.CI(r3_sum__2_carry__5_n_0),
        .CO({r3_sum__2_carry__6_n_0,r3_sum__2_carry__6_n_1,r3_sum__2_carry__6_n_2,r3_sum__2_carry__6_n_3}),
        .CYINIT(1'b0),
        .DI({r3_sum__2_carry__6_i_1__0_n_0,r3_sum__2_carry__6_i_2__0_n_0,r3_sum__2_carry__6_i_3__0_n_0,r3_sum__2_carry__6_i_4__0_n_0}),
        .O(A[7:4]),
        .S({r3_sum__2_carry__6_i_5__0_n_0,r3_sum__2_carry__6_i_6__0_n_0,r3_sum__2_carry__6_i_7__0_n_0,r3_sum__2_carry__6_i_8__0_n_0}));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__6_i_1__0
       (.I0(aa_mult_n_74),
        .I1(r3_reg_dsp1[6]),
        .I2(r3_sum11_in[31]),
        .O(r3_sum__2_carry__6_i_1__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__6_i_2__0
       (.I0(aa_mult_n_75),
        .I1(r3_reg_dsp1[5]),
        .I2(r3_sum11_in[30]),
        .O(r3_sum__2_carry__6_i_2__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__6_i_3__0
       (.I0(aa_mult_n_76),
        .I1(r3_reg_dsp1[4]),
        .I2(r3_sum11_in[29]),
        .O(r3_sum__2_carry__6_i_3__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__6_i_4__0
       (.I0(aa_mult_n_77),
        .I1(r3_reg_dsp1[3]),
        .I2(r3_sum11_in[28]),
        .O(r3_sum__2_carry__6_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__6_i_5__0
       (.I0(aa_mult_n_73),
        .I1(r3_reg_dsp1[7]),
        .I2(r3_sum11_in[32]),
        .I3(r3_sum__2_carry__6_i_1__0_n_0),
        .O(r3_sum__2_carry__6_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__6_i_6__0
       (.I0(aa_mult_n_74),
        .I1(r3_reg_dsp1[6]),
        .I2(r3_sum11_in[31]),
        .I3(r3_sum__2_carry__6_i_2__0_n_0),
        .O(r3_sum__2_carry__6_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__6_i_7__0
       (.I0(aa_mult_n_75),
        .I1(r3_reg_dsp1[5]),
        .I2(r3_sum11_in[30]),
        .I3(r3_sum__2_carry__6_i_3__0_n_0),
        .O(r3_sum__2_carry__6_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__6_i_8__0
       (.I0(aa_mult_n_76),
        .I1(r3_reg_dsp1[4]),
        .I2(r3_sum11_in[29]),
        .I3(r3_sum__2_carry__6_i_4__0_n_0),
        .O(r3_sum__2_carry__6_i_8__0_n_0));
  CARRY4 r3_sum__2_carry__7
       (.CI(r3_sum__2_carry__6_n_0),
        .CO({r3_sum__2_carry__7_n_0,r3_sum__2_carry__7_n_1,r3_sum__2_carry__7_n_2,r3_sum__2_carry__7_n_3}),
        .CYINIT(1'b0),
        .DI({r3_sum__2_carry__7_i_1__0_n_0,r3_sum__2_carry__7_i_2__0_n_0,r3_sum__2_carry__7_i_3__0_n_0,r3_sum__2_carry__7_i_4__0_n_0}),
        .O(A[11:8]),
        .S({r3_sum__2_carry__7_i_5__0_n_0,r3_sum__2_carry__7_i_6__0_n_0,r3_sum__2_carry__7_i_7__0_n_0,r3_sum__2_carry__7_i_8__0_n_0}));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__7_i_1__0
       (.I0(aa_mult_n_70),
        .I1(\r3_reg_dsp3_reg_n_0_[2] ),
        .I2(r3_sum11_in[35]),
        .O(r3_sum__2_carry__7_i_1__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__7_i_2__0
       (.I0(aa_mult_n_71),
        .I1(\r3_reg_dsp3_reg_n_0_[1] ),
        .I2(r3_sum11_in[34]),
        .O(r3_sum__2_carry__7_i_2__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__7_i_3__0
       (.I0(aa_mult_n_72),
        .I1(\r3_reg_dsp3_reg_n_0_[0] ),
        .I2(r3_sum11_in[33]),
        .O(r3_sum__2_carry__7_i_3__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__7_i_4__0
       (.I0(aa_mult_n_73),
        .I1(r3_reg_dsp1[7]),
        .I2(r3_sum11_in[32]),
        .O(r3_sum__2_carry__7_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__7_i_5__0
       (.I0(aa_mult_n_69),
        .I1(\r3_reg_dsp3_reg_n_0_[3] ),
        .I2(r3_sum11_in[36]),
        .I3(r3_sum__2_carry__7_i_1__0_n_0),
        .O(r3_sum__2_carry__7_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__7_i_6__0
       (.I0(aa_mult_n_70),
        .I1(\r3_reg_dsp3_reg_n_0_[2] ),
        .I2(r3_sum11_in[35]),
        .I3(r3_sum__2_carry__7_i_2__0_n_0),
        .O(r3_sum__2_carry__7_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__7_i_7__0
       (.I0(aa_mult_n_71),
        .I1(\r3_reg_dsp3_reg_n_0_[1] ),
        .I2(r3_sum11_in[34]),
        .I3(r3_sum__2_carry__7_i_3__0_n_0),
        .O(r3_sum__2_carry__7_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__7_i_8__0
       (.I0(aa_mult_n_72),
        .I1(\r3_reg_dsp3_reg_n_0_[0] ),
        .I2(r3_sum11_in[33]),
        .I3(r3_sum__2_carry__7_i_4__0_n_0),
        .O(r3_sum__2_carry__7_i_8__0_n_0));
  CARRY4 r3_sum__2_carry__8
       (.CI(r3_sum__2_carry__7_n_0),
        .CO({r3_sum__2_carry__8_n_0,r3_sum__2_carry__8_n_1,r3_sum__2_carry__8_n_2,r3_sum__2_carry__8_n_3}),
        .CYINIT(1'b0),
        .DI({r3_sum__2_carry__8_i_1__0_n_0,r3_sum__2_carry__8_i_2__0_n_0,r3_sum__2_carry__8_i_3__0_n_0,r3_sum__2_carry__8_i_4__0_n_0}),
        .O(A[15:12]),
        .S({r3_sum__2_carry__8_i_5__0_n_0,r3_sum__2_carry__8_i_6__0_n_0,r3_sum__2_carry__8_i_7__0_n_0,r3_sum__2_carry__8_i_8__0_n_0}));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__8_i_1__0
       (.I0(aa_mult_n_66),
        .I1(\r3_reg_dsp3_reg_n_0_[6] ),
        .I2(r3_sum11_in[39]),
        .O(r3_sum__2_carry__8_i_1__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__8_i_2__0
       (.I0(aa_mult_n_67),
        .I1(\r3_reg_dsp3_reg_n_0_[5] ),
        .I2(r3_sum11_in[38]),
        .O(r3_sum__2_carry__8_i_2__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__8_i_3__0
       (.I0(aa_mult_n_68),
        .I1(\r3_reg_dsp3_reg_n_0_[4] ),
        .I2(r3_sum11_in[37]),
        .O(r3_sum__2_carry__8_i_3__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__8_i_4__0
       (.I0(aa_mult_n_69),
        .I1(\r3_reg_dsp3_reg_n_0_[3] ),
        .I2(r3_sum11_in[36]),
        .O(r3_sum__2_carry__8_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__8_i_5__0
       (.I0(aa_mult_n_65),
        .I1(\r3_reg_dsp3_reg_n_0_[7] ),
        .I2(r3_sum11_in[40]),
        .I3(r3_sum__2_carry__8_i_1__0_n_0),
        .O(r3_sum__2_carry__8_i_5__0_n_0));
  (* HLUTNM = "lutpair1" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__8_i_6__0
       (.I0(aa_mult_n_66),
        .I1(\r3_reg_dsp3_reg_n_0_[6] ),
        .I2(r3_sum11_in[39]),
        .I3(r3_sum__2_carry__8_i_2__0_n_0),
        .O(r3_sum__2_carry__8_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__8_i_7__0
       (.I0(aa_mult_n_67),
        .I1(\r3_reg_dsp3_reg_n_0_[5] ),
        .I2(r3_sum11_in[38]),
        .I3(r3_sum__2_carry__8_i_3__0_n_0),
        .O(r3_sum__2_carry__8_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__8_i_8__0
       (.I0(aa_mult_n_68),
        .I1(\r3_reg_dsp3_reg_n_0_[4] ),
        .I2(r3_sum11_in[37]),
        .I3(r3_sum__2_carry__8_i_4__0_n_0),
        .O(r3_sum__2_carry__8_i_8__0_n_0));
  CARRY4 r3_sum__2_carry__9
       (.CI(r3_sum__2_carry__8_n_0),
        .CO({r3_sum__2_carry__9_n_0,r3_sum__2_carry__9_n_1,r3_sum__2_carry__9_n_2,r3_sum__2_carry__9_n_3}),
        .CYINIT(1'b0),
        .DI({r3_sum__2_carry__9_i_1__0_n_0,r3_sum__2_carry__9_i_2__0_n_0,r3_sum__2_carry__9_i_3__0_n_0,r3_sum__2_carry__9_i_4__0_n_0}),
        .O(A[19:16]),
        .S({r3_sum__2_carry__9_i_5__0_n_0,r3_sum__2_carry__9_i_6__0_n_0,r3_sum__2_carry__9_i_7__0_n_0,r3_sum__2_carry__9_i_8__0_n_0}));
  LUT4 #(
    .INIT(16'hE00E)) 
    r3_sum__2_carry__9_i_1__0
       (.I0(aa_mult_n_63),
        .I1(\r3_reg_dsp3_reg_n_0_[9] ),
        .I2(\r3_reg_dsp3_reg_n_0_[10] ),
        .I3(r3_sum11_in[43]),
        .O(r3_sum__2_carry__9_i_1__0_n_0));
  LUT3 #(
    .INIT(8'h82)) 
    r3_sum__2_carry__9_i_2__0
       (.I0(r3_sum11_in[42]),
        .I1(\r3_reg_dsp3_reg_n_0_[9] ),
        .I2(aa_mult_n_63),
        .O(r3_sum__2_carry__9_i_2__0_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    r3_sum__2_carry__9_i_3__0
       (.I0(\r3_reg_dsp3_reg_n_0_[9] ),
        .I1(aa_mult_n_63),
        .I2(r3_sum11_in[42]),
        .O(r3_sum__2_carry__9_i_3__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__9_i_4__0
       (.I0(aa_mult_n_65),
        .I1(\r3_reg_dsp3_reg_n_0_[7] ),
        .I2(r3_sum11_in[40]),
        .O(r3_sum__2_carry__9_i_4__0_n_0));
  LUT6 #(
    .INIT(64'hE11E0FF00FF01EE1)) 
    r3_sum__2_carry__9_i_5__0
       (.I0(\r3_reg_dsp3_reg_n_0_[9] ),
        .I1(aa_mult_n_63),
        .I2(r3_sum11_in[44]),
        .I3(\r3_reg_dsp3_reg_n_0_[11] ),
        .I4(r3_sum11_in[43]),
        .I5(\r3_reg_dsp3_reg_n_0_[10] ),
        .O(r3_sum__2_carry__9_i_5__0_n_0));
  LUT5 #(
    .INIT(32'h963C3C69)) 
    r3_sum__2_carry__9_i_6__0
       (.I0(r3_sum11_in[42]),
        .I1(r3_sum11_in[43]),
        .I2(\r3_reg_dsp3_reg_n_0_[10] ),
        .I3(\r3_reg_dsp3_reg_n_0_[9] ),
        .I4(aa_mult_n_63),
        .O(r3_sum__2_carry__9_i_6__0_n_0));
  LUT6 #(
    .INIT(64'h9669696996969669)) 
    r3_sum__2_carry__9_i_7__0
       (.I0(r3_sum11_in[42]),
        .I1(aa_mult_n_63),
        .I2(\r3_reg_dsp3_reg_n_0_[9] ),
        .I3(r3_sum11_in[41]),
        .I4(\r3_reg_dsp3_reg_n_0_[8] ),
        .I5(aa_mult_n_64),
        .O(r3_sum__2_carry__9_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__9_i_8__0
       (.I0(r3_sum__2_carry__9_i_4__0_n_0),
        .I1(aa_mult_n_64),
        .I2(\r3_reg_dsp3_reg_n_0_[8] ),
        .I3(r3_sum11_in[41]),
        .O(r3_sum__2_carry__9_i_8__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry_i_1__0
       (.I0(aa_mult_n_105),
        .O(r3_sum10_in[0]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry_i_2__0
       (.I0(aa_mult_n_101),
        .O(r3_sum10_in[4]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry_i_3__0
       (.I0(aa_mult_n_102),
        .O(r3_sum10_in[3]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry_i_4__0
       (.I0(aa_mult_n_103),
        .O(r3_sum10_in[2]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry_i_5__0
       (.I0(aa_mult_n_104),
        .O(r3_sum10_in[1]));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 r5_reg1_carry
       (.CI(1'b0),
        .CO({r5_reg1_carry_n_0,r5_reg1_carry_n_1,r5_reg1_carry_n_2,r5_reg1_carry_n_3}),
        .CYINIT(1'b0),
        .DI({r5_reg1_carry_i_1__0_n_0,r5_reg1_carry_i_2__0_n_0,r5_reg1_carry_i_3__0_n_0,r5_reg1_carry_i_4__0_n_0}),
        .O(NLW_r5_reg1_carry_O_UNCONNECTED[3:0]),
        .S({r5_reg20,r5_reg20,r5_reg1_carry_i_5__0_n_0,r5_reg1_carry_i_6__0_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 r5_reg1_carry__0
       (.CI(r5_reg1_carry_n_0),
        .CO({r5_reg1_carry__0_n_0,r5_reg1_carry__0_n_1,r5_reg1_carry__0_n_2,r5_reg1_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({r5_reg1_carry__0_i_1__0_n_0,r5_reg1_carry__0_i_2__0_n_0,r5_reg1_carry__0_i_3__0_n_0,r5_reg1_carry__0_i_4__0_n_0}),
        .O(NLW_r5_reg1_carry__0_O_UNCONNECTED[3:0]),
        .S({r5_reg20,r5_reg20,r5_reg20,r5_reg20}));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__0_i_1__0
       (.I0(r5_reg20),
        .O(r5_reg1_carry__0_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__0_i_2__0
       (.I0(r5_reg20),
        .O(r5_reg1_carry__0_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__0_i_3__0
       (.I0(r5_reg20),
        .O(r5_reg1_carry__0_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__0_i_4__0
       (.I0(r5_reg20),
        .O(r5_reg1_carry__0_i_4__0_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 r5_reg1_carry__1
       (.CI(r5_reg1_carry__0_n_0),
        .CO({r5_reg1_carry__1_n_0,r5_reg1_carry__1_n_1,r5_reg1_carry__1_n_2,r5_reg1_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({r5_reg1_carry__1_i_1__0_n_0,r5_reg1_carry__1_i_2__0_n_0,r5_reg1_carry__1_i_3__0_n_0,r5_reg1_carry__1_i_4__0_n_0}),
        .O(NLW_r5_reg1_carry__1_O_UNCONNECTED[3:0]),
        .S({r5_reg20,r5_reg20,r5_reg20,r5_reg20}));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__1_i_1__0
       (.I0(r5_reg20),
        .O(r5_reg1_carry__1_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__1_i_2__0
       (.I0(r5_reg20),
        .O(r5_reg1_carry__1_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__1_i_3__0
       (.I0(r5_reg20),
        .O(r5_reg1_carry__1_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__1_i_4__0
       (.I0(r5_reg20),
        .O(r5_reg1_carry__1_i_4__0_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 r5_reg1_carry__2
       (.CI(r5_reg1_carry__1_n_0),
        .CO({NLW_r5_reg1_carry__2_CO_UNCONNECTED[3:2],r5_reg1,r5_reg1_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,r5_reg1_carry__2_i_1__0_n_0}),
        .O(NLW_r5_reg1_carry__2_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,r5_reg20,r5_reg20}));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__2_i_1__0
       (.I0(r5_reg20),
        .O(r5_reg1_carry__2_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry_i_1__0
       (.I0(r5_reg20),
        .O(r5_reg1_carry_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry_i_2__0
       (.I0(r5_reg20),
        .O(r5_reg1_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    r5_reg1_carry_i_3__0
       (.I0(kk_mult_n_65),
        .I1(r5_reg20),
        .O(r5_reg1_carry_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry_i_4__0
       (.I0(kk_mult_n_66),
        .O(r5_reg1_carry_i_4__0_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    r5_reg1_carry_i_5__0
       (.I0(kk_mult_n_65),
        .I1(r5_reg20),
        .O(r5_reg1_carry_i_5__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    r5_reg1_carry_i_6__0
       (.I0(kk_mult_n_66),
        .I1(kk_mult_n_67),
        .O(r5_reg1_carry_i_6__0_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \r5_reg1_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\r5_reg1_inferred__0/i__carry_n_0 ,\r5_reg1_inferred__0/i__carry_n_1 ,\r5_reg1_inferred__0/i__carry_n_2 ,\r5_reg1_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({r5_reg20,r5_reg20,i__carry_i_1__12_n_0,kk_mult_n_66}),
        .O(\NLW_r5_reg1_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_2__10_n_0,i__carry_i_3__10_n_0,i__carry_i_4__10_n_0,i__carry_i_5__0_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \r5_reg1_inferred__0/i__carry__0 
       (.CI(\r5_reg1_inferred__0/i__carry_n_0 ),
        .CO({\r5_reg1_inferred__0/i__carry__0_n_0 ,\r5_reg1_inferred__0/i__carry__0_n_1 ,\r5_reg1_inferred__0/i__carry__0_n_2 ,\r5_reg1_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({r5_reg20,r5_reg20,r5_reg20,r5_reg20}),
        .O(\NLW_r5_reg1_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_1__10_n_0,i__carry__0_i_2__10_n_0,i__carry__0_i_3__10_n_0,i__carry__0_i_4__10_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \r5_reg1_inferred__0/i__carry__1 
       (.CI(\r5_reg1_inferred__0/i__carry__0_n_0 ),
        .CO({\r5_reg1_inferred__0/i__carry__1_n_0 ,\r5_reg1_inferred__0/i__carry__1_n_1 ,\r5_reg1_inferred__0/i__carry__1_n_2 ,\r5_reg1_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({r5_reg20,r5_reg20,r5_reg20,r5_reg20}),
        .O(\NLW_r5_reg1_inferred__0/i__carry__1_O_UNCONNECTED [3:0]),
        .S({i__carry__1_i_1__10_n_0,i__carry__1_i_2__10_n_0,i__carry__1_i_3__10_n_0,i__carry__1_i_4__8_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \r5_reg1_inferred__0/i__carry__2 
       (.CI(\r5_reg1_inferred__0/i__carry__1_n_0 ),
        .CO({\NLW_r5_reg1_inferred__0/i__carry__2_CO_UNCONNECTED [3:2],r5_reg10_in,\r5_reg1_inferred__0/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,r5_reg20}),
        .O(\NLW_r5_reg1_inferred__0/i__carry__2_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,i__carry__2_i_1__8_n_0,i__carry__2_i_2__8_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[0]_i_1__0 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_81),
        .O(\r5_reg[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[10]_i_1__0 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_71),
        .O(\r5_reg[10]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[11]_i_1__0 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_70),
        .O(\r5_reg[11]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[12]_i_1__0 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_69),
        .O(\r5_reg[12]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[13]_i_1__0 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_68),
        .O(\r5_reg[13]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[14]_i_1__0 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_67),
        .O(\r5_reg[14]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \r5_reg[15]_i_1__0 
       (.I0(kk_mult_n_66),
        .I1(r5_reg1),
        .I2(r5_reg10_in),
        .O(\r5_reg[15]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[1]_i_1__0 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_80),
        .O(\r5_reg[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[2]_i_1__0 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_79),
        .O(\r5_reg[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[3]_i_1__0 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_78),
        .O(\r5_reg[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[4]_i_1__0 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_77),
        .O(\r5_reg[4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[5]_i_1__0 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_76),
        .O(\r5_reg[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[6]_i_1__0 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_75),
        .O(\r5_reg[6]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[7]_i_1__0 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_74),
        .O(\r5_reg[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[8]_i_1__0 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_73),
        .O(\r5_reg[8]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[9]_i_1__0 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_72),
        .O(\r5_reg[9]_i_1__0_n_0 ));
  FDRE \r5_reg_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[0]_i_1__0_n_0 ),
        .Q(r5_reg[0]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r5_reg_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[10]_i_1__0_n_0 ),
        .Q(r5_reg[10]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r5_reg_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[11]_i_1__0_n_0 ),
        .Q(r5_reg[11]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r5_reg_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[12]_i_1__0_n_0 ),
        .Q(r5_reg[12]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r5_reg_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[13]_i_1__0_n_0 ),
        .Q(r5_reg[13]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r5_reg_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[14]_i_1__0_n_0 ),
        .Q(r5_reg[14]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r5_reg_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[15]_i_1__0_n_0 ),
        .Q(r5_reg[15]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r5_reg_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[1]_i_1__0_n_0 ),
        .Q(r5_reg[1]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r5_reg_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[2]_i_1__0_n_0 ),
        .Q(r5_reg[2]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r5_reg_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[3]_i_1__0_n_0 ),
        .Q(r5_reg[3]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r5_reg_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[4]_i_1__0_n_0 ),
        .Q(r5_reg[4]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r5_reg_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[5]_i_1__0_n_0 ),
        .Q(r5_reg[5]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r5_reg_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[6]_i_1__0_n_0 ),
        .Q(r5_reg[6]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r5_reg_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[7]_i_1__0_n_0 ),
        .Q(r5_reg[7]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r5_reg_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[8]_i_1__0_n_0 ),
        .Q(r5_reg[8]),
        .R(pp_mult_i_2__0_n_0));
  FDRE \r5_reg_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\r5_reg[9]_i_1__0_n_0 ),
        .Q(r5_reg[9]),
        .R(pp_mult_i_2__0_n_0));
endmodule

(* ORIG_REF_NAME = "osc_filter" *) 
module system_rp_oscilloscope_0_osc_filter_17
   (E,
    \s_axi_reg_araddr[5] ,
    \s_axi_reg_araddr[6] ,
    event_op_reset_i_5__0_0,
    \s_axi_reg_araddr[2] ,
    osc1_reg_wr_we,
    \s_axi_reg_araddr[4] ,
    \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[0] ,
    \s_axi_reg_araddr[4]_0 ,
    \s_axi_reg_araddr[2]_0 ,
    \adc_data_ch1_signed_reg[15] ,
    bypass_reg_reg_0,
    m_axi_osc1_aclk,
    clear,
    D,
    Q,
    kk_mult_0,
    bram_addr_a,
    m_axi_osc1_aresetn,
    \cfg_dec_rshift[3]_i_2 ,
    bram_en_a,
    bram_we_a,
    U_reg_ctrl_i_33,
    bb_mult_0);
  output [0:0]E;
  output [0:0]\s_axi_reg_araddr[5] ;
  output [0:0]\s_axi_reg_araddr[6] ;
  output event_op_reset_i_5__0_0;
  output \s_axi_reg_araddr[2] ;
  output osc1_reg_wr_we;
  output \s_axi_reg_araddr[4] ;
  output \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[0] ;
  output \s_axi_reg_araddr[4]_0 ;
  output \s_axi_reg_araddr[2]_0 ;
  output [15:0]\adc_data_ch1_signed_reg[15] ;
  input bypass_reg_reg_0;
  input m_axi_osc1_aclk;
  input clear;
  input [24:0]D;
  input [13:0]Q;
  input [24:0]kk_mult_0;
  input [7:0]bram_addr_a;
  input m_axi_osc1_aresetn;
  input \cfg_dec_rshift[3]_i_2 ;
  input bram_en_a;
  input [3:0]bram_we_a;
  input U_reg_ctrl_i_33;
  input bb_mult_0;

  wire [24:0]A;
  wire [16:0]B;
  wire [24:0]D;
  wire [0:0]E;
  wire \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[0] ;
  wire [13:0]Q;
  wire U_reg_ctrl_i_33;
  wire aa_mult_i_2__0_n_0;
  wire aa_mult_n_100;
  wire aa_mult_n_101;
  wire aa_mult_n_102;
  wire aa_mult_n_103;
  wire aa_mult_n_104;
  wire aa_mult_n_105;
  wire aa_mult_n_63;
  wire aa_mult_n_64;
  wire aa_mult_n_65;
  wire aa_mult_n_66;
  wire aa_mult_n_67;
  wire aa_mult_n_68;
  wire aa_mult_n_69;
  wire aa_mult_n_70;
  wire aa_mult_n_71;
  wire aa_mult_n_72;
  wire aa_mult_n_73;
  wire aa_mult_n_74;
  wire aa_mult_n_75;
  wire aa_mult_n_76;
  wire aa_mult_n_77;
  wire aa_mult_n_78;
  wire aa_mult_n_79;
  wire aa_mult_n_80;
  wire aa_mult_n_81;
  wire aa_mult_n_82;
  wire aa_mult_n_83;
  wire aa_mult_n_84;
  wire aa_mult_n_85;
  wire aa_mult_n_86;
  wire aa_mult_n_87;
  wire aa_mult_n_88;
  wire aa_mult_n_89;
  wire aa_mult_n_90;
  wire aa_mult_n_91;
  wire aa_mult_n_92;
  wire aa_mult_n_93;
  wire aa_mult_n_94;
  wire aa_mult_n_95;
  wire aa_mult_n_96;
  wire aa_mult_n_97;
  wire aa_mult_n_98;
  wire aa_mult_n_99;
  wire [15:0]\adc_data_ch1_signed_reg[15] ;
  wire bb_mult_0;
  wire bb_mult_n_100;
  wire bb_mult_n_101;
  wire bb_mult_n_102;
  wire bb_mult_n_103;
  wire bb_mult_n_104;
  wire bb_mult_n_105;
  wire bb_mult_n_96;
  wire bb_mult_n_97;
  wire bb_mult_n_98;
  wire bb_mult_n_99;
  wire [7:0]bram_addr_a;
  wire bram_en_a;
  wire [3:0]bram_we_a;
  wire bypass_reg;
  wire bypass_reg_reg_0;
  wire \cfg_dec_rshift[3]_i_2 ;
  wire clear;
  wire event_op_reset_i_10__0_n_0;
  wire event_op_reset_i_11__0_n_0;
  wire event_op_reset_i_12_n_0;
  wire event_op_reset_i_5__0_0;
  wire event_op_reset_i_8_n_0;
  wire event_op_reset_i_9_n_0;
  wire i__carry__0_i_1__3_n_0;
  wire i__carry__0_i_1__4_n_0;
  wire i__carry__0_i_2__3_n_0;
  wire i__carry__0_i_2__4_n_0;
  wire i__carry__0_i_3__3_n_0;
  wire i__carry__0_i_3__4_n_0;
  wire i__carry__0_i_4__3_n_0;
  wire i__carry__0_i_4__4_n_0;
  wire i__carry__1_i_1__3_n_0;
  wire i__carry__1_i_1__4_n_0;
  wire i__carry__1_i_2__3_n_0;
  wire i__carry__1_i_2__4_n_0;
  wire i__carry__1_i_3__3_n_0;
  wire i__carry__1_i_3__4_n_0;
  wire i__carry__1_i_4__2_n_0;
  wire i__carry__1_i_4__3_n_0;
  wire i__carry__2_i_1__2_n_0;
  wire i__carry__2_i_1__3_n_0;
  wire i__carry__2_i_2__2_n_0;
  wire i__carry__2_i_2__3_n_0;
  wire i__carry__2_i_3__2_n_0;
  wire i__carry__2_i_4__2_n_0;
  wire i__carry__3_i_1__3_n_0;
  wire i__carry__3_i_2__3_n_0;
  wire i__carry__3_i_3__2_n_0;
  wire i__carry__3_i_4__0_n_0;
  wire i__carry__4_i_1__1_n_0;
  wire i__carry__4_i_2__1_n_0;
  wire i__carry__4_i_3__1_n_0;
  wire i__carry__4_i_4__1_n_0;
  wire i__carry__5_i_1__1_n_0;
  wire i__carry__5_i_2__1_n_0;
  wire i__carry__5_i_3__1_n_0;
  wire i__carry__5_i_4__1_n_0;
  wire i__carry__6_i_1__1_n_0;
  wire i__carry__6_i_2__1_n_0;
  wire i__carry__6_i_3__1_n_0;
  wire i__carry__6_i_4_n_0;
  wire i__carry__7_i_1_n_0;
  wire i__carry__7_i_2_n_0;
  wire i__carry_i_1__4_n_0;
  wire i__carry_i_1__5_n_0;
  wire i__carry_i_2__3_n_0;
  wire i__carry_i_2__4_n_0;
  wire i__carry_i_3__3_n_0;
  wire i__carry_i_3__4_n_0;
  wire i__carry_i_4__3_n_0;
  wire i__carry_i_4__9_n_0;
  wire i__carry_i_5_n_0;
  wire [24:0]kk_mult_0;
  wire kk_mult_n_100;
  wire kk_mult_n_101;
  wire kk_mult_n_102;
  wire kk_mult_n_103;
  wire kk_mult_n_104;
  wire kk_mult_n_105;
  wire kk_mult_n_65;
  wire kk_mult_n_66;
  wire kk_mult_n_67;
  wire kk_mult_n_68;
  wire kk_mult_n_69;
  wire kk_mult_n_70;
  wire kk_mult_n_71;
  wire kk_mult_n_72;
  wire kk_mult_n_73;
  wire kk_mult_n_74;
  wire kk_mult_n_75;
  wire kk_mult_n_76;
  wire kk_mult_n_77;
  wire kk_mult_n_78;
  wire kk_mult_n_79;
  wire kk_mult_n_80;
  wire kk_mult_n_81;
  wire kk_mult_n_82;
  wire kk_mult_n_83;
  wire kk_mult_n_84;
  wire kk_mult_n_85;
  wire kk_mult_n_86;
  wire kk_mult_n_87;
  wire kk_mult_n_88;
  wire kk_mult_n_89;
  wire kk_mult_n_90;
  wire kk_mult_n_91;
  wire kk_mult_n_92;
  wire kk_mult_n_93;
  wire kk_mult_n_94;
  wire kk_mult_n_95;
  wire kk_mult_n_96;
  wire kk_mult_n_97;
  wire kk_mult_n_98;
  wire kk_mult_n_99;
  wire m_axi_osc1_aclk;
  wire m_axi_osc1_aresetn;
  wire osc1_reg_wr_we;
  wire [24:8]p_1_in;
  wire pp_mult_i_10_n_0;
  wire pp_mult_i_11_n_0;
  wire pp_mult_i_12_n_0;
  wire pp_mult_i_13_n_0;
  wire pp_mult_i_14_n_0;
  wire pp_mult_i_15_n_0;
  wire pp_mult_i_16_n_0;
  wire pp_mult_i_17_n_0;
  wire pp_mult_i_18_n_0;
  wire pp_mult_i_19_n_0;
  wire pp_mult_i_20_n_0;
  wire pp_mult_i_21_n_0;
  wire pp_mult_i_22_n_0;
  wire pp_mult_i_23_n_0;
  wire pp_mult_i_24_n_0;
  wire pp_mult_i_25_n_0;
  wire pp_mult_i_26_n_0;
  wire pp_mult_i_2_n_0;
  wire pp_mult_i_4_n_0;
  wire pp_mult_i_4_n_1;
  wire pp_mult_i_4_n_2;
  wire pp_mult_i_4_n_3;
  wire pp_mult_i_5_n_0;
  wire pp_mult_i_5_n_1;
  wire pp_mult_i_5_n_2;
  wire pp_mult_i_5_n_3;
  wire pp_mult_i_6_n_0;
  wire pp_mult_i_6_n_1;
  wire pp_mult_i_6_n_2;
  wire pp_mult_i_6_n_3;
  wire pp_mult_i_7_n_0;
  wire pp_mult_i_7_n_1;
  wire pp_mult_i_7_n_2;
  wire pp_mult_i_7_n_3;
  wire pp_mult_i_9_n_0;
  wire pp_mult_n_100;
  wire pp_mult_n_101;
  wire pp_mult_n_102;
  wire pp_mult_n_103;
  wire pp_mult_n_104;
  wire pp_mult_n_105;
  wire pp_mult_n_64;
  wire pp_mult_n_65;
  wire pp_mult_n_66;
  wire pp_mult_n_67;
  wire pp_mult_n_68;
  wire pp_mult_n_69;
  wire pp_mult_n_70;
  wire pp_mult_n_71;
  wire pp_mult_n_72;
  wire pp_mult_n_90;
  wire pp_mult_n_91;
  wire pp_mult_n_92;
  wire pp_mult_n_93;
  wire pp_mult_n_94;
  wire pp_mult_n_95;
  wire pp_mult_n_96;
  wire pp_mult_n_97;
  wire pp_mult_n_98;
  wire pp_mult_n_99;
  wire [34:20]r01_reg;
  wire [31:0]r02_reg;
  wire [34:10]r1_reg;
  wire [34:10]r1_reg0;
  wire \r1_reg0_inferred__0/i__carry__0_n_0 ;
  wire \r1_reg0_inferred__0/i__carry__0_n_1 ;
  wire \r1_reg0_inferred__0/i__carry__0_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__0_n_3 ;
  wire \r1_reg0_inferred__0/i__carry__1_n_0 ;
  wire \r1_reg0_inferred__0/i__carry__1_n_1 ;
  wire \r1_reg0_inferred__0/i__carry__1_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__1_n_3 ;
  wire \r1_reg0_inferred__0/i__carry__2_n_0 ;
  wire \r1_reg0_inferred__0/i__carry__2_n_1 ;
  wire \r1_reg0_inferred__0/i__carry__2_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__2_n_3 ;
  wire \r1_reg0_inferred__0/i__carry__3_n_0 ;
  wire \r1_reg0_inferred__0/i__carry__3_n_1 ;
  wire \r1_reg0_inferred__0/i__carry__3_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__3_n_3 ;
  wire \r1_reg0_inferred__0/i__carry__4_n_0 ;
  wire \r1_reg0_inferred__0/i__carry__4_n_1 ;
  wire \r1_reg0_inferred__0/i__carry__4_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__4_n_3 ;
  wire \r1_reg0_inferred__0/i__carry__5_n_0 ;
  wire \r1_reg0_inferred__0/i__carry__5_n_1 ;
  wire \r1_reg0_inferred__0/i__carry__5_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__5_n_3 ;
  wire \r1_reg0_inferred__0/i__carry__6_n_0 ;
  wire \r1_reg0_inferred__0/i__carry__6_n_1 ;
  wire \r1_reg0_inferred__0/i__carry__6_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__6_n_3 ;
  wire \r1_reg0_inferred__0/i__carry__7_n_2 ;
  wire \r1_reg0_inferred__0/i__carry__7_n_3 ;
  wire \r1_reg0_inferred__0/i__carry_n_0 ;
  wire \r1_reg0_inferred__0/i__carry_n_1 ;
  wire \r1_reg0_inferred__0/i__carry_n_2 ;
  wire \r1_reg0_inferred__0/i__carry_n_3 ;
  wire r2_sum_carry__0_i_1_n_0;
  wire r2_sum_carry__0_i_2_n_0;
  wire r2_sum_carry__0_i_3_n_0;
  wire r2_sum_carry__0_i_4_n_0;
  wire r2_sum_carry__0_n_0;
  wire r2_sum_carry__0_n_1;
  wire r2_sum_carry__0_n_2;
  wire r2_sum_carry__0_n_3;
  wire r2_sum_carry__1_i_1_n_0;
  wire r2_sum_carry__1_i_2_n_0;
  wire r2_sum_carry__1_i_3_n_0;
  wire r2_sum_carry__1_i_4_n_0;
  wire r2_sum_carry__1_n_0;
  wire r2_sum_carry__1_n_1;
  wire r2_sum_carry__1_n_2;
  wire r2_sum_carry__1_n_3;
  wire r2_sum_carry__2_i_1_n_0;
  wire r2_sum_carry__2_i_2_n_0;
  wire r2_sum_carry__2_i_3_n_0;
  wire r2_sum_carry__2_i_4_n_0;
  wire r2_sum_carry__2_n_0;
  wire r2_sum_carry__2_n_1;
  wire r2_sum_carry__2_n_2;
  wire r2_sum_carry__2_n_3;
  wire r2_sum_carry__3_i_1_n_0;
  wire r2_sum_carry_i_1_n_0;
  wire r2_sum_carry_i_2_n_0;
  wire r2_sum_carry_i_3_n_0;
  wire r2_sum_carry_i_4_n_0;
  wire r2_sum_carry_n_0;
  wire r2_sum_carry_n_1;
  wire r2_sum_carry_n_2;
  wire r2_sum_carry_n_3;
  wire [7:0]r3_reg_dsp1;
  wire \r3_reg_dsp3_reg_n_0_[0] ;
  wire \r3_reg_dsp3_reg_n_0_[10] ;
  wire \r3_reg_dsp3_reg_n_0_[11] ;
  wire \r3_reg_dsp3_reg_n_0_[12] ;
  wire \r3_reg_dsp3_reg_n_0_[13] ;
  wire \r3_reg_dsp3_reg_n_0_[14] ;
  wire \r3_reg_dsp3_reg_n_0_[15] ;
  wire \r3_reg_dsp3_reg_n_0_[16] ;
  wire \r3_reg_dsp3_reg_n_0_[1] ;
  wire \r3_reg_dsp3_reg_n_0_[2] ;
  wire \r3_reg_dsp3_reg_n_0_[3] ;
  wire \r3_reg_dsp3_reg_n_0_[4] ;
  wire \r3_reg_dsp3_reg_n_0_[5] ;
  wire \r3_reg_dsp3_reg_n_0_[6] ;
  wire \r3_reg_dsp3_reg_n_0_[7] ;
  wire \r3_reg_dsp3_reg_n_0_[8] ;
  wire \r3_reg_dsp3_reg_n_0_[9] ;
  wire [16:0]r3_shr;
  wire [24:0]r3_sum10_in;
  wire [49:25]r3_sum11_in;
  wire r3_sum__2_carry__0_n_0;
  wire r3_sum__2_carry__0_n_1;
  wire r3_sum__2_carry__0_n_2;
  wire r3_sum__2_carry__0_n_3;
  wire r3_sum__2_carry__10_i_1_n_0;
  wire r3_sum__2_carry__10_i_2_n_0;
  wire r3_sum__2_carry__10_i_3_n_0;
  wire r3_sum__2_carry__10_i_4_n_0;
  wire r3_sum__2_carry__10_i_5_n_0;
  wire r3_sum__2_carry__10_i_6_n_0;
  wire r3_sum__2_carry__10_i_7_n_0;
  wire r3_sum__2_carry__10_i_8_n_0;
  wire r3_sum__2_carry__10_n_0;
  wire r3_sum__2_carry__10_n_1;
  wire r3_sum__2_carry__10_n_2;
  wire r3_sum__2_carry__10_n_3;
  wire r3_sum__2_carry__11_i_1_n_0;
  wire r3_sum__2_carry__1_n_0;
  wire r3_sum__2_carry__1_n_1;
  wire r3_sum__2_carry__1_n_2;
  wire r3_sum__2_carry__1_n_3;
  wire r3_sum__2_carry__2_n_0;
  wire r3_sum__2_carry__2_n_1;
  wire r3_sum__2_carry__2_n_2;
  wire r3_sum__2_carry__2_n_3;
  wire r3_sum__2_carry__3_n_0;
  wire r3_sum__2_carry__3_n_1;
  wire r3_sum__2_carry__3_n_2;
  wire r3_sum__2_carry__3_n_3;
  wire r3_sum__2_carry__4_n_0;
  wire r3_sum__2_carry__4_n_1;
  wire r3_sum__2_carry__4_n_2;
  wire r3_sum__2_carry__4_n_3;
  wire r3_sum__2_carry__5_i_1_n_0;
  wire r3_sum__2_carry__5_i_2_n_0;
  wire r3_sum__2_carry__5_i_3_n_0;
  wire r3_sum__2_carry__5_i_4_n_0;
  wire r3_sum__2_carry__5_i_5_n_0;
  wire r3_sum__2_carry__5_i_6_n_0;
  wire r3_sum__2_carry__5_i_7_n_0;
  wire r3_sum__2_carry__5_n_0;
  wire r3_sum__2_carry__5_n_1;
  wire r3_sum__2_carry__5_n_2;
  wire r3_sum__2_carry__5_n_3;
  wire r3_sum__2_carry__6_i_1_n_0;
  wire r3_sum__2_carry__6_i_2_n_0;
  wire r3_sum__2_carry__6_i_3_n_0;
  wire r3_sum__2_carry__6_i_4_n_0;
  wire r3_sum__2_carry__6_i_5_n_0;
  wire r3_sum__2_carry__6_i_6_n_0;
  wire r3_sum__2_carry__6_i_7_n_0;
  wire r3_sum__2_carry__6_i_8_n_0;
  wire r3_sum__2_carry__6_n_0;
  wire r3_sum__2_carry__6_n_1;
  wire r3_sum__2_carry__6_n_2;
  wire r3_sum__2_carry__6_n_3;
  wire r3_sum__2_carry__7_i_1_n_0;
  wire r3_sum__2_carry__7_i_2_n_0;
  wire r3_sum__2_carry__7_i_3_n_0;
  wire r3_sum__2_carry__7_i_4_n_0;
  wire r3_sum__2_carry__7_i_5_n_0;
  wire r3_sum__2_carry__7_i_6_n_0;
  wire r3_sum__2_carry__7_i_7_n_0;
  wire r3_sum__2_carry__7_i_8_n_0;
  wire r3_sum__2_carry__7_n_0;
  wire r3_sum__2_carry__7_n_1;
  wire r3_sum__2_carry__7_n_2;
  wire r3_sum__2_carry__7_n_3;
  wire r3_sum__2_carry__8_i_1_n_0;
  wire r3_sum__2_carry__8_i_2_n_0;
  wire r3_sum__2_carry__8_i_3_n_0;
  wire r3_sum__2_carry__8_i_4_n_0;
  wire r3_sum__2_carry__8_i_5_n_0;
  wire r3_sum__2_carry__8_i_6_n_0;
  wire r3_sum__2_carry__8_i_7_n_0;
  wire r3_sum__2_carry__8_i_8_n_0;
  wire r3_sum__2_carry__8_n_0;
  wire r3_sum__2_carry__8_n_1;
  wire r3_sum__2_carry__8_n_2;
  wire r3_sum__2_carry__8_n_3;
  wire r3_sum__2_carry__9_i_1_n_0;
  wire r3_sum__2_carry__9_i_2_n_0;
  wire r3_sum__2_carry__9_i_3_n_0;
  wire r3_sum__2_carry__9_i_4_n_0;
  wire r3_sum__2_carry__9_i_5_n_0;
  wire r3_sum__2_carry__9_i_6_n_0;
  wire r3_sum__2_carry__9_i_7_n_0;
  wire r3_sum__2_carry__9_i_8_n_0;
  wire r3_sum__2_carry__9_n_0;
  wire r3_sum__2_carry__9_n_1;
  wire r3_sum__2_carry__9_n_2;
  wire r3_sum__2_carry__9_n_3;
  wire r3_sum__2_carry_n_0;
  wire r3_sum__2_carry_n_1;
  wire r3_sum__2_carry_n_2;
  wire r3_sum__2_carry_n_3;
  wire [16:0]r4_sum0;
  wire [15:0]r5_reg;
  wire r5_reg1;
  wire r5_reg10_in;
  wire r5_reg1_carry__0_i_1_n_0;
  wire r5_reg1_carry__0_i_2_n_0;
  wire r5_reg1_carry__0_i_3_n_0;
  wire r5_reg1_carry__0_i_4_n_0;
  wire r5_reg1_carry__0_n_0;
  wire r5_reg1_carry__0_n_1;
  wire r5_reg1_carry__0_n_2;
  wire r5_reg1_carry__0_n_3;
  wire r5_reg1_carry__1_i_1_n_0;
  wire r5_reg1_carry__1_i_2_n_0;
  wire r5_reg1_carry__1_i_3_n_0;
  wire r5_reg1_carry__1_i_4_n_0;
  wire r5_reg1_carry__1_n_0;
  wire r5_reg1_carry__1_n_1;
  wire r5_reg1_carry__1_n_2;
  wire r5_reg1_carry__1_n_3;
  wire r5_reg1_carry__2_i_1_n_0;
  wire r5_reg1_carry__2_n_3;
  wire r5_reg1_carry_i_1_n_0;
  wire r5_reg1_carry_i_2_n_0;
  wire r5_reg1_carry_i_3_n_0;
  wire r5_reg1_carry_i_4_n_0;
  wire r5_reg1_carry_i_5_n_0;
  wire r5_reg1_carry_i_6_n_0;
  wire r5_reg1_carry_n_0;
  wire r5_reg1_carry_n_1;
  wire r5_reg1_carry_n_2;
  wire r5_reg1_carry_n_3;
  wire \r5_reg1_inferred__0/i__carry__0_n_0 ;
  wire \r5_reg1_inferred__0/i__carry__0_n_1 ;
  wire \r5_reg1_inferred__0/i__carry__0_n_2 ;
  wire \r5_reg1_inferred__0/i__carry__0_n_3 ;
  wire \r5_reg1_inferred__0/i__carry__1_n_0 ;
  wire \r5_reg1_inferred__0/i__carry__1_n_1 ;
  wire \r5_reg1_inferred__0/i__carry__1_n_2 ;
  wire \r5_reg1_inferred__0/i__carry__1_n_3 ;
  wire \r5_reg1_inferred__0/i__carry__2_n_3 ;
  wire \r5_reg1_inferred__0/i__carry_n_0 ;
  wire \r5_reg1_inferred__0/i__carry_n_1 ;
  wire \r5_reg1_inferred__0/i__carry_n_2 ;
  wire \r5_reg1_inferred__0/i__carry_n_3 ;
  wire r5_reg20;
  wire \r5_reg[0]_i_1_n_0 ;
  wire \r5_reg[10]_i_1_n_0 ;
  wire \r5_reg[11]_i_1_n_0 ;
  wire \r5_reg[12]_i_1_n_0 ;
  wire \r5_reg[13]_i_1_n_0 ;
  wire \r5_reg[14]_i_1_n_0 ;
  wire \r5_reg[15]_i_1_n_0 ;
  wire \r5_reg[1]_i_1_n_0 ;
  wire \r5_reg[2]_i_1_n_0 ;
  wire \r5_reg[3]_i_1_n_0 ;
  wire \r5_reg[4]_i_1_n_0 ;
  wire \r5_reg[5]_i_1_n_0 ;
  wire \r5_reg[6]_i_1_n_0 ;
  wire \r5_reg[7]_i_1_n_0 ;
  wire \r5_reg[8]_i_1_n_0 ;
  wire \r5_reg[9]_i_1_n_0 ;
  wire \s_axi_reg_araddr[2] ;
  wire \s_axi_reg_araddr[2]_0 ;
  wire \s_axi_reg_araddr[4] ;
  wire \s_axi_reg_araddr[4]_0 ;
  wire [0:0]\s_axi_reg_araddr[5] ;
  wire [0:0]\s_axi_reg_araddr[6] ;
  wire NLW_aa_mult_CARRYCASCOUT_UNCONNECTED;
  wire NLW_aa_mult_MULTSIGNOUT_UNCONNECTED;
  wire NLW_aa_mult_OVERFLOW_UNCONNECTED;
  wire NLW_aa_mult_PATTERNBDETECT_UNCONNECTED;
  wire NLW_aa_mult_PATTERNDETECT_UNCONNECTED;
  wire NLW_aa_mult_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_aa_mult_ACOUT_UNCONNECTED;
  wire [17:0]NLW_aa_mult_BCOUT_UNCONNECTED;
  wire [3:0]NLW_aa_mult_CARRYOUT_UNCONNECTED;
  wire [47:43]NLW_aa_mult_P_UNCONNECTED;
  wire [47:0]NLW_aa_mult_PCOUT_UNCONNECTED;
  wire NLW_bb_mult_CARRYCASCOUT_UNCONNECTED;
  wire NLW_bb_mult_MULTSIGNOUT_UNCONNECTED;
  wire NLW_bb_mult_OVERFLOW_UNCONNECTED;
  wire NLW_bb_mult_PATTERNBDETECT_UNCONNECTED;
  wire NLW_bb_mult_PATTERNDETECT_UNCONNECTED;
  wire NLW_bb_mult_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_bb_mult_ACOUT_UNCONNECTED;
  wire [17:0]NLW_bb_mult_BCOUT_UNCONNECTED;
  wire [3:0]NLW_bb_mult_CARRYOUT_UNCONNECTED;
  wire [47:41]NLW_bb_mult_P_UNCONNECTED;
  wire [47:0]NLW_bb_mult_PCOUT_UNCONNECTED;
  wire NLW_kk_mult_CARRYCASCOUT_UNCONNECTED;
  wire NLW_kk_mult_MULTSIGNOUT_UNCONNECTED;
  wire NLW_kk_mult_OVERFLOW_UNCONNECTED;
  wire NLW_kk_mult_PATTERNBDETECT_UNCONNECTED;
  wire NLW_kk_mult_PATTERNDETECT_UNCONNECTED;
  wire NLW_kk_mult_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_kk_mult_ACOUT_UNCONNECTED;
  wire [17:0]NLW_kk_mult_BCOUT_UNCONNECTED;
  wire [3:0]NLW_kk_mult_CARRYOUT_UNCONNECTED;
  wire [47:42]NLW_kk_mult_P_UNCONNECTED;
  wire [47:0]NLW_kk_mult_PCOUT_UNCONNECTED;
  wire NLW_pp_mult_CARRYCASCOUT_UNCONNECTED;
  wire NLW_pp_mult_MULTSIGNOUT_UNCONNECTED;
  wire NLW_pp_mult_OVERFLOW_UNCONNECTED;
  wire NLW_pp_mult_PATTERNBDETECT_UNCONNECTED;
  wire NLW_pp_mult_PATTERNDETECT_UNCONNECTED;
  wire NLW_pp_mult_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_pp_mult_ACOUT_UNCONNECTED;
  wire [17:0]NLW_pp_mult_BCOUT_UNCONNECTED;
  wire [3:0]NLW_pp_mult_CARRYOUT_UNCONNECTED;
  wire [47:42]NLW_pp_mult_P_UNCONNECTED;
  wire [47:0]NLW_pp_mult_PCOUT_UNCONNECTED;
  wire [3:0]NLW_pp_mult_i_3_CO_UNCONNECTED;
  wire [3:1]NLW_pp_mult_i_3_O_UNCONNECTED;
  wire [3:0]\NLW_r1_reg0_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_r1_reg0_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [1:0]\NLW_r1_reg0_inferred__0/i__carry__1_O_UNCONNECTED ;
  wire [3:2]\NLW_r1_reg0_inferred__0/i__carry__7_CO_UNCONNECTED ;
  wire [3:3]\NLW_r1_reg0_inferred__0/i__carry__7_O_UNCONNECTED ;
  wire [0:0]NLW_r2_sum_carry_O_UNCONNECTED;
  wire [3:0]NLW_r2_sum_carry__3_CO_UNCONNECTED;
  wire [3:1]NLW_r2_sum_carry__3_O_UNCONNECTED;
  wire [3:0]NLW_r3_sum__2_carry_O_UNCONNECTED;
  wire [3:0]NLW_r3_sum__2_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_r3_sum__2_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_r3_sum__2_carry__11_CO_UNCONNECTED;
  wire [3:1]NLW_r3_sum__2_carry__11_O_UNCONNECTED;
  wire [3:0]NLW_r3_sum__2_carry__2_O_UNCONNECTED;
  wire [3:0]NLW_r3_sum__2_carry__3_O_UNCONNECTED;
  wire [3:0]NLW_r3_sum__2_carry__4_O_UNCONNECTED;
  wire [3:0]NLW_r5_reg1_carry_O_UNCONNECTED;
  wire [3:0]NLW_r5_reg1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_r5_reg1_carry__1_O_UNCONNECTED;
  wire [3:2]NLW_r5_reg1_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_r5_reg1_carry__2_O_UNCONNECTED;
  wire [3:0]\NLW_r5_reg1_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_r5_reg1_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:0]\NLW_r5_reg1_inferred__0/i__carry__1_O_UNCONNECTED ;
  wire [3:2]\NLW_r5_reg1_inferred__0/i__carry__2_CO_UNCONNECTED ;
  wire [3:0]\NLW_r5_reg1_inferred__0/i__carry__2_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0000000F22222222)) 
    U_reg_ctrl_i_35
       (.I0(U_reg_ctrl_i_33),
        .I1(bram_addr_a[4]),
        .I2(event_op_reset_i_5__0_0),
        .I3(bram_addr_a[7]),
        .I4(bram_addr_a[2]),
        .I5(bram_addr_a[3]),
        .O(\s_axi_reg_araddr[4] ));
  LUT6 #(
    .INIT(64'h0000000F22222222)) 
    U_reg_ctrl_i_42
       (.I0(U_reg_ctrl_i_33),
        .I1(bram_addr_a[4]),
        .I2(event_op_reset_i_5__0_0),
        .I3(bram_addr_a[7]),
        .I4(bram_addr_a[3]),
        .I5(bram_addr_a[2]),
        .O(\s_axi_reg_araddr[4]_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-11 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    aa_mult
       (.A({A[24],A[24],A[24],A[24],A[24],A}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_aa_mult_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B(D[17:0]),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_aa_mult_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_aa_mult_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_aa_mult_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b1),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(\s_axi_reg_araddr[5] ),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(m_axi_osc1_aclk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_aa_mult_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_aa_mult_OVERFLOW_UNCONNECTED),
        .P({NLW_aa_mult_P_UNCONNECTED[47:43],aa_mult_n_63,aa_mult_n_64,aa_mult_n_65,aa_mult_n_66,aa_mult_n_67,aa_mult_n_68,aa_mult_n_69,aa_mult_n_70,aa_mult_n_71,aa_mult_n_72,aa_mult_n_73,aa_mult_n_74,aa_mult_n_75,aa_mult_n_76,aa_mult_n_77,aa_mult_n_78,aa_mult_n_79,aa_mult_n_80,aa_mult_n_81,aa_mult_n_82,aa_mult_n_83,aa_mult_n_84,aa_mult_n_85,aa_mult_n_86,aa_mult_n_87,aa_mult_n_88,aa_mult_n_89,aa_mult_n_90,aa_mult_n_91,aa_mult_n_92,aa_mult_n_93,aa_mult_n_94,aa_mult_n_95,aa_mult_n_96,aa_mult_n_97,aa_mult_n_98,aa_mult_n_99,aa_mult_n_100,aa_mult_n_101,aa_mult_n_102,aa_mult_n_103,aa_mult_n_104,aa_mult_n_105}),
        .PATTERNBDETECT(NLW_aa_mult_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_aa_mult_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_aa_mult_PCOUT_UNCONNECTED[47:0]),
        .RSTA(pp_mult_i_2_n_0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(clear),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_aa_mult_UNDERFLOW_UNCONNECTED));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    aa_mult_i_1__0
       (.I0(event_op_reset_i_5__0_0),
        .I1(bram_addr_a[5]),
        .I2(bram_addr_a[4]),
        .I3(bram_addr_a[3]),
        .I4(\s_axi_reg_araddr[2] ),
        .I5(aa_mult_i_2__0_n_0),
        .O(\s_axi_reg_araddr[5] ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h7)) 
    aa_mult_i_2__0
       (.I0(bram_addr_a[7]),
        .I1(bram_addr_a[6]),
        .O(aa_mult_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[0]_i_1 
       (.I0(Q[13]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[0]),
        .O(\adc_data_ch1_signed_reg[15] [0]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[10]_i_1 
       (.I0(Q[8]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[10]),
        .O(\adc_data_ch1_signed_reg[15] [10]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[11]_i_1 
       (.I0(Q[9]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[11]),
        .O(\adc_data_ch1_signed_reg[15] [11]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[12]_i_1 
       (.I0(Q[10]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[12]),
        .O(\adc_data_ch1_signed_reg[15] [12]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[13]_i_1 
       (.I0(Q[11]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[13]),
        .O(\adc_data_ch1_signed_reg[15] [13]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[14]_i_1 
       (.I0(Q[12]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[14]),
        .O(\adc_data_ch1_signed_reg[15] [14]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[15]_i_1 
       (.I0(Q[13]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[15]),
        .O(\adc_data_ch1_signed_reg[15] [15]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[1]_i_1 
       (.I0(Q[13]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[1]),
        .O(\adc_data_ch1_signed_reg[15] [1]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[2]_i_1 
       (.I0(Q[0]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[2]),
        .O(\adc_data_ch1_signed_reg[15] [2]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[3]_i_1 
       (.I0(Q[1]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[3]),
        .O(\adc_data_ch1_signed_reg[15] [3]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[4]_i_1 
       (.I0(Q[2]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[4]),
        .O(\adc_data_ch1_signed_reg[15] [4]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[5]_i_1 
       (.I0(Q[3]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[5]),
        .O(\adc_data_ch1_signed_reg[15] [5]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[6]_i_1 
       (.I0(Q[4]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[6]),
        .O(\adc_data_ch1_signed_reg[15] [6]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[7]_i_1 
       (.I0(Q[5]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[7]),
        .O(\adc_data_ch1_signed_reg[15] [7]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[8]_i_1 
       (.I0(Q[6]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[8]),
        .O(\adc_data_ch1_signed_reg[15] [8]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \adc_data_reg[9]_i_1 
       (.I0(Q[7]),
        .I1(bypass_reg_reg_0),
        .I2(r5_reg[9]),
        .O(\adc_data_ch1_signed_reg[15] [9]));
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    bb_mult
       (.A({D[24],D[24],D[24],D[24],D[24],D}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_bb_mult_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({Q[13],Q[13],Q,Q[13],Q[13]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_bb_mult_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_bb_mult_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_bb_mult_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(\s_axi_reg_araddr[6] ),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_bb_mult_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_bb_mult_OVERFLOW_UNCONNECTED),
        .P({NLW_bb_mult_P_UNCONNECTED[47:41],r02_reg[31],r02_reg[29:0],bb_mult_n_96,bb_mult_n_97,bb_mult_n_98,bb_mult_n_99,bb_mult_n_100,bb_mult_n_101,bb_mult_n_102,bb_mult_n_103,bb_mult_n_104,bb_mult_n_105}),
        .PATTERNBDETECT(NLW_bb_mult_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_bb_mult_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_bb_mult_PCOUT_UNCONNECTED[47:0]),
        .RSTA(clear),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(pp_mult_i_2_n_0),
        .UNDERFLOW(NLW_bb_mult_UNDERFLOW_UNCONNECTED));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    bb_mult_i_1
       (.I0(bb_mult_0),
        .I1(\s_axi_reg_araddr[2]_0 ),
        .I2(bram_addr_a[6]),
        .I3(event_op_reset_i_5__0_0),
        .I4(bram_addr_a[5]),
        .I5(bram_addr_a[4]),
        .O(\s_axi_reg_araddr[6] ));
  FDRE bypass_reg_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(bypass_reg_reg_0),
        .Q(bypass_reg),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'h1F)) 
    event_op_reset_i_10__0
       (.I0(bram_addr_a[5]),
        .I1(bram_addr_a[4]),
        .I2(bram_addr_a[6]),
        .O(event_op_reset_i_10__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h7)) 
    event_op_reset_i_11__0
       (.I0(bram_addr_a[2]),
        .I1(bram_addr_a[5]),
        .O(event_op_reset_i_11__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    event_op_reset_i_12
       (.I0(bram_addr_a[0]),
        .I1(bram_addr_a[1]),
        .I2(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[0] ),
        .I3(bram_addr_a[4]),
        .O(event_op_reset_i_12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'hB)) 
    event_op_reset_i_3
       (.I0(bram_addr_a[2]),
        .I1(osc1_reg_wr_we),
        .O(\s_axi_reg_araddr[2] ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'hE)) 
    event_op_reset_i_5__0
       (.I0(bram_addr_a[0]),
        .I1(bram_addr_a[1]),
        .O(event_op_reset_i_5__0_0));
  LUT6 #(
    .INIT(64'hFFAEFFFFFFAAFFAA)) 
    event_op_reset_i_7
       (.I0(event_op_reset_i_8_n_0),
        .I1(bram_addr_a[3]),
        .I2(bram_addr_a[2]),
        .I3(event_op_reset_i_9_n_0),
        .I4(bram_addr_a[5]),
        .I5(\cfg_dec_rshift[3]_i_2 ),
        .O(osc1_reg_wr_we));
  LUT6 #(
    .INIT(64'h0A0A0A0AFF030000)) 
    event_op_reset_i_8
       (.I0(\cfg_dec_rshift[3]_i_2 ),
        .I1(bram_addr_a[5]),
        .I2(bram_addr_a[3]),
        .I3(event_op_reset_i_10__0_n_0),
        .I4(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[0] ),
        .I5(bram_addr_a[7]),
        .O(event_op_reset_i_8_n_0));
  LUT5 #(
    .INIT(32'h80000000)) 
    event_op_reset_i_8__0
       (.I0(bram_en_a),
        .I1(bram_we_a[0]),
        .I2(bram_we_a[1]),
        .I3(bram_we_a[2]),
        .I4(bram_we_a[3]),
        .O(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFF1010FF101010)) 
    event_op_reset_i_9
       (.I0(bram_addr_a[3]),
        .I1(event_op_reset_i_11__0_n_0),
        .I2(event_op_reset_i_12_n_0),
        .I3(\s_axi_reg_araddr[4] ),
        .I4(\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[0] ),
        .I5(\s_axi_reg_araddr[4]_0 ),
        .O(event_op_reset_i_9_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_1__3
       (.I0(r02_reg[7]),
        .O(i__carry__0_i_1__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_1__4
       (.I0(r5_reg20),
        .O(i__carry__0_i_1__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_2__3
       (.I0(r02_reg[6]),
        .O(i__carry__0_i_2__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_2__4
       (.I0(r5_reg20),
        .O(i__carry__0_i_2__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_3__3
       (.I0(r02_reg[5]),
        .O(i__carry__0_i_3__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_3__4
       (.I0(r5_reg20),
        .O(i__carry__0_i_3__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_4__3
       (.I0(r02_reg[4]),
        .O(i__carry__0_i_4__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_4__4
       (.I0(r5_reg20),
        .O(i__carry__0_i_4__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_1__3
       (.I0(r02_reg[11]),
        .O(i__carry__1_i_1__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_1__4
       (.I0(r5_reg20),
        .O(i__carry__1_i_1__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_2__3
       (.I0(r02_reg[10]),
        .O(i__carry__1_i_2__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_2__4
       (.I0(r5_reg20),
        .O(i__carry__1_i_2__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_3__3
       (.I0(r02_reg[9]),
        .O(i__carry__1_i_3__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_3__4
       (.I0(r5_reg20),
        .O(i__carry__1_i_3__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_4__2
       (.I0(r02_reg[8]),
        .O(i__carry__1_i_4__2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_4__3
       (.I0(r5_reg20),
        .O(i__carry__1_i_4__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_1__2
       (.I0(r02_reg[15]),
        .O(i__carry__2_i_1__2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_1__3
       (.I0(r5_reg20),
        .O(i__carry__2_i_1__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_2__2
       (.I0(r02_reg[14]),
        .O(i__carry__2_i_2__2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_2__3
       (.I0(r5_reg20),
        .O(i__carry__2_i_2__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_3__2
       (.I0(r02_reg[13]),
        .O(i__carry__2_i_3__2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__2_i_4__2
       (.I0(r02_reg[12]),
        .O(i__carry__2_i_4__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__3_i_1__3
       (.I0(r02_reg[19]),
        .I1(r01_reg[34]),
        .O(i__carry__3_i_1__3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__3_i_2__3
       (.I0(r02_reg[18]),
        .I1(r01_reg[34]),
        .O(i__carry__3_i_2__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__3_i_3__2
       (.I0(r02_reg[17]),
        .O(i__carry__3_i_3__2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__3_i_4__0
       (.I0(r02_reg[16]),
        .O(i__carry__3_i_4__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__4_i_1__1
       (.I0(r02_reg[23]),
        .I1(r01_reg[23]),
        .O(i__carry__4_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__4_i_2__1
       (.I0(r02_reg[22]),
        .I1(r01_reg[22]),
        .O(i__carry__4_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__4_i_3__1
       (.I0(r02_reg[21]),
        .I1(r01_reg[21]),
        .O(i__carry__4_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__4_i_4__1
       (.I0(r02_reg[20]),
        .I1(r01_reg[20]),
        .O(i__carry__4_i_4__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__5_i_1__1
       (.I0(r02_reg[27]),
        .I1(r01_reg[27]),
        .O(i__carry__5_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__5_i_2__1
       (.I0(r02_reg[26]),
        .I1(r01_reg[26]),
        .O(i__carry__5_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__5_i_3__1
       (.I0(r02_reg[25]),
        .I1(r01_reg[25]),
        .O(i__carry__5_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__5_i_4__1
       (.I0(r02_reg[24]),
        .I1(r01_reg[24]),
        .O(i__carry__5_i_4__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__6_i_1__1
       (.I0(r01_reg[31]),
        .I1(r02_reg[31]),
        .O(i__carry__6_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__6_i_2__1
       (.I0(r02_reg[31]),
        .I1(r01_reg[30]),
        .O(i__carry__6_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__6_i_3__1
       (.I0(r02_reg[29]),
        .I1(r01_reg[29]),
        .O(i__carry__6_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__6_i_4
       (.I0(r02_reg[28]),
        .I1(r01_reg[28]),
        .O(i__carry__6_i_4_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__7_i_1
       (.I0(r01_reg[32]),
        .I1(r01_reg[34]),
        .O(i__carry__7_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__7_i_2
       (.I0(r01_reg[31]),
        .I1(r01_reg[32]),
        .O(i__carry__7_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1__4
       (.I0(r02_reg[3]),
        .O(i__carry_i_1__4_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry_i_1__5
       (.I0(kk_mult_n_65),
        .I1(r5_reg20),
        .O(i__carry_i_1__5_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_2__3
       (.I0(r02_reg[2]),
        .O(i__carry_i_2__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_2__4
       (.I0(r5_reg20),
        .O(i__carry_i_2__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_3__3
       (.I0(r02_reg[1]),
        .O(i__carry_i_3__3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_3__4
       (.I0(r5_reg20),
        .O(i__carry_i_3__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_4__3
       (.I0(r02_reg[0]),
        .O(i__carry_i_4__3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_4__9
       (.I0(kk_mult_n_65),
        .I1(r5_reg20),
        .O(i__carry_i_4__9_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_5
       (.I0(kk_mult_n_67),
        .I1(kk_mult_n_66),
        .O(i__carry_i_5_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-11 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    kk_mult
       (.A({kk_mult_0[24],kk_mult_0[24],kk_mult_0[24],kk_mult_0[24],kk_mult_0[24],kk_mult_0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_kk_mult_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({B[16],B}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_kk_mult_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_kk_mult_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_kk_mult_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(m_axi_osc1_aclk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_kk_mult_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_kk_mult_OVERFLOW_UNCONNECTED),
        .P({NLW_kk_mult_P_UNCONNECTED[47:42],r5_reg20,kk_mult_n_65,kk_mult_n_66,kk_mult_n_67,kk_mult_n_68,kk_mult_n_69,kk_mult_n_70,kk_mult_n_71,kk_mult_n_72,kk_mult_n_73,kk_mult_n_74,kk_mult_n_75,kk_mult_n_76,kk_mult_n_77,kk_mult_n_78,kk_mult_n_79,kk_mult_n_80,kk_mult_n_81,kk_mult_n_82,kk_mult_n_83,kk_mult_n_84,kk_mult_n_85,kk_mult_n_86,kk_mult_n_87,kk_mult_n_88,kk_mult_n_89,kk_mult_n_90,kk_mult_n_91,kk_mult_n_92,kk_mult_n_93,kk_mult_n_94,kk_mult_n_95,kk_mult_n_96,kk_mult_n_97,kk_mult_n_98,kk_mult_n_99,kk_mult_n_100,kk_mult_n_101,kk_mult_n_102,kk_mult_n_103,kk_mult_n_104,kk_mult_n_105}),
        .PATTERNBDETECT(NLW_kk_mult_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_kk_mult_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_kk_mult_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(pp_mult_i_2_n_0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_kk_mult_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-11 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    pp_mult
       (.A({D[24],D[24],D[24],D[24],D[24],D}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_pp_mult_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({B[16],B}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_pp_mult_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_pp_mult_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_pp_mult_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(E),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b1),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(m_axi_osc1_aclk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_pp_mult_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_pp_mult_OVERFLOW_UNCONNECTED),
        .P({NLW_pp_mult_P_UNCONNECTED[47:42],pp_mult_n_64,pp_mult_n_65,pp_mult_n_66,pp_mult_n_67,pp_mult_n_68,pp_mult_n_69,pp_mult_n_70,pp_mult_n_71,pp_mult_n_72,r4_sum0,pp_mult_n_90,pp_mult_n_91,pp_mult_n_92,pp_mult_n_93,pp_mult_n_94,pp_mult_n_95,pp_mult_n_96,pp_mult_n_97,pp_mult_n_98,pp_mult_n_99,pp_mult_n_100,pp_mult_n_101,pp_mult_n_102,pp_mult_n_103,pp_mult_n_104,pp_mult_n_105}),
        .PATTERNBDETECT(NLW_pp_mult_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_pp_mult_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_pp_mult_PCOUT_UNCONNECTED[47:0]),
        .RSTA(clear),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(pp_mult_i_2_n_0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_pp_mult_UNDERFLOW_UNCONNECTED));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    pp_mult_i_1
       (.I0(\s_axi_reg_araddr[2]_0 ),
        .I1(bram_addr_a[6]),
        .I2(event_op_reset_i_5__0_0),
        .I3(bram_addr_a[5]),
        .I4(bram_addr_a[4]),
        .I5(pp_mult_i_9_n_0),
        .O(E));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_10
       (.I0(r3_shr[16]),
        .I1(r4_sum0[16]),
        .O(pp_mult_i_10_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_11
       (.I0(r3_shr[15]),
        .I1(r4_sum0[15]),
        .O(pp_mult_i_11_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_12
       (.I0(r3_shr[14]),
        .I1(r4_sum0[14]),
        .O(pp_mult_i_12_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_13
       (.I0(r3_shr[13]),
        .I1(r4_sum0[13]),
        .O(pp_mult_i_13_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_14
       (.I0(r3_shr[12]),
        .I1(r4_sum0[12]),
        .O(pp_mult_i_14_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_15
       (.I0(r3_shr[11]),
        .I1(r4_sum0[11]),
        .O(pp_mult_i_15_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_16
       (.I0(r3_shr[10]),
        .I1(r4_sum0[10]),
        .O(pp_mult_i_16_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_17
       (.I0(r3_shr[9]),
        .I1(r4_sum0[9]),
        .O(pp_mult_i_17_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_18
       (.I0(r3_shr[8]),
        .I1(r4_sum0[8]),
        .O(pp_mult_i_18_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_19
       (.I0(r3_shr[7]),
        .I1(r4_sum0[7]),
        .O(pp_mult_i_19_n_0));
  LUT3 #(
    .INIT(8'h4F)) 
    pp_mult_i_2
       (.I0(bypass_reg_reg_0),
        .I1(bypass_reg),
        .I2(m_axi_osc1_aresetn),
        .O(pp_mult_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_20
       (.I0(r3_shr[6]),
        .I1(r4_sum0[6]),
        .O(pp_mult_i_20_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_21
       (.I0(r3_shr[5]),
        .I1(r4_sum0[5]),
        .O(pp_mult_i_21_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_22
       (.I0(r3_shr[4]),
        .I1(r4_sum0[4]),
        .O(pp_mult_i_22_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_23
       (.I0(r3_shr[3]),
        .I1(r4_sum0[3]),
        .O(pp_mult_i_23_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_24
       (.I0(r3_shr[2]),
        .I1(r4_sum0[2]),
        .O(pp_mult_i_24_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_25
       (.I0(r3_shr[1]),
        .I1(r4_sum0[1]),
        .O(pp_mult_i_25_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    pp_mult_i_26
       (.I0(r3_shr[0]),
        .I1(r4_sum0[0]),
        .O(pp_mult_i_26_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 pp_mult_i_3
       (.CI(pp_mult_i_4_n_0),
        .CO(NLW_pp_mult_i_3_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_pp_mult_i_3_O_UNCONNECTED[3:1],B[16]}),
        .S({1'b0,1'b0,1'b0,pp_mult_i_10_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 pp_mult_i_4
       (.CI(pp_mult_i_5_n_0),
        .CO({pp_mult_i_4_n_0,pp_mult_i_4_n_1,pp_mult_i_4_n_2,pp_mult_i_4_n_3}),
        .CYINIT(1'b0),
        .DI(r3_shr[15:12]),
        .O(B[15:12]),
        .S({pp_mult_i_11_n_0,pp_mult_i_12_n_0,pp_mult_i_13_n_0,pp_mult_i_14_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 pp_mult_i_5
       (.CI(pp_mult_i_6_n_0),
        .CO({pp_mult_i_5_n_0,pp_mult_i_5_n_1,pp_mult_i_5_n_2,pp_mult_i_5_n_3}),
        .CYINIT(1'b0),
        .DI(r3_shr[11:8]),
        .O(B[11:8]),
        .S({pp_mult_i_15_n_0,pp_mult_i_16_n_0,pp_mult_i_17_n_0,pp_mult_i_18_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 pp_mult_i_6
       (.CI(pp_mult_i_7_n_0),
        .CO({pp_mult_i_6_n_0,pp_mult_i_6_n_1,pp_mult_i_6_n_2,pp_mult_i_6_n_3}),
        .CYINIT(1'b0),
        .DI(r3_shr[7:4]),
        .O(B[7:4]),
        .S({pp_mult_i_19_n_0,pp_mult_i_20_n_0,pp_mult_i_21_n_0,pp_mult_i_22_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 pp_mult_i_7
       (.CI(1'b0),
        .CO({pp_mult_i_7_n_0,pp_mult_i_7_n_1,pp_mult_i_7_n_2,pp_mult_i_7_n_3}),
        .CYINIT(1'b0),
        .DI(r3_shr[3:0]),
        .O(B[3:0]),
        .S({pp_mult_i_23_n_0,pp_mult_i_24_n_0,pp_mult_i_25_n_0,pp_mult_i_26_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pp_mult_i_8
       (.I0(bram_addr_a[2]),
        .I1(osc1_reg_wr_we),
        .O(\s_axi_reg_araddr[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pp_mult_i_9
       (.I0(bram_addr_a[7]),
        .I1(bram_addr_a[3]),
        .O(pp_mult_i_9_n_0));
  FDRE \r01_reg_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(r01_reg[20]),
        .R(pp_mult_i_2_n_0));
  FDRE \r01_reg_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(r01_reg[21]),
        .R(pp_mult_i_2_n_0));
  FDRE \r01_reg_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(r01_reg[22]),
        .R(pp_mult_i_2_n_0));
  FDRE \r01_reg_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(r01_reg[23]),
        .R(pp_mult_i_2_n_0));
  FDRE \r01_reg_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(r01_reg[24]),
        .R(pp_mult_i_2_n_0));
  FDRE \r01_reg_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(r01_reg[25]),
        .R(pp_mult_i_2_n_0));
  FDRE \r01_reg_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(r01_reg[26]),
        .R(pp_mult_i_2_n_0));
  FDRE \r01_reg_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(r01_reg[27]),
        .R(pp_mult_i_2_n_0));
  FDRE \r01_reg_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(r01_reg[28]),
        .R(pp_mult_i_2_n_0));
  FDRE \r01_reg_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(r01_reg[29]),
        .R(pp_mult_i_2_n_0));
  FDRE \r01_reg_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(r01_reg[30]),
        .R(pp_mult_i_2_n_0));
  FDRE \r01_reg_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(r01_reg[31]),
        .R(pp_mult_i_2_n_0));
  FDRE \r01_reg_reg[32] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(r01_reg[32]),
        .R(pp_mult_i_2_n_0));
  FDRE \r01_reg_reg[34] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(r01_reg[34]),
        .R(pp_mult_i_2_n_0));
  CARRY4 \r1_reg0_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\r1_reg0_inferred__0/i__carry_n_0 ,\r1_reg0_inferred__0/i__carry_n_1 ,\r1_reg0_inferred__0/i__carry_n_2 ,\r1_reg0_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI(r02_reg[3:0]),
        .O(\NLW_r1_reg0_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_1__4_n_0,i__carry_i_2__3_n_0,i__carry_i_3__3_n_0,i__carry_i_4__3_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__0 
       (.CI(\r1_reg0_inferred__0/i__carry_n_0 ),
        .CO({\r1_reg0_inferred__0/i__carry__0_n_0 ,\r1_reg0_inferred__0/i__carry__0_n_1 ,\r1_reg0_inferred__0/i__carry__0_n_2 ,\r1_reg0_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI(r02_reg[7:4]),
        .O(\NLW_r1_reg0_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_1__3_n_0,i__carry__0_i_2__3_n_0,i__carry__0_i_3__3_n_0,i__carry__0_i_4__3_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__1 
       (.CI(\r1_reg0_inferred__0/i__carry__0_n_0 ),
        .CO({\r1_reg0_inferred__0/i__carry__1_n_0 ,\r1_reg0_inferred__0/i__carry__1_n_1 ,\r1_reg0_inferred__0/i__carry__1_n_2 ,\r1_reg0_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI(r02_reg[11:8]),
        .O({r1_reg0[11:10],\NLW_r1_reg0_inferred__0/i__carry__1_O_UNCONNECTED [1:0]}),
        .S({i__carry__1_i_1__3_n_0,i__carry__1_i_2__3_n_0,i__carry__1_i_3__3_n_0,i__carry__1_i_4__2_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__2 
       (.CI(\r1_reg0_inferred__0/i__carry__1_n_0 ),
        .CO({\r1_reg0_inferred__0/i__carry__2_n_0 ,\r1_reg0_inferred__0/i__carry__2_n_1 ,\r1_reg0_inferred__0/i__carry__2_n_2 ,\r1_reg0_inferred__0/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI(r02_reg[15:12]),
        .O(r1_reg0[15:12]),
        .S({i__carry__2_i_1__2_n_0,i__carry__2_i_2__2_n_0,i__carry__2_i_3__2_n_0,i__carry__2_i_4__2_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__3 
       (.CI(\r1_reg0_inferred__0/i__carry__2_n_0 ),
        .CO({\r1_reg0_inferred__0/i__carry__3_n_0 ,\r1_reg0_inferred__0/i__carry__3_n_1 ,\r1_reg0_inferred__0/i__carry__3_n_2 ,\r1_reg0_inferred__0/i__carry__3_n_3 }),
        .CYINIT(1'b0),
        .DI(r02_reg[19:16]),
        .O(r1_reg0[19:16]),
        .S({i__carry__3_i_1__3_n_0,i__carry__3_i_2__3_n_0,i__carry__3_i_3__2_n_0,i__carry__3_i_4__0_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__4 
       (.CI(\r1_reg0_inferred__0/i__carry__3_n_0 ),
        .CO({\r1_reg0_inferred__0/i__carry__4_n_0 ,\r1_reg0_inferred__0/i__carry__4_n_1 ,\r1_reg0_inferred__0/i__carry__4_n_2 ,\r1_reg0_inferred__0/i__carry__4_n_3 }),
        .CYINIT(1'b0),
        .DI(r02_reg[23:20]),
        .O(r1_reg0[23:20]),
        .S({i__carry__4_i_1__1_n_0,i__carry__4_i_2__1_n_0,i__carry__4_i_3__1_n_0,i__carry__4_i_4__1_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__5 
       (.CI(\r1_reg0_inferred__0/i__carry__4_n_0 ),
        .CO({\r1_reg0_inferred__0/i__carry__5_n_0 ,\r1_reg0_inferred__0/i__carry__5_n_1 ,\r1_reg0_inferred__0/i__carry__5_n_2 ,\r1_reg0_inferred__0/i__carry__5_n_3 }),
        .CYINIT(1'b0),
        .DI(r02_reg[27:24]),
        .O(r1_reg0[27:24]),
        .S({i__carry__5_i_1__1_n_0,i__carry__5_i_2__1_n_0,i__carry__5_i_3__1_n_0,i__carry__5_i_4__1_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__6 
       (.CI(\r1_reg0_inferred__0/i__carry__5_n_0 ),
        .CO({\r1_reg0_inferred__0/i__carry__6_n_0 ,\r1_reg0_inferred__0/i__carry__6_n_1 ,\r1_reg0_inferred__0/i__carry__6_n_2 ,\r1_reg0_inferred__0/i__carry__6_n_3 }),
        .CYINIT(1'b0),
        .DI({r01_reg[31],r02_reg[31],r02_reg[29:28]}),
        .O(r1_reg0[31:28]),
        .S({i__carry__6_i_1__1_n_0,i__carry__6_i_2__1_n_0,i__carry__6_i_3__1_n_0,i__carry__6_i_4_n_0}));
  CARRY4 \r1_reg0_inferred__0/i__carry__7 
       (.CI(\r1_reg0_inferred__0/i__carry__6_n_0 ),
        .CO({\NLW_r1_reg0_inferred__0/i__carry__7_CO_UNCONNECTED [3:2],\r1_reg0_inferred__0/i__carry__7_n_2 ,\r1_reg0_inferred__0/i__carry__7_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,r01_reg[34],r01_reg[32]}),
        .O({\NLW_r1_reg0_inferred__0/i__carry__7_O_UNCONNECTED [3],r1_reg0[34:32]}),
        .S({1'b0,1'b1,i__carry__7_i_1_n_0,i__carry__7_i_2_n_0}));
  FDRE \r1_reg_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[10]),
        .Q(r1_reg[10]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[11]),
        .Q(r1_reg[11]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[12]),
        .Q(r1_reg[12]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[13]),
        .Q(r1_reg[13]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[14]),
        .Q(r1_reg[14]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[15]),
        .Q(r1_reg[15]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[16]),
        .Q(r1_reg[16]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[17]),
        .Q(r1_reg[17]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[18]),
        .Q(r1_reg[18]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[19]),
        .Q(r1_reg[19]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[20]),
        .Q(r1_reg[20]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[21]),
        .Q(r1_reg[21]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[22]),
        .Q(r1_reg[22]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[23]),
        .Q(r1_reg[23]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[24]),
        .Q(r1_reg[24]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[25]),
        .Q(r1_reg[25]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[26]),
        .Q(r1_reg[26]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[27]),
        .Q(r1_reg[27]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[28]),
        .Q(r1_reg[28]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[29]),
        .Q(r1_reg[29]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[30]),
        .Q(r1_reg[30]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[31]),
        .Q(r1_reg[31]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[32] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[32]),
        .Q(r1_reg[32]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[33] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[33]),
        .Q(r1_reg[33]),
        .R(pp_mult_i_2_n_0));
  FDRE \r1_reg_reg[34] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg0[34]),
        .Q(r1_reg[34]),
        .R(pp_mult_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    \r2_reg[8]_i_1 
       (.I0(r01_reg[34]),
        .I1(r1_reg[18]),
        .O(p_1_in[8]));
  FDRE \r2_reg_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg[10]),
        .Q(r3_sum11_in[25]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[10]),
        .Q(r3_sum11_in[35]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[11]),
        .Q(r3_sum11_in[36]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[12]),
        .Q(r3_sum11_in[37]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[13]),
        .Q(r3_sum11_in[38]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[14]),
        .Q(r3_sum11_in[39]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[15]),
        .Q(r3_sum11_in[40]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[16]),
        .Q(r3_sum11_in[41]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[17]),
        .Q(r3_sum11_in[42]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[18]),
        .Q(r3_sum11_in[43]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[19]),
        .Q(r3_sum11_in[44]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg[11]),
        .Q(r3_sum11_in[26]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[20]),
        .Q(r3_sum11_in[45]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[21]),
        .Q(r3_sum11_in[46]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[22]),
        .Q(r3_sum11_in[47]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[23]),
        .Q(r3_sum11_in[48]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[24]),
        .Q(r3_sum11_in[49]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg[12]),
        .Q(r3_sum11_in[27]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg[13]),
        .Q(r3_sum11_in[28]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg[14]),
        .Q(r3_sum11_in[29]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg[15]),
        .Q(r3_sum11_in[30]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg[16]),
        .Q(r3_sum11_in[31]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(r1_reg[17]),
        .Q(r3_sum11_in[32]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[8]),
        .Q(r3_sum11_in[33]),
        .R(pp_mult_i_2_n_0));
  FDRE \r2_reg_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_1_in[9]),
        .Q(r3_sum11_in[34]),
        .R(pp_mult_i_2_n_0));
  CARRY4 r2_sum_carry
       (.CI(1'b0),
        .CO({r2_sum_carry_n_0,r2_sum_carry_n_1,r2_sum_carry_n_2,r2_sum_carry_n_3}),
        .CYINIT(1'b0),
        .DI({r01_reg[21:20],r01_reg[34],r01_reg[34]}),
        .O({p_1_in[11:9],NLW_r2_sum_carry_O_UNCONNECTED[0]}),
        .S({r2_sum_carry_i_1_n_0,r2_sum_carry_i_2_n_0,r2_sum_carry_i_3_n_0,r2_sum_carry_i_4_n_0}));
  CARRY4 r2_sum_carry__0
       (.CI(r2_sum_carry_n_0),
        .CO({r2_sum_carry__0_n_0,r2_sum_carry__0_n_1,r2_sum_carry__0_n_2,r2_sum_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(r01_reg[25:22]),
        .O(p_1_in[15:12]),
        .S({r2_sum_carry__0_i_1_n_0,r2_sum_carry__0_i_2_n_0,r2_sum_carry__0_i_3_n_0,r2_sum_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__0_i_1
       (.I0(r01_reg[25]),
        .I1(r1_reg[25]),
        .O(r2_sum_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__0_i_2
       (.I0(r01_reg[24]),
        .I1(r1_reg[24]),
        .O(r2_sum_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__0_i_3
       (.I0(r01_reg[23]),
        .I1(r1_reg[23]),
        .O(r2_sum_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__0_i_4
       (.I0(r01_reg[22]),
        .I1(r1_reg[22]),
        .O(r2_sum_carry__0_i_4_n_0));
  CARRY4 r2_sum_carry__1
       (.CI(r2_sum_carry__0_n_0),
        .CO({r2_sum_carry__1_n_0,r2_sum_carry__1_n_1,r2_sum_carry__1_n_2,r2_sum_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI(r01_reg[29:26]),
        .O(p_1_in[19:16]),
        .S({r2_sum_carry__1_i_1_n_0,r2_sum_carry__1_i_2_n_0,r2_sum_carry__1_i_3_n_0,r2_sum_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__1_i_1
       (.I0(r01_reg[29]),
        .I1(r1_reg[29]),
        .O(r2_sum_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__1_i_2
       (.I0(r01_reg[28]),
        .I1(r1_reg[28]),
        .O(r2_sum_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__1_i_3
       (.I0(r01_reg[27]),
        .I1(r1_reg[27]),
        .O(r2_sum_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__1_i_4
       (.I0(r01_reg[26]),
        .I1(r1_reg[26]),
        .O(r2_sum_carry__1_i_4_n_0));
  CARRY4 r2_sum_carry__2
       (.CI(r2_sum_carry__1_n_0),
        .CO({r2_sum_carry__2_n_0,r2_sum_carry__2_n_1,r2_sum_carry__2_n_2,r2_sum_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({r01_reg[34],r01_reg[32:30]}),
        .O(p_1_in[23:20]),
        .S({r2_sum_carry__2_i_1_n_0,r2_sum_carry__2_i_2_n_0,r2_sum_carry__2_i_3_n_0,r2_sum_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__2_i_1
       (.I0(r01_reg[34]),
        .I1(r1_reg[33]),
        .O(r2_sum_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__2_i_2
       (.I0(r01_reg[32]),
        .I1(r1_reg[32]),
        .O(r2_sum_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__2_i_3
       (.I0(r01_reg[31]),
        .I1(r1_reg[31]),
        .O(r2_sum_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__2_i_4
       (.I0(r01_reg[30]),
        .I1(r1_reg[30]),
        .O(r2_sum_carry__2_i_4_n_0));
  CARRY4 r2_sum_carry__3
       (.CI(r2_sum_carry__2_n_0),
        .CO(NLW_r2_sum_carry__3_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_r2_sum_carry__3_O_UNCONNECTED[3:1],p_1_in[24]}),
        .S({1'b0,1'b0,1'b0,r2_sum_carry__3_i_1_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry__3_i_1
       (.I0(r01_reg[34]),
        .I1(r1_reg[34]),
        .O(r2_sum_carry__3_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry_i_1
       (.I0(r01_reg[21]),
        .I1(r1_reg[21]),
        .O(r2_sum_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry_i_2
       (.I0(r01_reg[20]),
        .I1(r1_reg[20]),
        .O(r2_sum_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry_i_3
       (.I0(r01_reg[34]),
        .I1(r1_reg[19]),
        .O(r2_sum_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    r2_sum_carry_i_4
       (.I0(r01_reg[34]),
        .I1(r1_reg[18]),
        .O(r2_sum_carry_i_4_n_0));
  FDRE \r3_reg_dsp1_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[0]),
        .Q(r3_reg_dsp1[0]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp1_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[1]),
        .Q(r3_reg_dsp1[1]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp1_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[2]),
        .Q(r3_reg_dsp1[2]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp1_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[3]),
        .Q(r3_reg_dsp1[3]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp1_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[4]),
        .Q(r3_reg_dsp1[4]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp1_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[5]),
        .Q(r3_reg_dsp1[5]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp1_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[6]),
        .Q(r3_reg_dsp1[6]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp1_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[7]),
        .Q(r3_reg_dsp1[7]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[8]),
        .Q(\r3_reg_dsp3_reg_n_0_[0] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[18]),
        .Q(\r3_reg_dsp3_reg_n_0_[10] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[19]),
        .Q(\r3_reg_dsp3_reg_n_0_[11] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[20]),
        .Q(\r3_reg_dsp3_reg_n_0_[12] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[21]),
        .Q(\r3_reg_dsp3_reg_n_0_[13] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[22]),
        .Q(\r3_reg_dsp3_reg_n_0_[14] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[23]),
        .Q(\r3_reg_dsp3_reg_n_0_[15] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[24]),
        .Q(\r3_reg_dsp3_reg_n_0_[16] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[9]),
        .Q(\r3_reg_dsp3_reg_n_0_[1] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[10]),
        .Q(\r3_reg_dsp3_reg_n_0_[2] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[11]),
        .Q(\r3_reg_dsp3_reg_n_0_[3] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[12]),
        .Q(\r3_reg_dsp3_reg_n_0_[4] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[13]),
        .Q(\r3_reg_dsp3_reg_n_0_[5] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[14]),
        .Q(\r3_reg_dsp3_reg_n_0_[6] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[15]),
        .Q(\r3_reg_dsp3_reg_n_0_[7] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[16]),
        .Q(\r3_reg_dsp3_reg_n_0_[8] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_reg_dsp3_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(A[17]),
        .Q(\r3_reg_dsp3_reg_n_0_[9] ),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[0] ),
        .Q(r3_shr[0]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[10] ),
        .Q(r3_shr[10]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[11] ),
        .Q(r3_shr[11]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[12] ),
        .Q(r3_shr[12]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[13] ),
        .Q(r3_shr[13]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[14] ),
        .Q(r3_shr[14]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[15] ),
        .Q(r3_shr[15]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[16] ),
        .Q(r3_shr[16]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[1] ),
        .Q(r3_shr[1]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[2] ),
        .Q(r3_shr[2]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[3] ),
        .Q(r3_shr[3]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[4] ),
        .Q(r3_shr[4]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[5] ),
        .Q(r3_shr[5]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[6] ),
        .Q(r3_shr[6]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[7] ),
        .Q(r3_shr[7]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[8] ),
        .Q(r3_shr[8]),
        .R(pp_mult_i_2_n_0));
  FDRE \r3_shr_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r3_reg_dsp3_reg_n_0_[9] ),
        .Q(r3_shr[9]),
        .R(pp_mult_i_2_n_0));
  CARRY4 r3_sum__2_carry
       (.CI(1'b0),
        .CO({r3_sum__2_carry_n_0,r3_sum__2_carry_n_1,r3_sum__2_carry_n_2,r3_sum__2_carry_n_3}),
        .CYINIT(r3_sum10_in[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_r3_sum__2_carry_O_UNCONNECTED[3:0]),
        .S(r3_sum10_in[4:1]));
  CARRY4 r3_sum__2_carry__0
       (.CI(r3_sum__2_carry_n_0),
        .CO({r3_sum__2_carry__0_n_0,r3_sum__2_carry__0_n_1,r3_sum__2_carry__0_n_2,r3_sum__2_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_r3_sum__2_carry__0_O_UNCONNECTED[3:0]),
        .S(r3_sum10_in[8:5]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__0_i_1
       (.I0(aa_mult_n_97),
        .O(r3_sum10_in[8]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__0_i_2
       (.I0(aa_mult_n_98),
        .O(r3_sum10_in[7]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__0_i_3
       (.I0(aa_mult_n_99),
        .O(r3_sum10_in[6]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__0_i_4
       (.I0(aa_mult_n_100),
        .O(r3_sum10_in[5]));
  CARRY4 r3_sum__2_carry__1
       (.CI(r3_sum__2_carry__0_n_0),
        .CO({r3_sum__2_carry__1_n_0,r3_sum__2_carry__1_n_1,r3_sum__2_carry__1_n_2,r3_sum__2_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_r3_sum__2_carry__1_O_UNCONNECTED[3:0]),
        .S(r3_sum10_in[12:9]));
  CARRY4 r3_sum__2_carry__10
       (.CI(r3_sum__2_carry__9_n_0),
        .CO({r3_sum__2_carry__10_n_0,r3_sum__2_carry__10_n_1,r3_sum__2_carry__10_n_2,r3_sum__2_carry__10_n_3}),
        .CYINIT(1'b0),
        .DI({r3_sum__2_carry__10_i_1_n_0,r3_sum__2_carry__10_i_2_n_0,r3_sum__2_carry__10_i_3_n_0,r3_sum__2_carry__10_i_4_n_0}),
        .O(A[23:20]),
        .S({r3_sum__2_carry__10_i_5_n_0,r3_sum__2_carry__10_i_6_n_0,r3_sum__2_carry__10_i_7_n_0,r3_sum__2_carry__10_i_8_n_0}));
  LUT4 #(
    .INIT(16'hE00E)) 
    r3_sum__2_carry__10_i_1
       (.I0(\r3_reg_dsp3_reg_n_0_[13] ),
        .I1(r3_sum11_in[46]),
        .I2(\r3_reg_dsp3_reg_n_0_[14] ),
        .I3(r3_sum11_in[47]),
        .O(r3_sum__2_carry__10_i_1_n_0));
  LUT4 #(
    .INIT(16'hE00E)) 
    r3_sum__2_carry__10_i_2
       (.I0(\r3_reg_dsp3_reg_n_0_[12] ),
        .I1(r3_sum11_in[45]),
        .I2(\r3_reg_dsp3_reg_n_0_[13] ),
        .I3(r3_sum11_in[46]),
        .O(r3_sum__2_carry__10_i_2_n_0));
  LUT4 #(
    .INIT(16'hE00E)) 
    r3_sum__2_carry__10_i_3
       (.I0(\r3_reg_dsp3_reg_n_0_[11] ),
        .I1(r3_sum11_in[44]),
        .I2(\r3_reg_dsp3_reg_n_0_[12] ),
        .I3(r3_sum11_in[45]),
        .O(r3_sum__2_carry__10_i_3_n_0));
  LUT4 #(
    .INIT(16'hE00E)) 
    r3_sum__2_carry__10_i_4
       (.I0(\r3_reg_dsp3_reg_n_0_[10] ),
        .I1(r3_sum11_in[43]),
        .I2(\r3_reg_dsp3_reg_n_0_[11] ),
        .I3(r3_sum11_in[44]),
        .O(r3_sum__2_carry__10_i_4_n_0));
  LUT6 #(
    .INIT(64'hE11E0FF00FF01EE1)) 
    r3_sum__2_carry__10_i_5
       (.I0(r3_sum11_in[46]),
        .I1(\r3_reg_dsp3_reg_n_0_[13] ),
        .I2(r3_sum11_in[48]),
        .I3(\r3_reg_dsp3_reg_n_0_[15] ),
        .I4(r3_sum11_in[47]),
        .I5(\r3_reg_dsp3_reg_n_0_[14] ),
        .O(r3_sum__2_carry__10_i_5_n_0));
  LUT6 #(
    .INIT(64'hE11E0FF00FF01EE1)) 
    r3_sum__2_carry__10_i_6
       (.I0(r3_sum11_in[45]),
        .I1(\r3_reg_dsp3_reg_n_0_[12] ),
        .I2(r3_sum11_in[47]),
        .I3(\r3_reg_dsp3_reg_n_0_[14] ),
        .I4(r3_sum11_in[46]),
        .I5(\r3_reg_dsp3_reg_n_0_[13] ),
        .O(r3_sum__2_carry__10_i_6_n_0));
  LUT6 #(
    .INIT(64'hE11E0FF00FF01EE1)) 
    r3_sum__2_carry__10_i_7
       (.I0(r3_sum11_in[44]),
        .I1(\r3_reg_dsp3_reg_n_0_[11] ),
        .I2(r3_sum11_in[46]),
        .I3(\r3_reg_dsp3_reg_n_0_[13] ),
        .I4(r3_sum11_in[45]),
        .I5(\r3_reg_dsp3_reg_n_0_[12] ),
        .O(r3_sum__2_carry__10_i_7_n_0));
  LUT6 #(
    .INIT(64'hE11E0FF00FF01EE1)) 
    r3_sum__2_carry__10_i_8
       (.I0(r3_sum11_in[43]),
        .I1(\r3_reg_dsp3_reg_n_0_[10] ),
        .I2(r3_sum11_in[45]),
        .I3(\r3_reg_dsp3_reg_n_0_[12] ),
        .I4(r3_sum11_in[44]),
        .I5(\r3_reg_dsp3_reg_n_0_[11] ),
        .O(r3_sum__2_carry__10_i_8_n_0));
  CARRY4 r3_sum__2_carry__11
       (.CI(r3_sum__2_carry__10_n_0),
        .CO(NLW_r3_sum__2_carry__11_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_r3_sum__2_carry__11_O_UNCONNECTED[3:1],A[24]}),
        .S({1'b0,1'b0,1'b0,r3_sum__2_carry__11_i_1_n_0}));
  LUT6 #(
    .INIT(64'hE11E0FF00FF01EE1)) 
    r3_sum__2_carry__11_i_1
       (.I0(r3_sum11_in[47]),
        .I1(\r3_reg_dsp3_reg_n_0_[14] ),
        .I2(r3_sum11_in[49]),
        .I3(\r3_reg_dsp3_reg_n_0_[16] ),
        .I4(r3_sum11_in[48]),
        .I5(\r3_reg_dsp3_reg_n_0_[15] ),
        .O(r3_sum__2_carry__11_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__1_i_1
       (.I0(aa_mult_n_93),
        .O(r3_sum10_in[12]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__1_i_2
       (.I0(aa_mult_n_94),
        .O(r3_sum10_in[11]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__1_i_3
       (.I0(aa_mult_n_95),
        .O(r3_sum10_in[10]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__1_i_4
       (.I0(aa_mult_n_96),
        .O(r3_sum10_in[9]));
  CARRY4 r3_sum__2_carry__2
       (.CI(r3_sum__2_carry__1_n_0),
        .CO({r3_sum__2_carry__2_n_0,r3_sum__2_carry__2_n_1,r3_sum__2_carry__2_n_2,r3_sum__2_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_r3_sum__2_carry__2_O_UNCONNECTED[3:0]),
        .S(r3_sum10_in[16:13]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__2_i_1
       (.I0(aa_mult_n_89),
        .O(r3_sum10_in[16]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__2_i_2
       (.I0(aa_mult_n_90),
        .O(r3_sum10_in[15]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__2_i_3
       (.I0(aa_mult_n_91),
        .O(r3_sum10_in[14]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__2_i_4
       (.I0(aa_mult_n_92),
        .O(r3_sum10_in[13]));
  CARRY4 r3_sum__2_carry__3
       (.CI(r3_sum__2_carry__2_n_0),
        .CO({r3_sum__2_carry__3_n_0,r3_sum__2_carry__3_n_1,r3_sum__2_carry__3_n_2,r3_sum__2_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_r3_sum__2_carry__3_O_UNCONNECTED[3:0]),
        .S(r3_sum10_in[20:17]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__3_i_1
       (.I0(aa_mult_n_85),
        .O(r3_sum10_in[20]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__3_i_2
       (.I0(aa_mult_n_86),
        .O(r3_sum10_in[19]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__3_i_3
       (.I0(aa_mult_n_87),
        .O(r3_sum10_in[18]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__3_i_4
       (.I0(aa_mult_n_88),
        .O(r3_sum10_in[17]));
  CARRY4 r3_sum__2_carry__4
       (.CI(r3_sum__2_carry__3_n_0),
        .CO({r3_sum__2_carry__4_n_0,r3_sum__2_carry__4_n_1,r3_sum__2_carry__4_n_2,r3_sum__2_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_r3_sum__2_carry__4_O_UNCONNECTED[3:0]),
        .S(r3_sum10_in[24:21]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__4_i_1
       (.I0(aa_mult_n_81),
        .O(r3_sum10_in[24]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__4_i_2
       (.I0(aa_mult_n_82),
        .O(r3_sum10_in[23]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__4_i_3
       (.I0(aa_mult_n_83),
        .O(r3_sum10_in[22]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry__4_i_4
       (.I0(aa_mult_n_84),
        .O(r3_sum10_in[21]));
  CARRY4 r3_sum__2_carry__5
       (.CI(r3_sum__2_carry__4_n_0),
        .CO({r3_sum__2_carry__5_n_0,r3_sum__2_carry__5_n_1,r3_sum__2_carry__5_n_2,r3_sum__2_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI({r3_sum__2_carry__5_i_1_n_0,r3_sum__2_carry__5_i_2_n_0,r3_sum__2_carry__5_i_3_n_0,r3_sum11_in[25]}),
        .O(A[3:0]),
        .S({r3_sum__2_carry__5_i_4_n_0,r3_sum__2_carry__5_i_5_n_0,r3_sum__2_carry__5_i_6_n_0,r3_sum__2_carry__5_i_7_n_0}));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__5_i_1
       (.I0(aa_mult_n_78),
        .I1(r3_reg_dsp1[2]),
        .I2(r3_sum11_in[27]),
        .O(r3_sum__2_carry__5_i_1_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__5_i_2
       (.I0(aa_mult_n_79),
        .I1(r3_reg_dsp1[1]),
        .I2(r3_sum11_in[26]),
        .O(r3_sum__2_carry__5_i_2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    r3_sum__2_carry__5_i_3
       (.I0(r3_sum11_in[26]),
        .I1(r3_reg_dsp1[1]),
        .I2(aa_mult_n_79),
        .O(r3_sum__2_carry__5_i_3_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__5_i_4
       (.I0(aa_mult_n_77),
        .I1(r3_reg_dsp1[3]),
        .I2(r3_sum11_in[28]),
        .I3(r3_sum__2_carry__5_i_1_n_0),
        .O(r3_sum__2_carry__5_i_4_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__5_i_5
       (.I0(aa_mult_n_78),
        .I1(r3_reg_dsp1[2]),
        .I2(r3_sum11_in[27]),
        .I3(r3_sum__2_carry__5_i_2_n_0),
        .O(r3_sum__2_carry__5_i_5_n_0));
  LUT5 #(
    .INIT(32'h69966969)) 
    r3_sum__2_carry__5_i_6
       (.I0(aa_mult_n_79),
        .I1(r3_reg_dsp1[1]),
        .I2(r3_sum11_in[26]),
        .I3(aa_mult_n_80),
        .I4(r3_reg_dsp1[0]),
        .O(r3_sum__2_carry__5_i_6_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    r3_sum__2_carry__5_i_7
       (.I0(r3_reg_dsp1[0]),
        .I1(aa_mult_n_80),
        .I2(r3_sum11_in[25]),
        .O(r3_sum__2_carry__5_i_7_n_0));
  CARRY4 r3_sum__2_carry__6
       (.CI(r3_sum__2_carry__5_n_0),
        .CO({r3_sum__2_carry__6_n_0,r3_sum__2_carry__6_n_1,r3_sum__2_carry__6_n_2,r3_sum__2_carry__6_n_3}),
        .CYINIT(1'b0),
        .DI({r3_sum__2_carry__6_i_1_n_0,r3_sum__2_carry__6_i_2_n_0,r3_sum__2_carry__6_i_3_n_0,r3_sum__2_carry__6_i_4_n_0}),
        .O(A[7:4]),
        .S({r3_sum__2_carry__6_i_5_n_0,r3_sum__2_carry__6_i_6_n_0,r3_sum__2_carry__6_i_7_n_0,r3_sum__2_carry__6_i_8_n_0}));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__6_i_1
       (.I0(aa_mult_n_74),
        .I1(r3_reg_dsp1[6]),
        .I2(r3_sum11_in[31]),
        .O(r3_sum__2_carry__6_i_1_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__6_i_2
       (.I0(aa_mult_n_75),
        .I1(r3_reg_dsp1[5]),
        .I2(r3_sum11_in[30]),
        .O(r3_sum__2_carry__6_i_2_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__6_i_3
       (.I0(aa_mult_n_76),
        .I1(r3_reg_dsp1[4]),
        .I2(r3_sum11_in[29]),
        .O(r3_sum__2_carry__6_i_3_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__6_i_4
       (.I0(aa_mult_n_77),
        .I1(r3_reg_dsp1[3]),
        .I2(r3_sum11_in[28]),
        .O(r3_sum__2_carry__6_i_4_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__6_i_5
       (.I0(aa_mult_n_73),
        .I1(r3_reg_dsp1[7]),
        .I2(r3_sum11_in[32]),
        .I3(r3_sum__2_carry__6_i_1_n_0),
        .O(r3_sum__2_carry__6_i_5_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__6_i_6
       (.I0(aa_mult_n_74),
        .I1(r3_reg_dsp1[6]),
        .I2(r3_sum11_in[31]),
        .I3(r3_sum__2_carry__6_i_2_n_0),
        .O(r3_sum__2_carry__6_i_6_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__6_i_7
       (.I0(aa_mult_n_75),
        .I1(r3_reg_dsp1[5]),
        .I2(r3_sum11_in[30]),
        .I3(r3_sum__2_carry__6_i_3_n_0),
        .O(r3_sum__2_carry__6_i_7_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__6_i_8
       (.I0(aa_mult_n_76),
        .I1(r3_reg_dsp1[4]),
        .I2(r3_sum11_in[29]),
        .I3(r3_sum__2_carry__6_i_4_n_0),
        .O(r3_sum__2_carry__6_i_8_n_0));
  CARRY4 r3_sum__2_carry__7
       (.CI(r3_sum__2_carry__6_n_0),
        .CO({r3_sum__2_carry__7_n_0,r3_sum__2_carry__7_n_1,r3_sum__2_carry__7_n_2,r3_sum__2_carry__7_n_3}),
        .CYINIT(1'b0),
        .DI({r3_sum__2_carry__7_i_1_n_0,r3_sum__2_carry__7_i_2_n_0,r3_sum__2_carry__7_i_3_n_0,r3_sum__2_carry__7_i_4_n_0}),
        .O(A[11:8]),
        .S({r3_sum__2_carry__7_i_5_n_0,r3_sum__2_carry__7_i_6_n_0,r3_sum__2_carry__7_i_7_n_0,r3_sum__2_carry__7_i_8_n_0}));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__7_i_1
       (.I0(aa_mult_n_70),
        .I1(\r3_reg_dsp3_reg_n_0_[2] ),
        .I2(r3_sum11_in[35]),
        .O(r3_sum__2_carry__7_i_1_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__7_i_2
       (.I0(aa_mult_n_71),
        .I1(\r3_reg_dsp3_reg_n_0_[1] ),
        .I2(r3_sum11_in[34]),
        .O(r3_sum__2_carry__7_i_2_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__7_i_3
       (.I0(aa_mult_n_72),
        .I1(\r3_reg_dsp3_reg_n_0_[0] ),
        .I2(r3_sum11_in[33]),
        .O(r3_sum__2_carry__7_i_3_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__7_i_4
       (.I0(aa_mult_n_73),
        .I1(r3_reg_dsp1[7]),
        .I2(r3_sum11_in[32]),
        .O(r3_sum__2_carry__7_i_4_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__7_i_5
       (.I0(aa_mult_n_69),
        .I1(\r3_reg_dsp3_reg_n_0_[3] ),
        .I2(r3_sum11_in[36]),
        .I3(r3_sum__2_carry__7_i_1_n_0),
        .O(r3_sum__2_carry__7_i_5_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__7_i_6
       (.I0(aa_mult_n_70),
        .I1(\r3_reg_dsp3_reg_n_0_[2] ),
        .I2(r3_sum11_in[35]),
        .I3(r3_sum__2_carry__7_i_2_n_0),
        .O(r3_sum__2_carry__7_i_6_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__7_i_7
       (.I0(aa_mult_n_71),
        .I1(\r3_reg_dsp3_reg_n_0_[1] ),
        .I2(r3_sum11_in[34]),
        .I3(r3_sum__2_carry__7_i_3_n_0),
        .O(r3_sum__2_carry__7_i_7_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__7_i_8
       (.I0(aa_mult_n_72),
        .I1(\r3_reg_dsp3_reg_n_0_[0] ),
        .I2(r3_sum11_in[33]),
        .I3(r3_sum__2_carry__7_i_4_n_0),
        .O(r3_sum__2_carry__7_i_8_n_0));
  CARRY4 r3_sum__2_carry__8
       (.CI(r3_sum__2_carry__7_n_0),
        .CO({r3_sum__2_carry__8_n_0,r3_sum__2_carry__8_n_1,r3_sum__2_carry__8_n_2,r3_sum__2_carry__8_n_3}),
        .CYINIT(1'b0),
        .DI({r3_sum__2_carry__8_i_1_n_0,r3_sum__2_carry__8_i_2_n_0,r3_sum__2_carry__8_i_3_n_0,r3_sum__2_carry__8_i_4_n_0}),
        .O(A[15:12]),
        .S({r3_sum__2_carry__8_i_5_n_0,r3_sum__2_carry__8_i_6_n_0,r3_sum__2_carry__8_i_7_n_0,r3_sum__2_carry__8_i_8_n_0}));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__8_i_1
       (.I0(aa_mult_n_66),
        .I1(\r3_reg_dsp3_reg_n_0_[6] ),
        .I2(r3_sum11_in[39]),
        .O(r3_sum__2_carry__8_i_1_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__8_i_2
       (.I0(aa_mult_n_67),
        .I1(\r3_reg_dsp3_reg_n_0_[5] ),
        .I2(r3_sum11_in[38]),
        .O(r3_sum__2_carry__8_i_2_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__8_i_3
       (.I0(aa_mult_n_68),
        .I1(\r3_reg_dsp3_reg_n_0_[4] ),
        .I2(r3_sum11_in[37]),
        .O(r3_sum__2_carry__8_i_3_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__8_i_4
       (.I0(aa_mult_n_69),
        .I1(\r3_reg_dsp3_reg_n_0_[3] ),
        .I2(r3_sum11_in[36]),
        .O(r3_sum__2_carry__8_i_4_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__8_i_5
       (.I0(aa_mult_n_65),
        .I1(\r3_reg_dsp3_reg_n_0_[7] ),
        .I2(r3_sum11_in[40]),
        .I3(r3_sum__2_carry__8_i_1_n_0),
        .O(r3_sum__2_carry__8_i_5_n_0));
  (* HLUTNM = "lutpair0" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__8_i_6
       (.I0(aa_mult_n_66),
        .I1(\r3_reg_dsp3_reg_n_0_[6] ),
        .I2(r3_sum11_in[39]),
        .I3(r3_sum__2_carry__8_i_2_n_0),
        .O(r3_sum__2_carry__8_i_6_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__8_i_7
       (.I0(aa_mult_n_67),
        .I1(\r3_reg_dsp3_reg_n_0_[5] ),
        .I2(r3_sum11_in[38]),
        .I3(r3_sum__2_carry__8_i_3_n_0),
        .O(r3_sum__2_carry__8_i_7_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__8_i_8
       (.I0(aa_mult_n_68),
        .I1(\r3_reg_dsp3_reg_n_0_[4] ),
        .I2(r3_sum11_in[37]),
        .I3(r3_sum__2_carry__8_i_4_n_0),
        .O(r3_sum__2_carry__8_i_8_n_0));
  CARRY4 r3_sum__2_carry__9
       (.CI(r3_sum__2_carry__8_n_0),
        .CO({r3_sum__2_carry__9_n_0,r3_sum__2_carry__9_n_1,r3_sum__2_carry__9_n_2,r3_sum__2_carry__9_n_3}),
        .CYINIT(1'b0),
        .DI({r3_sum__2_carry__9_i_1_n_0,r3_sum__2_carry__9_i_2_n_0,r3_sum__2_carry__9_i_3_n_0,r3_sum__2_carry__9_i_4_n_0}),
        .O(A[19:16]),
        .S({r3_sum__2_carry__9_i_5_n_0,r3_sum__2_carry__9_i_6_n_0,r3_sum__2_carry__9_i_7_n_0,r3_sum__2_carry__9_i_8_n_0}));
  LUT4 #(
    .INIT(16'hE00E)) 
    r3_sum__2_carry__9_i_1
       (.I0(aa_mult_n_63),
        .I1(\r3_reg_dsp3_reg_n_0_[9] ),
        .I2(\r3_reg_dsp3_reg_n_0_[10] ),
        .I3(r3_sum11_in[43]),
        .O(r3_sum__2_carry__9_i_1_n_0));
  LUT3 #(
    .INIT(8'h82)) 
    r3_sum__2_carry__9_i_2
       (.I0(r3_sum11_in[42]),
        .I1(\r3_reg_dsp3_reg_n_0_[9] ),
        .I2(aa_mult_n_63),
        .O(r3_sum__2_carry__9_i_2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    r3_sum__2_carry__9_i_3
       (.I0(\r3_reg_dsp3_reg_n_0_[9] ),
        .I1(aa_mult_n_63),
        .I2(r3_sum11_in[42]),
        .O(r3_sum__2_carry__9_i_3_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    r3_sum__2_carry__9_i_4
       (.I0(aa_mult_n_65),
        .I1(\r3_reg_dsp3_reg_n_0_[7] ),
        .I2(r3_sum11_in[40]),
        .O(r3_sum__2_carry__9_i_4_n_0));
  LUT6 #(
    .INIT(64'hE11E0FF00FF01EE1)) 
    r3_sum__2_carry__9_i_5
       (.I0(\r3_reg_dsp3_reg_n_0_[9] ),
        .I1(aa_mult_n_63),
        .I2(r3_sum11_in[44]),
        .I3(\r3_reg_dsp3_reg_n_0_[11] ),
        .I4(r3_sum11_in[43]),
        .I5(\r3_reg_dsp3_reg_n_0_[10] ),
        .O(r3_sum__2_carry__9_i_5_n_0));
  LUT5 #(
    .INIT(32'h963C3C69)) 
    r3_sum__2_carry__9_i_6
       (.I0(r3_sum11_in[42]),
        .I1(r3_sum11_in[43]),
        .I2(\r3_reg_dsp3_reg_n_0_[10] ),
        .I3(\r3_reg_dsp3_reg_n_0_[9] ),
        .I4(aa_mult_n_63),
        .O(r3_sum__2_carry__9_i_6_n_0));
  LUT6 #(
    .INIT(64'h9669696996969669)) 
    r3_sum__2_carry__9_i_7
       (.I0(r3_sum11_in[42]),
        .I1(aa_mult_n_63),
        .I2(\r3_reg_dsp3_reg_n_0_[9] ),
        .I3(r3_sum11_in[41]),
        .I4(\r3_reg_dsp3_reg_n_0_[8] ),
        .I5(aa_mult_n_64),
        .O(r3_sum__2_carry__9_i_7_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    r3_sum__2_carry__9_i_8
       (.I0(r3_sum__2_carry__9_i_4_n_0),
        .I1(aa_mult_n_64),
        .I2(\r3_reg_dsp3_reg_n_0_[8] ),
        .I3(r3_sum11_in[41]),
        .O(r3_sum__2_carry__9_i_8_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry_i_1
       (.I0(aa_mult_n_105),
        .O(r3_sum10_in[0]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry_i_2
       (.I0(aa_mult_n_101),
        .O(r3_sum10_in[4]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry_i_3
       (.I0(aa_mult_n_102),
        .O(r3_sum10_in[3]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry_i_4
       (.I0(aa_mult_n_103),
        .O(r3_sum10_in[2]));
  LUT1 #(
    .INIT(2'h1)) 
    r3_sum__2_carry_i_5
       (.I0(aa_mult_n_104),
        .O(r3_sum10_in[1]));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 r5_reg1_carry
       (.CI(1'b0),
        .CO({r5_reg1_carry_n_0,r5_reg1_carry_n_1,r5_reg1_carry_n_2,r5_reg1_carry_n_3}),
        .CYINIT(1'b0),
        .DI({r5_reg1_carry_i_1_n_0,r5_reg1_carry_i_2_n_0,r5_reg1_carry_i_3_n_0,r5_reg1_carry_i_4_n_0}),
        .O(NLW_r5_reg1_carry_O_UNCONNECTED[3:0]),
        .S({r5_reg20,r5_reg20,r5_reg1_carry_i_5_n_0,r5_reg1_carry_i_6_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 r5_reg1_carry__0
       (.CI(r5_reg1_carry_n_0),
        .CO({r5_reg1_carry__0_n_0,r5_reg1_carry__0_n_1,r5_reg1_carry__0_n_2,r5_reg1_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({r5_reg1_carry__0_i_1_n_0,r5_reg1_carry__0_i_2_n_0,r5_reg1_carry__0_i_3_n_0,r5_reg1_carry__0_i_4_n_0}),
        .O(NLW_r5_reg1_carry__0_O_UNCONNECTED[3:0]),
        .S({r5_reg20,r5_reg20,r5_reg20,r5_reg20}));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__0_i_1
       (.I0(r5_reg20),
        .O(r5_reg1_carry__0_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__0_i_2
       (.I0(r5_reg20),
        .O(r5_reg1_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__0_i_3
       (.I0(r5_reg20),
        .O(r5_reg1_carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__0_i_4
       (.I0(r5_reg20),
        .O(r5_reg1_carry__0_i_4_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 r5_reg1_carry__1
       (.CI(r5_reg1_carry__0_n_0),
        .CO({r5_reg1_carry__1_n_0,r5_reg1_carry__1_n_1,r5_reg1_carry__1_n_2,r5_reg1_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({r5_reg1_carry__1_i_1_n_0,r5_reg1_carry__1_i_2_n_0,r5_reg1_carry__1_i_3_n_0,r5_reg1_carry__1_i_4_n_0}),
        .O(NLW_r5_reg1_carry__1_O_UNCONNECTED[3:0]),
        .S({r5_reg20,r5_reg20,r5_reg20,r5_reg20}));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__1_i_1
       (.I0(r5_reg20),
        .O(r5_reg1_carry__1_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__1_i_2
       (.I0(r5_reg20),
        .O(r5_reg1_carry__1_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__1_i_3
       (.I0(r5_reg20),
        .O(r5_reg1_carry__1_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__1_i_4
       (.I0(r5_reg20),
        .O(r5_reg1_carry__1_i_4_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 r5_reg1_carry__2
       (.CI(r5_reg1_carry__1_n_0),
        .CO({NLW_r5_reg1_carry__2_CO_UNCONNECTED[3:2],r5_reg1,r5_reg1_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,r5_reg1_carry__2_i_1_n_0}),
        .O(NLW_r5_reg1_carry__2_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,r5_reg20,r5_reg20}));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry__2_i_1
       (.I0(r5_reg20),
        .O(r5_reg1_carry__2_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry_i_1
       (.I0(r5_reg20),
        .O(r5_reg1_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry_i_2
       (.I0(r5_reg20),
        .O(r5_reg1_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    r5_reg1_carry_i_3
       (.I0(kk_mult_n_65),
        .I1(r5_reg20),
        .O(r5_reg1_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    r5_reg1_carry_i_4
       (.I0(kk_mult_n_66),
        .O(r5_reg1_carry_i_4_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    r5_reg1_carry_i_5
       (.I0(kk_mult_n_65),
        .I1(r5_reg20),
        .O(r5_reg1_carry_i_5_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    r5_reg1_carry_i_6
       (.I0(kk_mult_n_66),
        .I1(kk_mult_n_67),
        .O(r5_reg1_carry_i_6_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \r5_reg1_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\r5_reg1_inferred__0/i__carry_n_0 ,\r5_reg1_inferred__0/i__carry_n_1 ,\r5_reg1_inferred__0/i__carry_n_2 ,\r5_reg1_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({r5_reg20,r5_reg20,i__carry_i_1__5_n_0,kk_mult_n_66}),
        .O(\NLW_r5_reg1_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_2__4_n_0,i__carry_i_3__4_n_0,i__carry_i_4__9_n_0,i__carry_i_5_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \r5_reg1_inferred__0/i__carry__0 
       (.CI(\r5_reg1_inferred__0/i__carry_n_0 ),
        .CO({\r5_reg1_inferred__0/i__carry__0_n_0 ,\r5_reg1_inferred__0/i__carry__0_n_1 ,\r5_reg1_inferred__0/i__carry__0_n_2 ,\r5_reg1_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({r5_reg20,r5_reg20,r5_reg20,r5_reg20}),
        .O(\NLW_r5_reg1_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_1__4_n_0,i__carry__0_i_2__4_n_0,i__carry__0_i_3__4_n_0,i__carry__0_i_4__4_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \r5_reg1_inferred__0/i__carry__1 
       (.CI(\r5_reg1_inferred__0/i__carry__0_n_0 ),
        .CO({\r5_reg1_inferred__0/i__carry__1_n_0 ,\r5_reg1_inferred__0/i__carry__1_n_1 ,\r5_reg1_inferred__0/i__carry__1_n_2 ,\r5_reg1_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({r5_reg20,r5_reg20,r5_reg20,r5_reg20}),
        .O(\NLW_r5_reg1_inferred__0/i__carry__1_O_UNCONNECTED [3:0]),
        .S({i__carry__1_i_1__4_n_0,i__carry__1_i_2__4_n_0,i__carry__1_i_3__4_n_0,i__carry__1_i_4__3_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \r5_reg1_inferred__0/i__carry__2 
       (.CI(\r5_reg1_inferred__0/i__carry__1_n_0 ),
        .CO({\NLW_r5_reg1_inferred__0/i__carry__2_CO_UNCONNECTED [3:2],r5_reg10_in,\r5_reg1_inferred__0/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,r5_reg20}),
        .O(\NLW_r5_reg1_inferred__0/i__carry__2_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,i__carry__2_i_1__3_n_0,i__carry__2_i_2__3_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[0]_i_1 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_81),
        .O(\r5_reg[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[10]_i_1 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_71),
        .O(\r5_reg[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[11]_i_1 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_70),
        .O(\r5_reg[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[12]_i_1 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_69),
        .O(\r5_reg[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[13]_i_1 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_68),
        .O(\r5_reg[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[14]_i_1 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_67),
        .O(\r5_reg[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \r5_reg[15]_i_1 
       (.I0(kk_mult_n_66),
        .I1(r5_reg1),
        .I2(r5_reg10_in),
        .O(\r5_reg[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[1]_i_1 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_80),
        .O(\r5_reg[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[2]_i_1 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_79),
        .O(\r5_reg[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[3]_i_1 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_78),
        .O(\r5_reg[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[4]_i_1 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_77),
        .O(\r5_reg[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[5]_i_1 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_76),
        .O(\r5_reg[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[6]_i_1 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_75),
        .O(\r5_reg[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[7]_i_1 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_74),
        .O(\r5_reg[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[8]_i_1 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_73),
        .O(\r5_reg[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \r5_reg[9]_i_1 
       (.I0(r5_reg10_in),
        .I1(r5_reg1),
        .I2(kk_mult_n_72),
        .O(\r5_reg[9]_i_1_n_0 ));
  FDRE \r5_reg_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[0]_i_1_n_0 ),
        .Q(r5_reg[0]),
        .R(pp_mult_i_2_n_0));
  FDRE \r5_reg_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[10]_i_1_n_0 ),
        .Q(r5_reg[10]),
        .R(pp_mult_i_2_n_0));
  FDRE \r5_reg_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[11]_i_1_n_0 ),
        .Q(r5_reg[11]),
        .R(pp_mult_i_2_n_0));
  FDRE \r5_reg_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[12]_i_1_n_0 ),
        .Q(r5_reg[12]),
        .R(pp_mult_i_2_n_0));
  FDRE \r5_reg_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[13]_i_1_n_0 ),
        .Q(r5_reg[13]),
        .R(pp_mult_i_2_n_0));
  FDRE \r5_reg_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[14]_i_1_n_0 ),
        .Q(r5_reg[14]),
        .R(pp_mult_i_2_n_0));
  FDRE \r5_reg_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[15]_i_1_n_0 ),
        .Q(r5_reg[15]),
        .R(pp_mult_i_2_n_0));
  FDRE \r5_reg_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[1]_i_1_n_0 ),
        .Q(r5_reg[1]),
        .R(pp_mult_i_2_n_0));
  FDRE \r5_reg_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[2]_i_1_n_0 ),
        .Q(r5_reg[2]),
        .R(pp_mult_i_2_n_0));
  FDRE \r5_reg_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[3]_i_1_n_0 ),
        .Q(r5_reg[3]),
        .R(pp_mult_i_2_n_0));
  FDRE \r5_reg_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[4]_i_1_n_0 ),
        .Q(r5_reg[4]),
        .R(pp_mult_i_2_n_0));
  FDRE \r5_reg_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[5]_i_1_n_0 ),
        .Q(r5_reg[5]),
        .R(pp_mult_i_2_n_0));
  FDRE \r5_reg_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[6]_i_1_n_0 ),
        .Q(r5_reg[6]),
        .R(pp_mult_i_2_n_0));
  FDRE \r5_reg_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[7]_i_1_n_0 ),
        .Q(r5_reg[7]),
        .R(pp_mult_i_2_n_0));
  FDRE \r5_reg_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[8]_i_1_n_0 ),
        .Q(r5_reg[8]),
        .R(pp_mult_i_2_n_0));
  FDRE \r5_reg_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\r5_reg[9]_i_1_n_0 ),
        .Q(r5_reg[9]),
        .R(pp_mult_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "osc_top" *) 
module system_rp_oscilloscope_0_osc_top
   (cfg_filt_bypass,
    dec_tvalid,
    trig_detect_reg,
    acq_tvalid,
    acq_tlast,
    empty,
    empty_fwft_i_reg,
    wr_en,
    m_axi_osc1_wdata,
    rd_en,
    full_immed0,
    buf_sel_ch1,
    m_axi_wlast_reg,
    cfg_8bit_dat,
    osc1_event_op,
    sts_trig_reg,
    state_cs,
    m_axi_wvalid_reg,
    dat_ctrl_busy,
    m_axi_osc1_awvalid,
    fifo_dis,
    next_buf_full_reg,
    dma_mode,
    first_rst,
    fifo_wr_we,
    cfg_trig_edge,
    cfg_avg_en,
    state_cs_0,
    trig_out,
    \reg_ctrl_reg[9] ,
    state_cs_1,
    event_op_reset_i_5__0,
    \xfer_cnt_reg[3] ,
    \req_addr_reg[31] ,
    \s_axi_reg_araddr[4] ,
    bram_rddata_a,
    \s_axi_reg_araddr[4]_0 ,
    \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[0] ,
    \s_axi_reg_araddr[4]_1 ,
    \s_axi_reg_araddr[7] ,
    intr,
    \s_axi_reg_araddr[2] ,
    \s_axi_reg_araddr[7]_0 ,
    \s_axi_reg_araddr[4]_2 ,
    ctl_trg,
    \s_axi_reg_araddr[3] ,
    m_axi_osc1_awlen,
    ctl_start_r_reg,
    tlast_reg,
    \s_axi_reg_araddr[6] ,
    \s_axi_reg_araddr[2]_0 ,
    loopback_sel,
    \req_xfer_cnt_reg[0] ,
    m_axis_tvalid_reg,
    osc1_trig_op,
    \xfer_cnt_reg[6] ,
    \goreg_dm.dout_i_reg[1] ,
    \s_axi_reg_araddr[5] ,
    \s_axi_reg_araddr[7]_1 ,
    \s_axi_reg_araddr[7]_2 ,
    \s_axi_reg_araddr[2]_1 ,
    \s_axi_reg_araddr[2]_2 ,
    \s_axi_reg_araddr[4]_3 ,
    CO,
    \cfg_trig_high_level_reg[15]_0 ,
    \m_axis_tdata_reg[15] ,
    m_axi_osc1_aclk,
    D,
    Q,
    sts_trig_reg_0,
    \state_cs_reg[0] ,
    m_axi_wvalid_reg_0,
    m_axi_wlast_reg_0,
    busy_reg,
    m_axi_awvalid_reg,
    fifo_dis_reg,
    mode_reg,
    first_rst_reg,
    m_axis_tvalid_reg_0,
    req_we_reg,
    cfg_trig_edge_reg_0,
    cfg_avg_en_reg_0,
    cfg_8bit_dat_reg_0,
    cfg_filt_bypass_reg_0,
    m_axi_osc1_aresetn,
    m_axi_osc1_awready,
    cfg_dma_ctrl_reg,
    external_trig_val,
    bit_start,
    bram_addr_a,
    \s_axi_reg_rdata[0] ,
    \s_axi_reg_rdata[31] ,
    \s_axi_reg_rdata[0]_0 ,
    \cfg_dec_rshift[3]_i_2_0 ,
    bram_en_a,
    bram_we_a,
    osc2_dma_intr,
    trig_detect_reg_0,
    m_axi_osc1_wready,
    trig_ip,
    bb_mult,
    \cfg_calib_offset_reg[0]_0 ,
    buf_sel_ch2,
    event_ip_reset,
    \reg_rd_data_reg[2]_0 ,
    event_ip_start,
    event_ip_stop,
    event_ip_trig);
  output cfg_filt_bypass;
  output dec_tvalid;
  output trig_detect_reg;
  output acq_tvalid;
  output acq_tlast;
  output empty;
  output empty_fwft_i_reg;
  output wr_en;
  output [63:0]m_axi_osc1_wdata;
  output rd_en;
  output full_immed0;
  output buf_sel_ch1;
  output m_axi_wlast_reg;
  output cfg_8bit_dat;
  output [3:0]osc1_event_op;
  output [0:0]sts_trig_reg;
  output state_cs;
  output m_axi_wvalid_reg;
  output dat_ctrl_busy;
  output m_axi_osc1_awvalid;
  output fifo_dis;
  output next_buf_full_reg;
  output dma_mode;
  output first_rst;
  output fifo_wr_we;
  output cfg_trig_edge;
  output cfg_avg_en;
  output [2:0]state_cs_0;
  output trig_out;
  output [1:0]\reg_ctrl_reg[9] ;
  output [2:0]state_cs_1;
  output event_op_reset_i_5__0;
  output \xfer_cnt_reg[3] ;
  output [31:0]\req_addr_reg[31] ;
  output \s_axi_reg_araddr[4] ;
  output [31:0]bram_rddata_a;
  output \s_axi_reg_araddr[4]_0 ;
  output \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[0] ;
  output \s_axi_reg_araddr[4]_1 ;
  output \s_axi_reg_araddr[7] ;
  output intr;
  output \s_axi_reg_araddr[2] ;
  output \s_axi_reg_araddr[7]_0 ;
  output \s_axi_reg_araddr[4]_2 ;
  output ctl_trg;
  output \s_axi_reg_araddr[3] ;
  output [7:0]m_axi_osc1_awlen;
  output ctl_start_r_reg;
  output [0:0]tlast_reg;
  output \s_axi_reg_araddr[6] ;
  output \s_axi_reg_araddr[2]_0 ;
  output [7:0]loopback_sel;
  output \req_xfer_cnt_reg[0] ;
  output m_axis_tvalid_reg;
  output osc1_trig_op;
  output \xfer_cnt_reg[6] ;
  output \goreg_dm.dout_i_reg[1] ;
  output \s_axi_reg_araddr[5] ;
  output \s_axi_reg_araddr[7]_1 ;
  output \s_axi_reg_araddr[7]_2 ;
  output \s_axi_reg_araddr[2]_1 ;
  output \s_axi_reg_araddr[2]_2 ;
  output \s_axi_reg_araddr[4]_3 ;
  output [0:0]CO;
  output [0:0]\cfg_trig_high_level_reg[15]_0 ;
  output [0:0]\m_axis_tdata_reg[15] ;
  input m_axi_osc1_aclk;
  input [31:0]D;
  input [13:0]Q;
  input sts_trig_reg_0;
  input \state_cs_reg[0] ;
  input m_axi_wvalid_reg_0;
  input m_axi_wlast_reg_0;
  input busy_reg;
  input m_axi_awvalid_reg;
  input fifo_dis_reg;
  input mode_reg;
  input first_rst_reg;
  input m_axis_tvalid_reg_0;
  input req_we_reg;
  input cfg_trig_edge_reg_0;
  input cfg_avg_en_reg_0;
  input cfg_8bit_dat_reg_0;
  input cfg_filt_bypass_reg_0;
  input m_axi_osc1_aresetn;
  input m_axi_osc1_awready;
  input [0:0]cfg_dma_ctrl_reg;
  input external_trig_val;
  input bit_start;
  input [7:0]bram_addr_a;
  input \s_axi_reg_rdata[0] ;
  input [31:0]\s_axi_reg_rdata[31] ;
  input \s_axi_reg_rdata[0]_0 ;
  input \cfg_dec_rshift[3]_i_2_0 ;
  input bram_en_a;
  input [3:0]bram_we_a;
  input osc2_dma_intr;
  input trig_detect_reg_0;
  input m_axi_osc1_wready;
  input [5:0]trig_ip;
  input bb_mult;
  input \cfg_calib_offset_reg[0]_0 ;
  input buf_sel_ch2;
  input [4:0]event_ip_reset;
  input \reg_rd_data_reg[2]_0 ;
  input [4:0]event_ip_start;
  input [4:0]event_ip_stop;
  input [4:0]event_ip_trig;

  wire [0:0]CO;
  wire [31:0]D;
  wire \FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[0] ;
  wire [13:0]Q;
  wire U_dma_s2mm_n_119;
  wire U_dma_s2mm_n_120;
  wire U_dma_s2mm_n_123;
  wire U_dma_s2mm_n_124;
  wire U_dma_s2mm_n_125;
  wire U_dma_s2mm_n_126;
  wire U_dma_s2mm_n_127;
  wire U_dma_s2mm_n_128;
  wire U_dma_s2mm_n_129;
  wire U_dma_s2mm_n_130;
  wire U_dma_s2mm_n_131;
  wire U_dma_s2mm_n_132;
  wire U_dma_s2mm_n_133;
  wire U_dma_s2mm_n_134;
  wire U_dma_s2mm_n_135;
  wire U_dma_s2mm_n_136;
  wire U_dma_s2mm_n_137;
  wire U_dma_s2mm_n_138;
  wire U_dma_s2mm_n_139;
  wire U_dma_s2mm_n_140;
  wire U_dma_s2mm_n_141;
  wire U_dma_s2mm_n_142;
  wire U_dma_s2mm_n_143;
  wire U_dma_s2mm_n_144;
  wire U_dma_s2mm_n_148;
  wire U_dma_s2mm_n_149;
  wire U_dma_s2mm_n_150;
  wire U_dma_s2mm_n_151;
  wire U_dma_s2mm_n_152;
  wire U_dma_s2mm_n_153;
  wire U_dma_s2mm_n_154;
  wire U_dma_s2mm_n_155;
  wire U_dma_s2mm_n_157;
  wire U_dma_s2mm_n_158;
  wire U_dma_s2mm_n_162;
  wire U_dma_s2mm_n_163;
  wire U_dma_s2mm_n_164;
  wire U_dma_s2mm_n_165;
  wire U_dma_s2mm_n_166;
  wire U_dma_s2mm_n_167;
  wire U_dma_s2mm_n_168;
  wire U_dma_s2mm_n_171;
  wire U_dma_s2mm_n_172;
  wire U_dma_s2mm_n_173;
  wire U_dma_s2mm_n_174;
  wire U_osc_acq_n_19;
  wire U_osc_acq_n_24;
  wire U_osc_acq_n_25;
  wire U_osc_acq_n_26;
  wire U_osc_acq_n_27;
  wire U_osc_acq_n_28;
  wire U_osc_acq_n_29;
  wire U_osc_acq_n_30;
  wire U_osc_acq_n_31;
  wire U_osc_acq_n_32;
  wire U_osc_acq_n_33;
  wire U_osc_acq_n_34;
  wire U_osc_acq_n_35;
  wire U_osc_acq_n_36;
  wire U_osc_acq_n_37;
  wire U_osc_acq_n_38;
  wire U_osc_acq_n_39;
  wire U_osc_acq_n_40;
  wire U_osc_acq_n_41;
  wire U_osc_acq_n_42;
  wire U_osc_acq_n_43;
  wire U_osc_acq_n_44;
  wire U_osc_acq_n_45;
  wire U_osc_acq_n_46;
  wire U_osc_acq_n_47;
  wire U_osc_acq_n_48;
  wire U_osc_acq_n_49;
  wire U_osc_acq_n_50;
  wire U_osc_acq_n_51;
  wire U_osc_acq_n_52;
  wire U_osc_acq_n_53;
  wire U_osc_acq_n_54;
  wire U_osc_acq_n_55;
  wire U_osc_acq_n_56;
  wire U_osc_acq_n_57;
  wire U_osc_acq_n_58;
  wire U_osc_acq_n_59;
  wire U_osc_acq_n_60;
  wire U_osc_acq_n_61;
  wire U_osc_acq_n_62;
  wire U_osc_acq_n_63;
  wire U_osc_acq_n_64;
  wire U_osc_acq_n_65;
  wire U_osc_acq_n_66;
  wire U_osc_acq_n_67;
  wire U_osc_acq_n_68;
  wire U_osc_acq_n_69;
  wire U_osc_acq_n_70;
  wire U_osc_acq_n_79;
  wire U_osc_acq_n_80;
  wire U_osc_acq_n_81;
  wire U_osc_acq_n_82;
  wire U_osc_calib_n_0;
  wire U_osc_calib_n_1;
  wire U_osc_calib_n_10;
  wire U_osc_calib_n_11;
  wire U_osc_calib_n_12;
  wire U_osc_calib_n_13;
  wire U_osc_calib_n_14;
  wire U_osc_calib_n_15;
  wire U_osc_calib_n_16;
  wire U_osc_calib_n_17;
  wire U_osc_calib_n_18;
  wire U_osc_calib_n_19;
  wire U_osc_calib_n_2;
  wire U_osc_calib_n_20;
  wire U_osc_calib_n_21;
  wire U_osc_calib_n_22;
  wire U_osc_calib_n_23;
  wire U_osc_calib_n_24;
  wire U_osc_calib_n_25;
  wire U_osc_calib_n_26;
  wire U_osc_calib_n_27;
  wire U_osc_calib_n_28;
  wire U_osc_calib_n_29;
  wire U_osc_calib_n_3;
  wire U_osc_calib_n_30;
  wire U_osc_calib_n_31;
  wire U_osc_calib_n_32;
  wire U_osc_calib_n_33;
  wire U_osc_calib_n_34;
  wire U_osc_calib_n_35;
  wire U_osc_calib_n_36;
  wire U_osc_calib_n_37;
  wire U_osc_calib_n_38;
  wire U_osc_calib_n_39;
  wire U_osc_calib_n_4;
  wire U_osc_calib_n_40;
  wire U_osc_calib_n_41;
  wire U_osc_calib_n_42;
  wire U_osc_calib_n_43;
  wire U_osc_calib_n_44;
  wire U_osc_calib_n_45;
  wire U_osc_calib_n_46;
  wire U_osc_calib_n_47;
  wire U_osc_calib_n_5;
  wire U_osc_calib_n_6;
  wire U_osc_calib_n_7;
  wire U_osc_calib_n_8;
  wire U_osc_calib_n_9;
  wire U_osc_decimator_n_27;
  wire U_osc_decimator_n_28;
  wire U_osc_decimator_n_29;
  wire U_osc_decimator_n_3;
  wire U_osc_decimator_n_30;
  wire U_osc_decimator_n_31;
  wire U_osc_decimator_n_32;
  wire U_osc_decimator_n_33;
  wire U_osc_decimator_n_34;
  wire U_osc_decimator_n_35;
  wire U_osc_decimator_n_36;
  wire U_osc_decimator_n_37;
  wire U_osc_decimator_n_38;
  wire U_osc_decimator_n_39;
  wire U_osc_decimator_n_4;
  wire U_osc_decimator_n_40;
  wire U_osc_decimator_n_41;
  wire U_osc_decimator_n_42;
  wire U_osc_decimator_n_43;
  wire U_osc_decimator_n_44;
  wire U_osc_decimator_n_45;
  wire U_osc_decimator_n_46;
  wire U_osc_decimator_n_47;
  wire U_osc_decimator_n_48;
  wire U_osc_decimator_n_49;
  wire U_osc_decimator_n_5;
  wire U_osc_decimator_n_50;
  wire U_osc_decimator_n_51;
  wire U_osc_decimator_n_52;
  wire U_osc_decimator_n_53;
  wire U_osc_decimator_n_54;
  wire U_osc_decimator_n_6;
  wire U_osc_decimator_n_7;
  wire U_osc_trigger_n_0;
  wire U_osc_trigger_n_1;
  wire U_osc_trigger_n_10;
  wire U_osc_trigger_n_11;
  wire U_osc_trigger_n_12;
  wire U_osc_trigger_n_13;
  wire U_osc_trigger_n_14;
  wire U_osc_trigger_n_15;
  wire U_osc_trigger_n_2;
  wire U_osc_trigger_n_3;
  wire U_osc_trigger_n_4;
  wire U_osc_trigger_n_5;
  wire U_osc_trigger_n_6;
  wire U_osc_trigger_n_7;
  wire U_osc_trigger_n_8;
  wire U_osc_trigger_n_9;
  wire [15:0]acq_tdata;
  wire acq_tlast;
  wire acq_tvalid;
  wire bb_mult;
  wire bit_start;
  wire [7:0]bram_addr_a;
  wire bram_en_a;
  wire [31:0]bram_rddata_a;
  wire [3:0]bram_we_a;
  wire buf_sel_ch1;
  wire buf_sel_ch2;
  wire busy_reg;
  wire cfg_8bit_dat;
  wire cfg_8bit_dat_reg_0;
  wire cfg_avg_en;
  wire cfg_avg_en_reg_0;
  wire [15:0]cfg_calib_gain;
  wire cfg_calib_gain0;
  wire [15:0]cfg_calib_offset;
  wire cfg_calib_offset0;
  wire \cfg_calib_offset_reg[0]_0 ;
  wire [16:0]cfg_dec_factor;
  wire cfg_dec_factor0;
  wire [3:0]cfg_dec_rshift;
  wire cfg_dec_rshift0;
  wire \cfg_dec_rshift[3]_i_2_0 ;
  wire [31:0]cfg_dma_buf_size;
  wire cfg_dma_buf_size0;
  wire \cfg_dma_buf_size[31]_i_2_n_0 ;
  wire [0:0]cfg_dma_ctrl_reg;
  wire [31:0]cfg_dma_dst_addr1;
  wire cfg_dma_dst_addr10;
  wire [31:0]cfg_dma_dst_addr2;
  wire cfg_dma_dst_addr20;
  wire [2:0]cfg_event_sel;
  wire \cfg_event_sel[0]_i_1_n_0 ;
  wire \cfg_event_sel[1]_i_1_n_0 ;
  wire \cfg_event_sel[2]_i_1_n_0 ;
  wire cfg_filt_bypass;
  wire cfg_filt_bypass_reg_0;
  wire cfg_filt_coeff_bb0;
  wire cfg_filt_coeff_kk0;
  wire \cfg_filt_coeff_kk[24]_i_2_n_0 ;
  wire cfg_filt_coeff_pp0;
  wire cfg_loopback0;
  wire \cfg_loopback[7]_i_2_n_0 ;
  wire \cfg_loopback_reg_n_0_[10] ;
  wire \cfg_loopback_reg_n_0_[11] ;
  wire \cfg_loopback_reg_n_0_[12] ;
  wire \cfg_loopback_reg_n_0_[13] ;
  wire \cfg_loopback_reg_n_0_[14] ;
  wire \cfg_loopback_reg_n_0_[15] ;
  wire \cfg_loopback_reg_n_0_[8] ;
  wire \cfg_loopback_reg_n_0_[9] ;
  wire cfg_trig_edge;
  wire cfg_trig_edge_reg_0;
  wire [15:0]cfg_trig_high_level;
  wire cfg_trig_high_level0;
  wire \cfg_trig_high_level[15]_i_2__0_n_0 ;
  wire [0:0]\cfg_trig_high_level_reg[15]_0 ;
  wire [15:0]cfg_trig_low_level;
  wire cfg_trig_low_level0;
  wire [5:0]cfg_trig_mask;
  wire cfg_trig_mask0;
  wire [31:0]cfg_trig_post_samp;
  wire cfg_trig_post_samp0;
  wire \cfg_trig_post_samp[31]_i_2_n_0 ;
  wire [31:0]cfg_trig_pre_samp;
  wire cfg_trig_pre_samp0;
  wire clear;
  wire \clk_cnt[0]_i_2_n_0 ;
  wire [31:0]clk_cnt_reg;
  wire \clk_cnt_reg[0]_i_1_n_0 ;
  wire \clk_cnt_reg[0]_i_1_n_1 ;
  wire \clk_cnt_reg[0]_i_1_n_2 ;
  wire \clk_cnt_reg[0]_i_1_n_3 ;
  wire \clk_cnt_reg[0]_i_1_n_4 ;
  wire \clk_cnt_reg[0]_i_1_n_5 ;
  wire \clk_cnt_reg[0]_i_1_n_6 ;
  wire \clk_cnt_reg[0]_i_1_n_7 ;
  wire \clk_cnt_reg[12]_i_1_n_0 ;
  wire \clk_cnt_reg[12]_i_1_n_1 ;
  wire \clk_cnt_reg[12]_i_1_n_2 ;
  wire \clk_cnt_reg[12]_i_1_n_3 ;
  wire \clk_cnt_reg[12]_i_1_n_4 ;
  wire \clk_cnt_reg[12]_i_1_n_5 ;
  wire \clk_cnt_reg[12]_i_1_n_6 ;
  wire \clk_cnt_reg[12]_i_1_n_7 ;
  wire \clk_cnt_reg[16]_i_1_n_0 ;
  wire \clk_cnt_reg[16]_i_1_n_1 ;
  wire \clk_cnt_reg[16]_i_1_n_2 ;
  wire \clk_cnt_reg[16]_i_1_n_3 ;
  wire \clk_cnt_reg[16]_i_1_n_4 ;
  wire \clk_cnt_reg[16]_i_1_n_5 ;
  wire \clk_cnt_reg[16]_i_1_n_6 ;
  wire \clk_cnt_reg[16]_i_1_n_7 ;
  wire \clk_cnt_reg[20]_i_1_n_0 ;
  wire \clk_cnt_reg[20]_i_1_n_1 ;
  wire \clk_cnt_reg[20]_i_1_n_2 ;
  wire \clk_cnt_reg[20]_i_1_n_3 ;
  wire \clk_cnt_reg[20]_i_1_n_4 ;
  wire \clk_cnt_reg[20]_i_1_n_5 ;
  wire \clk_cnt_reg[20]_i_1_n_6 ;
  wire \clk_cnt_reg[20]_i_1_n_7 ;
  wire \clk_cnt_reg[24]_i_1_n_0 ;
  wire \clk_cnt_reg[24]_i_1_n_1 ;
  wire \clk_cnt_reg[24]_i_1_n_2 ;
  wire \clk_cnt_reg[24]_i_1_n_3 ;
  wire \clk_cnt_reg[24]_i_1_n_4 ;
  wire \clk_cnt_reg[24]_i_1_n_5 ;
  wire \clk_cnt_reg[24]_i_1_n_6 ;
  wire \clk_cnt_reg[24]_i_1_n_7 ;
  wire \clk_cnt_reg[28]_i_1_n_1 ;
  wire \clk_cnt_reg[28]_i_1_n_2 ;
  wire \clk_cnt_reg[28]_i_1_n_3 ;
  wire \clk_cnt_reg[28]_i_1_n_4 ;
  wire \clk_cnt_reg[28]_i_1_n_5 ;
  wire \clk_cnt_reg[28]_i_1_n_6 ;
  wire \clk_cnt_reg[28]_i_1_n_7 ;
  wire \clk_cnt_reg[4]_i_1_n_0 ;
  wire \clk_cnt_reg[4]_i_1_n_1 ;
  wire \clk_cnt_reg[4]_i_1_n_2 ;
  wire \clk_cnt_reg[4]_i_1_n_3 ;
  wire \clk_cnt_reg[4]_i_1_n_4 ;
  wire \clk_cnt_reg[4]_i_1_n_5 ;
  wire \clk_cnt_reg[4]_i_1_n_6 ;
  wire \clk_cnt_reg[4]_i_1_n_7 ;
  wire \clk_cnt_reg[8]_i_1_n_0 ;
  wire \clk_cnt_reg[8]_i_1_n_1 ;
  wire \clk_cnt_reg[8]_i_1_n_2 ;
  wire \clk_cnt_reg[8]_i_1_n_3 ;
  wire \clk_cnt_reg[8]_i_1_n_4 ;
  wire \clk_cnt_reg[8]_i_1_n_5 ;
  wire \clk_cnt_reg[8]_i_1_n_6 ;
  wire \clk_cnt_reg[8]_i_1_n_7 ;
  wire ctl_start_r_reg;
  wire ctl_trg;
  wire dat_ctrl_busy;
  wire [7:0]data1;
  wire [15:0]dec_tdata;
  wire dec_tvalid;
  wire dec_valid;
  wire dma_mode;
  wire empty;
  wire empty_fwft_i_reg;
  wire [4:0]event_ip_reset;
  wire [4:0]event_ip_start;
  wire [4:0]event_ip_stop;
  wire [4:0]event_ip_trig;
  wire event_num_reset_i_1_n_0;
  wire event_num_reset_i_2_n_0;
  wire event_num_reset_reg_n_0;
  wire event_num_start;
  wire event_num_start_i_1_n_0;
  wire event_num_start_i_2_n_0;
  wire event_num_stop;
  wire event_num_stop_i_1_n_0;
  wire event_num_stop_i_2_n_0;
  wire event_num_trig;
  wire event_num_trig_i_1_n_0;
  wire event_num_trig_i_2_n_0;
  wire event_op_reset_i_2_n_0;
  wire event_op_reset_i_4__0_n_0;
  wire event_op_reset_i_5__0;
  wire event_op_start_i_1_n_0;
  wire event_op_stop_i_1_n_0;
  wire event_op_trig_i_1_n_0;
  wire external_trig_val;
  wire external_trig_val_1;
  wire fifo_dis;
  wire fifo_dis_reg;
  wire fifo_wr_we;
  wire [15:0]filt_tdata;
  wire first_rst;
  wire first_rst_reg;
  wire full_immed0;
  wire \goreg_dm.dout_i_reg[1] ;
  wire i_dfilt_n_1;
  wire i_dfilt_n_4;
  wire intr;
  wire intr_cnt0;
  wire \intr_cnt[0]_i_3_n_0 ;
  wire [31:0]intr_cnt_reg;
  wire \intr_cnt_reg[0]_i_2_n_0 ;
  wire \intr_cnt_reg[0]_i_2_n_1 ;
  wire \intr_cnt_reg[0]_i_2_n_2 ;
  wire \intr_cnt_reg[0]_i_2_n_3 ;
  wire \intr_cnt_reg[0]_i_2_n_4 ;
  wire \intr_cnt_reg[0]_i_2_n_5 ;
  wire \intr_cnt_reg[0]_i_2_n_6 ;
  wire \intr_cnt_reg[0]_i_2_n_7 ;
  wire \intr_cnt_reg[12]_i_1_n_0 ;
  wire \intr_cnt_reg[12]_i_1_n_1 ;
  wire \intr_cnt_reg[12]_i_1_n_2 ;
  wire \intr_cnt_reg[12]_i_1_n_3 ;
  wire \intr_cnt_reg[12]_i_1_n_4 ;
  wire \intr_cnt_reg[12]_i_1_n_5 ;
  wire \intr_cnt_reg[12]_i_1_n_6 ;
  wire \intr_cnt_reg[12]_i_1_n_7 ;
  wire \intr_cnt_reg[16]_i_1_n_0 ;
  wire \intr_cnt_reg[16]_i_1_n_1 ;
  wire \intr_cnt_reg[16]_i_1_n_2 ;
  wire \intr_cnt_reg[16]_i_1_n_3 ;
  wire \intr_cnt_reg[16]_i_1_n_4 ;
  wire \intr_cnt_reg[16]_i_1_n_5 ;
  wire \intr_cnt_reg[16]_i_1_n_6 ;
  wire \intr_cnt_reg[16]_i_1_n_7 ;
  wire \intr_cnt_reg[20]_i_1_n_0 ;
  wire \intr_cnt_reg[20]_i_1_n_1 ;
  wire \intr_cnt_reg[20]_i_1_n_2 ;
  wire \intr_cnt_reg[20]_i_1_n_3 ;
  wire \intr_cnt_reg[20]_i_1_n_4 ;
  wire \intr_cnt_reg[20]_i_1_n_5 ;
  wire \intr_cnt_reg[20]_i_1_n_6 ;
  wire \intr_cnt_reg[20]_i_1_n_7 ;
  wire \intr_cnt_reg[24]_i_1_n_0 ;
  wire \intr_cnt_reg[24]_i_1_n_1 ;
  wire \intr_cnt_reg[24]_i_1_n_2 ;
  wire \intr_cnt_reg[24]_i_1_n_3 ;
  wire \intr_cnt_reg[24]_i_1_n_4 ;
  wire \intr_cnt_reg[24]_i_1_n_5 ;
  wire \intr_cnt_reg[24]_i_1_n_6 ;
  wire \intr_cnt_reg[24]_i_1_n_7 ;
  wire \intr_cnt_reg[28]_i_1_n_1 ;
  wire \intr_cnt_reg[28]_i_1_n_2 ;
  wire \intr_cnt_reg[28]_i_1_n_3 ;
  wire \intr_cnt_reg[28]_i_1_n_4 ;
  wire \intr_cnt_reg[28]_i_1_n_5 ;
  wire \intr_cnt_reg[28]_i_1_n_6 ;
  wire \intr_cnt_reg[28]_i_1_n_7 ;
  wire \intr_cnt_reg[4]_i_1_n_0 ;
  wire \intr_cnt_reg[4]_i_1_n_1 ;
  wire \intr_cnt_reg[4]_i_1_n_2 ;
  wire \intr_cnt_reg[4]_i_1_n_3 ;
  wire \intr_cnt_reg[4]_i_1_n_4 ;
  wire \intr_cnt_reg[4]_i_1_n_5 ;
  wire \intr_cnt_reg[4]_i_1_n_6 ;
  wire \intr_cnt_reg[4]_i_1_n_7 ;
  wire \intr_cnt_reg[8]_i_1_n_0 ;
  wire \intr_cnt_reg[8]_i_1_n_1 ;
  wire \intr_cnt_reg[8]_i_1_n_2 ;
  wire \intr_cnt_reg[8]_i_1_n_3 ;
  wire \intr_cnt_reg[8]_i_1_n_4 ;
  wire \intr_cnt_reg[8]_i_1_n_5 ;
  wire \intr_cnt_reg[8]_i_1_n_6 ;
  wire \intr_cnt_reg[8]_i_1_n_7 ;
  wire intr_reg;
  wire [7:0]loopback_sel;
  wire m_axi_awvalid_reg;
  wire m_axi_osc1_aclk;
  wire m_axi_osc1_aresetn;
  wire [7:0]m_axi_osc1_awlen;
  wire m_axi_osc1_awready;
  wire m_axi_osc1_awvalid;
  wire [63:0]m_axi_osc1_wdata;
  wire m_axi_osc1_wready;
  wire m_axi_wlast_reg;
  wire m_axi_wlast_reg_0;
  wire m_axi_wvalid_reg;
  wire m_axi_wvalid_reg_0;
  wire [0:0]\m_axis_tdata_reg[15] ;
  wire m_axis_tvalid0;
  wire m_axis_tvalid_reg;
  wire m_axis_tvalid_reg_0;
  wire [29:0]missed_samps_ch1;
  wire [29:0]missed_samps_ch2;
  wire mode_reg;
  wire next_buf_full_reg;
  wire osc1_dma_intr;
  wire [3:0]osc1_event_op;
  wire [31:0]osc1_reg_rd_data;
  wire osc1_reg_wr_we;
  wire osc1_trig_op;
  wire osc2_dma_intr;
  wire [24:0]p_1_in;
  wire [24:0]p_2_in;
  wire [24:0]p_3_in;
  wire [17:0]p_4_in;
  wire \ramp_sig[0]_i_2_n_0 ;
  wire [15:0]ramp_sig_reg;
  wire \ramp_sig_reg[0]_i_1_n_0 ;
  wire \ramp_sig_reg[0]_i_1_n_1 ;
  wire \ramp_sig_reg[0]_i_1_n_2 ;
  wire \ramp_sig_reg[0]_i_1_n_3 ;
  wire \ramp_sig_reg[0]_i_1_n_4 ;
  wire \ramp_sig_reg[0]_i_1_n_5 ;
  wire \ramp_sig_reg[0]_i_1_n_6 ;
  wire \ramp_sig_reg[0]_i_1_n_7 ;
  wire \ramp_sig_reg[12]_i_1_n_1 ;
  wire \ramp_sig_reg[12]_i_1_n_2 ;
  wire \ramp_sig_reg[12]_i_1_n_3 ;
  wire \ramp_sig_reg[12]_i_1_n_4 ;
  wire \ramp_sig_reg[12]_i_1_n_5 ;
  wire \ramp_sig_reg[12]_i_1_n_6 ;
  wire \ramp_sig_reg[12]_i_1_n_7 ;
  wire \ramp_sig_reg[4]_i_1_n_0 ;
  wire \ramp_sig_reg[4]_i_1_n_1 ;
  wire \ramp_sig_reg[4]_i_1_n_2 ;
  wire \ramp_sig_reg[4]_i_1_n_3 ;
  wire \ramp_sig_reg[4]_i_1_n_4 ;
  wire \ramp_sig_reg[4]_i_1_n_5 ;
  wire \ramp_sig_reg[4]_i_1_n_6 ;
  wire \ramp_sig_reg[4]_i_1_n_7 ;
  wire \ramp_sig_reg[8]_i_1_n_0 ;
  wire \ramp_sig_reg[8]_i_1_n_1 ;
  wire \ramp_sig_reg[8]_i_1_n_2 ;
  wire \ramp_sig_reg[8]_i_1_n_3 ;
  wire \ramp_sig_reg[8]_i_1_n_4 ;
  wire \ramp_sig_reg[8]_i_1_n_5 ;
  wire \ramp_sig_reg[8]_i_1_n_6 ;
  wire \ramp_sig_reg[8]_i_1_n_7 ;
  wire rd_en;
  wire [1:0]\reg_ctrl_reg[9] ;
  wire \reg_rd_data[0]_i_11_n_0 ;
  wire \reg_rd_data[0]_i_4_n_0 ;
  wire \reg_rd_data[0]_i_7_n_0 ;
  wire \reg_rd_data[0]_i_8_n_0 ;
  wire \reg_rd_data[10]_i_10_n_0 ;
  wire \reg_rd_data[10]_i_12_n_0 ;
  wire \reg_rd_data[10]_i_2_n_0 ;
  wire \reg_rd_data[10]_i_5_n_0 ;
  wire \reg_rd_data[10]_i_7_n_0 ;
  wire \reg_rd_data[10]_i_9_n_0 ;
  wire \reg_rd_data[11]_i_11_n_0 ;
  wire \reg_rd_data[11]_i_12_n_0 ;
  wire \reg_rd_data[11]_i_13_n_0 ;
  wire \reg_rd_data[11]_i_4_n_0 ;
  wire \reg_rd_data[11]_i_7_n_0 ;
  wire \reg_rd_data[11]_i_9_n_0 ;
  wire \reg_rd_data[12]_i_11_n_0 ;
  wire \reg_rd_data[12]_i_12_n_0 ;
  wire \reg_rd_data[12]_i_13_n_0 ;
  wire \reg_rd_data[12]_i_4_n_0 ;
  wire \reg_rd_data[12]_i_7_n_0 ;
  wire \reg_rd_data[12]_i_9_n_0 ;
  wire \reg_rd_data[13]_i_11_n_0 ;
  wire \reg_rd_data[13]_i_12_n_0 ;
  wire \reg_rd_data[13]_i_13_n_0 ;
  wire \reg_rd_data[13]_i_4_n_0 ;
  wire \reg_rd_data[13]_i_7_n_0 ;
  wire \reg_rd_data[13]_i_9_n_0 ;
  wire \reg_rd_data[14]_i_11_n_0 ;
  wire \reg_rd_data[14]_i_12_n_0 ;
  wire \reg_rd_data[14]_i_13_n_0 ;
  wire \reg_rd_data[14]_i_4_n_0 ;
  wire \reg_rd_data[14]_i_7_n_0 ;
  wire \reg_rd_data[14]_i_9_n_0 ;
  wire \reg_rd_data[15]_i_10_n_0 ;
  wire \reg_rd_data[15]_i_11_n_0 ;
  wire \reg_rd_data[15]_i_13_n_0 ;
  wire \reg_rd_data[15]_i_2__0_n_0 ;
  wire \reg_rd_data[15]_i_5_n_0 ;
  wire \reg_rd_data[15]_i_6_n_0 ;
  wire \reg_rd_data[15]_i_8_n_0 ;
  wire \reg_rd_data[16]_i_10_n_0 ;
  wire \reg_rd_data[16]_i_4_n_0 ;
  wire \reg_rd_data[16]_i_6_n_0 ;
  wire \reg_rd_data[16]_i_8_n_0 ;
  wire \reg_rd_data[16]_i_9_n_0 ;
  wire \reg_rd_data[17]_i_11_n_0 ;
  wire \reg_rd_data[17]_i_12_n_0 ;
  wire \reg_rd_data[17]_i_3_n_0 ;
  wire \reg_rd_data[17]_i_4_n_0 ;
  wire \reg_rd_data[17]_i_6_n_0 ;
  wire \reg_rd_data[17]_i_7_n_0 ;
  wire \reg_rd_data[17]_i_9_n_0 ;
  wire \reg_rd_data[18]_i_6_n_0 ;
  wire \reg_rd_data[18]_i_7_n_0 ;
  wire \reg_rd_data[18]_i_8_n_0 ;
  wire \reg_rd_data[19]_i_6_n_0 ;
  wire \reg_rd_data[19]_i_7_n_0 ;
  wire \reg_rd_data[19]_i_8_n_0 ;
  wire \reg_rd_data[1]_i_11__0_n_0 ;
  wire \reg_rd_data[1]_i_2_n_0 ;
  wire \reg_rd_data[1]_i_5__0_n_0 ;
  wire \reg_rd_data[1]_i_6_n_0 ;
  wire \reg_rd_data[1]_i_8_n_0 ;
  wire \reg_rd_data[20]_i_6_n_0 ;
  wire \reg_rd_data[20]_i_7_n_0 ;
  wire \reg_rd_data[20]_i_8_n_0 ;
  wire \reg_rd_data[21]_i_6_n_0 ;
  wire \reg_rd_data[21]_i_7_n_0 ;
  wire \reg_rd_data[21]_i_8_n_0 ;
  wire \reg_rd_data[22]_i_6_n_0 ;
  wire \reg_rd_data[22]_i_7_n_0 ;
  wire \reg_rd_data[22]_i_8_n_0 ;
  wire \reg_rd_data[23]_i_6_n_0 ;
  wire \reg_rd_data[23]_i_7_n_0 ;
  wire \reg_rd_data[23]_i_8_n_0 ;
  wire \reg_rd_data[24]_i_6_n_0 ;
  wire \reg_rd_data[24]_i_7_n_0 ;
  wire \reg_rd_data[24]_i_8_n_0 ;
  wire \reg_rd_data[25]_i_6_n_0 ;
  wire \reg_rd_data[25]_i_7_n_0 ;
  wire \reg_rd_data[26]_i_6_n_0 ;
  wire \reg_rd_data[26]_i_7_n_0 ;
  wire \reg_rd_data[27]_i_6_n_0 ;
  wire \reg_rd_data[27]_i_7_n_0 ;
  wire \reg_rd_data[28]_i_6_n_0 ;
  wire \reg_rd_data[28]_i_7_n_0 ;
  wire \reg_rd_data[29]_i_6_n_0 ;
  wire \reg_rd_data[29]_i_7_n_0 ;
  wire \reg_rd_data[2]_i_11_n_0 ;
  wire \reg_rd_data[2]_i_12_n_0 ;
  wire \reg_rd_data[2]_i_13_n_0 ;
  wire \reg_rd_data[2]_i_14__0_n_0 ;
  wire \reg_rd_data[2]_i_17_n_0 ;
  wire \reg_rd_data[2]_i_20_n_0 ;
  wire \reg_rd_data[2]_i_22_n_0 ;
  wire \reg_rd_data[2]_i_2_n_0 ;
  wire \reg_rd_data[2]_i_4_n_0 ;
  wire \reg_rd_data[2]_i_5_n_0 ;
  wire \reg_rd_data[2]_i_6_n_0 ;
  wire \reg_rd_data[2]_i_7_n_0 ;
  wire \reg_rd_data[30]_i_6_n_0 ;
  wire \reg_rd_data[30]_i_7_n_0 ;
  wire \reg_rd_data[31]_i_11_n_0 ;
  wire \reg_rd_data[31]_i_12_n_0 ;
  wire \reg_rd_data[31]_i_13_n_0 ;
  wire \reg_rd_data[31]_i_14_n_0 ;
  wire \reg_rd_data[31]_i_15_n_0 ;
  wire \reg_rd_data[31]_i_2_n_0 ;
  wire \reg_rd_data[31]_i_4_n_0 ;
  wire \reg_rd_data[31]_i_5_n_0 ;
  wire \reg_rd_data[31]_i_6_n_0 ;
  wire \reg_rd_data[31]_i_7_n_0 ;
  wire \reg_rd_data[3]_i_13_n_0 ;
  wire \reg_rd_data[3]_i_16_n_0 ;
  wire \reg_rd_data[3]_i_2_n_0 ;
  wire \reg_rd_data[3]_i_5__0_n_0 ;
  wire \reg_rd_data[3]_i_6_n_0 ;
  wire \reg_rd_data[3]_i_7_n_0 ;
  wire \reg_rd_data[4]_i_11_n_0 ;
  wire \reg_rd_data[4]_i_15_n_0 ;
  wire \reg_rd_data[4]_i_4_n_0 ;
  wire \reg_rd_data[4]_i_5_n_0 ;
  wire \reg_rd_data[4]_i_9_n_0 ;
  wire \reg_rd_data[5]_i_11_n_0 ;
  wire \reg_rd_data[5]_i_13_n_0 ;
  wire \reg_rd_data[5]_i_15_n_0 ;
  wire \reg_rd_data[5]_i_4_n_0 ;
  wire \reg_rd_data[5]_i_5_n_0 ;
  wire \reg_rd_data[5]_i_9_n_0 ;
  wire \reg_rd_data[6]_i_11_n_0 ;
  wire \reg_rd_data[6]_i_12_n_0 ;
  wire \reg_rd_data[6]_i_13_n_0 ;
  wire \reg_rd_data[6]_i_4_n_0 ;
  wire \reg_rd_data[6]_i_7_n_0 ;
  wire \reg_rd_data[6]_i_9_n_0 ;
  wire \reg_rd_data[7]_i_11_n_0 ;
  wire \reg_rd_data[7]_i_12_n_0 ;
  wire \reg_rd_data[7]_i_13_n_0 ;
  wire \reg_rd_data[7]_i_4_n_0 ;
  wire \reg_rd_data[7]_i_7_n_0 ;
  wire \reg_rd_data[7]_i_9_n_0 ;
  wire \reg_rd_data[8]_i_10_n_0 ;
  wire \reg_rd_data[8]_i_12_n_0 ;
  wire \reg_rd_data[8]_i_2_n_0 ;
  wire \reg_rd_data[8]_i_5_n_0 ;
  wire \reg_rd_data[8]_i_7_n_0 ;
  wire \reg_rd_data[8]_i_9_n_0 ;
  wire \reg_rd_data[9]_i_11_n_0 ;
  wire \reg_rd_data[9]_i_12_n_0 ;
  wire \reg_rd_data[9]_i_13_n_0 ;
  wire \reg_rd_data[9]_i_4_n_0 ;
  wire \reg_rd_data[9]_i_7_n_0 ;
  wire \reg_rd_data[9]_i_9_n_0 ;
  wire \reg_rd_data_reg[0]_i_3_n_0 ;
  wire \reg_rd_data_reg[2]_0 ;
  wire [31:0]\req_addr_reg[31] ;
  wire req_we_reg;
  wire \req_xfer_cnt_reg[0] ;
  wire \s_axi_reg_araddr[2] ;
  wire \s_axi_reg_araddr[2]_0 ;
  wire \s_axi_reg_araddr[2]_1 ;
  wire \s_axi_reg_araddr[2]_2 ;
  wire \s_axi_reg_araddr[3] ;
  wire \s_axi_reg_araddr[4] ;
  wire \s_axi_reg_araddr[4]_0 ;
  wire \s_axi_reg_araddr[4]_1 ;
  wire \s_axi_reg_araddr[4]_2 ;
  wire \s_axi_reg_araddr[4]_3 ;
  wire \s_axi_reg_araddr[5] ;
  wire \s_axi_reg_araddr[6] ;
  wire \s_axi_reg_araddr[7] ;
  wire \s_axi_reg_araddr[7]_0 ;
  wire \s_axi_reg_araddr[7]_1 ;
  wire \s_axi_reg_araddr[7]_2 ;
  wire \s_axi_reg_rdata[0] ;
  wire \s_axi_reg_rdata[0]_0 ;
  wire [31:0]\s_axi_reg_rdata[31] ;
  wire state_cs;
  wire [2:0]state_cs_0;
  wire [2:0]state_cs_1;
  wire \state_cs_reg[0] ;
  wire [0:0]sts_trig_reg;
  wire sts_trig_reg_0;
  wire [0:0]tlast_reg;
  wire \trig_cnt[0]_i_2_n_0 ;
  wire [31:0]trig_cnt_reg;
  wire \trig_cnt_reg[0]_i_1_n_0 ;
  wire \trig_cnt_reg[0]_i_1_n_1 ;
  wire \trig_cnt_reg[0]_i_1_n_2 ;
  wire \trig_cnt_reg[0]_i_1_n_3 ;
  wire \trig_cnt_reg[0]_i_1_n_4 ;
  wire \trig_cnt_reg[0]_i_1_n_5 ;
  wire \trig_cnt_reg[0]_i_1_n_6 ;
  wire \trig_cnt_reg[0]_i_1_n_7 ;
  wire \trig_cnt_reg[12]_i_1_n_0 ;
  wire \trig_cnt_reg[12]_i_1_n_1 ;
  wire \trig_cnt_reg[12]_i_1_n_2 ;
  wire \trig_cnt_reg[12]_i_1_n_3 ;
  wire \trig_cnt_reg[12]_i_1_n_4 ;
  wire \trig_cnt_reg[12]_i_1_n_5 ;
  wire \trig_cnt_reg[12]_i_1_n_6 ;
  wire \trig_cnt_reg[12]_i_1_n_7 ;
  wire \trig_cnt_reg[16]_i_1_n_0 ;
  wire \trig_cnt_reg[16]_i_1_n_1 ;
  wire \trig_cnt_reg[16]_i_1_n_2 ;
  wire \trig_cnt_reg[16]_i_1_n_3 ;
  wire \trig_cnt_reg[16]_i_1_n_4 ;
  wire \trig_cnt_reg[16]_i_1_n_5 ;
  wire \trig_cnt_reg[16]_i_1_n_6 ;
  wire \trig_cnt_reg[16]_i_1_n_7 ;
  wire \trig_cnt_reg[20]_i_1_n_0 ;
  wire \trig_cnt_reg[20]_i_1_n_1 ;
  wire \trig_cnt_reg[20]_i_1_n_2 ;
  wire \trig_cnt_reg[20]_i_1_n_3 ;
  wire \trig_cnt_reg[20]_i_1_n_4 ;
  wire \trig_cnt_reg[20]_i_1_n_5 ;
  wire \trig_cnt_reg[20]_i_1_n_6 ;
  wire \trig_cnt_reg[20]_i_1_n_7 ;
  wire \trig_cnt_reg[24]_i_1_n_0 ;
  wire \trig_cnt_reg[24]_i_1_n_1 ;
  wire \trig_cnt_reg[24]_i_1_n_2 ;
  wire \trig_cnt_reg[24]_i_1_n_3 ;
  wire \trig_cnt_reg[24]_i_1_n_4 ;
  wire \trig_cnt_reg[24]_i_1_n_5 ;
  wire \trig_cnt_reg[24]_i_1_n_6 ;
  wire \trig_cnt_reg[24]_i_1_n_7 ;
  wire \trig_cnt_reg[28]_i_1_n_1 ;
  wire \trig_cnt_reg[28]_i_1_n_2 ;
  wire \trig_cnt_reg[28]_i_1_n_3 ;
  wire \trig_cnt_reg[28]_i_1_n_4 ;
  wire \trig_cnt_reg[28]_i_1_n_5 ;
  wire \trig_cnt_reg[28]_i_1_n_6 ;
  wire \trig_cnt_reg[28]_i_1_n_7 ;
  wire \trig_cnt_reg[4]_i_1_n_0 ;
  wire \trig_cnt_reg[4]_i_1_n_1 ;
  wire \trig_cnt_reg[4]_i_1_n_2 ;
  wire \trig_cnt_reg[4]_i_1_n_3 ;
  wire \trig_cnt_reg[4]_i_1_n_4 ;
  wire \trig_cnt_reg[4]_i_1_n_5 ;
  wire \trig_cnt_reg[4]_i_1_n_6 ;
  wire \trig_cnt_reg[4]_i_1_n_7 ;
  wire \trig_cnt_reg[8]_i_1_n_0 ;
  wire \trig_cnt_reg[8]_i_1_n_1 ;
  wire \trig_cnt_reg[8]_i_1_n_2 ;
  wire \trig_cnt_reg[8]_i_1_n_3 ;
  wire \trig_cnt_reg[8]_i_1_n_4 ;
  wire \trig_cnt_reg[8]_i_1_n_5 ;
  wire \trig_cnt_reg[8]_i_1_n_6 ;
  wire \trig_cnt_reg[8]_i_1_n_7 ;
  wire trig_detect_reg;
  wire trig_detect_reg_0;
  wire [5:0]trig_ip;
  wire trig_out;
  wire trig_tvalid;
  wire wr_en;
  wire \xfer_cnt_reg[3] ;
  wire \xfer_cnt_reg[6] ;
  wire [3:3]\NLW_clk_cnt_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_intr_cnt_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_ramp_sig_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_trig_cnt_reg[28]_i_1_CO_UNCONNECTED ;

  system_rp_oscilloscope_0_rp_dma_s2mm__xdcDup__1 U_dma_s2mm
       (.D({U_dma_s2mm_n_123,U_dma_s2mm_n_124,U_dma_s2mm_n_125,U_dma_s2mm_n_126,U_dma_s2mm_n_127,U_dma_s2mm_n_128,U_dma_s2mm_n_129,U_dma_s2mm_n_130,U_dma_s2mm_n_131,U_dma_s2mm_n_132,U_dma_s2mm_n_133,U_dma_s2mm_n_134,U_dma_s2mm_n_135,U_dma_s2mm_n_136,U_dma_s2mm_n_137,U_dma_s2mm_n_138,U_dma_s2mm_n_139,U_dma_s2mm_n_140,U_dma_s2mm_n_141,U_dma_s2mm_n_142,U_dma_s2mm_n_143,U_dma_s2mm_n_144}),
        .E(fifo_wr_we),
        .Q(\req_addr_reg[31] ),
        .SR(ctl_start_r_reg),
        .acq_tdata(acq_tdata),
        .acq_tlast(acq_tlast),
        .bit_start(bit_start),
        .bram_addr_a(bram_addr_a),
        .buf_sel_ch2(buf_sel_ch2),
        .busy_reg(dat_ctrl_busy),
        .busy_reg_0(busy_reg),
        .cfg_dma_ctrl_reg(cfg_dma_ctrl_reg),
        .\cfg_dma_dst_addr1_reg[16] (U_dma_s2mm_n_166),
        .\cfg_dma_dst_addr1_reg[17] (U_dma_s2mm_n_167),
        .\cfg_trig_pre_samp_reg[29] (U_dma_s2mm_n_157),
        .clear(clear),
        .clk_cnt_reg(clk_cnt_reg[31:18]),
        .empty(empty),
        .empty_fwft_i_reg(empty_fwft_i_reg),
        .external_trig_val(external_trig_val),
        .external_trig_val_1(external_trig_val_1),
        .fifo_dis_reg(fifo_dis),
        .fifo_dis_reg_0(fifo_dis_reg),
        .first_rst(first_rst),
        .first_rst_reg(first_rst_reg),
        .full_immed0(full_immed0),
        .\goreg_dm.dout_i_reg[1] (\goreg_dm.dout_i_reg[1] ),
        .intr(intr),
        .intr_cnt0(intr_cnt0),
        .intr_cnt_reg(intr_cnt_reg[31:25]),
        .intr_reg(intr_reg),
        .m_axi_awvalid_reg(m_axi_awvalid_reg),
        .m_axi_osc1_aclk(m_axi_osc1_aclk),
        .m_axi_osc1_aresetn(m_axi_osc1_aresetn),
        .m_axi_osc1_awlen(m_axi_osc1_awlen),
        .m_axi_osc1_awready(m_axi_osc1_awready),
        .m_axi_osc1_awvalid(m_axi_osc1_awvalid),
        .m_axi_osc1_wdata(m_axi_osc1_wdata),
        .m_axi_osc1_wready(m_axi_osc1_wready),
        .m_axi_wlast_reg(m_axi_wlast_reg),
        .m_axi_wlast_reg_0(m_axi_wlast_reg_0),
        .m_axi_wvalid_reg(m_axi_wvalid_reg),
        .m_axi_wvalid_reg_0(m_axi_wvalid_reg_0),
        .m_axis_tvalid_reg(m_axis_tvalid_reg),
        .m_axis_tvalid_reg_0(m_axis_tvalid_reg_0),
        .missed_samps_ch1(missed_samps_ch1),
        .missed_samps_ch2(missed_samps_ch2),
        .mode_reg(dma_mode),
        .mode_reg_0(mode_reg),
        .\mux_sel_reg[0] (U_dma_s2mm_n_162),
        .\mux_sel_reg[1] (U_dma_s2mm_n_119),
        .\mux_sel_reg[2] (U_dma_s2mm_n_148),
        .\mux_sel_reg[2]_0 (U_dma_s2mm_n_149),
        .\mux_sel_reg[2]_1 (U_dma_s2mm_n_150),
        .\mux_sel_reg[2]_2 (U_dma_s2mm_n_151),
        .\mux_sel_reg[2]_3 (U_dma_s2mm_n_152),
        .\mux_sel_reg[2]_4 (U_dma_s2mm_n_153),
        .\mux_sel_reg[2]_5 (U_dma_s2mm_n_154),
        .\mux_sel_reg[2]_6 (U_dma_s2mm_n_155),
        .next_buf_full1_carry__1_i_10(cfg_dma_buf_size[16:0]),
        .next_buf_full_reg(next_buf_full_reg),
        .osc1_dma_intr(osc1_dma_intr),
        .osc1_reg_wr_we(osc1_reg_wr_we),
        .osc2_dma_intr(osc2_dma_intr),
        .rd_en(rd_en),
        .\reg_ctrl_reg[31] (D),
        .\reg_ctrl_reg[9] (\reg_ctrl_reg[9] ),
        .\reg_rd_data[0]_i_5 (cfg_filt_bypass),
        .\reg_rd_data[10]_i_3 (\reg_rd_data[10]_i_12_n_0 ),
        .\reg_rd_data[10]_i_3_0 (\reg_rd_data[10]_i_10_n_0 ),
        .\reg_rd_data[15]_i_4 (\reg_rd_data[15]_i_11_n_0 ),
        .\reg_rd_data[15]_i_4_0 (\reg_rd_data[15]_i_13_n_0 ),
        .\reg_rd_data[16]_i_3 (\reg_rd_data[16]_i_10_n_0 ),
        .\reg_rd_data[16]_i_3_0 (\reg_rd_data[16]_i_9_n_0 ),
        .\reg_rd_data[17]_i_5 (p_4_in),
        .\reg_rd_data[17]_i_5_0 (\reg_rd_data[17]_i_12_n_0 ),
        .\reg_rd_data[17]_i_5_1 (\reg_rd_data[17]_i_11_n_0 ),
        .\reg_rd_data[18]_i_2 (\reg_rd_data[18]_i_6_n_0 ),
        .\reg_rd_data[18]_i_2_0 (\reg_rd_data[18]_i_7_n_0 ),
        .\reg_rd_data[18]_i_2_1 (\reg_rd_data[18]_i_8_n_0 ),
        .\reg_rd_data[19]_i_2 (\reg_rd_data[19]_i_7_n_0 ),
        .\reg_rd_data[19]_i_2_0 (\reg_rd_data[19]_i_8_n_0 ),
        .\reg_rd_data[19]_i_2_1 (\reg_rd_data[19]_i_6_n_0 ),
        .\reg_rd_data[20]_i_2 (\reg_rd_data[20]_i_7_n_0 ),
        .\reg_rd_data[20]_i_2_0 (\reg_rd_data[20]_i_8_n_0 ),
        .\reg_rd_data[20]_i_2_1 (\reg_rd_data[20]_i_6_n_0 ),
        .\reg_rd_data[21]_i_2 (\reg_rd_data[21]_i_7_n_0 ),
        .\reg_rd_data[21]_i_2_0 (\reg_rd_data[21]_i_8_n_0 ),
        .\reg_rd_data[21]_i_2_1 (\reg_rd_data[21]_i_6_n_0 ),
        .\reg_rd_data[22]_i_2 (\reg_rd_data[22]_i_7_n_0 ),
        .\reg_rd_data[22]_i_2_0 (\reg_rd_data[22]_i_8_n_0 ),
        .\reg_rd_data[22]_i_2_1 (\reg_rd_data[22]_i_6_n_0 ),
        .\reg_rd_data[23]_i_2 (\reg_rd_data[23]_i_7_n_0 ),
        .\reg_rd_data[23]_i_2_0 (\reg_rd_data[23]_i_8_n_0 ),
        .\reg_rd_data[23]_i_2_1 (\reg_rd_data[23]_i_6_n_0 ),
        .\reg_rd_data[24]_i_2 (\reg_rd_data[24]_i_7_n_0 ),
        .\reg_rd_data[24]_i_2_0 (\reg_rd_data[24]_i_8_n_0 ),
        .\reg_rd_data[24]_i_2_1 (\reg_rd_data[24]_i_6_n_0 ),
        .\reg_rd_data[25]_i_2 (\reg_rd_data[25]_i_7_n_0 ),
        .\reg_rd_data[25]_i_2_0 (\reg_rd_data[25]_i_6_n_0 ),
        .\reg_rd_data[26]_i_2 (\reg_rd_data[26]_i_7_n_0 ),
        .\reg_rd_data[26]_i_2_0 (\reg_rd_data[26]_i_6_n_0 ),
        .\reg_rd_data[27]_i_2 (\reg_rd_data[27]_i_7_n_0 ),
        .\reg_rd_data[27]_i_2_0 (\reg_rd_data[27]_i_6_n_0 ),
        .\reg_rd_data[28]_i_2 (\reg_rd_data[28]_i_7_n_0 ),
        .\reg_rd_data[28]_i_2_0 (\reg_rd_data[28]_i_6_n_0 ),
        .\reg_rd_data[29]_i_2 (\reg_rd_data[29]_i_7_n_0 ),
        .\reg_rd_data[29]_i_2_0 (\reg_rd_data[29]_i_6_n_0 ),
        .\reg_rd_data[2]_i_8 (\reg_rd_data[31]_i_11_n_0 ),
        .\reg_rd_data[2]_i_8_0 (\reg_rd_data[2]_i_22_n_0 ),
        .\reg_rd_data[30]_i_2 (\reg_rd_data[30]_i_7_n_0 ),
        .\reg_rd_data[30]_i_2_0 (\reg_rd_data[30]_i_6_n_0 ),
        .\reg_rd_data[31]_i_3 (\reg_rd_data[31]_i_14_n_0 ),
        .\reg_rd_data[31]_i_3_0 (\reg_rd_data[31]_i_13_n_0 ),
        .\reg_rd_data[8]_i_3 (\reg_rd_data[8]_i_12_n_0 ),
        .\reg_rd_data[8]_i_3_0 (\reg_rd_data[8]_i_10_n_0 ),
        .\reg_rd_data_reg[0] (\reg_rd_data_reg[0]_i_3_n_0 ),
        .\reg_rd_data_reg[0]_0 (\reg_rd_data[0]_i_4_n_0 ),
        .\reg_rd_data_reg[0]_1 (U_osc_acq_n_24),
        .\reg_rd_data_reg[0]_i_2 (\reg_rd_data[0]_i_11_n_0 ),
        .\reg_rd_data_reg[10] (\reg_rd_data[10]_i_2_n_0 ),
        .\reg_rd_data_reg[10]_0 (U_osc_acq_n_48),
        .\reg_rd_data_reg[10]_1 (\reg_rd_data[10]_i_5_n_0 ),
        .\reg_rd_data_reg[10]_2 (\reg_rd_data[10]_i_7_n_0 ),
        .\reg_rd_data_reg[11]_i_3 (\reg_rd_data[11]_i_9_n_0 ),
        .\reg_rd_data_reg[11]_i_3_0 (\reg_rd_data[11]_i_11_n_0 ),
        .\reg_rd_data_reg[11]_i_5 (\reg_rd_data[11]_i_13_n_0 ),
        .\reg_rd_data_reg[11]_i_6 (U_dma_s2mm_n_165),
        .\reg_rd_data_reg[12]_i_3 (\reg_rd_data[12]_i_11_n_0 ),
        .\reg_rd_data_reg[12]_i_3_0 (\reg_rd_data[12]_i_9_n_0 ),
        .\reg_rd_data_reg[12]_i_5 (\reg_rd_data[12]_i_13_n_0 ),
        .\reg_rd_data_reg[12]_i_6 (U_dma_s2mm_n_171),
        .\reg_rd_data_reg[13]_i_3 (\reg_rd_data[13]_i_9_n_0 ),
        .\reg_rd_data_reg[13]_i_3_0 (\reg_rd_data[13]_i_11_n_0 ),
        .\reg_rd_data_reg[13]_i_5 (\reg_rd_data[13]_i_13_n_0 ),
        .\reg_rd_data_reg[13]_i_6 (U_dma_s2mm_n_172),
        .\reg_rd_data_reg[14]_i_3 (\reg_rd_data[14]_i_9_n_0 ),
        .\reg_rd_data_reg[14]_i_3_0 (\reg_rd_data[14]_i_11_n_0 ),
        .\reg_rd_data_reg[14]_i_5 (\reg_rd_data[14]_i_13_n_0 ),
        .\reg_rd_data_reg[14]_i_6 (U_dma_s2mm_n_173),
        .\reg_rd_data_reg[15] (\reg_rd_data[17]_i_3_n_0 ),
        .\reg_rd_data_reg[15]_0 (\reg_rd_data[31]_i_7_n_0 ),
        .\reg_rd_data_reg[15]_1 (\reg_rd_data[15]_i_8_n_0 ),
        .\reg_rd_data_reg[15]_i_9 (cfg_calib_offset),
        .\reg_rd_data_reg[15]_i_9_0 (cfg_calib_gain),
        .\reg_rd_data_reg[16] (\reg_rd_data[16]_i_6_n_0 ),
        .\reg_rd_data_reg[17] (\reg_rd_data[17]_i_9_n_0 ),
        .\reg_rd_data_reg[18] (U_osc_acq_n_37),
        .\reg_rd_data_reg[19] (U_osc_acq_n_36),
        .\reg_rd_data_reg[1] (\reg_rd_data[2]_i_5_n_0 ),
        .\reg_rd_data_reg[1]_0 (\reg_rd_data[1]_i_2_n_0 ),
        .\reg_rd_data_reg[1]_1 (U_osc_acq_n_81),
        .\reg_rd_data_reg[1]_2 (\reg_rd_data[1]_i_5__0_n_0 ),
        .\reg_rd_data_reg[1]_3 (\reg_rd_data[1]_i_8_n_0 ),
        .\reg_rd_data_reg[20] (U_osc_acq_n_35),
        .\reg_rd_data_reg[21] (U_osc_acq_n_34),
        .\reg_rd_data_reg[22] (U_osc_acq_n_33),
        .\reg_rd_data_reg[23] (U_osc_acq_n_32),
        .\reg_rd_data_reg[24] (U_osc_acq_n_31),
        .\reg_rd_data_reg[25] (U_osc_acq_n_30),
        .\reg_rd_data_reg[26] (U_osc_acq_n_29),
        .\reg_rd_data_reg[27] (U_osc_acq_n_28),
        .\reg_rd_data_reg[28] (U_osc_acq_n_27),
        .\reg_rd_data_reg[29] (U_osc_acq_n_26),
        .\reg_rd_data_reg[2] (\reg_rd_data[2]_i_4_n_0 ),
        .\reg_rd_data_reg[2]_0 (\reg_rd_data[2]_i_2_n_0 ),
        .\reg_rd_data_reg[2]_1 (\reg_rd_data[2]_i_6_n_0 ),
        .\reg_rd_data_reg[2]_2 (U_osc_acq_n_80),
        .\reg_rd_data_reg[2]_i_3 (\reg_rd_data[2]_i_17_n_0 ),
        .\reg_rd_data_reg[30] (U_osc_acq_n_25),
        .\reg_rd_data_reg[31] (\reg_rd_data[31]_i_2_n_0 ),
        .\reg_rd_data_reg[31]_0 (\reg_rd_data[31]_i_4_n_0 ),
        .\reg_rd_data_reg[31]_1 (\reg_rd_data[31]_i_5_n_0 ),
        .\reg_rd_data_reg[31]_2 (U_osc_acq_n_79),
        .\reg_rd_data_reg[3] (\reg_rd_data[17]_i_4_n_0 ),
        .\reg_rd_data_reg[3]_0 (\reg_rd_data[3]_i_2_n_0 ),
        .\reg_rd_data_reg[3]_1 (U_osc_acq_n_52),
        .\reg_rd_data_reg[3]_2 (\reg_rd_data[3]_i_5__0_n_0 ),
        .\reg_rd_data_reg[3]_i_3 (\reg_rd_data[3]_i_13_n_0 ),
        .\reg_rd_data_reg[3]_i_8 (\reg_rd_data[3]_i_16_n_0 ),
        .\reg_rd_data_reg[4] (U_osc_acq_n_51),
        .\reg_rd_data_reg[4]_0 (\reg_rd_data[4]_i_4_n_0 ),
        .\reg_rd_data_reg[4]_1 (\reg_rd_data[4]_i_5_n_0 ),
        .\reg_rd_data_reg[4]_i_2 (\reg_rd_data[4]_i_11_n_0 ),
        .\reg_rd_data_reg[4]_i_6 (\reg_rd_data[4]_i_15_n_0 ),
        .\reg_rd_data_reg[5] (U_osc_acq_n_50),
        .\reg_rd_data_reg[5]_0 (\reg_rd_data[5]_i_4_n_0 ),
        .\reg_rd_data_reg[5]_1 (\reg_rd_data[5]_i_5_n_0 ),
        .\reg_rd_data_reg[5]_i_2 (\reg_rd_data[5]_i_11_n_0 ),
        .\reg_rd_data_reg[5]_i_2_0 (\reg_rd_data[5]_i_13_n_0 ),
        .\reg_rd_data_reg[5]_i_6 (\reg_rd_data[5]_i_15_n_0 ),
        .\reg_rd_data_reg[6]_i_3 (\reg_rd_data[6]_i_11_n_0 ),
        .\reg_rd_data_reg[6]_i_3_0 (\reg_rd_data[6]_i_9_n_0 ),
        .\reg_rd_data_reg[6]_i_5 (\reg_rd_data[6]_i_13_n_0 ),
        .\reg_rd_data_reg[6]_i_6 (U_dma_s2mm_n_168),
        .\reg_rd_data_reg[7]_i_3 (\reg_rd_data[7]_i_9_n_0 ),
        .\reg_rd_data_reg[7]_i_3_0 (\reg_rd_data[7]_i_11_n_0 ),
        .\reg_rd_data_reg[7]_i_5 (\reg_rd_data[7]_i_13_n_0 ),
        .\reg_rd_data_reg[7]_i_6 (U_dma_s2mm_n_163),
        .\reg_rd_data_reg[8] (\reg_rd_data[15]_i_2__0_n_0 ),
        .\reg_rd_data_reg[8]_0 (\reg_rd_data[8]_i_2_n_0 ),
        .\reg_rd_data_reg[8]_1 (U_osc_acq_n_49),
        .\reg_rd_data_reg[8]_2 (\reg_rd_data[8]_i_5_n_0 ),
        .\reg_rd_data_reg[8]_3 (\reg_rd_data[8]_i_7_n_0 ),
        .\reg_rd_data_reg[9]_i_3 (\reg_rd_data[9]_i_9_n_0 ),
        .\reg_rd_data_reg[9]_i_3_0 (\reg_rd_data[9]_i_11_n_0 ),
        .\reg_rd_data_reg[9]_i_5 (\reg_rd_data[9]_i_13_n_0 ),
        .\reg_rd_data_reg[9]_i_6 (U_dma_s2mm_n_164),
        .\req_addr_reg[15] (U_dma_s2mm_n_174),
        .\req_buf_addr_reg[31] (cfg_dma_dst_addr2),
        .\req_buf_addr_reg[31]_0 (cfg_dma_dst_addr1),
        .req_buf_addr_sel_p1_reg(buf_sel_ch1),
        .req_we_reg(req_we_reg),
        .\req_xfer_cnt_reg[0] (\req_xfer_cnt_reg[0] ),
        .\s_axi_reg_araddr[2] (\s_axi_reg_araddr[2] ),
        .\s_axi_reg_araddr[3] (\s_axi_reg_araddr[3] ),
        .\s_axi_reg_araddr[6] (U_dma_s2mm_n_120),
        .\s_axi_reg_araddr[7] (U_dma_s2mm_n_158),
        .\state_cs_reg[0] (state_cs),
        .\state_cs_reg[0]_0 (state_cs_1[0]),
        .\state_cs_reg[0]_1 (\state_cs_reg[0] ),
        .\state_cs_reg[1] (state_cs_1[1]),
        .\state_cs_reg[2] (state_cs_1[2]),
        .sts_acquire_reg(U_osc_acq_n_54),
        .sts_acquire_reg_0({cfg_trig_pre_samp[31],cfg_trig_pre_samp[29],cfg_trig_pre_samp[25:24],cfg_trig_pre_samp[18],cfg_trig_pre_samp[14],cfg_trig_pre_samp[7],cfg_trig_pre_samp[1]}),
        .sts_acquire_reg_1(U_osc_acq_n_53),
        .tlast_reg(tlast_reg),
        .tlast_reg_0(acq_tvalid),
        .trig_cnt_reg(trig_cnt_reg[31:18]),
        .\trig_cnt_reg[0] (cfg_trig_mask),
        .trig_ip(trig_ip[5]),
        .trig_out(trig_out),
        .\upsize_buf_reg[0][7] (data1),
        .\upsize_buf_reg[2][7] ({U_osc_acq_n_63,U_osc_acq_n_64,U_osc_acq_n_65,U_osc_acq_n_66,U_osc_acq_n_67,U_osc_acq_n_68,U_osc_acq_n_69,U_osc_acq_n_70}),
        .\upsize_buf_reg[7][7] ({U_osc_acq_n_55,U_osc_acq_n_56,U_osc_acq_n_57,U_osc_acq_n_58,U_osc_acq_n_59,U_osc_acq_n_60,U_osc_acq_n_61,U_osc_acq_n_62}),
        .use_8bit_r_reg_0(cfg_8bit_dat),
        .wr_en(wr_en),
        .\xfer_cnt_reg[3] (\xfer_cnt_reg[3] ),
        .\xfer_cnt_reg[6] (\xfer_cnt_reg[6] ));
  system_rp_oscilloscope_0_osc_acquire_13 U_osc_acq
       (.D({U_osc_acq_n_38,U_osc_acq_n_39,U_osc_acq_n_40,U_osc_acq_n_41,U_osc_acq_n_42,U_osc_acq_n_43,U_osc_acq_n_44,U_osc_acq_n_45,U_osc_acq_n_46,U_osc_acq_n_47}),
        .\FSM_sequential_state_cs_reg[0]_0 (state_cs_0[0]),
        .\FSM_sequential_state_cs_reg[1]_0 (state_cs_0[1]),
        .\FSM_sequential_state_cs_reg[2]_0 (state_cs_0[2]),
        .Q(cfg_trig_pre_samp),
        .acq_tdata(acq_tdata),
        .acq_tlast(acq_tlast),
        .acq_tvalid(acq_tvalid),
        .cfg_event_sel(cfg_event_sel[0]),
        .\cfg_event_sel_reg[0] (U_osc_acq_n_24),
        .\cfg_trig_mask_reg[4] (U_osc_acq_n_51),
        .\cfg_trig_mask_reg[5] (U_osc_acq_n_50),
        .\cfg_trig_pre_samp_reg[10] (U_osc_acq_n_48),
        .\cfg_trig_pre_samp_reg[17] (U_osc_acq_n_53),
        .\cfg_trig_pre_samp_reg[18] (U_osc_acq_n_37),
        .\cfg_trig_pre_samp_reg[19] (U_osc_acq_n_36),
        .\cfg_trig_pre_samp_reg[20] (U_osc_acq_n_35),
        .\cfg_trig_pre_samp_reg[21] (U_osc_acq_n_34),
        .\cfg_trig_pre_samp_reg[22] (U_osc_acq_n_33),
        .\cfg_trig_pre_samp_reg[23] (U_osc_acq_n_32),
        .\cfg_trig_pre_samp_reg[23]_0 (U_osc_acq_n_54),
        .\cfg_trig_pre_samp_reg[24] (U_osc_acq_n_31),
        .\cfg_trig_pre_samp_reg[25] (U_osc_acq_n_30),
        .\cfg_trig_pre_samp_reg[26] (U_osc_acq_n_29),
        .\cfg_trig_pre_samp_reg[27] (U_osc_acq_n_28),
        .\cfg_trig_pre_samp_reg[28] (U_osc_acq_n_27),
        .\cfg_trig_pre_samp_reg[29] (U_osc_acq_n_26),
        .\cfg_trig_pre_samp_reg[30] (U_osc_acq_n_25),
        .\cfg_trig_pre_samp_reg[31] (U_osc_acq_n_79),
        .\cfg_trig_pre_samp_reg[8] (U_osc_acq_n_49),
        .clear(clear),
        .dma_mode(dma_mode),
        .event_num_reset_reg(U_osc_acq_n_19),
        .event_num_start(event_num_start),
        .event_num_stop(event_num_stop),
        .event_num_trig(event_num_trig),
        .event_num_trig_reg(ctl_trg),
        .m_axi_osc1_aclk(m_axi_osc1_aclk),
        .m_axi_osc1_aresetn(m_axi_osc1_aresetn),
        .\m_axis_tdata_reg[0]_0 (U_osc_trigger_n_15),
        .\m_axis_tdata_reg[10]_0 (U_osc_trigger_n_5),
        .\m_axis_tdata_reg[11]_0 (U_osc_trigger_n_4),
        .\m_axis_tdata_reg[12]_0 (U_osc_trigger_n_3),
        .\m_axis_tdata_reg[13]_0 (U_osc_trigger_n_2),
        .\m_axis_tdata_reg[14]_0 (U_osc_trigger_n_1),
        .\m_axis_tdata_reg[15]_0 ({U_osc_acq_n_55,U_osc_acq_n_56,U_osc_acq_n_57,U_osc_acq_n_58,U_osc_acq_n_59,U_osc_acq_n_60,U_osc_acq_n_61,U_osc_acq_n_62}),
        .\m_axis_tdata_reg[15]_1 ({U_osc_acq_n_63,U_osc_acq_n_64,U_osc_acq_n_65,U_osc_acq_n_66,U_osc_acq_n_67,U_osc_acq_n_68,U_osc_acq_n_69,U_osc_acq_n_70}),
        .\m_axis_tdata_reg[15]_2 (data1),
        .\m_axis_tdata_reg[15]_3 (U_osc_trigger_n_0),
        .\m_axis_tdata_reg[1]_0 (U_osc_trigger_n_14),
        .\m_axis_tdata_reg[2]_0 (U_osc_trigger_n_13),
        .\m_axis_tdata_reg[3]_0 (U_osc_trigger_n_12),
        .\m_axis_tdata_reg[4]_0 (U_osc_trigger_n_11),
        .\m_axis_tdata_reg[5]_0 (U_osc_trigger_n_10),
        .\m_axis_tdata_reg[6]_0 (U_osc_trigger_n_9),
        .\m_axis_tdata_reg[7]_0 (U_osc_trigger_n_8),
        .\m_axis_tdata_reg[8]_0 (U_osc_trigger_n_7),
        .\m_axis_tdata_reg[9]_0 (U_osc_trigger_n_6),
        .m_axis_tvalid0(m_axis_tvalid0),
        .\reg_rd_data[31]_i_3 (cfg_trig_post_samp),
        .\reg_rd_data_reg[11] (U_dma_s2mm_n_165),
        .\reg_rd_data_reg[11]_0 (\reg_rd_data[11]_i_4_n_0 ),
        .\reg_rd_data_reg[12] (U_dma_s2mm_n_171),
        .\reg_rd_data_reg[12]_0 (\reg_rd_data[12]_i_4_n_0 ),
        .\reg_rd_data_reg[13] (U_dma_s2mm_n_172),
        .\reg_rd_data_reg[13]_0 (\reg_rd_data[13]_i_4_n_0 ),
        .\reg_rd_data_reg[14] (U_dma_s2mm_n_173),
        .\reg_rd_data_reg[14]_0 (\reg_rd_data[14]_i_4_n_0 ),
        .\reg_rd_data_reg[15] (\reg_rd_data[15]_i_2__0_n_0 ),
        .\reg_rd_data_reg[15]_0 (U_dma_s2mm_n_174),
        .\reg_rd_data_reg[15]_1 (\reg_rd_data[15]_i_5_n_0 ),
        .\reg_rd_data_reg[15]_2 (\reg_rd_data[15]_i_6_n_0 ),
        .\reg_rd_data_reg[16] (U_dma_s2mm_n_166),
        .\reg_rd_data_reg[16]_0 (\reg_rd_data[16]_i_4_n_0 ),
        .\reg_rd_data_reg[17] (\reg_rd_data[17]_i_3_n_0 ),
        .\reg_rd_data_reg[17]_0 (\reg_rd_data[2]_i_4_n_0 ),
        .\reg_rd_data_reg[17]_1 (\reg_rd_data[31]_i_11_n_0 ),
        .\reg_rd_data_reg[17]_2 (\reg_rd_data[17]_i_4_n_0 ),
        .\reg_rd_data_reg[17]_3 (\reg_rd_data[31]_i_2_n_0 ),
        .\reg_rd_data_reg[17]_4 (U_dma_s2mm_n_167),
        .\reg_rd_data_reg[17]_5 (\reg_rd_data[17]_i_6_n_0 ),
        .\reg_rd_data_reg[1] (\reg_rd_data[1]_i_11__0_n_0 ),
        .\reg_rd_data_reg[2]_i_3 (\reg_rd_data[2]_i_20_n_0 ),
        .\reg_rd_data_reg[5] (cfg_trig_mask),
        .\reg_rd_data_reg[6] (U_dma_s2mm_n_168),
        .\reg_rd_data_reg[6]_0 (\reg_rd_data[6]_i_4_n_0 ),
        .\reg_rd_data_reg[7] (U_dma_s2mm_n_163),
        .\reg_rd_data_reg[7]_0 (\reg_rd_data[7]_i_4_n_0 ),
        .\reg_rd_data_reg[9] (U_dma_s2mm_n_164),
        .\reg_rd_data_reg[9]_0 (\reg_rd_data[9]_i_4_n_0 ),
        .sts_acquire_reg_0(U_osc_acq_n_82),
        .sts_acquire_reg_1(U_dma_s2mm_n_157),
        .sts_start_reg_0(U_osc_acq_n_80),
        .sts_start_reg_1(U_osc_acq_n_81),
        .\sts_trig_post_cnt_reg[0]_0 (event_num_reset_reg_n_0),
        .\sts_trig_pre_cnt_reg[3]_0 (U_osc_acq_n_52),
        .sts_trig_reg_0(sts_trig_reg),
        .sts_trig_reg_1(sts_trig_reg_0),
        .trig_ip(trig_ip),
        .trig_tvalid(trig_tvalid),
        .\upsize_buf_reg[0][7] (cfg_8bit_dat),
        .\upsize_buf_reg[2][0] (U_dma_s2mm_n_162),
        .\upsize_buf_reg[7][0] (U_dma_s2mm_n_119),
        .\upsize_buf_reg[7][0]_0 (U_dma_s2mm_n_155),
        .\upsize_buf_reg[7][1] (U_dma_s2mm_n_154),
        .\upsize_buf_reg[7][2] (U_dma_s2mm_n_153),
        .\upsize_buf_reg[7][3] (U_dma_s2mm_n_152),
        .\upsize_buf_reg[7][4] (U_dma_s2mm_n_151),
        .\upsize_buf_reg[7][5] (U_dma_s2mm_n_150),
        .\upsize_buf_reg[7][6] (U_dma_s2mm_n_149),
        .\upsize_buf_reg[7][7] (U_dma_s2mm_n_148));
  system_rp_oscilloscope_0_osc_calib_14 U_osc_calib
       (.CO(dec_valid),
        .D(filt_tdata),
        .O({U_osc_calib_n_16,U_osc_calib_n_17,U_osc_calib_n_18,U_osc_calib_n_19}),
        .Q({\cfg_loopback_reg_n_0_[8] ,loopback_sel[0]}),
        .S({U_osc_decimator_n_27,U_osc_decimator_n_28,U_osc_decimator_n_29,U_osc_decimator_n_30}),
        .\adc_data_ch1_signed_reg[15] (U_osc_calib_n_15),
        .\adc_sum_reg[11] ({U_osc_decimator_n_35,U_osc_decimator_n_36,U_osc_decimator_n_37,U_osc_decimator_n_38}),
        .\adc_sum_reg[15] ({U_osc_decimator_n_39,U_osc_decimator_n_40,U_osc_decimator_n_41,U_osc_decimator_n_42}),
        .\adc_sum_reg[19] ({U_osc_decimator_n_43,U_osc_decimator_n_44,U_osc_decimator_n_45,U_osc_decimator_n_46}),
        .\adc_sum_reg[23] ({U_osc_decimator_n_47,U_osc_decimator_n_48,U_osc_decimator_n_49,U_osc_decimator_n_50}),
        .\adc_sum_reg[27] ({U_osc_decimator_n_51,U_osc_decimator_n_52,U_osc_decimator_n_53,U_osc_decimator_n_54}),
        .\adc_sum_reg[31] (Q),
        .\adc_sum_reg[31]_0 ({U_osc_decimator_n_4,U_osc_decimator_n_5,U_osc_decimator_n_6,U_osc_decimator_n_7}),
        .\adc_sum_reg[7] ({U_osc_decimator_n_31,U_osc_decimator_n_32,U_osc_decimator_n_33,U_osc_decimator_n_34}),
        .\cfg_loopback_reg[8] ({U_osc_calib_n_28,U_osc_calib_n_29,U_osc_calib_n_30,U_osc_calib_n_31}),
        .\cfg_loopback_reg[8]_0 ({U_osc_calib_n_32,U_osc_calib_n_33,U_osc_calib_n_34,U_osc_calib_n_35}),
        .\cfg_loopback_reg[8]_1 ({U_osc_calib_n_36,U_osc_calib_n_37,U_osc_calib_n_38,U_osc_calib_n_39}),
        .\cfg_loopback_reg[8]_2 ({U_osc_calib_n_40,U_osc_calib_n_41,U_osc_calib_n_42,U_osc_calib_n_43}),
        .\cfg_loopback_reg[8]_3 ({U_osc_calib_n_44,U_osc_calib_n_45,U_osc_calib_n_46,U_osc_calib_n_47}),
        .gain_calc_r_reg_0(cfg_calib_gain),
        .m_axi_osc1_aclk(m_axi_osc1_aclk),
        .\m_axis_tdata_reg[11]_0 ({U_osc_calib_n_24,U_osc_calib_n_25,U_osc_calib_n_26,U_osc_calib_n_27}),
        .\m_axis_tdata_reg[7]_0 ({U_osc_calib_n_20,U_osc_calib_n_21,U_osc_calib_n_22,U_osc_calib_n_23}),
        .\offset_reg_reg[15]_0 (cfg_calib_offset),
        .ramp_sig_reg(ramp_sig_reg),
        .ramp_sig_reg_0_sp_1(U_osc_calib_n_0),
        .ramp_sig_reg_10_sp_1(U_osc_calib_n_10),
        .ramp_sig_reg_11_sp_1(U_osc_calib_n_11),
        .ramp_sig_reg_12_sp_1(U_osc_calib_n_12),
        .ramp_sig_reg_13_sp_1(U_osc_calib_n_13),
        .ramp_sig_reg_14_sp_1(U_osc_calib_n_14),
        .ramp_sig_reg_1_sp_1(U_osc_calib_n_1),
        .ramp_sig_reg_2_sp_1(U_osc_calib_n_2),
        .ramp_sig_reg_3_sp_1(U_osc_calib_n_3),
        .ramp_sig_reg_4_sp_1(U_osc_calib_n_4),
        .ramp_sig_reg_5_sp_1(U_osc_calib_n_5),
        .ramp_sig_reg_6_sp_1(U_osc_calib_n_6),
        .ramp_sig_reg_7_sp_1(U_osc_calib_n_7),
        .ramp_sig_reg_8_sp_1(U_osc_calib_n_8),
        .ramp_sig_reg_9_sp_1(U_osc_calib_n_9));
  system_rp_oscilloscope_0_osc_decimator_15 U_osc_decimator
       (.CO(dec_valid),
        .O({U_osc_calib_n_16,U_osc_calib_n_17,U_osc_calib_n_18,U_osc_calib_n_19}),
        .Q(cfg_dec_factor),
        .S({U_osc_decimator_n_27,U_osc_decimator_n_28,U_osc_decimator_n_29,U_osc_decimator_n_30}),
        .\adc_dec_cnt_reg[16]_0 (event_num_reset_reg_n_0),
        .\adc_sum_reg[11]_0 ({U_osc_decimator_n_35,U_osc_decimator_n_36,U_osc_decimator_n_37,U_osc_decimator_n_38}),
        .\adc_sum_reg[11]_1 ({U_osc_calib_n_24,U_osc_calib_n_25,U_osc_calib_n_26,U_osc_calib_n_27}),
        .\adc_sum_reg[11]_2 (U_osc_calib_n_8),
        .\adc_sum_reg[11]_3 (U_osc_calib_n_9),
        .\adc_sum_reg[11]_4 (U_osc_calib_n_10),
        .\adc_sum_reg[11]_5 (U_osc_calib_n_11),
        .\adc_sum_reg[15]_0 ({U_osc_decimator_n_39,U_osc_decimator_n_40,U_osc_decimator_n_41,U_osc_decimator_n_42}),
        .\adc_sum_reg[15]_1 ({U_osc_calib_n_28,U_osc_calib_n_29,U_osc_calib_n_30,U_osc_calib_n_31}),
        .\adc_sum_reg[15]_2 (U_osc_calib_n_12),
        .\adc_sum_reg[15]_3 (U_osc_calib_n_13),
        .\adc_sum_reg[15]_4 (U_osc_calib_n_14),
        .\adc_sum_reg[15]_5 (U_osc_calib_n_15),
        .\adc_sum_reg[19]_0 ({U_osc_decimator_n_43,U_osc_decimator_n_44,U_osc_decimator_n_45,U_osc_decimator_n_46}),
        .\adc_sum_reg[19]_1 ({U_osc_calib_n_32,U_osc_calib_n_33,U_osc_calib_n_34,U_osc_calib_n_35}),
        .\adc_sum_reg[23]_0 ({U_osc_decimator_n_47,U_osc_decimator_n_48,U_osc_decimator_n_49,U_osc_decimator_n_50}),
        .\adc_sum_reg[23]_1 ({U_osc_calib_n_36,U_osc_calib_n_37,U_osc_calib_n_38,U_osc_calib_n_39}),
        .\adc_sum_reg[27]_0 ({U_osc_decimator_n_51,U_osc_decimator_n_52,U_osc_decimator_n_53,U_osc_decimator_n_54}),
        .\adc_sum_reg[27]_1 ({U_osc_calib_n_40,U_osc_calib_n_41,U_osc_calib_n_42,U_osc_calib_n_43}),
        .\adc_sum_reg[31]_0 ({U_osc_decimator_n_4,U_osc_decimator_n_5,U_osc_decimator_n_6,U_osc_decimator_n_7}),
        .\adc_sum_reg[31]_1 (U_osc_acq_n_19),
        .\adc_sum_reg[31]_2 ({U_osc_calib_n_44,U_osc_calib_n_45,U_osc_calib_n_46,U_osc_calib_n_47}),
        .\adc_sum_reg[3]_0 (U_osc_calib_n_0),
        .\adc_sum_reg[3]_1 (U_osc_calib_n_1),
        .\adc_sum_reg[3]_2 (U_osc_calib_n_2),
        .\adc_sum_reg[3]_3 (U_osc_calib_n_3),
        .\adc_sum_reg[7]_0 ({U_osc_decimator_n_31,U_osc_decimator_n_32,U_osc_decimator_n_33,U_osc_decimator_n_34}),
        .\adc_sum_reg[7]_1 ({U_osc_calib_n_20,U_osc_calib_n_21,U_osc_calib_n_22,U_osc_calib_n_23}),
        .\adc_sum_reg[7]_2 (U_osc_calib_n_4),
        .\adc_sum_reg[7]_3 (U_osc_calib_n_5),
        .\adc_sum_reg[7]_4 (U_osc_calib_n_6),
        .\adc_sum_reg[7]_5 (U_osc_calib_n_7),
        .\cfg_trig_high_level_reg[15] (\cfg_trig_high_level_reg[15]_0 ),
        .clear(clear),
        .dec_tvalid(dec_tvalid),
        .m_axi_osc1_aclk(m_axi_osc1_aclk),
        .m_axi_osc1_aresetn(m_axi_osc1_aresetn),
        .\m_axis_tdata_reg[15]_0 (dec_tdata),
        .\m_axis_tdata_reg[15]_1 (CO),
        .\m_axis_tdata_reg[15]_2 (\m_axis_tdata_reg[15] ),
        .m_axis_tvalid_reg_0(U_osc_decimator_n_3),
        .m_axis_tvalid_reg_1(cfg_avg_en),
        .trig_detect_reg(trig_detect_reg_0),
        .trig_detect_reg_0(cfg_trig_edge),
        .trig_detect_reg_i_3_0(cfg_trig_high_level),
        .trig_detect_reg_i_5_0(cfg_trig_low_level));
  system_rp_oscilloscope_0_osc_trigger_16 U_osc_trigger
       (.dec_tvalid(dec_tvalid),
        .m_axi_osc1_aclk(m_axi_osc1_aclk),
        .\m_axis_tdata_reg[0] (U_osc_trigger_n_15),
        .\m_axis_tdata_reg[10] (U_osc_trigger_n_5),
        .\m_axis_tdata_reg[11] (U_osc_trigger_n_4),
        .\m_axis_tdata_reg[12] (U_osc_trigger_n_3),
        .\m_axis_tdata_reg[13] (U_osc_trigger_n_2),
        .\m_axis_tdata_reg[14] (U_osc_trigger_n_1),
        .\m_axis_tdata_reg[15] (U_osc_trigger_n_0),
        .\m_axis_tdata_reg[15]_0 (dec_tdata),
        .\m_axis_tdata_reg[1] (U_osc_trigger_n_14),
        .\m_axis_tdata_reg[2] (U_osc_trigger_n_13),
        .\m_axis_tdata_reg[3] (U_osc_trigger_n_12),
        .\m_axis_tdata_reg[4] (U_osc_trigger_n_11),
        .\m_axis_tdata_reg[5] (U_osc_trigger_n_10),
        .\m_axis_tdata_reg[6] (U_osc_trigger_n_9),
        .\m_axis_tdata_reg[7] (U_osc_trigger_n_8),
        .\m_axis_tdata_reg[8] (U_osc_trigger_n_7),
        .\m_axis_tdata_reg[9] (U_osc_trigger_n_6),
        .m_axis_tvalid0(m_axis_tvalid0),
        .m_axis_tvalid_reg_0(U_osc_acq_n_82),
        .osc1_trig_op(osc1_trig_op),
        .osc1_trig_op_0(cfg_trig_edge),
        .trig_detect_reg_0(trig_detect_reg),
        .trig_detect_reg_1(U_osc_decimator_n_3),
        .trig_tvalid(trig_tvalid));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_1
       (.I0(osc1_reg_rd_data[31]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [31]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[31]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_10
       (.I0(osc1_reg_rd_data[22]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [22]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[22]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_11
       (.I0(osc1_reg_rd_data[21]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [21]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[21]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_12
       (.I0(osc1_reg_rd_data[20]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [20]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[20]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_13
       (.I0(osc1_reg_rd_data[19]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [19]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[19]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_14
       (.I0(osc1_reg_rd_data[18]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [18]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[18]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_15
       (.I0(osc1_reg_rd_data[17]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [17]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[17]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_16
       (.I0(osc1_reg_rd_data[16]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [16]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[16]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_17
       (.I0(osc1_reg_rd_data[15]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [15]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[15]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_18
       (.I0(osc1_reg_rd_data[14]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [14]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[14]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_19
       (.I0(osc1_reg_rd_data[13]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [13]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[13]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_2
       (.I0(osc1_reg_rd_data[30]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [30]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[30]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_20
       (.I0(osc1_reg_rd_data[12]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [12]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[12]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_21
       (.I0(osc1_reg_rd_data[11]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [11]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[11]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_22
       (.I0(osc1_reg_rd_data[10]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [10]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[10]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_23
       (.I0(osc1_reg_rd_data[9]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [9]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[9]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_24
       (.I0(osc1_reg_rd_data[8]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [8]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[8]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_25
       (.I0(osc1_reg_rd_data[7]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [7]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[7]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_26
       (.I0(osc1_reg_rd_data[6]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [6]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[6]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_27
       (.I0(osc1_reg_rd_data[5]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [5]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[5]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_28
       (.I0(osc1_reg_rd_data[4]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [4]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[4]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_29
       (.I0(osc1_reg_rd_data[3]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [3]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[3]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_3
       (.I0(osc1_reg_rd_data[29]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [29]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[29]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_30
       (.I0(osc1_reg_rd_data[2]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [2]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[2]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_31
       (.I0(osc1_reg_rd_data[1]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [1]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[1]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_32
       (.I0(osc1_reg_rd_data[0]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [0]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[0]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_4
       (.I0(osc1_reg_rd_data[28]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [28]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[28]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_5
       (.I0(osc1_reg_rd_data[27]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [27]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[27]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_6
       (.I0(osc1_reg_rd_data[26]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [26]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[26]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_7
       (.I0(osc1_reg_rd_data[25]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [25]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[25]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_8
       (.I0(osc1_reg_rd_data[24]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [24]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[24]));
  LUT4 #(
    .INIT(16'hF888)) 
    U_reg_ctrl_i_9
       (.I0(osc1_reg_rd_data[23]),
        .I1(\s_axi_reg_rdata[0] ),
        .I2(\s_axi_reg_rdata[31] [23]),
        .I3(\s_axi_reg_rdata[0]_0 ),
        .O(bram_rddata_a[23]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'h04)) 
    cfg_8bit_dat_i_2__0
       (.I0(bram_addr_a[4]),
        .I1(bram_addr_a[6]),
        .I2(bram_addr_a[5]),
        .O(\s_axi_reg_araddr[4] ));
  FDRE cfg_8bit_dat_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(cfg_8bit_dat_reg_0),
        .Q(cfg_8bit_dat),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    cfg_avg_en_i_2
       (.I0(bram_addr_a[7]),
        .I1(bram_addr_a[1]),
        .I2(bram_addr_a[6]),
        .I3(bram_addr_a[5]),
        .O(\s_axi_reg_araddr[7]_1 ));
  FDRE cfg_avg_en_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(cfg_avg_en_reg_0),
        .Q(cfg_avg_en),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    \cfg_calib_gain[15]_i_1 
       (.I0(\s_axi_reg_araddr[2] ),
        .I1(bram_addr_a[6]),
        .I2(\s_axi_reg_araddr[5] ),
        .I3(bram_addr_a[3]),
        .I4(bram_addr_a[7]),
        .I5(event_op_reset_i_5__0),
        .O(cfg_calib_gain0));
  FDRE \cfg_calib_gain_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[0]),
        .Q(cfg_calib_gain[0]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[10]),
        .Q(cfg_calib_gain[10]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[11]),
        .Q(cfg_calib_gain[11]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[12]),
        .Q(cfg_calib_gain[12]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[13]),
        .Q(cfg_calib_gain[13]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[14]),
        .Q(cfg_calib_gain[14]),
        .R(clear));
  FDSE \cfg_calib_gain_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[15]),
        .Q(cfg_calib_gain[15]),
        .S(clear));
  FDRE \cfg_calib_gain_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[1]),
        .Q(cfg_calib_gain[1]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[2]),
        .Q(cfg_calib_gain[2]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[3]),
        .Q(cfg_calib_gain[3]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[4]),
        .Q(cfg_calib_gain[4]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[5]),
        .Q(cfg_calib_gain[5]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[6]),
        .Q(cfg_calib_gain[6]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[7]),
        .Q(cfg_calib_gain[7]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[8]),
        .Q(cfg_calib_gain[8]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_gain0),
        .D(D[9]),
        .Q(cfg_calib_gain[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \cfg_calib_offset[15]_i_1 
       (.I0(bram_addr_a[6]),
        .I1(\s_axi_reg_araddr[2]_0 ),
        .I2(\s_axi_reg_araddr[7] ),
        .I3(bram_addr_a[3]),
        .I4(bram_addr_a[0]),
        .I5(\cfg_calib_offset_reg[0]_0 ),
        .O(cfg_calib_offset0));
  FDRE \cfg_calib_offset_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[0]),
        .Q(cfg_calib_offset[0]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[10]),
        .Q(cfg_calib_offset[10]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[11]),
        .Q(cfg_calib_offset[11]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[12]),
        .Q(cfg_calib_offset[12]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[13]),
        .Q(cfg_calib_offset[13]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[14]),
        .Q(cfg_calib_offset[14]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[15]),
        .Q(cfg_calib_offset[15]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[1]),
        .Q(cfg_calib_offset[1]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[2]),
        .Q(cfg_calib_offset[2]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[3]),
        .Q(cfg_calib_offset[3]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[4]),
        .Q(cfg_calib_offset[4]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[5]),
        .Q(cfg_calib_offset[5]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[6]),
        .Q(cfg_calib_offset[6]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[7]),
        .Q(cfg_calib_offset[7]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[8]),
        .Q(cfg_calib_offset[8]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_calib_offset0),
        .D(D[9]),
        .Q(cfg_calib_offset[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \cfg_dec_factor[16]_i_1 
       (.I0(i_dfilt_n_4),
        .I1(bram_addr_a[3]),
        .I2(bram_addr_a[4]),
        .I3(bram_addr_a[5]),
        .I4(\s_axi_reg_araddr[7]_0 ),
        .I5(event_op_reset_i_5__0),
        .O(cfg_dec_factor0));
  FDRE \cfg_dec_factor_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[0]),
        .Q(cfg_dec_factor[0]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[10]),
        .Q(cfg_dec_factor[10]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[11]),
        .Q(cfg_dec_factor[11]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[12]),
        .Q(cfg_dec_factor[12]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[13]),
        .Q(cfg_dec_factor[13]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[14]),
        .Q(cfg_dec_factor[14]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[15]),
        .Q(cfg_dec_factor[15]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[16]),
        .Q(cfg_dec_factor[16]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[1]),
        .Q(cfg_dec_factor[1]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[2]),
        .Q(cfg_dec_factor[2]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[3]),
        .Q(cfg_dec_factor[3]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[4]),
        .Q(cfg_dec_factor[4]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[5]),
        .Q(cfg_dec_factor[5]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[6]),
        .Q(cfg_dec_factor[6]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[7]),
        .Q(cfg_dec_factor[7]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[8]),
        .Q(cfg_dec_factor[8]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_factor0),
        .D(D[9]),
        .Q(cfg_dec_factor[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \cfg_dec_rshift[3]_i_1 
       (.I0(event_op_reset_i_5__0),
        .I1(\s_axi_reg_araddr[7]_0 ),
        .I2(bram_addr_a[4]),
        .I3(bram_addr_a[2]),
        .I4(bram_addr_a[3]),
        .I5(\s_axi_reg_araddr[5] ),
        .O(cfg_dec_rshift0));
  LUT2 #(
    .INIT(4'h7)) 
    \cfg_dec_rshift[3]_i_2 
       (.I0(bram_addr_a[5]),
        .I1(osc1_reg_wr_we),
        .O(\s_axi_reg_araddr[5] ));
  FDRE \cfg_dec_rshift_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_rshift0),
        .D(D[0]),
        .Q(cfg_dec_rshift[0]),
        .R(clear));
  FDRE \cfg_dec_rshift_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_rshift0),
        .D(D[1]),
        .Q(cfg_dec_rshift[1]),
        .R(clear));
  FDRE \cfg_dec_rshift_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_rshift0),
        .D(D[2]),
        .Q(cfg_dec_rshift[2]),
        .R(clear));
  FDRE \cfg_dec_rshift_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dec_rshift0),
        .D(D[3]),
        .Q(cfg_dec_rshift[3]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000004000000)) 
    \cfg_dma_buf_size[31]_i_1 
       (.I0(bram_addr_a[5]),
        .I1(bram_addr_a[6]),
        .I2(event_op_reset_i_5__0),
        .I3(\cfg_dma_buf_size[31]_i_2_n_0 ),
        .I4(bram_addr_a[4]),
        .I5(i_dfilt_n_4),
        .O(cfg_dma_buf_size0));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \cfg_dma_buf_size[31]_i_2 
       (.I0(bram_addr_a[3]),
        .I1(bram_addr_a[7]),
        .O(\cfg_dma_buf_size[31]_i_2_n_0 ));
  FDRE \cfg_dma_buf_size_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[0]),
        .Q(cfg_dma_buf_size[0]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[10]),
        .Q(cfg_dma_buf_size[10]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[11]),
        .Q(cfg_dma_buf_size[11]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[12]),
        .Q(cfg_dma_buf_size[12]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[13]),
        .Q(cfg_dma_buf_size[13]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[14]),
        .Q(cfg_dma_buf_size[14]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[15]),
        .Q(cfg_dma_buf_size[15]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[16]),
        .Q(cfg_dma_buf_size[16]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[17]),
        .Q(cfg_dma_buf_size[17]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[18]),
        .Q(cfg_dma_buf_size[18]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[19]),
        .Q(cfg_dma_buf_size[19]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[1]),
        .Q(cfg_dma_buf_size[1]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[20]),
        .Q(cfg_dma_buf_size[20]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[21]),
        .Q(cfg_dma_buf_size[21]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[22]),
        .Q(cfg_dma_buf_size[22]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[23]),
        .Q(cfg_dma_buf_size[23]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[24]),
        .Q(cfg_dma_buf_size[24]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[25]),
        .Q(cfg_dma_buf_size[25]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[26]),
        .Q(cfg_dma_buf_size[26]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[27]),
        .Q(cfg_dma_buf_size[27]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[28]),
        .Q(cfg_dma_buf_size[28]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[29]),
        .Q(cfg_dma_buf_size[29]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[2]),
        .Q(cfg_dma_buf_size[2]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[30]),
        .Q(cfg_dma_buf_size[30]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[31]),
        .Q(cfg_dma_buf_size[31]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[3]),
        .Q(cfg_dma_buf_size[3]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[4]),
        .Q(cfg_dma_buf_size[4]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[5]),
        .Q(cfg_dma_buf_size[5]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[6]),
        .Q(cfg_dma_buf_size[6]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[7]),
        .Q(cfg_dma_buf_size[7]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[8]),
        .Q(cfg_dma_buf_size[8]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_buf_size0),
        .D(D[9]),
        .Q(cfg_dma_buf_size[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000800000)) 
    \cfg_dma_dst_addr1[31]_i_1 
       (.I0(U_dma_s2mm_n_158),
        .I1(bram_addr_a[2]),
        .I2(bram_addr_a[5]),
        .I3(\s_axi_reg_araddr[4]_2 ),
        .I4(bram_addr_a[6]),
        .I5(bram_addr_a[3]),
        .O(cfg_dma_dst_addr10));
  FDRE \cfg_dma_dst_addr1_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[0]),
        .Q(cfg_dma_dst_addr1[0]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[10]),
        .Q(cfg_dma_dst_addr1[10]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[11]),
        .Q(cfg_dma_dst_addr1[11]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[12]),
        .Q(cfg_dma_dst_addr1[12]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[13]),
        .Q(cfg_dma_dst_addr1[13]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[14]),
        .Q(cfg_dma_dst_addr1[14]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[15]),
        .Q(cfg_dma_dst_addr1[15]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[16]),
        .Q(cfg_dma_dst_addr1[16]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[17]),
        .Q(cfg_dma_dst_addr1[17]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[18]),
        .Q(cfg_dma_dst_addr1[18]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[19]),
        .Q(cfg_dma_dst_addr1[19]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[1]),
        .Q(cfg_dma_dst_addr1[1]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[20]),
        .Q(cfg_dma_dst_addr1[20]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[21]),
        .Q(cfg_dma_dst_addr1[21]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[22]),
        .Q(cfg_dma_dst_addr1[22]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[23]),
        .Q(cfg_dma_dst_addr1[23]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[24]),
        .Q(cfg_dma_dst_addr1[24]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[25]),
        .Q(cfg_dma_dst_addr1[25]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[26]),
        .Q(cfg_dma_dst_addr1[26]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[27]),
        .Q(cfg_dma_dst_addr1[27]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[28]),
        .Q(cfg_dma_dst_addr1[28]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[29]),
        .Q(cfg_dma_dst_addr1[29]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[2]),
        .Q(cfg_dma_dst_addr1[2]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[30]),
        .Q(cfg_dma_dst_addr1[30]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[31]),
        .Q(cfg_dma_dst_addr1[31]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[3]),
        .Q(cfg_dma_dst_addr1[3]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[4]),
        .Q(cfg_dma_dst_addr1[4]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[5]),
        .Q(cfg_dma_dst_addr1[5]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[6]),
        .Q(cfg_dma_dst_addr1[6]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[7]),
        .Q(cfg_dma_dst_addr1[7]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[8]),
        .Q(cfg_dma_dst_addr1[8]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(D[9]),
        .Q(cfg_dma_dst_addr1[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000040000000000)) 
    \cfg_dma_dst_addr2[31]_i_1 
       (.I0(\s_axi_reg_araddr[5] ),
        .I1(bram_addr_a[3]),
        .I2(\s_axi_reg_araddr[2]_1 ),
        .I3(bram_addr_a[6]),
        .I4(bram_addr_a[1]),
        .I5(\cfg_loopback[7]_i_2_n_0 ),
        .O(cfg_dma_dst_addr20));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \cfg_dma_dst_addr2[31]_i_2 
       (.I0(bram_addr_a[2]),
        .I1(bram_addr_a[0]),
        .O(\s_axi_reg_araddr[2]_1 ));
  FDRE \cfg_dma_dst_addr2_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[0]),
        .Q(cfg_dma_dst_addr2[0]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[10]),
        .Q(cfg_dma_dst_addr2[10]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[11]),
        .Q(cfg_dma_dst_addr2[11]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[12]),
        .Q(cfg_dma_dst_addr2[12]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[13]),
        .Q(cfg_dma_dst_addr2[13]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[14]),
        .Q(cfg_dma_dst_addr2[14]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[15]),
        .Q(cfg_dma_dst_addr2[15]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[16]),
        .Q(cfg_dma_dst_addr2[16]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[17]),
        .Q(cfg_dma_dst_addr2[17]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[18]),
        .Q(cfg_dma_dst_addr2[18]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[19]),
        .Q(cfg_dma_dst_addr2[19]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[1]),
        .Q(cfg_dma_dst_addr2[1]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[20]),
        .Q(cfg_dma_dst_addr2[20]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[21]),
        .Q(cfg_dma_dst_addr2[21]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[22]),
        .Q(cfg_dma_dst_addr2[22]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[23]),
        .Q(cfg_dma_dst_addr2[23]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[24]),
        .Q(cfg_dma_dst_addr2[24]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[25]),
        .Q(cfg_dma_dst_addr2[25]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[26]),
        .Q(cfg_dma_dst_addr2[26]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[27]),
        .Q(cfg_dma_dst_addr2[27]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[28]),
        .Q(cfg_dma_dst_addr2[28]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[29]),
        .Q(cfg_dma_dst_addr2[29]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[2]),
        .Q(cfg_dma_dst_addr2[2]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[30]),
        .Q(cfg_dma_dst_addr2[30]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[31]),
        .Q(cfg_dma_dst_addr2[31]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[3]),
        .Q(cfg_dma_dst_addr2[3]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[4]),
        .Q(cfg_dma_dst_addr2[4]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[5]),
        .Q(cfg_dma_dst_addr2[5]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[6]),
        .Q(cfg_dma_dst_addr2[6]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[7]),
        .Q(cfg_dma_dst_addr2[7]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[8]),
        .Q(cfg_dma_dst_addr2[8]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_dma_dst_addr20),
        .D(D[9]),
        .Q(cfg_dma_dst_addr2[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    \cfg_event_sel[0]_i_1 
       (.I0(D[0]),
        .I1(\s_axi_reg_araddr[6] ),
        .I2(event_op_reset_i_4__0_n_0),
        .I3(\s_axi_reg_araddr[2]_0 ),
        .I4(bram_addr_a[3]),
        .I5(cfg_event_sel[0]),
        .O(\cfg_event_sel[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    \cfg_event_sel[1]_i_1 
       (.I0(D[1]),
        .I1(\s_axi_reg_araddr[6] ),
        .I2(event_op_reset_i_4__0_n_0),
        .I3(\s_axi_reg_araddr[2]_0 ),
        .I4(bram_addr_a[3]),
        .I5(cfg_event_sel[1]),
        .O(\cfg_event_sel[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    \cfg_event_sel[2]_i_1 
       (.I0(D[2]),
        .I1(\s_axi_reg_araddr[6] ),
        .I2(event_op_reset_i_4__0_n_0),
        .I3(\s_axi_reg_araddr[2]_0 ),
        .I4(bram_addr_a[3]),
        .I5(cfg_event_sel[2]),
        .O(\cfg_event_sel[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \cfg_event_sel[2]_i_2 
       (.I0(bram_addr_a[6]),
        .I1(bram_addr_a[7]),
        .I2(bram_addr_a[1]),
        .I3(bram_addr_a[0]),
        .O(\s_axi_reg_araddr[6] ));
  FDRE \cfg_event_sel_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\cfg_event_sel[0]_i_1_n_0 ),
        .Q(cfg_event_sel[0]),
        .R(clear));
  FDRE \cfg_event_sel_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\cfg_event_sel[1]_i_1_n_0 ),
        .Q(cfg_event_sel[1]),
        .R(clear));
  FDRE \cfg_event_sel_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\cfg_event_sel[2]_i_1_n_0 ),
        .Q(cfg_event_sel[2]),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h8)) 
    cfg_filt_bypass_i_2
       (.I0(bram_addr_a[4]),
        .I1(bram_addr_a[3]),
        .O(\s_axi_reg_araddr[4]_3 ));
  FDSE cfg_filt_bypass_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(cfg_filt_bypass_reg_0),
        .Q(cfg_filt_bypass),
        .S(clear));
  FDRE \cfg_filt_coeff_aa_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[0]),
        .Q(p_4_in[0]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[10]),
        .Q(p_4_in[10]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[11]),
        .Q(p_4_in[11]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[12]),
        .Q(p_4_in[12]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[13]),
        .Q(p_4_in[13]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[14]),
        .Q(p_4_in[14]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[15]),
        .Q(p_4_in[15]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[16]),
        .Q(p_4_in[16]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[17]),
        .Q(p_4_in[17]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[1]),
        .Q(p_4_in[1]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[2]),
        .Q(p_4_in[2]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[3]),
        .Q(p_4_in[3]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[4]),
        .Q(p_4_in[4]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[5]),
        .Q(p_4_in[5]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[6]),
        .Q(p_4_in[6]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[7]),
        .Q(p_4_in[7]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[8]),
        .Q(p_4_in[8]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(i_dfilt_n_1),
        .D(D[9]),
        .Q(p_4_in[9]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[0]),
        .Q(p_3_in[0]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[10]),
        .Q(p_3_in[10]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[11]),
        .Q(p_3_in[11]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[12]),
        .Q(p_3_in[12]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[13]),
        .Q(p_3_in[13]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[14]),
        .Q(p_3_in[14]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[15]),
        .Q(p_3_in[15]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[16]),
        .Q(p_3_in[16]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[17]),
        .Q(p_3_in[17]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[18]),
        .Q(p_3_in[18]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[19]),
        .Q(p_3_in[19]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[1]),
        .Q(p_3_in[1]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[20]),
        .Q(p_3_in[20]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[21]),
        .Q(p_3_in[21]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[22]),
        .Q(p_3_in[22]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[23]),
        .Q(p_3_in[23]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[24]),
        .Q(p_3_in[24]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[2]),
        .Q(p_3_in[2]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[3]),
        .Q(p_3_in[3]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[4]),
        .Q(p_3_in[4]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[5]),
        .Q(p_3_in[5]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[6]),
        .Q(p_3_in[6]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[7]),
        .Q(p_3_in[7]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[8]),
        .Q(p_3_in[8]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(D[9]),
        .Q(p_3_in[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \cfg_filt_coeff_kk[24]_i_1 
       (.I0(bram_addr_a[6]),
        .I1(bram_addr_a[3]),
        .I2(bram_addr_a[4]),
        .I3(\cfg_filt_coeff_kk[24]_i_2_n_0 ),
        .I4(bram_addr_a[1]),
        .I5(\s_axi_reg_araddr[2]_2 ),
        .O(cfg_filt_coeff_kk0));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \cfg_filt_coeff_kk[24]_i_2 
       (.I0(bram_addr_a[7]),
        .I1(bram_addr_a[5]),
        .O(\cfg_filt_coeff_kk[24]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \cfg_filt_coeff_kk[24]_i_3 
       (.I0(osc1_reg_wr_we),
        .I1(bram_addr_a[0]),
        .I2(bram_addr_a[2]),
        .O(\s_axi_reg_araddr[2]_2 ));
  FDSE \cfg_filt_coeff_kk_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[0]),
        .Q(p_2_in[0]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[10]),
        .Q(p_2_in[10]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[11]),
        .Q(p_2_in[11]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[12]),
        .Q(p_2_in[12]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[13]),
        .Q(p_2_in[13]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[14]),
        .Q(p_2_in[14]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[15]),
        .Q(p_2_in[15]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[16]),
        .Q(p_2_in[16]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[17]),
        .Q(p_2_in[17]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[18]),
        .Q(p_2_in[18]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[19]),
        .Q(p_2_in[19]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[1]),
        .Q(p_2_in[1]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[20]),
        .Q(p_2_in[20]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[21]),
        .Q(p_2_in[21]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[22]),
        .Q(p_2_in[22]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[23]),
        .Q(p_2_in[23]),
        .S(clear));
  FDRE \cfg_filt_coeff_kk_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[24]),
        .Q(p_2_in[24]),
        .R(clear));
  FDSE \cfg_filt_coeff_kk_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[2]),
        .Q(p_2_in[2]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[3]),
        .Q(p_2_in[3]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[4]),
        .Q(p_2_in[4]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[5]),
        .Q(p_2_in[5]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[6]),
        .Q(p_2_in[6]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[7]),
        .Q(p_2_in[7]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[8]),
        .Q(p_2_in[8]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(D[9]),
        .Q(p_2_in[9]),
        .S(clear));
  FDRE \cfg_filt_coeff_pp_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[0]),
        .Q(p_1_in[0]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[10]),
        .Q(p_1_in[10]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[11]),
        .Q(p_1_in[11]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[12]),
        .Q(p_1_in[12]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[13]),
        .Q(p_1_in[13]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[14]),
        .Q(p_1_in[14]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[15]),
        .Q(p_1_in[15]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[16]),
        .Q(p_1_in[16]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[17]),
        .Q(p_1_in[17]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[18]),
        .Q(p_1_in[18]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[19]),
        .Q(p_1_in[19]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[1]),
        .Q(p_1_in[1]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[20]),
        .Q(p_1_in[20]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[21]),
        .Q(p_1_in[21]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[22]),
        .Q(p_1_in[22]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[23]),
        .Q(p_1_in[23]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[24]),
        .Q(p_1_in[24]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[2]),
        .Q(p_1_in[2]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[3]),
        .Q(p_1_in[3]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[4]),
        .Q(p_1_in[4]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[5]),
        .Q(p_1_in[5]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[6]),
        .Q(p_1_in[6]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[7]),
        .Q(p_1_in[7]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[8]),
        .Q(p_1_in[8]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(D[9]),
        .Q(p_1_in[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    \cfg_loopback[7]_i_1 
       (.I0(i_dfilt_n_4),
        .I1(bram_addr_a[3]),
        .I2(\cfg_loopback[7]_i_2_n_0 ),
        .I3(event_op_reset_i_5__0),
        .I4(bram_addr_a[6]),
        .I5(bram_addr_a[5]),
        .O(cfg_loopback0));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \cfg_loopback[7]_i_2 
       (.I0(bram_addr_a[4]),
        .I1(bram_addr_a[7]),
        .O(\cfg_loopback[7]_i_2_n_0 ));
  FDRE \cfg_loopback_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[0]),
        .Q(loopback_sel[0]),
        .R(clear));
  FDRE \cfg_loopback_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[10]),
        .Q(\cfg_loopback_reg_n_0_[10] ),
        .R(clear));
  FDRE \cfg_loopback_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[11]),
        .Q(\cfg_loopback_reg_n_0_[11] ),
        .R(clear));
  FDRE \cfg_loopback_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[12]),
        .Q(\cfg_loopback_reg_n_0_[12] ),
        .R(clear));
  FDRE \cfg_loopback_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[13]),
        .Q(\cfg_loopback_reg_n_0_[13] ),
        .R(clear));
  FDRE \cfg_loopback_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[14]),
        .Q(\cfg_loopback_reg_n_0_[14] ),
        .R(clear));
  FDRE \cfg_loopback_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[15]),
        .Q(\cfg_loopback_reg_n_0_[15] ),
        .R(clear));
  FDRE \cfg_loopback_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[1]),
        .Q(loopback_sel[1]),
        .R(clear));
  FDRE \cfg_loopback_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[2]),
        .Q(loopback_sel[2]),
        .R(clear));
  FDRE \cfg_loopback_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[3]),
        .Q(loopback_sel[3]),
        .R(clear));
  FDRE \cfg_loopback_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[4]),
        .Q(loopback_sel[4]),
        .R(clear));
  FDRE \cfg_loopback_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[5]),
        .Q(loopback_sel[5]),
        .R(clear));
  FDRE \cfg_loopback_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[6]),
        .Q(loopback_sel[6]),
        .R(clear));
  FDRE \cfg_loopback_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[7]),
        .Q(loopback_sel[7]),
        .R(clear));
  FDRE \cfg_loopback_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[8]),
        .Q(\cfg_loopback_reg_n_0_[8] ),
        .R(clear));
  FDRE \cfg_loopback_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_loopback0),
        .D(D[9]),
        .Q(\cfg_loopback_reg_n_0_[9] ),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    cfg_trig_edge_i_2
       (.I0(bram_addr_a[7]),
        .I1(bram_addr_a[1]),
        .I2(bram_addr_a[6]),
        .I3(bram_addr_a[4]),
        .O(\s_axi_reg_araddr[7]_2 ));
  FDRE cfg_trig_edge_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(cfg_trig_edge_reg_0),
        .Q(cfg_trig_edge),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    \cfg_trig_high_level[15]_i_1 
       (.I0(\cfg_trig_high_level[15]_i_2__0_n_0 ),
        .I1(\s_axi_reg_araddr[7] ),
        .I2(\s_axi_reg_araddr[2]_0 ),
        .I3(bram_addr_a[5]),
        .I4(bram_addr_a[0]),
        .I5(bram_addr_a[3]),
        .O(cfg_trig_high_level0));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \cfg_trig_high_level[15]_i_2__0 
       (.I0(bram_addr_a[4]),
        .I1(bram_addr_a[6]),
        .O(\cfg_trig_high_level[15]_i_2__0_n_0 ));
  FDRE \cfg_trig_high_level_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[0]),
        .Q(cfg_trig_high_level[0]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[10]),
        .Q(cfg_trig_high_level[10]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[11]),
        .Q(cfg_trig_high_level[11]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[12]),
        .Q(cfg_trig_high_level[12]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[13]),
        .Q(cfg_trig_high_level[13]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[14]),
        .Q(cfg_trig_high_level[14]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[15]),
        .Q(cfg_trig_high_level[15]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[1]),
        .Q(cfg_trig_high_level[1]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[2]),
        .Q(cfg_trig_high_level[2]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[3]),
        .Q(cfg_trig_high_level[3]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[4]),
        .Q(cfg_trig_high_level[4]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[5]),
        .Q(cfg_trig_high_level[5]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[6]),
        .Q(cfg_trig_high_level[6]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[7]),
        .Q(cfg_trig_high_level[7]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[8]),
        .Q(cfg_trig_high_level[8]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_high_level0),
        .D(D[9]),
        .Q(cfg_trig_high_level[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    \cfg_trig_low_level[15]_i_1 
       (.I0(i_dfilt_n_4),
        .I1(bram_addr_a[3]),
        .I2(\s_axi_reg_araddr[7] ),
        .I3(bram_addr_a[6]),
        .I4(bram_addr_a[5]),
        .I5(\s_axi_reg_araddr[4]_2 ),
        .O(cfg_trig_low_level0));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \cfg_trig_low_level[15]_i_2__0 
       (.I0(bram_addr_a[1]),
        .I1(bram_addr_a[7]),
        .O(\s_axi_reg_araddr[7] ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \cfg_trig_low_level[15]_i_3 
       (.I0(bram_addr_a[0]),
        .I1(bram_addr_a[4]),
        .O(\s_axi_reg_araddr[4]_2 ));
  FDRE \cfg_trig_low_level_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[0]),
        .Q(cfg_trig_low_level[0]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[10]),
        .Q(cfg_trig_low_level[10]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[11]),
        .Q(cfg_trig_low_level[11]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[12]),
        .Q(cfg_trig_low_level[12]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[13]),
        .Q(cfg_trig_low_level[13]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[14]),
        .Q(cfg_trig_low_level[14]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[15]),
        .Q(cfg_trig_low_level[15]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[1]),
        .Q(cfg_trig_low_level[1]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[2]),
        .Q(cfg_trig_low_level[2]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[3]),
        .Q(cfg_trig_low_level[3]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[4]),
        .Q(cfg_trig_low_level[4]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[5]),
        .Q(cfg_trig_low_level[5]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[6]),
        .Q(cfg_trig_low_level[6]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[7]),
        .Q(cfg_trig_low_level[7]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[8]),
        .Q(cfg_trig_low_level[8]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_low_level0),
        .D(D[9]),
        .Q(cfg_trig_low_level[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \cfg_trig_mask[5]_i_1 
       (.I0(\s_axi_reg_araddr[7]_0 ),
        .I1(event_op_reset_i_5__0),
        .I2(bram_addr_a[4]),
        .I3(bram_addr_a[5]),
        .I4(bram_addr_a[3]),
        .I5(i_dfilt_n_4),
        .O(cfg_trig_mask0));
  FDRE \cfg_trig_mask_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_mask0),
        .D(D[0]),
        .Q(cfg_trig_mask[0]),
        .R(clear));
  FDRE \cfg_trig_mask_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_mask0),
        .D(D[1]),
        .Q(cfg_trig_mask[1]),
        .R(clear));
  FDRE \cfg_trig_mask_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_mask0),
        .D(D[2]),
        .Q(cfg_trig_mask[2]),
        .R(clear));
  FDRE \cfg_trig_mask_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_mask0),
        .D(D[3]),
        .Q(cfg_trig_mask[3]),
        .R(clear));
  FDRE \cfg_trig_mask_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_mask0),
        .D(D[4]),
        .Q(cfg_trig_mask[4]),
        .R(clear));
  FDRE \cfg_trig_mask_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_mask0),
        .D(D[5]),
        .Q(cfg_trig_mask[5]),
        .R(clear));
  LUT5 #(
    .INIT(32'h00020000)) 
    \cfg_trig_post_samp[31]_i_1 
       (.I0(\cfg_trig_post_samp[31]_i_2_n_0 ),
        .I1(bram_addr_a[5]),
        .I2(bram_addr_a[6]),
        .I3(bram_addr_a[0]),
        .I4(U_dma_s2mm_n_158),
        .O(cfg_trig_post_samp0));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \cfg_trig_post_samp[31]_i_2 
       (.I0(bram_addr_a[4]),
        .I1(bram_addr_a[2]),
        .I2(bram_addr_a[3]),
        .O(\cfg_trig_post_samp[31]_i_2_n_0 ));
  FDRE \cfg_trig_post_samp_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[0]),
        .Q(cfg_trig_post_samp[0]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[10]),
        .Q(cfg_trig_post_samp[10]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[11]),
        .Q(cfg_trig_post_samp[11]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[12]),
        .Q(cfg_trig_post_samp[12]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[13]),
        .Q(cfg_trig_post_samp[13]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[14]),
        .Q(cfg_trig_post_samp[14]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[15]),
        .Q(cfg_trig_post_samp[15]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[16]),
        .Q(cfg_trig_post_samp[16]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[17]),
        .Q(cfg_trig_post_samp[17]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[18]),
        .Q(cfg_trig_post_samp[18]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[19]),
        .Q(cfg_trig_post_samp[19]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[1]),
        .Q(cfg_trig_post_samp[1]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[20]),
        .Q(cfg_trig_post_samp[20]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[21]),
        .Q(cfg_trig_post_samp[21]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[22]),
        .Q(cfg_trig_post_samp[22]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[23]),
        .Q(cfg_trig_post_samp[23]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[24]),
        .Q(cfg_trig_post_samp[24]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[25]),
        .Q(cfg_trig_post_samp[25]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[26]),
        .Q(cfg_trig_post_samp[26]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[27]),
        .Q(cfg_trig_post_samp[27]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[28]),
        .Q(cfg_trig_post_samp[28]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[29]),
        .Q(cfg_trig_post_samp[29]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[2]),
        .Q(cfg_trig_post_samp[2]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[30]),
        .Q(cfg_trig_post_samp[30]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[31]),
        .Q(cfg_trig_post_samp[31]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[3]),
        .Q(cfg_trig_post_samp[3]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[4]),
        .Q(cfg_trig_post_samp[4]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[5]),
        .Q(cfg_trig_post_samp[5]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[6]),
        .Q(cfg_trig_post_samp[6]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[7]),
        .Q(cfg_trig_post_samp[7]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[8]),
        .Q(cfg_trig_post_samp[8]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_post_samp0),
        .D(D[9]),
        .Q(cfg_trig_post_samp[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \cfg_trig_pre_samp[31]_i_1 
       (.I0(event_op_reset_i_5__0),
        .I1(\s_axi_reg_araddr[7]_0 ),
        .I2(bram_addr_a[4]),
        .I3(bram_addr_a[5]),
        .I4(bram_addr_a[3]),
        .I5(i_dfilt_n_4),
        .O(cfg_trig_pre_samp0));
  FDRE \cfg_trig_pre_samp_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[0]),
        .Q(cfg_trig_pre_samp[0]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[10]),
        .Q(cfg_trig_pre_samp[10]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[11]),
        .Q(cfg_trig_pre_samp[11]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[12]),
        .Q(cfg_trig_pre_samp[12]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[13]),
        .Q(cfg_trig_pre_samp[13]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[14]),
        .Q(cfg_trig_pre_samp[14]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[15]),
        .Q(cfg_trig_pre_samp[15]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[16]),
        .Q(cfg_trig_pre_samp[16]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[17]),
        .Q(cfg_trig_pre_samp[17]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[18]),
        .Q(cfg_trig_pre_samp[18]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[19]),
        .Q(cfg_trig_pre_samp[19]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[1]),
        .Q(cfg_trig_pre_samp[1]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[20]),
        .Q(cfg_trig_pre_samp[20]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[21]),
        .Q(cfg_trig_pre_samp[21]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[22]),
        .Q(cfg_trig_pre_samp[22]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[23]),
        .Q(cfg_trig_pre_samp[23]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[24]),
        .Q(cfg_trig_pre_samp[24]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[25]),
        .Q(cfg_trig_pre_samp[25]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[26]),
        .Q(cfg_trig_pre_samp[26]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[27]),
        .Q(cfg_trig_pre_samp[27]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[28]),
        .Q(cfg_trig_pre_samp[28]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[29]),
        .Q(cfg_trig_pre_samp[29]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[2]),
        .Q(cfg_trig_pre_samp[2]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[30]),
        .Q(cfg_trig_pre_samp[30]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[31]),
        .Q(cfg_trig_pre_samp[31]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[3]),
        .Q(cfg_trig_pre_samp[3]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[4]),
        .Q(cfg_trig_pre_samp[4]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[5]),
        .Q(cfg_trig_pre_samp[5]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[6]),
        .Q(cfg_trig_pre_samp[6]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[7]),
        .Q(cfg_trig_pre_samp[7]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[8]),
        .Q(cfg_trig_pre_samp[8]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(D[9]),
        .Q(cfg_trig_pre_samp[9]),
        .R(clear));
  LUT1 #(
    .INIT(2'h1)) 
    \clk_cnt[0]_i_2 
       (.I0(clk_cnt_reg[0]),
        .O(\clk_cnt[0]_i_2_n_0 ));
  FDRE \clk_cnt_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[0]_i_1_n_7 ),
        .Q(clk_cnt_reg[0]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\clk_cnt_reg[0]_i_1_n_0 ,\clk_cnt_reg[0]_i_1_n_1 ,\clk_cnt_reg[0]_i_1_n_2 ,\clk_cnt_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\clk_cnt_reg[0]_i_1_n_4 ,\clk_cnt_reg[0]_i_1_n_5 ,\clk_cnt_reg[0]_i_1_n_6 ,\clk_cnt_reg[0]_i_1_n_7 }),
        .S({clk_cnt_reg[3:1],\clk_cnt[0]_i_2_n_0 }));
  FDRE \clk_cnt_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[8]_i_1_n_5 ),
        .Q(clk_cnt_reg[10]),
        .R(clear));
  FDRE \clk_cnt_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[8]_i_1_n_4 ),
        .Q(clk_cnt_reg[11]),
        .R(clear));
  FDRE \clk_cnt_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[12]_i_1_n_7 ),
        .Q(clk_cnt_reg[12]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[12]_i_1 
       (.CI(\clk_cnt_reg[8]_i_1_n_0 ),
        .CO({\clk_cnt_reg[12]_i_1_n_0 ,\clk_cnt_reg[12]_i_1_n_1 ,\clk_cnt_reg[12]_i_1_n_2 ,\clk_cnt_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_cnt_reg[12]_i_1_n_4 ,\clk_cnt_reg[12]_i_1_n_5 ,\clk_cnt_reg[12]_i_1_n_6 ,\clk_cnt_reg[12]_i_1_n_7 }),
        .S(clk_cnt_reg[15:12]));
  FDRE \clk_cnt_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[12]_i_1_n_6 ),
        .Q(clk_cnt_reg[13]),
        .R(clear));
  FDRE \clk_cnt_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[12]_i_1_n_5 ),
        .Q(clk_cnt_reg[14]),
        .R(clear));
  FDRE \clk_cnt_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[12]_i_1_n_4 ),
        .Q(clk_cnt_reg[15]),
        .R(clear));
  FDRE \clk_cnt_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[16]_i_1_n_7 ),
        .Q(clk_cnt_reg[16]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[16]_i_1 
       (.CI(\clk_cnt_reg[12]_i_1_n_0 ),
        .CO({\clk_cnt_reg[16]_i_1_n_0 ,\clk_cnt_reg[16]_i_1_n_1 ,\clk_cnt_reg[16]_i_1_n_2 ,\clk_cnt_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_cnt_reg[16]_i_1_n_4 ,\clk_cnt_reg[16]_i_1_n_5 ,\clk_cnt_reg[16]_i_1_n_6 ,\clk_cnt_reg[16]_i_1_n_7 }),
        .S(clk_cnt_reg[19:16]));
  FDRE \clk_cnt_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[16]_i_1_n_6 ),
        .Q(clk_cnt_reg[17]),
        .R(clear));
  FDRE \clk_cnt_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[16]_i_1_n_5 ),
        .Q(clk_cnt_reg[18]),
        .R(clear));
  FDRE \clk_cnt_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[16]_i_1_n_4 ),
        .Q(clk_cnt_reg[19]),
        .R(clear));
  FDRE \clk_cnt_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[0]_i_1_n_6 ),
        .Q(clk_cnt_reg[1]),
        .R(clear));
  FDRE \clk_cnt_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[20]_i_1_n_7 ),
        .Q(clk_cnt_reg[20]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[20]_i_1 
       (.CI(\clk_cnt_reg[16]_i_1_n_0 ),
        .CO({\clk_cnt_reg[20]_i_1_n_0 ,\clk_cnt_reg[20]_i_1_n_1 ,\clk_cnt_reg[20]_i_1_n_2 ,\clk_cnt_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_cnt_reg[20]_i_1_n_4 ,\clk_cnt_reg[20]_i_1_n_5 ,\clk_cnt_reg[20]_i_1_n_6 ,\clk_cnt_reg[20]_i_1_n_7 }),
        .S(clk_cnt_reg[23:20]));
  FDRE \clk_cnt_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[20]_i_1_n_6 ),
        .Q(clk_cnt_reg[21]),
        .R(clear));
  FDRE \clk_cnt_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[20]_i_1_n_5 ),
        .Q(clk_cnt_reg[22]),
        .R(clear));
  FDRE \clk_cnt_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[20]_i_1_n_4 ),
        .Q(clk_cnt_reg[23]),
        .R(clear));
  FDRE \clk_cnt_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[24]_i_1_n_7 ),
        .Q(clk_cnt_reg[24]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[24]_i_1 
       (.CI(\clk_cnt_reg[20]_i_1_n_0 ),
        .CO({\clk_cnt_reg[24]_i_1_n_0 ,\clk_cnt_reg[24]_i_1_n_1 ,\clk_cnt_reg[24]_i_1_n_2 ,\clk_cnt_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_cnt_reg[24]_i_1_n_4 ,\clk_cnt_reg[24]_i_1_n_5 ,\clk_cnt_reg[24]_i_1_n_6 ,\clk_cnt_reg[24]_i_1_n_7 }),
        .S(clk_cnt_reg[27:24]));
  FDRE \clk_cnt_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[24]_i_1_n_6 ),
        .Q(clk_cnt_reg[25]),
        .R(clear));
  FDRE \clk_cnt_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[24]_i_1_n_5 ),
        .Q(clk_cnt_reg[26]),
        .R(clear));
  FDRE \clk_cnt_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[24]_i_1_n_4 ),
        .Q(clk_cnt_reg[27]),
        .R(clear));
  FDRE \clk_cnt_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[28]_i_1_n_7 ),
        .Q(clk_cnt_reg[28]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[28]_i_1 
       (.CI(\clk_cnt_reg[24]_i_1_n_0 ),
        .CO({\NLW_clk_cnt_reg[28]_i_1_CO_UNCONNECTED [3],\clk_cnt_reg[28]_i_1_n_1 ,\clk_cnt_reg[28]_i_1_n_2 ,\clk_cnt_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_cnt_reg[28]_i_1_n_4 ,\clk_cnt_reg[28]_i_1_n_5 ,\clk_cnt_reg[28]_i_1_n_6 ,\clk_cnt_reg[28]_i_1_n_7 }),
        .S(clk_cnt_reg[31:28]));
  FDRE \clk_cnt_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[28]_i_1_n_6 ),
        .Q(clk_cnt_reg[29]),
        .R(clear));
  FDRE \clk_cnt_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[0]_i_1_n_5 ),
        .Q(clk_cnt_reg[2]),
        .R(clear));
  FDRE \clk_cnt_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[28]_i_1_n_5 ),
        .Q(clk_cnt_reg[30]),
        .R(clear));
  FDRE \clk_cnt_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[28]_i_1_n_4 ),
        .Q(clk_cnt_reg[31]),
        .R(clear));
  FDRE \clk_cnt_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[0]_i_1_n_4 ),
        .Q(clk_cnt_reg[3]),
        .R(clear));
  FDRE \clk_cnt_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[4]_i_1_n_7 ),
        .Q(clk_cnt_reg[4]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[4]_i_1 
       (.CI(\clk_cnt_reg[0]_i_1_n_0 ),
        .CO({\clk_cnt_reg[4]_i_1_n_0 ,\clk_cnt_reg[4]_i_1_n_1 ,\clk_cnt_reg[4]_i_1_n_2 ,\clk_cnt_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_cnt_reg[4]_i_1_n_4 ,\clk_cnt_reg[4]_i_1_n_5 ,\clk_cnt_reg[4]_i_1_n_6 ,\clk_cnt_reg[4]_i_1_n_7 }),
        .S(clk_cnt_reg[7:4]));
  FDRE \clk_cnt_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[4]_i_1_n_6 ),
        .Q(clk_cnt_reg[5]),
        .R(clear));
  FDRE \clk_cnt_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[4]_i_1_n_5 ),
        .Q(clk_cnt_reg[6]),
        .R(clear));
  FDRE \clk_cnt_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[4]_i_1_n_4 ),
        .Q(clk_cnt_reg[7]),
        .R(clear));
  FDRE \clk_cnt_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[8]_i_1_n_7 ),
        .Q(clk_cnt_reg[8]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[8]_i_1 
       (.CI(\clk_cnt_reg[4]_i_1_n_0 ),
        .CO({\clk_cnt_reg[8]_i_1_n_0 ,\clk_cnt_reg[8]_i_1_n_1 ,\clk_cnt_reg[8]_i_1_n_2 ,\clk_cnt_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_cnt_reg[8]_i_1_n_4 ,\clk_cnt_reg[8]_i_1_n_5 ,\clk_cnt_reg[8]_i_1_n_6 ,\clk_cnt_reg[8]_i_1_n_7 }),
        .S(clk_cnt_reg[11:8]));
  FDRE \clk_cnt_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[8]_i_1_n_6 ),
        .Q(clk_cnt_reg[9]),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    event_num_reset_i_1
       (.I0(event_ip_reset[4]),
        .I1(cfg_event_sel[2]),
        .I2(event_num_reset_i_2_n_0),
        .O(event_num_reset_i_1_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    event_num_reset_i_2
       (.I0(event_ip_reset[3]),
        .I1(event_ip_reset[2]),
        .I2(cfg_event_sel[1]),
        .I3(event_ip_reset[1]),
        .I4(cfg_event_sel[0]),
        .I5(event_ip_reset[0]),
        .O(event_num_reset_i_2_n_0));
  FDRE event_num_reset_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(event_num_reset_i_1_n_0),
        .Q(event_num_reset_reg_n_0),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    event_num_start_i_1
       (.I0(event_ip_start[4]),
        .I1(cfg_event_sel[2]),
        .I2(event_num_start_i_2_n_0),
        .O(event_num_start_i_1_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    event_num_start_i_2
       (.I0(event_ip_start[3]),
        .I1(event_ip_start[2]),
        .I2(cfg_event_sel[1]),
        .I3(event_ip_start[1]),
        .I4(cfg_event_sel[0]),
        .I5(event_ip_start[0]),
        .O(event_num_start_i_2_n_0));
  FDRE event_num_start_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(event_num_start_i_1_n_0),
        .Q(event_num_start),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    event_num_stop_i_1
       (.I0(event_ip_stop[4]),
        .I1(cfg_event_sel[2]),
        .I2(event_num_stop_i_2_n_0),
        .O(event_num_stop_i_1_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    event_num_stop_i_2
       (.I0(event_ip_stop[3]),
        .I1(event_ip_stop[2]),
        .I2(cfg_event_sel[1]),
        .I3(event_ip_stop[1]),
        .I4(cfg_event_sel[0]),
        .I5(event_ip_stop[0]),
        .O(event_num_stop_i_2_n_0));
  FDRE event_num_stop_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(event_num_stop_i_1_n_0),
        .Q(event_num_stop),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    event_num_trig_i_1
       (.I0(event_ip_trig[4]),
        .I1(cfg_event_sel[2]),
        .I2(event_num_trig_i_2_n_0),
        .O(event_num_trig_i_1_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    event_num_trig_i_2
       (.I0(event_ip_trig[3]),
        .I1(event_ip_trig[2]),
        .I2(cfg_event_sel[1]),
        .I3(event_ip_trig[1]),
        .I4(cfg_event_sel[0]),
        .I5(event_ip_trig[0]),
        .O(event_num_trig_i_2_n_0));
  FDRE event_num_trig_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(event_num_trig_i_1_n_0),
        .Q(event_num_trig),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    event_op_reset_i_2
       (.I0(D[0]),
        .I1(i_dfilt_n_4),
        .I2(bram_addr_a[3]),
        .I3(event_op_reset_i_4__0_n_0),
        .I4(event_op_reset_i_5__0),
        .I5(\s_axi_reg_araddr[7]_0 ),
        .O(event_op_reset_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT2 #(
    .INIT(4'h1)) 
    event_op_reset_i_4__0
       (.I0(bram_addr_a[4]),
        .I1(bram_addr_a[5]),
        .O(event_op_reset_i_4__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'hE)) 
    event_op_reset_i_6__0
       (.I0(bram_addr_a[7]),
        .I1(bram_addr_a[6]),
        .O(\s_axi_reg_araddr[7]_0 ));
  FDRE event_op_reset_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(event_op_reset_i_2_n_0),
        .Q(osc1_event_op[3]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    event_op_start_i_1
       (.I0(D[1]),
        .I1(i_dfilt_n_4),
        .I2(bram_addr_a[3]),
        .I3(event_op_reset_i_4__0_n_0),
        .I4(event_op_reset_i_5__0),
        .I5(\s_axi_reg_araddr[7]_0 ),
        .O(event_op_start_i_1_n_0));
  FDRE event_op_start_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(event_op_start_i_1_n_0),
        .Q(osc1_event_op[2]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    event_op_stop_i_1
       (.I0(D[2]),
        .I1(i_dfilt_n_4),
        .I2(bram_addr_a[3]),
        .I3(event_op_reset_i_4__0_n_0),
        .I4(event_op_reset_i_5__0),
        .I5(\s_axi_reg_araddr[7]_0 ),
        .O(event_op_stop_i_1_n_0));
  FDRE event_op_stop_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(event_op_stop_i_1_n_0),
        .Q(osc1_event_op[1]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    event_op_trig_i_1
       (.I0(D[3]),
        .I1(i_dfilt_n_4),
        .I2(bram_addr_a[3]),
        .I3(event_op_reset_i_4__0_n_0),
        .I4(event_op_reset_i_5__0),
        .I5(\s_axi_reg_araddr[7]_0 ),
        .O(event_op_trig_i_1_n_0));
  FDRE event_op_trig_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(event_op_trig_i_1_n_0),
        .Q(osc1_event_op[0]),
        .R(clear));
  system_rp_oscilloscope_0_osc_filter_17 i_dfilt
       (.D(D[24:0]),
        .E(cfg_filt_coeff_pp0),
        .\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[0] (\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[0] ),
        .Q(Q),
        .U_reg_ctrl_i_33(U_dma_s2mm_n_120),
        .\adc_data_ch1_signed_reg[15] (filt_tdata),
        .bb_mult_0(bb_mult),
        .bram_addr_a(bram_addr_a),
        .bram_en_a(bram_en_a),
        .bram_we_a(bram_we_a),
        .bypass_reg_reg_0(cfg_filt_bypass),
        .\cfg_dec_rshift[3]_i_2 (\cfg_dec_rshift[3]_i_2_0 ),
        .clear(clear),
        .event_op_reset_i_5__0_0(event_op_reset_i_5__0),
        .kk_mult_0(p_2_in),
        .m_axi_osc1_aclk(m_axi_osc1_aclk),
        .m_axi_osc1_aresetn(m_axi_osc1_aresetn),
        .osc1_reg_wr_we(osc1_reg_wr_we),
        .\s_axi_reg_araddr[2] (i_dfilt_n_4),
        .\s_axi_reg_araddr[2]_0 (\s_axi_reg_araddr[2]_0 ),
        .\s_axi_reg_araddr[4] (\s_axi_reg_araddr[4]_0 ),
        .\s_axi_reg_araddr[4]_0 (\s_axi_reg_araddr[4]_1 ),
        .\s_axi_reg_araddr[5] (i_dfilt_n_1),
        .\s_axi_reg_araddr[6] (cfg_filt_coeff_bb0));
  LUT1 #(
    .INIT(2'h1)) 
    \intr_cnt[0]_i_3 
       (.I0(intr_cnt_reg[0]),
        .O(\intr_cnt[0]_i_3_n_0 ));
  FDRE \intr_cnt_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[0]_i_2_n_7 ),
        .Q(intr_cnt_reg[0]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\intr_cnt_reg[0]_i_2_n_0 ,\intr_cnt_reg[0]_i_2_n_1 ,\intr_cnt_reg[0]_i_2_n_2 ,\intr_cnt_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\intr_cnt_reg[0]_i_2_n_4 ,\intr_cnt_reg[0]_i_2_n_5 ,\intr_cnt_reg[0]_i_2_n_6 ,\intr_cnt_reg[0]_i_2_n_7 }),
        .S({intr_cnt_reg[3:1],\intr_cnt[0]_i_3_n_0 }));
  FDRE \intr_cnt_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[8]_i_1_n_5 ),
        .Q(intr_cnt_reg[10]),
        .R(clear));
  FDRE \intr_cnt_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[8]_i_1_n_4 ),
        .Q(intr_cnt_reg[11]),
        .R(clear));
  FDRE \intr_cnt_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[12]_i_1_n_7 ),
        .Q(intr_cnt_reg[12]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[12]_i_1 
       (.CI(\intr_cnt_reg[8]_i_1_n_0 ),
        .CO({\intr_cnt_reg[12]_i_1_n_0 ,\intr_cnt_reg[12]_i_1_n_1 ,\intr_cnt_reg[12]_i_1_n_2 ,\intr_cnt_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\intr_cnt_reg[12]_i_1_n_4 ,\intr_cnt_reg[12]_i_1_n_5 ,\intr_cnt_reg[12]_i_1_n_6 ,\intr_cnt_reg[12]_i_1_n_7 }),
        .S(intr_cnt_reg[15:12]));
  FDRE \intr_cnt_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[12]_i_1_n_6 ),
        .Q(intr_cnt_reg[13]),
        .R(clear));
  FDRE \intr_cnt_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[12]_i_1_n_5 ),
        .Q(intr_cnt_reg[14]),
        .R(clear));
  FDRE \intr_cnt_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[12]_i_1_n_4 ),
        .Q(intr_cnt_reg[15]),
        .R(clear));
  FDRE \intr_cnt_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[16]_i_1_n_7 ),
        .Q(intr_cnt_reg[16]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[16]_i_1 
       (.CI(\intr_cnt_reg[12]_i_1_n_0 ),
        .CO({\intr_cnt_reg[16]_i_1_n_0 ,\intr_cnt_reg[16]_i_1_n_1 ,\intr_cnt_reg[16]_i_1_n_2 ,\intr_cnt_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\intr_cnt_reg[16]_i_1_n_4 ,\intr_cnt_reg[16]_i_1_n_5 ,\intr_cnt_reg[16]_i_1_n_6 ,\intr_cnt_reg[16]_i_1_n_7 }),
        .S(intr_cnt_reg[19:16]));
  FDRE \intr_cnt_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[16]_i_1_n_6 ),
        .Q(intr_cnt_reg[17]),
        .R(clear));
  FDRE \intr_cnt_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[16]_i_1_n_5 ),
        .Q(intr_cnt_reg[18]),
        .R(clear));
  FDRE \intr_cnt_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[16]_i_1_n_4 ),
        .Q(intr_cnt_reg[19]),
        .R(clear));
  FDRE \intr_cnt_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[0]_i_2_n_6 ),
        .Q(intr_cnt_reg[1]),
        .R(clear));
  FDRE \intr_cnt_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[20]_i_1_n_7 ),
        .Q(intr_cnt_reg[20]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[20]_i_1 
       (.CI(\intr_cnt_reg[16]_i_1_n_0 ),
        .CO({\intr_cnt_reg[20]_i_1_n_0 ,\intr_cnt_reg[20]_i_1_n_1 ,\intr_cnt_reg[20]_i_1_n_2 ,\intr_cnt_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\intr_cnt_reg[20]_i_1_n_4 ,\intr_cnt_reg[20]_i_1_n_5 ,\intr_cnt_reg[20]_i_1_n_6 ,\intr_cnt_reg[20]_i_1_n_7 }),
        .S(intr_cnt_reg[23:20]));
  FDRE \intr_cnt_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[20]_i_1_n_6 ),
        .Q(intr_cnt_reg[21]),
        .R(clear));
  FDRE \intr_cnt_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[20]_i_1_n_5 ),
        .Q(intr_cnt_reg[22]),
        .R(clear));
  FDRE \intr_cnt_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[20]_i_1_n_4 ),
        .Q(intr_cnt_reg[23]),
        .R(clear));
  FDRE \intr_cnt_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[24]_i_1_n_7 ),
        .Q(intr_cnt_reg[24]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[24]_i_1 
       (.CI(\intr_cnt_reg[20]_i_1_n_0 ),
        .CO({\intr_cnt_reg[24]_i_1_n_0 ,\intr_cnt_reg[24]_i_1_n_1 ,\intr_cnt_reg[24]_i_1_n_2 ,\intr_cnt_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\intr_cnt_reg[24]_i_1_n_4 ,\intr_cnt_reg[24]_i_1_n_5 ,\intr_cnt_reg[24]_i_1_n_6 ,\intr_cnt_reg[24]_i_1_n_7 }),
        .S(intr_cnt_reg[27:24]));
  FDRE \intr_cnt_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[24]_i_1_n_6 ),
        .Q(intr_cnt_reg[25]),
        .R(clear));
  FDRE \intr_cnt_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[24]_i_1_n_5 ),
        .Q(intr_cnt_reg[26]),
        .R(clear));
  FDRE \intr_cnt_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[24]_i_1_n_4 ),
        .Q(intr_cnt_reg[27]),
        .R(clear));
  FDRE \intr_cnt_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[28]_i_1_n_7 ),
        .Q(intr_cnt_reg[28]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[28]_i_1 
       (.CI(\intr_cnt_reg[24]_i_1_n_0 ),
        .CO({\NLW_intr_cnt_reg[28]_i_1_CO_UNCONNECTED [3],\intr_cnt_reg[28]_i_1_n_1 ,\intr_cnt_reg[28]_i_1_n_2 ,\intr_cnt_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\intr_cnt_reg[28]_i_1_n_4 ,\intr_cnt_reg[28]_i_1_n_5 ,\intr_cnt_reg[28]_i_1_n_6 ,\intr_cnt_reg[28]_i_1_n_7 }),
        .S(intr_cnt_reg[31:28]));
  FDRE \intr_cnt_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[28]_i_1_n_6 ),
        .Q(intr_cnt_reg[29]),
        .R(clear));
  FDRE \intr_cnt_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[0]_i_2_n_5 ),
        .Q(intr_cnt_reg[2]),
        .R(clear));
  FDRE \intr_cnt_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[28]_i_1_n_5 ),
        .Q(intr_cnt_reg[30]),
        .R(clear));
  FDRE \intr_cnt_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[28]_i_1_n_4 ),
        .Q(intr_cnt_reg[31]),
        .R(clear));
  FDRE \intr_cnt_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[0]_i_2_n_4 ),
        .Q(intr_cnt_reg[3]),
        .R(clear));
  FDRE \intr_cnt_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[4]_i_1_n_7 ),
        .Q(intr_cnt_reg[4]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[4]_i_1 
       (.CI(\intr_cnt_reg[0]_i_2_n_0 ),
        .CO({\intr_cnt_reg[4]_i_1_n_0 ,\intr_cnt_reg[4]_i_1_n_1 ,\intr_cnt_reg[4]_i_1_n_2 ,\intr_cnt_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\intr_cnt_reg[4]_i_1_n_4 ,\intr_cnt_reg[4]_i_1_n_5 ,\intr_cnt_reg[4]_i_1_n_6 ,\intr_cnt_reg[4]_i_1_n_7 }),
        .S(intr_cnt_reg[7:4]));
  FDRE \intr_cnt_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[4]_i_1_n_6 ),
        .Q(intr_cnt_reg[5]),
        .R(clear));
  FDRE \intr_cnt_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[4]_i_1_n_5 ),
        .Q(intr_cnt_reg[6]),
        .R(clear));
  FDRE \intr_cnt_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[4]_i_1_n_4 ),
        .Q(intr_cnt_reg[7]),
        .R(clear));
  FDRE \intr_cnt_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[8]_i_1_n_7 ),
        .Q(intr_cnt_reg[8]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[8]_i_1 
       (.CI(\intr_cnt_reg[4]_i_1_n_0 ),
        .CO({\intr_cnt_reg[8]_i_1_n_0 ,\intr_cnt_reg[8]_i_1_n_1 ,\intr_cnt_reg[8]_i_1_n_2 ,\intr_cnt_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\intr_cnt_reg[8]_i_1_n_4 ,\intr_cnt_reg[8]_i_1_n_5 ,\intr_cnt_reg[8]_i_1_n_6 ,\intr_cnt_reg[8]_i_1_n_7 }),
        .S(intr_cnt_reg[11:8]));
  FDRE \intr_cnt_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[8]_i_1_n_6 ),
        .Q(intr_cnt_reg[9]),
        .R(clear));
  FDRE intr_reg_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(osc1_dma_intr),
        .Q(intr_reg),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \ramp_sig[0]_i_2 
       (.I0(ramp_sig_reg[0]),
        .O(\ramp_sig[0]_i_2_n_0 ));
  FDRE \ramp_sig_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[0]_i_1_n_7 ),
        .Q(ramp_sig_reg[0]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \ramp_sig_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\ramp_sig_reg[0]_i_1_n_0 ,\ramp_sig_reg[0]_i_1_n_1 ,\ramp_sig_reg[0]_i_1_n_2 ,\ramp_sig_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\ramp_sig_reg[0]_i_1_n_4 ,\ramp_sig_reg[0]_i_1_n_5 ,\ramp_sig_reg[0]_i_1_n_6 ,\ramp_sig_reg[0]_i_1_n_7 }),
        .S({ramp_sig_reg[3:1],\ramp_sig[0]_i_2_n_0 }));
  FDRE \ramp_sig_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[8]_i_1_n_5 ),
        .Q(ramp_sig_reg[10]),
        .R(clear));
  FDRE \ramp_sig_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[8]_i_1_n_4 ),
        .Q(ramp_sig_reg[11]),
        .R(clear));
  FDRE \ramp_sig_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[12]_i_1_n_7 ),
        .Q(ramp_sig_reg[12]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \ramp_sig_reg[12]_i_1 
       (.CI(\ramp_sig_reg[8]_i_1_n_0 ),
        .CO({\NLW_ramp_sig_reg[12]_i_1_CO_UNCONNECTED [3],\ramp_sig_reg[12]_i_1_n_1 ,\ramp_sig_reg[12]_i_1_n_2 ,\ramp_sig_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\ramp_sig_reg[12]_i_1_n_4 ,\ramp_sig_reg[12]_i_1_n_5 ,\ramp_sig_reg[12]_i_1_n_6 ,\ramp_sig_reg[12]_i_1_n_7 }),
        .S(ramp_sig_reg[15:12]));
  FDRE \ramp_sig_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[12]_i_1_n_6 ),
        .Q(ramp_sig_reg[13]),
        .R(clear));
  FDRE \ramp_sig_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[12]_i_1_n_5 ),
        .Q(ramp_sig_reg[14]),
        .R(clear));
  FDRE \ramp_sig_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[12]_i_1_n_4 ),
        .Q(ramp_sig_reg[15]),
        .R(clear));
  FDRE \ramp_sig_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[0]_i_1_n_6 ),
        .Q(ramp_sig_reg[1]),
        .R(clear));
  FDRE \ramp_sig_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[0]_i_1_n_5 ),
        .Q(ramp_sig_reg[2]),
        .R(clear));
  FDRE \ramp_sig_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[0]_i_1_n_4 ),
        .Q(ramp_sig_reg[3]),
        .R(clear));
  FDRE \ramp_sig_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[4]_i_1_n_7 ),
        .Q(ramp_sig_reg[4]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \ramp_sig_reg[4]_i_1 
       (.CI(\ramp_sig_reg[0]_i_1_n_0 ),
        .CO({\ramp_sig_reg[4]_i_1_n_0 ,\ramp_sig_reg[4]_i_1_n_1 ,\ramp_sig_reg[4]_i_1_n_2 ,\ramp_sig_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\ramp_sig_reg[4]_i_1_n_4 ,\ramp_sig_reg[4]_i_1_n_5 ,\ramp_sig_reg[4]_i_1_n_6 ,\ramp_sig_reg[4]_i_1_n_7 }),
        .S(ramp_sig_reg[7:4]));
  FDRE \ramp_sig_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[4]_i_1_n_6 ),
        .Q(ramp_sig_reg[5]),
        .R(clear));
  FDRE \ramp_sig_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[4]_i_1_n_5 ),
        .Q(ramp_sig_reg[6]),
        .R(clear));
  FDRE \ramp_sig_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[4]_i_1_n_4 ),
        .Q(ramp_sig_reg[7]),
        .R(clear));
  FDRE \ramp_sig_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[8]_i_1_n_7 ),
        .Q(ramp_sig_reg[8]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \ramp_sig_reg[8]_i_1 
       (.CI(\ramp_sig_reg[4]_i_1_n_0 ),
        .CO({\ramp_sig_reg[8]_i_1_n_0 ,\ramp_sig_reg[8]_i_1_n_1 ,\ramp_sig_reg[8]_i_1_n_2 ,\ramp_sig_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\ramp_sig_reg[8]_i_1_n_4 ,\ramp_sig_reg[8]_i_1_n_5 ,\ramp_sig_reg[8]_i_1_n_6 ,\ramp_sig_reg[8]_i_1_n_7 }),
        .S(ramp_sig_reg[11:8]));
  FDRE \ramp_sig_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[8]_i_1_n_6 ),
        .Q(ramp_sig_reg[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h530053F0530F53FF)) 
    \reg_rd_data[0]_i_11 
       (.I0(p_3_in[0]),
        .I1(p_2_in[0]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(\reg_rd_data[2]_i_4_n_0 ),
        .I4(p_1_in[0]),
        .I5(intr_cnt_reg[0]),
        .O(\reg_rd_data[0]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[0]_i_4 
       (.I0(trig_cnt_reg[0]),
        .I1(\reg_rd_data[31]_i_5_n_0 ),
        .I2(clk_cnt_reg[0]),
        .O(\reg_rd_data[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[0]_i_7 
       (.I0(cfg_dec_rshift[0]),
        .I1(cfg_avg_en),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(loopback_sel[0]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(cfg_8bit_dat),
        .O(\reg_rd_data[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[0]_i_8 
       (.I0(cfg_trig_low_level[0]),
        .I1(cfg_trig_high_level[0]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(cfg_trig_edge),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(cfg_dec_factor[0]),
        .O(\reg_rd_data[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[10]_i_10 
       (.I0(missed_samps_ch1[7]),
        .I1(missed_samps_ch1[8]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[7]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[8]),
        .O(\reg_rd_data[10]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[10]_i_12 
       (.I0(cfg_dma_dst_addr1[10]),
        .I1(\reg_rd_data[2]_i_4_n_0 ),
        .I2(cfg_dma_dst_addr2[10]),
        .I3(\reg_rd_data[31]_i_11_n_0 ),
        .I4(cfg_dma_buf_size[10]),
        .O(\reg_rd_data[10]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[10]_i_2 
       (.I0(clk_cnt_reg[10]),
        .I1(\reg_rd_data[31]_i_5_n_0 ),
        .I2(trig_cnt_reg[10]),
        .I3(\reg_rd_data[31]_i_4_n_0 ),
        .O(\reg_rd_data[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[10]_i_5 
       (.I0(\reg_rd_data[10]_i_9_n_0 ),
        .I1(cfg_dec_factor[10]),
        .I2(\reg_rd_data[17]_i_4_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[10] ),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(\reg_rd_data[2]_i_4_n_0 ),
        .O(\reg_rd_data[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[10]_i_7 
       (.I0(p_3_in[10]),
        .I1(p_2_in[10]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[10]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[10]),
        .O(\reg_rd_data[10]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[10]_i_9 
       (.I0(cfg_trig_low_level[10]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_trig_high_level[10]),
        .O(\reg_rd_data[10]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[11]_i_11 
       (.I0(cfg_dma_dst_addr1[11]),
        .I1(\reg_rd_data[2]_i_4_n_0 ),
        .I2(cfg_dma_dst_addr2[11]),
        .I3(\reg_rd_data[31]_i_11_n_0 ),
        .I4(cfg_dma_buf_size[11]),
        .O(\reg_rd_data[11]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[11]_i_12 
       (.I0(cfg_trig_low_level[11]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_trig_high_level[11]),
        .O(\reg_rd_data[11]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[11]_i_13 
       (.I0(missed_samps_ch1[8]),
        .I1(missed_samps_ch1[9]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[8]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[9]),
        .O(\reg_rd_data[11]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF8A808A808A80)) 
    \reg_rd_data[11]_i_4 
       (.I0(\reg_rd_data[31]_i_4_n_0 ),
        .I1(trig_cnt_reg[11]),
        .I2(\reg_rd_data[31]_i_5_n_0 ),
        .I3(clk_cnt_reg[11]),
        .I4(\reg_rd_data[11]_i_7_n_0 ),
        .I5(\reg_rd_data[31]_i_2_n_0 ),
        .O(\reg_rd_data[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[11]_i_7 
       (.I0(\reg_rd_data[11]_i_12_n_0 ),
        .I1(cfg_dec_factor[11]),
        .I2(\reg_rd_data[17]_i_4_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[11] ),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(\reg_rd_data[2]_i_4_n_0 ),
        .O(\reg_rd_data[11]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[11]_i_9 
       (.I0(p_3_in[11]),
        .I1(p_2_in[11]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[11]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[11]),
        .O(\reg_rd_data[11]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[12]_i_11 
       (.I0(cfg_dma_dst_addr1[12]),
        .I1(\reg_rd_data[2]_i_4_n_0 ),
        .I2(cfg_dma_dst_addr2[12]),
        .I3(\reg_rd_data[31]_i_11_n_0 ),
        .I4(cfg_dma_buf_size[12]),
        .O(\reg_rd_data[12]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[12]_i_12 
       (.I0(cfg_trig_low_level[12]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_trig_high_level[12]),
        .O(\reg_rd_data[12]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[12]_i_13 
       (.I0(missed_samps_ch1[9]),
        .I1(missed_samps_ch1[10]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[9]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[10]),
        .O(\reg_rd_data[12]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF8A808A808A80)) 
    \reg_rd_data[12]_i_4 
       (.I0(\reg_rd_data[31]_i_4_n_0 ),
        .I1(trig_cnt_reg[12]),
        .I2(\reg_rd_data[31]_i_5_n_0 ),
        .I3(clk_cnt_reg[12]),
        .I4(\reg_rd_data[12]_i_7_n_0 ),
        .I5(\reg_rd_data[31]_i_2_n_0 ),
        .O(\reg_rd_data[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[12]_i_7 
       (.I0(\reg_rd_data[12]_i_12_n_0 ),
        .I1(cfg_dec_factor[12]),
        .I2(\reg_rd_data[17]_i_4_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[12] ),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(\reg_rd_data[2]_i_4_n_0 ),
        .O(\reg_rd_data[12]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[12]_i_9 
       (.I0(p_3_in[12]),
        .I1(p_2_in[12]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[12]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[12]),
        .O(\reg_rd_data[12]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[13]_i_11 
       (.I0(cfg_dma_dst_addr1[13]),
        .I1(\reg_rd_data[2]_i_4_n_0 ),
        .I2(cfg_dma_dst_addr2[13]),
        .I3(\reg_rd_data[31]_i_11_n_0 ),
        .I4(cfg_dma_buf_size[13]),
        .O(\reg_rd_data[13]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[13]_i_12 
       (.I0(cfg_trig_low_level[13]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_trig_high_level[13]),
        .O(\reg_rd_data[13]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[13]_i_13 
       (.I0(missed_samps_ch1[10]),
        .I1(missed_samps_ch1[11]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[10]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[11]),
        .O(\reg_rd_data[13]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF8A808A808A80)) 
    \reg_rd_data[13]_i_4 
       (.I0(\reg_rd_data[31]_i_4_n_0 ),
        .I1(trig_cnt_reg[13]),
        .I2(\reg_rd_data[31]_i_5_n_0 ),
        .I3(clk_cnt_reg[13]),
        .I4(\reg_rd_data[13]_i_7_n_0 ),
        .I5(\reg_rd_data[31]_i_2_n_0 ),
        .O(\reg_rd_data[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[13]_i_7 
       (.I0(\reg_rd_data[13]_i_12_n_0 ),
        .I1(cfg_dec_factor[13]),
        .I2(\reg_rd_data[17]_i_4_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[13] ),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(\reg_rd_data[2]_i_4_n_0 ),
        .O(\reg_rd_data[13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[13]_i_9 
       (.I0(p_3_in[13]),
        .I1(p_2_in[13]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[13]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[13]),
        .O(\reg_rd_data[13]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[14]_i_11 
       (.I0(cfg_dma_dst_addr1[14]),
        .I1(\reg_rd_data[2]_i_4_n_0 ),
        .I2(cfg_dma_dst_addr2[14]),
        .I3(\reg_rd_data[31]_i_11_n_0 ),
        .I4(cfg_dma_buf_size[14]),
        .O(\reg_rd_data[14]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[14]_i_12 
       (.I0(cfg_trig_low_level[14]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_trig_high_level[14]),
        .O(\reg_rd_data[14]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[14]_i_13 
       (.I0(missed_samps_ch1[11]),
        .I1(missed_samps_ch1[12]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[11]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[12]),
        .O(\reg_rd_data[14]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF8A808A808A80)) 
    \reg_rd_data[14]_i_4 
       (.I0(\reg_rd_data[31]_i_4_n_0 ),
        .I1(trig_cnt_reg[14]),
        .I2(\reg_rd_data[31]_i_5_n_0 ),
        .I3(clk_cnt_reg[14]),
        .I4(\reg_rd_data[14]_i_7_n_0 ),
        .I5(\reg_rd_data[31]_i_2_n_0 ),
        .O(\reg_rd_data[14]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[14]_i_7 
       (.I0(\reg_rd_data[14]_i_12_n_0 ),
        .I1(cfg_dec_factor[14]),
        .I2(\reg_rd_data[17]_i_4_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[14] ),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(\reg_rd_data[2]_i_4_n_0 ),
        .O(\reg_rd_data[14]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[14]_i_9 
       (.I0(p_3_in[14]),
        .I1(p_2_in[14]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[14]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[14]),
        .O(\reg_rd_data[14]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[15]_i_10 
       (.I0(cfg_trig_low_level[15]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_trig_high_level[15]),
        .O(\reg_rd_data[15]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[15]_i_11 
       (.I0(missed_samps_ch1[12]),
        .I1(missed_samps_ch1[13]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[12]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[13]),
        .O(\reg_rd_data[15]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[15]_i_13 
       (.I0(cfg_dma_dst_addr1[15]),
        .I1(\reg_rd_data[2]_i_4_n_0 ),
        .I2(cfg_dma_dst_addr2[15]),
        .I3(\reg_rd_data[31]_i_11_n_0 ),
        .I4(cfg_dma_buf_size[15]),
        .O(\reg_rd_data[15]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \reg_rd_data[15]_i_2__0 
       (.I0(\reg_rd_data[17]_i_4_n_0 ),
        .I1(\reg_rd_data[17]_i_3_n_0 ),
        .O(\reg_rd_data[15]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[15]_i_5 
       (.I0(\reg_rd_data[15]_i_10_n_0 ),
        .I1(cfg_dec_factor[15]),
        .I2(\reg_rd_data[17]_i_4_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[15] ),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(\reg_rd_data[2]_i_4_n_0 ),
        .O(\reg_rd_data[15]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[15]_i_6 
       (.I0(clk_cnt_reg[15]),
        .I1(\reg_rd_data[31]_i_5_n_0 ),
        .I2(trig_cnt_reg[15]),
        .I3(\reg_rd_data[31]_i_4_n_0 ),
        .O(\reg_rd_data[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[15]_i_8 
       (.I0(p_3_in[15]),
        .I1(p_2_in[15]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[15]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[15]),
        .O(\reg_rd_data[15]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[16]_i_10 
       (.I0(missed_samps_ch1[13]),
        .I1(missed_samps_ch1[14]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[13]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[14]),
        .O(\reg_rd_data[16]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF8A80)) 
    \reg_rd_data[16]_i_4 
       (.I0(\reg_rd_data[31]_i_4_n_0 ),
        .I1(trig_cnt_reg[16]),
        .I2(\reg_rd_data[31]_i_5_n_0 ),
        .I3(clk_cnt_reg[16]),
        .I4(\reg_rd_data[16]_i_8_n_0 ),
        .O(\reg_rd_data[16]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[16]_i_6 
       (.I0(p_3_in[16]),
        .I1(p_2_in[16]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[16]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[16]),
        .O(\reg_rd_data[16]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \reg_rd_data[16]_i_8 
       (.I0(\reg_rd_data[31]_i_11_n_0 ),
        .I1(\reg_rd_data[2]_i_4_n_0 ),
        .I2(cfg_dec_factor[16]),
        .I3(\reg_rd_data[31]_i_2_n_0 ),
        .I4(\reg_rd_data[17]_i_4_n_0 ),
        .O(\reg_rd_data[16]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[16]_i_9 
       (.I0(cfg_dma_dst_addr2[16]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[16]),
        .O(\reg_rd_data[16]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[17]_i_11 
       (.I0(cfg_dma_dst_addr2[17]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[17]),
        .O(\reg_rd_data[17]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[17]_i_12 
       (.I0(missed_samps_ch1[14]),
        .I1(missed_samps_ch1[15]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[14]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[15]),
        .O(\reg_rd_data[17]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \reg_rd_data[17]_i_3 
       (.I0(bram_addr_a[1]),
        .I1(bram_addr_a[0]),
        .I2(\reg_rd_data[17]_i_7_n_0 ),
        .O(\reg_rd_data[17]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hEEEEEEE0)) 
    \reg_rd_data[17]_i_4 
       (.I0(\reg_rd_data[31]_i_7_n_0 ),
        .I1(\reg_rd_data[17]_i_7_n_0 ),
        .I2(\reg_rd_data[31]_i_6_n_0 ),
        .I3(bram_addr_a[0]),
        .I4(bram_addr_a[1]),
        .O(\reg_rd_data[17]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[17]_i_6 
       (.I0(clk_cnt_reg[17]),
        .I1(\reg_rd_data[31]_i_5_n_0 ),
        .I2(trig_cnt_reg[17]),
        .I3(\reg_rd_data[31]_i_4_n_0 ),
        .O(\reg_rd_data[17]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hBEA903D2FFD7FD55)) 
    \reg_rd_data[17]_i_7 
       (.I0(bram_addr_a[4]),
        .I1(bram_addr_a[2]),
        .I2(bram_addr_a[3]),
        .I3(bram_addr_a[7]),
        .I4(bram_addr_a[5]),
        .I5(bram_addr_a[6]),
        .O(\reg_rd_data[17]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[17]_i_9 
       (.I0(p_3_in[17]),
        .I1(p_2_in[17]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[17]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[17]),
        .O(\reg_rd_data[17]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[18]_i_6 
       (.I0(cfg_dma_dst_addr2[18]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[18]),
        .O(\reg_rd_data[18]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[18]_i_7 
       (.I0(p_3_in[18]),
        .I1(p_2_in[18]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[18]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[18]),
        .O(\reg_rd_data[18]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[18]_i_8 
       (.I0(missed_samps_ch1[15]),
        .I1(missed_samps_ch1[16]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[15]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[16]),
        .O(\reg_rd_data[18]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[19]_i_6 
       (.I0(cfg_dma_dst_addr2[19]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[19]),
        .O(\reg_rd_data[19]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[19]_i_7 
       (.I0(p_3_in[19]),
        .I1(p_2_in[19]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[19]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[19]),
        .O(\reg_rd_data[19]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[19]_i_8 
       (.I0(missed_samps_ch1[16]),
        .I1(missed_samps_ch1[17]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[16]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[17]),
        .O(\reg_rd_data[19]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h00100013FFFFFFFF)) 
    \reg_rd_data[1]_i_11__0 
       (.I0(cfg_event_sel[1]),
        .I1(\reg_rd_data[2]_i_4_n_0 ),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(\reg_rd_data[17]_i_3_n_0 ),
        .I4(cfg_trig_mask[1]),
        .I5(\reg_rd_data[17]_i_4_n_0 ),
        .O(\reg_rd_data[1]_i_11__0_n_0 ));
  LUT6 #(
    .INIT(64'hB888B8B8B8888888)) 
    \reg_rd_data[1]_i_2 
       (.I0(\reg_rd_data[1]_i_6_n_0 ),
        .I1(\reg_rd_data[17]_i_4_n_0 ),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(cfg_dec_rshift[1]),
        .I4(\reg_rd_data[2]_i_4_n_0 ),
        .I5(loopback_sel[1]),
        .O(\reg_rd_data[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[1]_i_5__0 
       (.I0(clk_cnt_reg[1]),
        .I1(\reg_rd_data[31]_i_5_n_0 ),
        .I2(trig_cnt_reg[1]),
        .I3(\reg_rd_data[31]_i_4_n_0 ),
        .O(\reg_rd_data[1]_i_5__0_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[1]_i_6 
       (.I0(cfg_trig_low_level[1]),
        .I1(cfg_trig_high_level[1]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(cfg_dec_factor[1]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .O(\reg_rd_data[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[1]_i_8 
       (.I0(p_3_in[1]),
        .I1(p_2_in[1]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[1]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[1]),
        .O(\reg_rd_data[1]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[20]_i_6 
       (.I0(cfg_dma_dst_addr2[20]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[20]),
        .O(\reg_rd_data[20]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[20]_i_7 
       (.I0(p_3_in[20]),
        .I1(p_2_in[20]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[20]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[20]),
        .O(\reg_rd_data[20]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[20]_i_8 
       (.I0(missed_samps_ch1[17]),
        .I1(missed_samps_ch1[18]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[17]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[18]),
        .O(\reg_rd_data[20]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[21]_i_6 
       (.I0(cfg_dma_dst_addr2[21]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[21]),
        .O(\reg_rd_data[21]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[21]_i_7 
       (.I0(p_3_in[21]),
        .I1(p_2_in[21]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[21]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[21]),
        .O(\reg_rd_data[21]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[21]_i_8 
       (.I0(missed_samps_ch1[18]),
        .I1(missed_samps_ch1[19]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[18]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[19]),
        .O(\reg_rd_data[21]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[22]_i_6 
       (.I0(cfg_dma_dst_addr2[22]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[22]),
        .O(\reg_rd_data[22]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[22]_i_7 
       (.I0(p_3_in[22]),
        .I1(p_2_in[22]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[22]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[22]),
        .O(\reg_rd_data[22]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[22]_i_8 
       (.I0(missed_samps_ch1[19]),
        .I1(missed_samps_ch1[20]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[19]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[20]),
        .O(\reg_rd_data[22]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[23]_i_6 
       (.I0(cfg_dma_dst_addr2[23]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[23]),
        .O(\reg_rd_data[23]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[23]_i_7 
       (.I0(p_3_in[23]),
        .I1(p_2_in[23]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[23]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[23]),
        .O(\reg_rd_data[23]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[23]_i_8 
       (.I0(missed_samps_ch1[20]),
        .I1(missed_samps_ch1[21]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[20]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[21]),
        .O(\reg_rd_data[23]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[24]_i_6 
       (.I0(cfg_dma_dst_addr2[24]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[24]),
        .O(\reg_rd_data[24]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[24]_i_7 
       (.I0(p_3_in[24]),
        .I1(p_2_in[24]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[24]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[24]),
        .O(\reg_rd_data[24]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[24]_i_8 
       (.I0(missed_samps_ch1[21]),
        .I1(missed_samps_ch1[22]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[21]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[22]),
        .O(\reg_rd_data[24]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[25]_i_6 
       (.I0(cfg_dma_dst_addr2[25]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[25]),
        .O(\reg_rd_data[25]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[25]_i_7 
       (.I0(missed_samps_ch1[22]),
        .I1(missed_samps_ch1[23]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[22]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[23]),
        .O(\reg_rd_data[25]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[26]_i_6 
       (.I0(cfg_dma_dst_addr2[26]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[26]),
        .O(\reg_rd_data[26]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[26]_i_7 
       (.I0(missed_samps_ch1[23]),
        .I1(missed_samps_ch1[24]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[23]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[24]),
        .O(\reg_rd_data[26]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[27]_i_6 
       (.I0(cfg_dma_dst_addr2[27]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[27]),
        .O(\reg_rd_data[27]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[27]_i_7 
       (.I0(missed_samps_ch1[24]),
        .I1(missed_samps_ch1[25]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[24]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[25]),
        .O(\reg_rd_data[27]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[28]_i_6 
       (.I0(cfg_dma_dst_addr2[28]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[28]),
        .O(\reg_rd_data[28]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[28]_i_7 
       (.I0(missed_samps_ch1[25]),
        .I1(missed_samps_ch1[26]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[25]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[26]),
        .O(\reg_rd_data[28]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[29]_i_6 
       (.I0(cfg_dma_dst_addr2[29]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[29]),
        .O(\reg_rd_data[29]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[29]_i_7 
       (.I0(missed_samps_ch1[26]),
        .I1(missed_samps_ch1[27]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[26]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[27]),
        .O(\reg_rd_data[29]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF888F8FF)) 
    \reg_rd_data[2]_i_11 
       (.I0(bram_addr_a[6]),
        .I1(bram_addr_a[7]),
        .I2(bram_addr_a[5]),
        .I3(bram_addr_a[2]),
        .I4(bram_addr_a[3]),
        .I5(bram_addr_a[4]),
        .O(\reg_rd_data[2]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT5 #(
    .INIT(32'h9E08965C)) 
    \reg_rd_data[2]_i_12 
       (.I0(bram_addr_a[2]),
        .I1(bram_addr_a[3]),
        .I2(bram_addr_a[6]),
        .I3(bram_addr_a[7]),
        .I4(bram_addr_a[5]),
        .O(\reg_rd_data[2]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h5F5FDD7F5F5F7FFF)) 
    \reg_rd_data[2]_i_13 
       (.I0(bram_addr_a[5]),
        .I1(bram_addr_a[6]),
        .I2(bram_addr_a[7]),
        .I3(bram_addr_a[3]),
        .I4(bram_addr_a[4]),
        .I5(bram_addr_a[2]),
        .O(\reg_rd_data[2]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0004110400044400)) 
    \reg_rd_data[2]_i_14__0 
       (.I0(bram_addr_a[5]),
        .I1(bram_addr_a[3]),
        .I2(bram_addr_a[4]),
        .I3(bram_addr_a[7]),
        .I4(bram_addr_a[6]),
        .I5(bram_addr_a[2]),
        .O(\reg_rd_data[2]_i_14__0_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[2]_i_17 
       (.I0(p_3_in[2]),
        .I1(p_2_in[2]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[2]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[2]),
        .O(\reg_rd_data[2]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h888BBB8BBBBBBBBB)) 
    \reg_rd_data[2]_i_2 
       (.I0(\reg_rd_data[2]_i_7_n_0 ),
        .I1(\reg_rd_data[17]_i_4_n_0 ),
        .I2(loopback_sel[2]),
        .I3(\reg_rd_data[2]_i_4_n_0 ),
        .I4(cfg_dec_rshift[2]),
        .I5(\reg_rd_data[31]_i_11_n_0 ),
        .O(\reg_rd_data[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0054FF57)) 
    \reg_rd_data[2]_i_20 
       (.I0(cfg_event_sel[2]),
        .I1(\reg_rd_data[2]_i_4_n_0 ),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(\reg_rd_data[17]_i_3_n_0 ),
        .I4(cfg_trig_mask[2]),
        .O(\reg_rd_data[2]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'hF4F7)) 
    \reg_rd_data[2]_i_22 
       (.I0(missed_samps_ch1[0]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_8bit_dat),
        .I3(missed_samps_ch2[0]),
        .O(\reg_rd_data[2]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h0000000001550000)) 
    \reg_rd_data[2]_i_4 
       (.I0(event_op_reset_i_5__0),
        .I1(bram_addr_a[7]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(\cfg_calib_offset_reg[0]_0 ),
        .I4(\reg_rd_data[2]_i_11_n_0 ),
        .I5(\reg_rd_data[2]_i_12_n_0 ),
        .O(\reg_rd_data[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \reg_rd_data[2]_i_5 
       (.I0(\reg_rd_data[2]_i_13_n_0 ),
        .I1(\reg_rd_data[2]_i_14__0_n_0 ),
        .I2(bram_addr_a[0]),
        .I3(bram_addr_a[1]),
        .O(\reg_rd_data[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[2]_i_6 
       (.I0(trig_cnt_reg[2]),
        .I1(\reg_rd_data[31]_i_5_n_0 ),
        .I2(clk_cnt_reg[2]),
        .O(\reg_rd_data[2]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h5F305F3F)) 
    \reg_rd_data[2]_i_7 
       (.I0(cfg_trig_low_level[2]),
        .I1(cfg_trig_high_level[2]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(\reg_rd_data[31]_i_11_n_0 ),
        .I4(cfg_dec_factor[2]),
        .O(\reg_rd_data[2]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[30]_i_6 
       (.I0(cfg_dma_dst_addr2[30]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[30]),
        .O(\reg_rd_data[30]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[30]_i_7 
       (.I0(missed_samps_ch1[27]),
        .I1(missed_samps_ch1[28]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[27]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[28]),
        .O(\reg_rd_data[30]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \reg_rd_data[31]_i_11 
       (.I0(bram_addr_a[1]),
        .I1(bram_addr_a[0]),
        .I2(\reg_rd_data[31]_i_15_n_0 ),
        .O(\reg_rd_data[31]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hCDDBDBDB5F999B11)) 
    \reg_rd_data[31]_i_12 
       (.I0(bram_addr_a[6]),
        .I1(bram_addr_a[5]),
        .I2(bram_addr_a[7]),
        .I3(bram_addr_a[3]),
        .I4(bram_addr_a[2]),
        .I5(bram_addr_a[4]),
        .O(\reg_rd_data[31]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[31]_i_13 
       (.I0(cfg_dma_dst_addr2[31]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_dma_buf_size[31]),
        .O(\reg_rd_data[31]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[31]_i_14 
       (.I0(missed_samps_ch1[28]),
        .I1(missed_samps_ch1[29]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[28]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[29]),
        .O(\reg_rd_data[31]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hEFAA18B9EEDDF96A)) 
    \reg_rd_data[31]_i_15 
       (.I0(bram_addr_a[2]),
        .I1(bram_addr_a[7]),
        .I2(bram_addr_a[3]),
        .I3(bram_addr_a[5]),
        .I4(bram_addr_a[4]),
        .I5(bram_addr_a[6]),
        .O(\reg_rd_data[31]_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \reg_rd_data[31]_i_2 
       (.I0(\reg_rd_data[31]_i_6_n_0 ),
        .I1(\reg_rd_data[31]_i_7_n_0 ),
        .O(\reg_rd_data[31]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \reg_rd_data[31]_i_4 
       (.I0(\reg_rd_data[2]_i_4_n_0 ),
        .I1(\reg_rd_data[2]_i_5_n_0 ),
        .O(\reg_rd_data[31]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'h0D)) 
    \reg_rd_data[31]_i_5 
       (.I0(\reg_rd_data[2]_i_4_n_0 ),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(\reg_rd_data[2]_i_5_n_0 ),
        .O(\reg_rd_data[31]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hD0E7035FE0CF03AF)) 
    \reg_rd_data[31]_i_6 
       (.I0(bram_addr_a[2]),
        .I1(bram_addr_a[4]),
        .I2(bram_addr_a[7]),
        .I3(bram_addr_a[6]),
        .I4(bram_addr_a[5]),
        .I5(bram_addr_a[3]),
        .O(\reg_rd_data[31]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \reg_rd_data[31]_i_7 
       (.I0(bram_addr_a[1]),
        .I1(bram_addr_a[0]),
        .I2(\reg_rd_data[31]_i_12_n_0 ),
        .O(\reg_rd_data[31]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[3]_i_13 
       (.I0(p_3_in[3]),
        .I1(p_2_in[3]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[3]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[3]),
        .O(\reg_rd_data[3]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[3]_i_16 
       (.I0(missed_samps_ch1[0]),
        .I1(missed_samps_ch1[1]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[0]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[1]),
        .O(\reg_rd_data[3]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT4 #(
    .INIT(16'hD0FF)) 
    \reg_rd_data[3]_i_2 
       (.I0(\reg_rd_data[3]_i_6_n_0 ),
        .I1(\reg_rd_data[3]_i_7_n_0 ),
        .I2(\reg_rd_data[31]_i_2_n_0 ),
        .I3(\reg_rd_data[2]_i_5_n_0 ),
        .O(\reg_rd_data[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[3]_i_5__0 
       (.I0(clk_cnt_reg[3]),
        .I1(\reg_rd_data[31]_i_5_n_0 ),
        .I2(trig_cnt_reg[3]),
        .I3(\reg_rd_data[31]_i_4_n_0 ),
        .O(\reg_rd_data[3]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hFF3F3B3BF0303A3A)) 
    \reg_rd_data[3]_i_6 
       (.I0(cfg_dec_factor[3]),
        .I1(\reg_rd_data[17]_i_4_n_0 ),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(cfg_trig_low_level[3]),
        .I4(\reg_rd_data[2]_i_4_n_0 ),
        .I5(cfg_trig_high_level[3]),
        .O(\reg_rd_data[3]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h000057F7)) 
    \reg_rd_data[3]_i_7 
       (.I0(\reg_rd_data[31]_i_11_n_0 ),
        .I1(loopback_sel[3]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(cfg_dec_rshift[3]),
        .I4(\reg_rd_data[17]_i_4_n_0 ),
        .O(\reg_rd_data[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[4]_i_11 
       (.I0(p_3_in[4]),
        .I1(p_2_in[4]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[4]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[4]),
        .O(\reg_rd_data[4]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[4]_i_15 
       (.I0(missed_samps_ch1[1]),
        .I1(missed_samps_ch1[2]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[1]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[2]),
        .O(\reg_rd_data[4]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[4]_i_4 
       (.I0(\reg_rd_data[4]_i_9_n_0 ),
        .I1(cfg_dec_factor[4]),
        .I2(\reg_rd_data[17]_i_4_n_0 ),
        .I3(loopback_sel[4]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(\reg_rd_data[2]_i_4_n_0 ),
        .O(\reg_rd_data[4]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[4]_i_5 
       (.I0(clk_cnt_reg[4]),
        .I1(\reg_rd_data[31]_i_5_n_0 ),
        .I2(trig_cnt_reg[4]),
        .I3(\reg_rd_data[31]_i_4_n_0 ),
        .O(\reg_rd_data[4]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[4]_i_9 
       (.I0(cfg_trig_low_level[4]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_trig_high_level[4]),
        .O(\reg_rd_data[4]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[5]_i_11 
       (.I0(p_3_in[5]),
        .I1(p_2_in[5]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[5]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[5]),
        .O(\reg_rd_data[5]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[5]_i_13 
       (.I0(cfg_dma_dst_addr1[5]),
        .I1(\reg_rd_data[2]_i_4_n_0 ),
        .I2(cfg_dma_dst_addr2[5]),
        .I3(\reg_rd_data[31]_i_11_n_0 ),
        .I4(cfg_dma_buf_size[5]),
        .O(\reg_rd_data[5]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[5]_i_15 
       (.I0(missed_samps_ch1[2]),
        .I1(missed_samps_ch1[3]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[2]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[3]),
        .O(\reg_rd_data[5]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[5]_i_4 
       (.I0(\reg_rd_data[5]_i_9_n_0 ),
        .I1(cfg_dec_factor[5]),
        .I2(\reg_rd_data[17]_i_4_n_0 ),
        .I3(loopback_sel[5]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(\reg_rd_data[2]_i_4_n_0 ),
        .O(\reg_rd_data[5]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[5]_i_5 
       (.I0(clk_cnt_reg[5]),
        .I1(\reg_rd_data[31]_i_5_n_0 ),
        .I2(trig_cnt_reg[5]),
        .I3(\reg_rd_data[31]_i_4_n_0 ),
        .O(\reg_rd_data[5]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[5]_i_9 
       (.I0(cfg_trig_low_level[5]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_trig_high_level[5]),
        .O(\reg_rd_data[5]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[6]_i_11 
       (.I0(cfg_dma_dst_addr1[6]),
        .I1(\reg_rd_data[2]_i_4_n_0 ),
        .I2(cfg_dma_dst_addr2[6]),
        .I3(\reg_rd_data[31]_i_11_n_0 ),
        .I4(cfg_dma_buf_size[6]),
        .O(\reg_rd_data[6]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[6]_i_12 
       (.I0(cfg_trig_low_level[6]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_trig_high_level[6]),
        .O(\reg_rd_data[6]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[6]_i_13 
       (.I0(missed_samps_ch1[3]),
        .I1(missed_samps_ch1[4]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[3]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[4]),
        .O(\reg_rd_data[6]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF8A808A808A80)) 
    \reg_rd_data[6]_i_4 
       (.I0(\reg_rd_data[31]_i_4_n_0 ),
        .I1(trig_cnt_reg[6]),
        .I2(\reg_rd_data[31]_i_5_n_0 ),
        .I3(clk_cnt_reg[6]),
        .I4(\reg_rd_data[6]_i_7_n_0 ),
        .I5(\reg_rd_data[31]_i_2_n_0 ),
        .O(\reg_rd_data[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[6]_i_7 
       (.I0(\reg_rd_data[6]_i_12_n_0 ),
        .I1(cfg_dec_factor[6]),
        .I2(\reg_rd_data[17]_i_4_n_0 ),
        .I3(loopback_sel[6]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(\reg_rd_data[2]_i_4_n_0 ),
        .O(\reg_rd_data[6]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[6]_i_9 
       (.I0(p_3_in[6]),
        .I1(p_2_in[6]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[6]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[6]),
        .O(\reg_rd_data[6]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[7]_i_11 
       (.I0(cfg_dma_dst_addr1[7]),
        .I1(\reg_rd_data[2]_i_4_n_0 ),
        .I2(cfg_dma_dst_addr2[7]),
        .I3(\reg_rd_data[31]_i_11_n_0 ),
        .I4(cfg_dma_buf_size[7]),
        .O(\reg_rd_data[7]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[7]_i_12 
       (.I0(cfg_trig_low_level[7]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_trig_high_level[7]),
        .O(\reg_rd_data[7]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[7]_i_13 
       (.I0(missed_samps_ch1[4]),
        .I1(missed_samps_ch1[5]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[4]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[5]),
        .O(\reg_rd_data[7]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF8A808A808A80)) 
    \reg_rd_data[7]_i_4 
       (.I0(\reg_rd_data[31]_i_4_n_0 ),
        .I1(trig_cnt_reg[7]),
        .I2(\reg_rd_data[31]_i_5_n_0 ),
        .I3(clk_cnt_reg[7]),
        .I4(\reg_rd_data[7]_i_7_n_0 ),
        .I5(\reg_rd_data[31]_i_2_n_0 ),
        .O(\reg_rd_data[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[7]_i_7 
       (.I0(\reg_rd_data[7]_i_12_n_0 ),
        .I1(cfg_dec_factor[7]),
        .I2(\reg_rd_data[17]_i_4_n_0 ),
        .I3(loopback_sel[7]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(\reg_rd_data[2]_i_4_n_0 ),
        .O(\reg_rd_data[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[7]_i_9 
       (.I0(p_3_in[7]),
        .I1(p_2_in[7]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[7]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[7]),
        .O(\reg_rd_data[7]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[8]_i_10 
       (.I0(missed_samps_ch1[5]),
        .I1(missed_samps_ch1[6]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[5]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[6]),
        .O(\reg_rd_data[8]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[8]_i_12 
       (.I0(cfg_dma_dst_addr1[8]),
        .I1(\reg_rd_data[2]_i_4_n_0 ),
        .I2(cfg_dma_dst_addr2[8]),
        .I3(\reg_rd_data[31]_i_11_n_0 ),
        .I4(cfg_dma_buf_size[8]),
        .O(\reg_rd_data[8]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[8]_i_2 
       (.I0(clk_cnt_reg[8]),
        .I1(\reg_rd_data[31]_i_5_n_0 ),
        .I2(trig_cnt_reg[8]),
        .I3(\reg_rd_data[31]_i_4_n_0 ),
        .O(\reg_rd_data[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[8]_i_5 
       (.I0(\reg_rd_data[8]_i_9_n_0 ),
        .I1(cfg_dec_factor[8]),
        .I2(\reg_rd_data[17]_i_4_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[8] ),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(\reg_rd_data[2]_i_4_n_0 ),
        .O(\reg_rd_data[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[8]_i_7 
       (.I0(p_3_in[8]),
        .I1(p_2_in[8]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[8]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[8]),
        .O(\reg_rd_data[8]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[8]_i_9 
       (.I0(cfg_trig_low_level[8]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_trig_high_level[8]),
        .O(\reg_rd_data[8]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[9]_i_11 
       (.I0(cfg_dma_dst_addr1[9]),
        .I1(\reg_rd_data[2]_i_4_n_0 ),
        .I2(cfg_dma_dst_addr2[9]),
        .I3(\reg_rd_data[31]_i_11_n_0 ),
        .I4(cfg_dma_buf_size[9]),
        .O(\reg_rd_data[9]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[9]_i_12 
       (.I0(cfg_trig_low_level[9]),
        .I1(\reg_rd_data[31]_i_11_n_0 ),
        .I2(cfg_trig_high_level[9]),
        .O(\reg_rd_data[9]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[9]_i_13 
       (.I0(missed_samps_ch1[6]),
        .I1(missed_samps_ch1[7]),
        .I2(\reg_rd_data[31]_i_11_n_0 ),
        .I3(missed_samps_ch2[6]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[7]),
        .O(\reg_rd_data[9]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF8A808A808A80)) 
    \reg_rd_data[9]_i_4 
       (.I0(\reg_rd_data[31]_i_4_n_0 ),
        .I1(trig_cnt_reg[9]),
        .I2(\reg_rd_data[31]_i_5_n_0 ),
        .I3(clk_cnt_reg[9]),
        .I4(\reg_rd_data[9]_i_7_n_0 ),
        .I5(\reg_rd_data[31]_i_2_n_0 ),
        .O(\reg_rd_data[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[9]_i_7 
       (.I0(\reg_rd_data[9]_i_12_n_0 ),
        .I1(cfg_dec_factor[9]),
        .I2(\reg_rd_data[17]_i_4_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[9] ),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(\reg_rd_data[2]_i_4_n_0 ),
        .O(\reg_rd_data[9]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[9]_i_9 
       (.I0(p_3_in[9]),
        .I1(p_2_in[9]),
        .I2(\reg_rd_data[2]_i_4_n_0 ),
        .I3(p_1_in[9]),
        .I4(\reg_rd_data[31]_i_11_n_0 ),
        .I5(intr_cnt_reg[9]),
        .O(\reg_rd_data[9]_i_9_n_0 ));
  FDRE \reg_rd_data_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_144),
        .Q(osc1_reg_rd_data[0]),
        .R(1'b0));
  MUXF7 \reg_rd_data_reg[0]_i_3 
       (.I0(\reg_rd_data[0]_i_7_n_0 ),
        .I1(\reg_rd_data[0]_i_8_n_0 ),
        .O(\reg_rd_data_reg[0]_i_3_n_0 ),
        .S(\reg_rd_data[17]_i_4_n_0 ));
  FDRE \reg_rd_data_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_137),
        .Q(osc1_reg_rd_data[10]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_44),
        .Q(osc1_reg_rd_data[11]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_43),
        .Q(osc1_reg_rd_data[12]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_42),
        .Q(osc1_reg_rd_data[13]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_41),
        .Q(osc1_reg_rd_data[14]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_40),
        .Q(osc1_reg_rd_data[15]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_39),
        .Q(osc1_reg_rd_data[16]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_38),
        .Q(osc1_reg_rd_data[17]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_136),
        .Q(osc1_reg_rd_data[18]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_135),
        .Q(osc1_reg_rd_data[19]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_143),
        .Q(osc1_reg_rd_data[1]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_134),
        .Q(osc1_reg_rd_data[20]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_133),
        .Q(osc1_reg_rd_data[21]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_132),
        .Q(osc1_reg_rd_data[22]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_131),
        .Q(osc1_reg_rd_data[23]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_130),
        .Q(osc1_reg_rd_data[24]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_129),
        .Q(osc1_reg_rd_data[25]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_128),
        .Q(osc1_reg_rd_data[26]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_127),
        .Q(osc1_reg_rd_data[27]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_126),
        .Q(osc1_reg_rd_data[28]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_125),
        .Q(osc1_reg_rd_data[29]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_142),
        .Q(osc1_reg_rd_data[2]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_124),
        .Q(osc1_reg_rd_data[30]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_123),
        .Q(osc1_reg_rd_data[31]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_141),
        .Q(osc1_reg_rd_data[3]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_140),
        .Q(osc1_reg_rd_data[4]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_139),
        .Q(osc1_reg_rd_data[5]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_47),
        .Q(osc1_reg_rd_data[6]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_46),
        .Q(osc1_reg_rd_data[7]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_138),
        .Q(osc1_reg_rd_data[8]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_45),
        .Q(osc1_reg_rd_data[9]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \trig_cnt[0]_i_2 
       (.I0(trig_cnt_reg[0]),
        .O(\trig_cnt[0]_i_2_n_0 ));
  FDRE \trig_cnt_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[0]_i_1_n_7 ),
        .Q(trig_cnt_reg[0]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\trig_cnt_reg[0]_i_1_n_0 ,\trig_cnt_reg[0]_i_1_n_1 ,\trig_cnt_reg[0]_i_1_n_2 ,\trig_cnt_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\trig_cnt_reg[0]_i_1_n_4 ,\trig_cnt_reg[0]_i_1_n_5 ,\trig_cnt_reg[0]_i_1_n_6 ,\trig_cnt_reg[0]_i_1_n_7 }),
        .S({trig_cnt_reg[3:1],\trig_cnt[0]_i_2_n_0 }));
  FDRE \trig_cnt_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[8]_i_1_n_5 ),
        .Q(trig_cnt_reg[10]),
        .R(clear));
  FDRE \trig_cnt_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[8]_i_1_n_4 ),
        .Q(trig_cnt_reg[11]),
        .R(clear));
  FDRE \trig_cnt_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[12]_i_1_n_7 ),
        .Q(trig_cnt_reg[12]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[12]_i_1 
       (.CI(\trig_cnt_reg[8]_i_1_n_0 ),
        .CO({\trig_cnt_reg[12]_i_1_n_0 ,\trig_cnt_reg[12]_i_1_n_1 ,\trig_cnt_reg[12]_i_1_n_2 ,\trig_cnt_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\trig_cnt_reg[12]_i_1_n_4 ,\trig_cnt_reg[12]_i_1_n_5 ,\trig_cnt_reg[12]_i_1_n_6 ,\trig_cnt_reg[12]_i_1_n_7 }),
        .S(trig_cnt_reg[15:12]));
  FDRE \trig_cnt_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[12]_i_1_n_6 ),
        .Q(trig_cnt_reg[13]),
        .R(clear));
  FDRE \trig_cnt_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[12]_i_1_n_5 ),
        .Q(trig_cnt_reg[14]),
        .R(clear));
  FDRE \trig_cnt_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[12]_i_1_n_4 ),
        .Q(trig_cnt_reg[15]),
        .R(clear));
  FDRE \trig_cnt_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[16]_i_1_n_7 ),
        .Q(trig_cnt_reg[16]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[16]_i_1 
       (.CI(\trig_cnt_reg[12]_i_1_n_0 ),
        .CO({\trig_cnt_reg[16]_i_1_n_0 ,\trig_cnt_reg[16]_i_1_n_1 ,\trig_cnt_reg[16]_i_1_n_2 ,\trig_cnt_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\trig_cnt_reg[16]_i_1_n_4 ,\trig_cnt_reg[16]_i_1_n_5 ,\trig_cnt_reg[16]_i_1_n_6 ,\trig_cnt_reg[16]_i_1_n_7 }),
        .S(trig_cnt_reg[19:16]));
  FDRE \trig_cnt_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[16]_i_1_n_6 ),
        .Q(trig_cnt_reg[17]),
        .R(clear));
  FDRE \trig_cnt_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[16]_i_1_n_5 ),
        .Q(trig_cnt_reg[18]),
        .R(clear));
  FDRE \trig_cnt_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[16]_i_1_n_4 ),
        .Q(trig_cnt_reg[19]),
        .R(clear));
  FDRE \trig_cnt_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[0]_i_1_n_6 ),
        .Q(trig_cnt_reg[1]),
        .R(clear));
  FDRE \trig_cnt_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[20]_i_1_n_7 ),
        .Q(trig_cnt_reg[20]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[20]_i_1 
       (.CI(\trig_cnt_reg[16]_i_1_n_0 ),
        .CO({\trig_cnt_reg[20]_i_1_n_0 ,\trig_cnt_reg[20]_i_1_n_1 ,\trig_cnt_reg[20]_i_1_n_2 ,\trig_cnt_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\trig_cnt_reg[20]_i_1_n_4 ,\trig_cnt_reg[20]_i_1_n_5 ,\trig_cnt_reg[20]_i_1_n_6 ,\trig_cnt_reg[20]_i_1_n_7 }),
        .S(trig_cnt_reg[23:20]));
  FDRE \trig_cnt_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[20]_i_1_n_6 ),
        .Q(trig_cnt_reg[21]),
        .R(clear));
  FDRE \trig_cnt_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[20]_i_1_n_5 ),
        .Q(trig_cnt_reg[22]),
        .R(clear));
  FDRE \trig_cnt_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[20]_i_1_n_4 ),
        .Q(trig_cnt_reg[23]),
        .R(clear));
  FDRE \trig_cnt_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[24]_i_1_n_7 ),
        .Q(trig_cnt_reg[24]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[24]_i_1 
       (.CI(\trig_cnt_reg[20]_i_1_n_0 ),
        .CO({\trig_cnt_reg[24]_i_1_n_0 ,\trig_cnt_reg[24]_i_1_n_1 ,\trig_cnt_reg[24]_i_1_n_2 ,\trig_cnt_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\trig_cnt_reg[24]_i_1_n_4 ,\trig_cnt_reg[24]_i_1_n_5 ,\trig_cnt_reg[24]_i_1_n_6 ,\trig_cnt_reg[24]_i_1_n_7 }),
        .S(trig_cnt_reg[27:24]));
  FDRE \trig_cnt_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[24]_i_1_n_6 ),
        .Q(trig_cnt_reg[25]),
        .R(clear));
  FDRE \trig_cnt_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[24]_i_1_n_5 ),
        .Q(trig_cnt_reg[26]),
        .R(clear));
  FDRE \trig_cnt_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[24]_i_1_n_4 ),
        .Q(trig_cnt_reg[27]),
        .R(clear));
  FDRE \trig_cnt_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[28]_i_1_n_7 ),
        .Q(trig_cnt_reg[28]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[28]_i_1 
       (.CI(\trig_cnt_reg[24]_i_1_n_0 ),
        .CO({\NLW_trig_cnt_reg[28]_i_1_CO_UNCONNECTED [3],\trig_cnt_reg[28]_i_1_n_1 ,\trig_cnt_reg[28]_i_1_n_2 ,\trig_cnt_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\trig_cnt_reg[28]_i_1_n_4 ,\trig_cnt_reg[28]_i_1_n_5 ,\trig_cnt_reg[28]_i_1_n_6 ,\trig_cnt_reg[28]_i_1_n_7 }),
        .S(trig_cnt_reg[31:28]));
  FDRE \trig_cnt_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[28]_i_1_n_6 ),
        .Q(trig_cnt_reg[29]),
        .R(clear));
  FDRE \trig_cnt_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[0]_i_1_n_5 ),
        .Q(trig_cnt_reg[2]),
        .R(clear));
  FDRE \trig_cnt_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[28]_i_1_n_5 ),
        .Q(trig_cnt_reg[30]),
        .R(clear));
  FDRE \trig_cnt_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[28]_i_1_n_4 ),
        .Q(trig_cnt_reg[31]),
        .R(clear));
  FDRE \trig_cnt_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[0]_i_1_n_4 ),
        .Q(trig_cnt_reg[3]),
        .R(clear));
  FDRE \trig_cnt_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[4]_i_1_n_7 ),
        .Q(trig_cnt_reg[4]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[4]_i_1 
       (.CI(\trig_cnt_reg[0]_i_1_n_0 ),
        .CO({\trig_cnt_reg[4]_i_1_n_0 ,\trig_cnt_reg[4]_i_1_n_1 ,\trig_cnt_reg[4]_i_1_n_2 ,\trig_cnt_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\trig_cnt_reg[4]_i_1_n_4 ,\trig_cnt_reg[4]_i_1_n_5 ,\trig_cnt_reg[4]_i_1_n_6 ,\trig_cnt_reg[4]_i_1_n_7 }),
        .S(trig_cnt_reg[7:4]));
  FDRE \trig_cnt_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[4]_i_1_n_6 ),
        .Q(trig_cnt_reg[5]),
        .R(clear));
  FDRE \trig_cnt_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[4]_i_1_n_5 ),
        .Q(trig_cnt_reg[6]),
        .R(clear));
  FDRE \trig_cnt_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[4]_i_1_n_4 ),
        .Q(trig_cnt_reg[7]),
        .R(clear));
  FDRE \trig_cnt_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[8]_i_1_n_7 ),
        .Q(trig_cnt_reg[8]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[8]_i_1 
       (.CI(\trig_cnt_reg[4]_i_1_n_0 ),
        .CO({\trig_cnt_reg[8]_i_1_n_0 ,\trig_cnt_reg[8]_i_1_n_1 ,\trig_cnt_reg[8]_i_1_n_2 ,\trig_cnt_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\trig_cnt_reg[8]_i_1_n_4 ,\trig_cnt_reg[8]_i_1_n_5 ,\trig_cnt_reg[8]_i_1_n_6 ,\trig_cnt_reg[8]_i_1_n_7 }),
        .S(trig_cnt_reg[11:8]));
  FDRE \trig_cnt_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(external_trig_val_1),
        .D(\trig_cnt_reg[8]_i_1_n_6 ),
        .Q(trig_cnt_reg[9]),
        .R(clear));
endmodule

(* ORIG_REF_NAME = "osc_top" *) 
module system_rp_oscilloscope_0_osc_top__parameterized0
   (cfg_filt_bypass,
    dec_tvalid,
    trig_detect_reg,
    acq_tvalid,
    acq_tlast,
    empty,
    empty_fwft_i_reg,
    wr_en,
    m_axi_osc2_wdata,
    rd_en,
    bit_start,
    full_immed0,
    buf_sel_ch2,
    m_axi_wlast_reg,
    cfg_8bit_dat,
    osc2_event_op,
    osc2_dma_intr,
    external_trig_val,
    \req_addr_reg[31] ,
    sts_trig_reg,
    state_cs,
    m_axi_wvalid_reg,
    dat_ctrl_busy,
    m_axi_osc2_awvalid,
    fifo_dis,
    next_buf_full_reg,
    dma_mode,
    first_rst,
    fifo_wr_we,
    cfg_trig_edge,
    cfg_avg_en,
    state_cs_0,
    state_cs_1,
    \s_axi_reg_araddr[4] ,
    osc2_reg_wr_we,
    \xfer_cnt_reg[3] ,
    \s_axi_reg_araddr[5] ,
    ctl_trg,
    \req_xfer_cnt_reg[6] ,
    ctl_start_r_reg,
    \reg_ctrl_reg[9] ,
    m_axis_tvalid_reg,
    osc2_trig_op,
    \s_axi_reg_araddr[7] ,
    \s_axi_reg_araddr[7]_0 ,
    \xfer_cnt_reg[6] ,
    \goreg_dm.dout_i_reg[1] ,
    \s_axi_reg_araddr[3] ,
    \s_axi_reg_araddr[2] ,
    \s_axi_reg_araddr[4]_0 ,
    \s_axi_reg_araddr[4]_1 ,
    \s_axi_reg_araddr[7]_1 ,
    \s_axi_reg_araddr[2]_0 ,
    CO,
    \cfg_trig_high_level_reg[15]_0 ,
    \m_axis_tdata_reg[15] ,
    \s_axi_reg_araddr[3]_0 ,
    m_axi_osc2_awlen,
    D,
    \reg_rd_data_reg[31]_0 ,
    m_axi_osc2_aclk,
    bram_wrdata_a,
    Q,
    sts_trig_reg_0,
    \state_cs_reg[0] ,
    m_axi_wvalid_reg_0,
    m_axi_wlast_reg_0,
    busy_reg,
    m_axi_awvalid_reg,
    fifo_dis_reg,
    mode_reg,
    first_rst_reg,
    m_axis_tvalid_reg_0,
    req_we_reg,
    cfg_trig_edge_reg_0,
    cfg_avg_en_reg_0,
    cfg_8bit_dat_reg_0,
    cfg_filt_bypass_reg_0,
    m_axi_osc2_aresetn,
    m_axi_osc2_awready,
    bram_addr_a,
    \cfg_trig_pre_samp_reg[0]_0 ,
    trig_detect_reg_0,
    m_axi_osc2_wready,
    trig_ip,
    buf_sel_ch1,
    \cfg_dec_factor_reg[0]_0 ,
    \reg_ctrl_reg[31] ,
    \cfg_dma_dst_addr1_reg[0]_0 ,
    event_ip_reset,
    event_ip_start,
    event_ip_stop,
    event_ip_trig,
    event_op_reset_i_7,
    bram_we_a,
    bram_en_a);
  output cfg_filt_bypass;
  output dec_tvalid;
  output trig_detect_reg;
  output acq_tvalid;
  output acq_tlast;
  output empty;
  output empty_fwft_i_reg;
  output wr_en;
  output [63:0]m_axi_osc2_wdata;
  output rd_en;
  output bit_start;
  output full_immed0;
  output buf_sel_ch2;
  output m_axi_wlast_reg;
  output cfg_8bit_dat;
  output [3:0]osc2_event_op;
  output osc2_dma_intr;
  output external_trig_val;
  output [31:0]\req_addr_reg[31] ;
  output [0:0]sts_trig_reg;
  output state_cs;
  output m_axi_wvalid_reg;
  output dat_ctrl_busy;
  output m_axi_osc2_awvalid;
  output fifo_dis;
  output next_buf_full_reg;
  output dma_mode;
  output first_rst;
  output fifo_wr_we;
  output cfg_trig_edge;
  output cfg_avg_en;
  output [2:0]state_cs_0;
  output [2:0]state_cs_1;
  output \s_axi_reg_araddr[4] ;
  output osc2_reg_wr_we;
  output \xfer_cnt_reg[3] ;
  output \s_axi_reg_araddr[5] ;
  output ctl_trg;
  output \req_xfer_cnt_reg[6] ;
  output ctl_start_r_reg;
  output [2:0]\reg_ctrl_reg[9] ;
  output m_axis_tvalid_reg;
  output osc2_trig_op;
  output \s_axi_reg_araddr[7] ;
  output \s_axi_reg_araddr[7]_0 ;
  output \xfer_cnt_reg[6] ;
  output \goreg_dm.dout_i_reg[1] ;
  output \s_axi_reg_araddr[3] ;
  output \s_axi_reg_araddr[2] ;
  output \s_axi_reg_araddr[4]_0 ;
  output \s_axi_reg_araddr[4]_1 ;
  output \s_axi_reg_araddr[7]_1 ;
  output \s_axi_reg_araddr[2]_0 ;
  output [0:0]CO;
  output [0:0]\cfg_trig_high_level_reg[15]_0 ;
  output [0:0]\m_axis_tdata_reg[15] ;
  output \s_axi_reg_araddr[3]_0 ;
  output [7:0]m_axi_osc2_awlen;
  output [0:0]D;
  output [31:0]\reg_rd_data_reg[31]_0 ;
  input m_axi_osc2_aclk;
  input [31:0]bram_wrdata_a;
  input [13:0]Q;
  input sts_trig_reg_0;
  input \state_cs_reg[0] ;
  input m_axi_wvalid_reg_0;
  input m_axi_wlast_reg_0;
  input busy_reg;
  input m_axi_awvalid_reg;
  input fifo_dis_reg;
  input mode_reg;
  input first_rst_reg;
  input m_axis_tvalid_reg_0;
  input req_we_reg;
  input cfg_trig_edge_reg_0;
  input cfg_avg_en_reg_0;
  input cfg_8bit_dat_reg_0;
  input cfg_filt_bypass_reg_0;
  input m_axi_osc2_aresetn;
  input m_axi_osc2_awready;
  input [7:0]bram_addr_a;
  input \cfg_trig_pre_samp_reg[0]_0 ;
  input trig_detect_reg_0;
  input m_axi_osc2_wready;
  input [5:0]trig_ip;
  input buf_sel_ch1;
  input \cfg_dec_factor_reg[0]_0 ;
  input \reg_ctrl_reg[31] ;
  input \cfg_dma_dst_addr1_reg[0]_0 ;
  input [4:0]event_ip_reset;
  input [4:0]event_ip_start;
  input [4:0]event_ip_stop;
  input [4:0]event_ip_trig;
  input event_op_reset_i_7;
  input [3:0]bram_we_a;
  input bram_en_a;

  wire [0:0]CO;
  wire [0:0]D;
  wire [13:0]Q;
  wire U_dma_s2mm_n_118;
  wire U_dma_s2mm_n_119;
  wire U_dma_s2mm_n_120;
  wire U_dma_s2mm_n_121;
  wire U_dma_s2mm_n_122;
  wire U_dma_s2mm_n_123;
  wire U_dma_s2mm_n_124;
  wire U_dma_s2mm_n_125;
  wire U_dma_s2mm_n_126;
  wire U_dma_s2mm_n_127;
  wire U_dma_s2mm_n_128;
  wire U_dma_s2mm_n_129;
  wire U_dma_s2mm_n_130;
  wire U_dma_s2mm_n_131;
  wire U_dma_s2mm_n_132;
  wire U_dma_s2mm_n_133;
  wire U_dma_s2mm_n_134;
  wire U_dma_s2mm_n_135;
  wire U_dma_s2mm_n_136;
  wire U_dma_s2mm_n_137;
  wire U_dma_s2mm_n_138;
  wire U_dma_s2mm_n_139;
  wire U_dma_s2mm_n_140;
  wire U_dma_s2mm_n_146;
  wire U_dma_s2mm_n_147;
  wire U_dma_s2mm_n_148;
  wire U_dma_s2mm_n_149;
  wire U_dma_s2mm_n_150;
  wire U_dma_s2mm_n_151;
  wire U_dma_s2mm_n_152;
  wire U_dma_s2mm_n_153;
  wire U_dma_s2mm_n_155;
  wire U_dma_s2mm_n_160;
  wire U_dma_s2mm_n_161;
  wire U_dma_s2mm_n_162;
  wire U_dma_s2mm_n_163;
  wire U_dma_s2mm_n_164;
  wire U_dma_s2mm_n_167;
  wire U_dma_s2mm_n_168;
  wire U_dma_s2mm_n_169;
  wire U_dma_s2mm_n_170;
  wire U_dma_s2mm_n_171;
  wire U_dma_s2mm_n_172;
  wire U_dma_s2mm_n_234;
  wire U_dma_s2mm_n_235;
  wire U_osc_acq_n_18;
  wire U_osc_acq_n_24;
  wire U_osc_acq_n_25;
  wire U_osc_acq_n_26;
  wire U_osc_acq_n_27;
  wire U_osc_acq_n_28;
  wire U_osc_acq_n_29;
  wire U_osc_acq_n_30;
  wire U_osc_acq_n_31;
  wire U_osc_acq_n_32;
  wire U_osc_acq_n_33;
  wire U_osc_acq_n_34;
  wire U_osc_acq_n_35;
  wire U_osc_acq_n_36;
  wire U_osc_acq_n_37;
  wire U_osc_acq_n_38;
  wire U_osc_acq_n_39;
  wire U_osc_acq_n_40;
  wire U_osc_acq_n_41;
  wire U_osc_acq_n_42;
  wire U_osc_acq_n_43;
  wire U_osc_acq_n_44;
  wire U_osc_acq_n_45;
  wire U_osc_acq_n_46;
  wire U_osc_acq_n_47;
  wire U_osc_acq_n_48;
  wire U_osc_acq_n_49;
  wire U_osc_acq_n_50;
  wire U_osc_acq_n_51;
  wire U_osc_acq_n_52;
  wire U_osc_acq_n_53;
  wire U_osc_acq_n_54;
  wire U_osc_acq_n_55;
  wire U_osc_acq_n_56;
  wire U_osc_acq_n_57;
  wire U_osc_acq_n_58;
  wire U_osc_acq_n_59;
  wire U_osc_acq_n_60;
  wire U_osc_acq_n_61;
  wire U_osc_acq_n_62;
  wire U_osc_acq_n_63;
  wire U_osc_acq_n_64;
  wire U_osc_acq_n_65;
  wire U_osc_acq_n_66;
  wire U_osc_acq_n_67;
  wire U_osc_acq_n_68;
  wire U_osc_acq_n_69;
  wire U_osc_acq_n_70;
  wire U_osc_acq_n_71;
  wire U_osc_acq_n_80;
  wire U_osc_acq_n_81;
  wire U_osc_acq_n_82;
  wire U_osc_calib_n_0;
  wire U_osc_calib_n_1;
  wire U_osc_calib_n_10;
  wire U_osc_calib_n_11;
  wire U_osc_calib_n_12;
  wire U_osc_calib_n_13;
  wire U_osc_calib_n_14;
  wire U_osc_calib_n_15;
  wire U_osc_calib_n_16;
  wire U_osc_calib_n_17;
  wire U_osc_calib_n_18;
  wire U_osc_calib_n_19;
  wire U_osc_calib_n_2;
  wire U_osc_calib_n_20;
  wire U_osc_calib_n_21;
  wire U_osc_calib_n_22;
  wire U_osc_calib_n_23;
  wire U_osc_calib_n_24;
  wire U_osc_calib_n_25;
  wire U_osc_calib_n_26;
  wire U_osc_calib_n_27;
  wire U_osc_calib_n_28;
  wire U_osc_calib_n_29;
  wire U_osc_calib_n_3;
  wire U_osc_calib_n_30;
  wire U_osc_calib_n_31;
  wire U_osc_calib_n_32;
  wire U_osc_calib_n_33;
  wire U_osc_calib_n_34;
  wire U_osc_calib_n_35;
  wire U_osc_calib_n_36;
  wire U_osc_calib_n_37;
  wire U_osc_calib_n_38;
  wire U_osc_calib_n_39;
  wire U_osc_calib_n_4;
  wire U_osc_calib_n_40;
  wire U_osc_calib_n_41;
  wire U_osc_calib_n_42;
  wire U_osc_calib_n_43;
  wire U_osc_calib_n_44;
  wire U_osc_calib_n_45;
  wire U_osc_calib_n_46;
  wire U_osc_calib_n_47;
  wire U_osc_calib_n_5;
  wire U_osc_calib_n_6;
  wire U_osc_calib_n_7;
  wire U_osc_calib_n_8;
  wire U_osc_calib_n_9;
  wire U_osc_decimator_n_27;
  wire U_osc_decimator_n_28;
  wire U_osc_decimator_n_29;
  wire U_osc_decimator_n_3;
  wire U_osc_decimator_n_30;
  wire U_osc_decimator_n_31;
  wire U_osc_decimator_n_32;
  wire U_osc_decimator_n_33;
  wire U_osc_decimator_n_34;
  wire U_osc_decimator_n_35;
  wire U_osc_decimator_n_36;
  wire U_osc_decimator_n_37;
  wire U_osc_decimator_n_38;
  wire U_osc_decimator_n_39;
  wire U_osc_decimator_n_4;
  wire U_osc_decimator_n_40;
  wire U_osc_decimator_n_41;
  wire U_osc_decimator_n_42;
  wire U_osc_decimator_n_43;
  wire U_osc_decimator_n_44;
  wire U_osc_decimator_n_45;
  wire U_osc_decimator_n_46;
  wire U_osc_decimator_n_47;
  wire U_osc_decimator_n_48;
  wire U_osc_decimator_n_49;
  wire U_osc_decimator_n_5;
  wire U_osc_decimator_n_50;
  wire U_osc_decimator_n_51;
  wire U_osc_decimator_n_52;
  wire U_osc_decimator_n_53;
  wire U_osc_decimator_n_54;
  wire U_osc_decimator_n_6;
  wire U_osc_decimator_n_7;
  wire U_osc_trigger_n_0;
  wire U_osc_trigger_n_1;
  wire U_osc_trigger_n_10;
  wire U_osc_trigger_n_11;
  wire U_osc_trigger_n_12;
  wire U_osc_trigger_n_13;
  wire U_osc_trigger_n_14;
  wire U_osc_trigger_n_15;
  wire U_osc_trigger_n_2;
  wire U_osc_trigger_n_3;
  wire U_osc_trigger_n_4;
  wire U_osc_trigger_n_5;
  wire U_osc_trigger_n_6;
  wire U_osc_trigger_n_7;
  wire U_osc_trigger_n_8;
  wire U_osc_trigger_n_9;
  wire [15:0]acq_tdata;
  wire acq_tlast;
  wire acq_tvalid;
  wire bit_start;
  wire [7:0]bram_addr_a;
  wire bram_en_a;
  wire [3:0]bram_we_a;
  wire [31:0]bram_wrdata_a;
  wire buf_sel_ch1;
  wire buf_sel_ch2;
  wire busy_reg;
  wire cfg_8bit_dat;
  wire cfg_8bit_dat_reg_0;
  wire cfg_avg_en;
  wire cfg_avg_en_reg_0;
  wire [15:0]cfg_calib_gain;
  wire cfg_calib_gain0;
  wire \cfg_calib_gain[15]_i_2_n_0 ;
  wire [15:0]cfg_calib_offset;
  wire cfg_calib_offset0;
  wire [16:0]cfg_dec_factor;
  wire cfg_dec_factor0;
  wire \cfg_dec_factor_reg[0]_0 ;
  wire [3:0]cfg_dec_rshift;
  wire cfg_dec_rshift0;
  wire [31:0]cfg_dma_buf_size;
  wire cfg_dma_buf_size0;
  wire [31:0]cfg_dma_dst_addr1;
  wire cfg_dma_dst_addr10;
  wire \cfg_dma_dst_addr1[31]_i_2_n_0 ;
  wire \cfg_dma_dst_addr1_reg[0]_0 ;
  wire [31:0]cfg_dma_dst_addr2;
  wire \cfg_dma_dst_addr2[31]_i_1__0_n_0 ;
  wire \cfg_dma_dst_addr2[31]_i_2__0_n_0 ;
  wire [2:0]cfg_event_sel;
  wire \cfg_event_sel[0]_i_1__0_n_0 ;
  wire \cfg_event_sel[1]_i_1__0_n_0 ;
  wire \cfg_event_sel[2]_i_1__0_n_0 ;
  wire cfg_filt_bypass;
  wire cfg_filt_bypass_reg_0;
  wire cfg_filt_coeff_aa0;
  wire cfg_filt_coeff_bb0;
  wire cfg_filt_coeff_kk0;
  wire cfg_filt_coeff_pp0;
  wire cfg_loopback0;
  wire \cfg_loopback_reg_n_0_[0] ;
  wire \cfg_loopback_reg_n_0_[10] ;
  wire \cfg_loopback_reg_n_0_[11] ;
  wire \cfg_loopback_reg_n_0_[12] ;
  wire \cfg_loopback_reg_n_0_[13] ;
  wire \cfg_loopback_reg_n_0_[14] ;
  wire \cfg_loopback_reg_n_0_[15] ;
  wire \cfg_loopback_reg_n_0_[1] ;
  wire \cfg_loopback_reg_n_0_[2] ;
  wire \cfg_loopback_reg_n_0_[3] ;
  wire \cfg_loopback_reg_n_0_[4] ;
  wire \cfg_loopback_reg_n_0_[5] ;
  wire \cfg_loopback_reg_n_0_[6] ;
  wire \cfg_loopback_reg_n_0_[7] ;
  wire \cfg_loopback_reg_n_0_[8] ;
  wire \cfg_loopback_reg_n_0_[9] ;
  wire cfg_trig_edge;
  wire cfg_trig_edge_reg_0;
  wire [15:0]cfg_trig_high_level;
  wire cfg_trig_high_level0;
  wire \cfg_trig_high_level[15]_i_2_n_0 ;
  wire [0:0]\cfg_trig_high_level_reg[15]_0 ;
  wire [15:0]cfg_trig_low_level;
  wire cfg_trig_low_level0;
  wire \cfg_trig_low_level[15]_i_2_n_0 ;
  wire [5:0]cfg_trig_mask;
  wire cfg_trig_mask0;
  wire [31:0]cfg_trig_post_samp;
  wire cfg_trig_post_samp0;
  wire [31:0]cfg_trig_pre_samp;
  wire cfg_trig_pre_samp0;
  wire \cfg_trig_pre_samp[31]_i_2_n_0 ;
  wire \cfg_trig_pre_samp_reg[0]_0 ;
  wire clear;
  wire \clk_cnt[0]_i_2__0_n_0 ;
  wire [31:0]clk_cnt_reg;
  wire \clk_cnt_reg[0]_i_1__0_n_0 ;
  wire \clk_cnt_reg[0]_i_1__0_n_1 ;
  wire \clk_cnt_reg[0]_i_1__0_n_2 ;
  wire \clk_cnt_reg[0]_i_1__0_n_3 ;
  wire \clk_cnt_reg[0]_i_1__0_n_4 ;
  wire \clk_cnt_reg[0]_i_1__0_n_5 ;
  wire \clk_cnt_reg[0]_i_1__0_n_6 ;
  wire \clk_cnt_reg[0]_i_1__0_n_7 ;
  wire \clk_cnt_reg[12]_i_1__0_n_0 ;
  wire \clk_cnt_reg[12]_i_1__0_n_1 ;
  wire \clk_cnt_reg[12]_i_1__0_n_2 ;
  wire \clk_cnt_reg[12]_i_1__0_n_3 ;
  wire \clk_cnt_reg[12]_i_1__0_n_4 ;
  wire \clk_cnt_reg[12]_i_1__0_n_5 ;
  wire \clk_cnt_reg[12]_i_1__0_n_6 ;
  wire \clk_cnt_reg[12]_i_1__0_n_7 ;
  wire \clk_cnt_reg[16]_i_1__0_n_0 ;
  wire \clk_cnt_reg[16]_i_1__0_n_1 ;
  wire \clk_cnt_reg[16]_i_1__0_n_2 ;
  wire \clk_cnt_reg[16]_i_1__0_n_3 ;
  wire \clk_cnt_reg[16]_i_1__0_n_4 ;
  wire \clk_cnt_reg[16]_i_1__0_n_5 ;
  wire \clk_cnt_reg[16]_i_1__0_n_6 ;
  wire \clk_cnt_reg[16]_i_1__0_n_7 ;
  wire \clk_cnt_reg[20]_i_1__0_n_0 ;
  wire \clk_cnt_reg[20]_i_1__0_n_1 ;
  wire \clk_cnt_reg[20]_i_1__0_n_2 ;
  wire \clk_cnt_reg[20]_i_1__0_n_3 ;
  wire \clk_cnt_reg[20]_i_1__0_n_4 ;
  wire \clk_cnt_reg[20]_i_1__0_n_5 ;
  wire \clk_cnt_reg[20]_i_1__0_n_6 ;
  wire \clk_cnt_reg[20]_i_1__0_n_7 ;
  wire \clk_cnt_reg[24]_i_1__0_n_0 ;
  wire \clk_cnt_reg[24]_i_1__0_n_1 ;
  wire \clk_cnt_reg[24]_i_1__0_n_2 ;
  wire \clk_cnt_reg[24]_i_1__0_n_3 ;
  wire \clk_cnt_reg[24]_i_1__0_n_4 ;
  wire \clk_cnt_reg[24]_i_1__0_n_5 ;
  wire \clk_cnt_reg[24]_i_1__0_n_6 ;
  wire \clk_cnt_reg[24]_i_1__0_n_7 ;
  wire \clk_cnt_reg[28]_i_1__0_n_1 ;
  wire \clk_cnt_reg[28]_i_1__0_n_2 ;
  wire \clk_cnt_reg[28]_i_1__0_n_3 ;
  wire \clk_cnt_reg[28]_i_1__0_n_4 ;
  wire \clk_cnt_reg[28]_i_1__0_n_5 ;
  wire \clk_cnt_reg[28]_i_1__0_n_6 ;
  wire \clk_cnt_reg[28]_i_1__0_n_7 ;
  wire \clk_cnt_reg[4]_i_1__0_n_0 ;
  wire \clk_cnt_reg[4]_i_1__0_n_1 ;
  wire \clk_cnt_reg[4]_i_1__0_n_2 ;
  wire \clk_cnt_reg[4]_i_1__0_n_3 ;
  wire \clk_cnt_reg[4]_i_1__0_n_4 ;
  wire \clk_cnt_reg[4]_i_1__0_n_5 ;
  wire \clk_cnt_reg[4]_i_1__0_n_6 ;
  wire \clk_cnt_reg[4]_i_1__0_n_7 ;
  wire \clk_cnt_reg[8]_i_1__0_n_0 ;
  wire \clk_cnt_reg[8]_i_1__0_n_1 ;
  wire \clk_cnt_reg[8]_i_1__0_n_2 ;
  wire \clk_cnt_reg[8]_i_1__0_n_3 ;
  wire \clk_cnt_reg[8]_i_1__0_n_4 ;
  wire \clk_cnt_reg[8]_i_1__0_n_5 ;
  wire \clk_cnt_reg[8]_i_1__0_n_6 ;
  wire \clk_cnt_reg[8]_i_1__0_n_7 ;
  wire ctl_start_r_reg;
  wire ctl_trg;
  wire dat_ctrl_busy;
  wire [7:0]data1;
  wire [15:0]dec_tdata;
  wire dec_tvalid;
  wire dec_valid;
  wire dma_mode;
  wire empty;
  wire empty_fwft_i_reg;
  wire [4:0]event_ip_reset;
  wire [4:0]event_ip_start;
  wire [4:0]event_ip_stop;
  wire [4:0]event_ip_trig;
  wire event_num_reset_i_1__0_n_0;
  wire event_num_reset_i_2__0_n_0;
  wire event_num_reset_reg_n_0;
  wire event_num_start;
  wire event_num_start_i_1__0_n_0;
  wire event_num_start_i_2__0_n_0;
  wire event_num_stop;
  wire event_num_stop_i_1__0_n_0;
  wire event_num_stop_i_2__0_n_0;
  wire event_num_trig;
  wire event_num_trig_i_1__0_n_0;
  wire event_num_trig_i_2__0_n_0;
  wire event_op_reset_i_2__0_n_0;
  wire event_op_reset_i_3__0_n_0;
  wire event_op_reset_i_7;
  wire event_op_start_i_1__0_n_0;
  wire event_op_stop_i_1__0_n_0;
  wire event_op_trig_i_1__0_n_0;
  wire external_trig_val;
  wire fifo_dis;
  wire fifo_dis_reg;
  wire fifo_wr_we;
  wire [15:0]filt_tdata;
  wire first_rst;
  wire first_rst_reg;
  wire full_immed0;
  wire \goreg_dm.dout_i_reg[1] ;
  wire i_dfilt_n_19;
  wire i_dfilt_n_20;
  wire i_dfilt_n_21;
  wire intr_cnt0;
  wire \intr_cnt[0]_i_3__0_n_0 ;
  wire [31:0]intr_cnt_reg;
  wire \intr_cnt_reg[0]_i_2__0_n_0 ;
  wire \intr_cnt_reg[0]_i_2__0_n_1 ;
  wire \intr_cnt_reg[0]_i_2__0_n_2 ;
  wire \intr_cnt_reg[0]_i_2__0_n_3 ;
  wire \intr_cnt_reg[0]_i_2__0_n_4 ;
  wire \intr_cnt_reg[0]_i_2__0_n_5 ;
  wire \intr_cnt_reg[0]_i_2__0_n_6 ;
  wire \intr_cnt_reg[0]_i_2__0_n_7 ;
  wire \intr_cnt_reg[12]_i_1__0_n_0 ;
  wire \intr_cnt_reg[12]_i_1__0_n_1 ;
  wire \intr_cnt_reg[12]_i_1__0_n_2 ;
  wire \intr_cnt_reg[12]_i_1__0_n_3 ;
  wire \intr_cnt_reg[12]_i_1__0_n_4 ;
  wire \intr_cnt_reg[12]_i_1__0_n_5 ;
  wire \intr_cnt_reg[12]_i_1__0_n_6 ;
  wire \intr_cnt_reg[12]_i_1__0_n_7 ;
  wire \intr_cnt_reg[16]_i_1__0_n_0 ;
  wire \intr_cnt_reg[16]_i_1__0_n_1 ;
  wire \intr_cnt_reg[16]_i_1__0_n_2 ;
  wire \intr_cnt_reg[16]_i_1__0_n_3 ;
  wire \intr_cnt_reg[16]_i_1__0_n_4 ;
  wire \intr_cnt_reg[16]_i_1__0_n_5 ;
  wire \intr_cnt_reg[16]_i_1__0_n_6 ;
  wire \intr_cnt_reg[16]_i_1__0_n_7 ;
  wire \intr_cnt_reg[20]_i_1__0_n_0 ;
  wire \intr_cnt_reg[20]_i_1__0_n_1 ;
  wire \intr_cnt_reg[20]_i_1__0_n_2 ;
  wire \intr_cnt_reg[20]_i_1__0_n_3 ;
  wire \intr_cnt_reg[20]_i_1__0_n_4 ;
  wire \intr_cnt_reg[20]_i_1__0_n_5 ;
  wire \intr_cnt_reg[20]_i_1__0_n_6 ;
  wire \intr_cnt_reg[20]_i_1__0_n_7 ;
  wire \intr_cnt_reg[24]_i_1__0_n_0 ;
  wire \intr_cnt_reg[24]_i_1__0_n_1 ;
  wire \intr_cnt_reg[24]_i_1__0_n_2 ;
  wire \intr_cnt_reg[24]_i_1__0_n_3 ;
  wire \intr_cnt_reg[24]_i_1__0_n_4 ;
  wire \intr_cnt_reg[24]_i_1__0_n_5 ;
  wire \intr_cnt_reg[24]_i_1__0_n_6 ;
  wire \intr_cnt_reg[24]_i_1__0_n_7 ;
  wire \intr_cnt_reg[28]_i_1__0_n_1 ;
  wire \intr_cnt_reg[28]_i_1__0_n_2 ;
  wire \intr_cnt_reg[28]_i_1__0_n_3 ;
  wire \intr_cnt_reg[28]_i_1__0_n_4 ;
  wire \intr_cnt_reg[28]_i_1__0_n_5 ;
  wire \intr_cnt_reg[28]_i_1__0_n_6 ;
  wire \intr_cnt_reg[28]_i_1__0_n_7 ;
  wire \intr_cnt_reg[4]_i_1__0_n_0 ;
  wire \intr_cnt_reg[4]_i_1__0_n_1 ;
  wire \intr_cnt_reg[4]_i_1__0_n_2 ;
  wire \intr_cnt_reg[4]_i_1__0_n_3 ;
  wire \intr_cnt_reg[4]_i_1__0_n_4 ;
  wire \intr_cnt_reg[4]_i_1__0_n_5 ;
  wire \intr_cnt_reg[4]_i_1__0_n_6 ;
  wire \intr_cnt_reg[4]_i_1__0_n_7 ;
  wire \intr_cnt_reg[8]_i_1__0_n_0 ;
  wire \intr_cnt_reg[8]_i_1__0_n_1 ;
  wire \intr_cnt_reg[8]_i_1__0_n_2 ;
  wire \intr_cnt_reg[8]_i_1__0_n_3 ;
  wire \intr_cnt_reg[8]_i_1__0_n_4 ;
  wire \intr_cnt_reg[8]_i_1__0_n_5 ;
  wire \intr_cnt_reg[8]_i_1__0_n_6 ;
  wire \intr_cnt_reg[8]_i_1__0_n_7 ;
  wire intr_reg;
  wire m_axi_awvalid_reg;
  wire m_axi_osc2_aclk;
  wire m_axi_osc2_aresetn;
  wire [7:0]m_axi_osc2_awlen;
  wire m_axi_osc2_awready;
  wire m_axi_osc2_awvalid;
  wire [63:0]m_axi_osc2_wdata;
  wire m_axi_osc2_wready;
  wire m_axi_wlast_reg;
  wire m_axi_wlast_reg_0;
  wire m_axi_wvalid_reg;
  wire m_axi_wvalid_reg_0;
  wire [0:0]\m_axis_tdata_reg[15] ;
  wire m_axis_tvalid0;
  wire m_axis_tvalid_reg;
  wire m_axis_tvalid_reg_0;
  wire [29:0]missed_samps_ch1;
  wire [29:0]missed_samps_ch2;
  wire mode_reg;
  wire next_buf_full_reg;
  wire osc2_dma_intr;
  wire [3:0]osc2_event_op;
  wire osc2_reg_wr_we;
  wire osc2_trig_op;
  wire [24:0]p_1_in;
  wire [24:0]p_2_in;
  wire [24:0]p_3_in;
  wire [17:0]p_4_in;
  wire \ramp_sig[0]_i_2__0_n_0 ;
  wire [15:0]ramp_sig_reg;
  wire \ramp_sig_reg[0]_i_1__0_n_0 ;
  wire \ramp_sig_reg[0]_i_1__0_n_1 ;
  wire \ramp_sig_reg[0]_i_1__0_n_2 ;
  wire \ramp_sig_reg[0]_i_1__0_n_3 ;
  wire \ramp_sig_reg[0]_i_1__0_n_4 ;
  wire \ramp_sig_reg[0]_i_1__0_n_5 ;
  wire \ramp_sig_reg[0]_i_1__0_n_6 ;
  wire \ramp_sig_reg[0]_i_1__0_n_7 ;
  wire \ramp_sig_reg[12]_i_1__0_n_1 ;
  wire \ramp_sig_reg[12]_i_1__0_n_2 ;
  wire \ramp_sig_reg[12]_i_1__0_n_3 ;
  wire \ramp_sig_reg[12]_i_1__0_n_4 ;
  wire \ramp_sig_reg[12]_i_1__0_n_5 ;
  wire \ramp_sig_reg[12]_i_1__0_n_6 ;
  wire \ramp_sig_reg[12]_i_1__0_n_7 ;
  wire \ramp_sig_reg[4]_i_1__0_n_0 ;
  wire \ramp_sig_reg[4]_i_1__0_n_1 ;
  wire \ramp_sig_reg[4]_i_1__0_n_2 ;
  wire \ramp_sig_reg[4]_i_1__0_n_3 ;
  wire \ramp_sig_reg[4]_i_1__0_n_4 ;
  wire \ramp_sig_reg[4]_i_1__0_n_5 ;
  wire \ramp_sig_reg[4]_i_1__0_n_6 ;
  wire \ramp_sig_reg[4]_i_1__0_n_7 ;
  wire \ramp_sig_reg[8]_i_1__0_n_0 ;
  wire \ramp_sig_reg[8]_i_1__0_n_1 ;
  wire \ramp_sig_reg[8]_i_1__0_n_2 ;
  wire \ramp_sig_reg[8]_i_1__0_n_3 ;
  wire \ramp_sig_reg[8]_i_1__0_n_4 ;
  wire \ramp_sig_reg[8]_i_1__0_n_5 ;
  wire \ramp_sig_reg[8]_i_1__0_n_6 ;
  wire \ramp_sig_reg[8]_i_1__0_n_7 ;
  wire rd_en;
  wire \reg_ctrl_reg[31] ;
  wire [2:0]\reg_ctrl_reg[9] ;
  wire \reg_rd_data[0]_i_12__0_n_0 ;
  wire \reg_rd_data[0]_i_4__0_n_0 ;
  wire \reg_rd_data[0]_i_7__0_n_0 ;
  wire \reg_rd_data[0]_i_8__0_n_0 ;
  wire \reg_rd_data[10]_i_10__0_n_0 ;
  wire \reg_rd_data[10]_i_11__0_n_0 ;
  wire \reg_rd_data[10]_i_2__0_n_0 ;
  wire \reg_rd_data[10]_i_5__0_n_0 ;
  wire \reg_rd_data[10]_i_6__0_n_0 ;
  wire \reg_rd_data[10]_i_9__0_n_0 ;
  wire \reg_rd_data[11]_i_10__0_n_0 ;
  wire \reg_rd_data[11]_i_12__0_n_0 ;
  wire \reg_rd_data[11]_i_13__0_n_0 ;
  wire \reg_rd_data[11]_i_4__0_n_0 ;
  wire \reg_rd_data[11]_i_7__0_n_0 ;
  wire \reg_rd_data[11]_i_8__0_n_0 ;
  wire \reg_rd_data[12]_i_10__0_n_0 ;
  wire \reg_rd_data[12]_i_12__0_n_0 ;
  wire \reg_rd_data[12]_i_13__0_n_0 ;
  wire \reg_rd_data[12]_i_4__0_n_0 ;
  wire \reg_rd_data[12]_i_7__0_n_0 ;
  wire \reg_rd_data[12]_i_8__0_n_0 ;
  wire \reg_rd_data[13]_i_10__0_n_0 ;
  wire \reg_rd_data[13]_i_12__0_n_0 ;
  wire \reg_rd_data[13]_i_13__0_n_0 ;
  wire \reg_rd_data[13]_i_4__0_n_0 ;
  wire \reg_rd_data[13]_i_7__0_n_0 ;
  wire \reg_rd_data[13]_i_8__0_n_0 ;
  wire \reg_rd_data[14]_i_10__0_n_0 ;
  wire \reg_rd_data[14]_i_12__0_n_0 ;
  wire \reg_rd_data[14]_i_13__0_n_0 ;
  wire \reg_rd_data[14]_i_4__0_n_0 ;
  wire \reg_rd_data[14]_i_7__0_n_0 ;
  wire \reg_rd_data[14]_i_8__0_n_0 ;
  wire \reg_rd_data[15]_i_10__0_n_0 ;
  wire \reg_rd_data[15]_i_11__0_n_0 ;
  wire \reg_rd_data[15]_i_12__0_n_0 ;
  wire \reg_rd_data[15]_i_2_n_0 ;
  wire \reg_rd_data[15]_i_5__0_n_0 ;
  wire \reg_rd_data[15]_i_6__0_n_0 ;
  wire \reg_rd_data[15]_i_7__0_n_0 ;
  wire \reg_rd_data[16]_i_10__0_n_0 ;
  wire \reg_rd_data[16]_i_11_n_0 ;
  wire \reg_rd_data[16]_i_3__0_n_0 ;
  wire \reg_rd_data[16]_i_4__0_n_0 ;
  wire \reg_rd_data[16]_i_5__0_n_0 ;
  wire \reg_rd_data[16]_i_9__0_n_0 ;
  wire \reg_rd_data[17]_i_10__0_n_0 ;
  wire \reg_rd_data[17]_i_11__0_n_0 ;
  wire \reg_rd_data[17]_i_12__0_n_0 ;
  wire \reg_rd_data[17]_i_3__0_n_0 ;
  wire \reg_rd_data[17]_i_4__0_n_0 ;
  wire \reg_rd_data[17]_i_6__0_n_0 ;
  wire \reg_rd_data[17]_i_7__0_n_0 ;
  wire \reg_rd_data[18]_i_6__0_n_0 ;
  wire \reg_rd_data[18]_i_7__0_n_0 ;
  wire \reg_rd_data[18]_i_8__0_n_0 ;
  wire \reg_rd_data[19]_i_6__0_n_0 ;
  wire \reg_rd_data[19]_i_7__0_n_0 ;
  wire \reg_rd_data[19]_i_8__0_n_0 ;
  wire \reg_rd_data[1]_i_11_n_0 ;
  wire \reg_rd_data[1]_i_3__0_n_0 ;
  wire \reg_rd_data[1]_i_6__0_n_0 ;
  wire \reg_rd_data[20]_i_6__0_n_0 ;
  wire \reg_rd_data[20]_i_7__0_n_0 ;
  wire \reg_rd_data[20]_i_8__0_n_0 ;
  wire \reg_rd_data[21]_i_6__0_n_0 ;
  wire \reg_rd_data[21]_i_7__0_n_0 ;
  wire \reg_rd_data[21]_i_8__0_n_0 ;
  wire \reg_rd_data[22]_i_6__0_n_0 ;
  wire \reg_rd_data[22]_i_7__0_n_0 ;
  wire \reg_rd_data[22]_i_8__0_n_0 ;
  wire \reg_rd_data[23]_i_6__0_n_0 ;
  wire \reg_rd_data[23]_i_7__0_n_0 ;
  wire \reg_rd_data[23]_i_8__0_n_0 ;
  wire \reg_rd_data[24]_i_6__0_n_0 ;
  wire \reg_rd_data[24]_i_7__0_n_0 ;
  wire \reg_rd_data[24]_i_8__0_n_0 ;
  wire \reg_rd_data[25]_i_6__0_n_0 ;
  wire \reg_rd_data[25]_i_7__0_n_0 ;
  wire \reg_rd_data[26]_i_6__0_n_0 ;
  wire \reg_rd_data[26]_i_7__0_n_0 ;
  wire \reg_rd_data[27]_i_6__0_n_0 ;
  wire \reg_rd_data[27]_i_7__0_n_0 ;
  wire \reg_rd_data[28]_i_6__0_n_0 ;
  wire \reg_rd_data[28]_i_7__0_n_0 ;
  wire \reg_rd_data[29]_i_6__0_n_0 ;
  wire \reg_rd_data[29]_i_7__0_n_0 ;
  wire \reg_rd_data[2]_i_10_n_0 ;
  wire \reg_rd_data[2]_i_14_n_0 ;
  wire \reg_rd_data[2]_i_16__0_n_0 ;
  wire \reg_rd_data[2]_i_17__0_n_0 ;
  wire \reg_rd_data[2]_i_19__0_n_0 ;
  wire \reg_rd_data[2]_i_2__0_n_0 ;
  wire \reg_rd_data[2]_i_4__0_n_0 ;
  wire \reg_rd_data[2]_i_5__0_n_0 ;
  wire \reg_rd_data[2]_i_6__0_n_0 ;
  wire \reg_rd_data[2]_i_9__0_n_0 ;
  wire \reg_rd_data[30]_i_6__0_n_0 ;
  wire \reg_rd_data[30]_i_7__0_n_0 ;
  wire \reg_rd_data[31]_i_11__0_n_0 ;
  wire \reg_rd_data[31]_i_12__0_n_0 ;
  wire \reg_rd_data[31]_i_13__0_n_0 ;
  wire \reg_rd_data[31]_i_14__0_n_0 ;
  wire \reg_rd_data[31]_i_15__0_n_0 ;
  wire \reg_rd_data[31]_i_16_n_0 ;
  wire \reg_rd_data[31]_i_2__0_n_0 ;
  wire \reg_rd_data[31]_i_4__0_n_0 ;
  wire \reg_rd_data[31]_i_5__0_n_0 ;
  wire \reg_rd_data[31]_i_6__0_n_0 ;
  wire \reg_rd_data[31]_i_7__0_n_0 ;
  wire \reg_rd_data[3]_i_12__0_n_0 ;
  wire \reg_rd_data[3]_i_13__0_n_0 ;
  wire \reg_rd_data[3]_i_14__0_n_0 ;
  wire \reg_rd_data[3]_i_4__0_n_0 ;
  wire \reg_rd_data[3]_i_5_n_0 ;
  wire \reg_rd_data[3]_i_6__0_n_0 ;
  wire \reg_rd_data[3]_i_7__0_n_0 ;
  wire \reg_rd_data[4]_i_10__0_n_0 ;
  wire \reg_rd_data[4]_i_14__0_n_0 ;
  wire \reg_rd_data[4]_i_4__0_n_0 ;
  wire \reg_rd_data[4]_i_5__0_n_0 ;
  wire \reg_rd_data[4]_i_9__0_n_0 ;
  wire \reg_rd_data[5]_i_10__0_n_0 ;
  wire \reg_rd_data[5]_i_12__0_n_0 ;
  wire \reg_rd_data[5]_i_14__0_n_0 ;
  wire \reg_rd_data[5]_i_4__0_n_0 ;
  wire \reg_rd_data[5]_i_5__0_n_0 ;
  wire \reg_rd_data[5]_i_9__0_n_0 ;
  wire \reg_rd_data[6]_i_10__0_n_0 ;
  wire \reg_rd_data[6]_i_12__0_n_0 ;
  wire \reg_rd_data[6]_i_13__0_n_0 ;
  wire \reg_rd_data[6]_i_4__0_n_0 ;
  wire \reg_rd_data[6]_i_7__0_n_0 ;
  wire \reg_rd_data[6]_i_8__0_n_0 ;
  wire \reg_rd_data[7]_i_10__0_n_0 ;
  wire \reg_rd_data[7]_i_12__0_n_0 ;
  wire \reg_rd_data[7]_i_13__0_n_0 ;
  wire \reg_rd_data[7]_i_4__0_n_0 ;
  wire \reg_rd_data[7]_i_7__0_n_0 ;
  wire \reg_rd_data[7]_i_8__0_n_0 ;
  wire \reg_rd_data[8]_i_10__0_n_0 ;
  wire \reg_rd_data[8]_i_11__0_n_0 ;
  wire \reg_rd_data[8]_i_2__0_n_0 ;
  wire \reg_rd_data[8]_i_5__0_n_0 ;
  wire \reg_rd_data[8]_i_6__0_n_0 ;
  wire \reg_rd_data[8]_i_9__0_n_0 ;
  wire \reg_rd_data[9]_i_10__0_n_0 ;
  wire \reg_rd_data[9]_i_12__0_n_0 ;
  wire \reg_rd_data[9]_i_13__0_n_0 ;
  wire \reg_rd_data[9]_i_4__0_n_0 ;
  wire \reg_rd_data[9]_i_7__0_n_0 ;
  wire \reg_rd_data[9]_i_8__0_n_0 ;
  wire \reg_rd_data_reg[0]_i_3__0_n_0 ;
  wire [31:0]\reg_rd_data_reg[31]_0 ;
  wire [31:0]\req_addr_reg[31] ;
  wire req_we_reg;
  wire \req_xfer_cnt_reg[6] ;
  wire \s_axi_reg_araddr[2] ;
  wire \s_axi_reg_araddr[2]_0 ;
  wire \s_axi_reg_araddr[3] ;
  wire \s_axi_reg_araddr[3]_0 ;
  wire \s_axi_reg_araddr[4] ;
  wire \s_axi_reg_araddr[4]_0 ;
  wire \s_axi_reg_araddr[4]_1 ;
  wire \s_axi_reg_araddr[5] ;
  wire \s_axi_reg_araddr[7] ;
  wire \s_axi_reg_araddr[7]_0 ;
  wire \s_axi_reg_araddr[7]_1 ;
  wire state_cs;
  wire [2:0]state_cs_0;
  wire [2:0]state_cs_1;
  wire \state_cs_reg[0] ;
  wire [0:0]sts_trig_reg;
  wire sts_trig_reg_0;
  wire \trig_cnt[0]_i_2__0_n_0 ;
  wire [31:0]trig_cnt_reg;
  wire \trig_cnt_reg[0]_i_1__0_n_0 ;
  wire \trig_cnt_reg[0]_i_1__0_n_1 ;
  wire \trig_cnt_reg[0]_i_1__0_n_2 ;
  wire \trig_cnt_reg[0]_i_1__0_n_3 ;
  wire \trig_cnt_reg[0]_i_1__0_n_4 ;
  wire \trig_cnt_reg[0]_i_1__0_n_5 ;
  wire \trig_cnt_reg[0]_i_1__0_n_6 ;
  wire \trig_cnt_reg[0]_i_1__0_n_7 ;
  wire \trig_cnt_reg[12]_i_1__0_n_0 ;
  wire \trig_cnt_reg[12]_i_1__0_n_1 ;
  wire \trig_cnt_reg[12]_i_1__0_n_2 ;
  wire \trig_cnt_reg[12]_i_1__0_n_3 ;
  wire \trig_cnt_reg[12]_i_1__0_n_4 ;
  wire \trig_cnt_reg[12]_i_1__0_n_5 ;
  wire \trig_cnt_reg[12]_i_1__0_n_6 ;
  wire \trig_cnt_reg[12]_i_1__0_n_7 ;
  wire \trig_cnt_reg[16]_i_1__0_n_0 ;
  wire \trig_cnt_reg[16]_i_1__0_n_1 ;
  wire \trig_cnt_reg[16]_i_1__0_n_2 ;
  wire \trig_cnt_reg[16]_i_1__0_n_3 ;
  wire \trig_cnt_reg[16]_i_1__0_n_4 ;
  wire \trig_cnt_reg[16]_i_1__0_n_5 ;
  wire \trig_cnt_reg[16]_i_1__0_n_6 ;
  wire \trig_cnt_reg[16]_i_1__0_n_7 ;
  wire \trig_cnt_reg[20]_i_1__0_n_0 ;
  wire \trig_cnt_reg[20]_i_1__0_n_1 ;
  wire \trig_cnt_reg[20]_i_1__0_n_2 ;
  wire \trig_cnt_reg[20]_i_1__0_n_3 ;
  wire \trig_cnt_reg[20]_i_1__0_n_4 ;
  wire \trig_cnt_reg[20]_i_1__0_n_5 ;
  wire \trig_cnt_reg[20]_i_1__0_n_6 ;
  wire \trig_cnt_reg[20]_i_1__0_n_7 ;
  wire \trig_cnt_reg[24]_i_1__0_n_0 ;
  wire \trig_cnt_reg[24]_i_1__0_n_1 ;
  wire \trig_cnt_reg[24]_i_1__0_n_2 ;
  wire \trig_cnt_reg[24]_i_1__0_n_3 ;
  wire \trig_cnt_reg[24]_i_1__0_n_4 ;
  wire \trig_cnt_reg[24]_i_1__0_n_5 ;
  wire \trig_cnt_reg[24]_i_1__0_n_6 ;
  wire \trig_cnt_reg[24]_i_1__0_n_7 ;
  wire \trig_cnt_reg[28]_i_1__0_n_1 ;
  wire \trig_cnt_reg[28]_i_1__0_n_2 ;
  wire \trig_cnt_reg[28]_i_1__0_n_3 ;
  wire \trig_cnt_reg[28]_i_1__0_n_4 ;
  wire \trig_cnt_reg[28]_i_1__0_n_5 ;
  wire \trig_cnt_reg[28]_i_1__0_n_6 ;
  wire \trig_cnt_reg[28]_i_1__0_n_7 ;
  wire \trig_cnt_reg[4]_i_1__0_n_0 ;
  wire \trig_cnt_reg[4]_i_1__0_n_1 ;
  wire \trig_cnt_reg[4]_i_1__0_n_2 ;
  wire \trig_cnt_reg[4]_i_1__0_n_3 ;
  wire \trig_cnt_reg[4]_i_1__0_n_4 ;
  wire \trig_cnt_reg[4]_i_1__0_n_5 ;
  wire \trig_cnt_reg[4]_i_1__0_n_6 ;
  wire \trig_cnt_reg[4]_i_1__0_n_7 ;
  wire \trig_cnt_reg[8]_i_1__0_n_0 ;
  wire \trig_cnt_reg[8]_i_1__0_n_1 ;
  wire \trig_cnt_reg[8]_i_1__0_n_2 ;
  wire \trig_cnt_reg[8]_i_1__0_n_3 ;
  wire \trig_cnt_reg[8]_i_1__0_n_4 ;
  wire \trig_cnt_reg[8]_i_1__0_n_5 ;
  wire \trig_cnt_reg[8]_i_1__0_n_6 ;
  wire \trig_cnt_reg[8]_i_1__0_n_7 ;
  wire trig_detect_reg;
  wire trig_detect_reg_0;
  wire [5:0]trig_ip;
  wire trig_tvalid;
  wire wr_en;
  wire \xfer_cnt_reg[3] ;
  wire \xfer_cnt_reg[6] ;
  wire [3:3]\NLW_clk_cnt_reg[28]_i_1__0_CO_UNCONNECTED ;
  wire [3:3]\NLW_intr_cnt_reg[28]_i_1__0_CO_UNCONNECTED ;
  wire [3:3]\NLW_ramp_sig_reg[12]_i_1__0_CO_UNCONNECTED ;
  wire [3:3]\NLW_trig_cnt_reg[28]_i_1__0_CO_UNCONNECTED ;

  system_rp_oscilloscope_0_rp_dma_s2mm U_dma_s2mm
       (.D({U_dma_s2mm_n_119,U_dma_s2mm_n_120,U_dma_s2mm_n_121,U_dma_s2mm_n_122,U_dma_s2mm_n_123,U_dma_s2mm_n_124,U_dma_s2mm_n_125,U_dma_s2mm_n_126,U_dma_s2mm_n_127,U_dma_s2mm_n_128,U_dma_s2mm_n_129,U_dma_s2mm_n_130,U_dma_s2mm_n_131,U_dma_s2mm_n_132,U_dma_s2mm_n_133,U_dma_s2mm_n_134,U_dma_s2mm_n_135,U_dma_s2mm_n_136,U_dma_s2mm_n_137,U_dma_s2mm_n_138,U_dma_s2mm_n_139,U_dma_s2mm_n_140}),
        .E(fifo_wr_we),
        .Q(\req_addr_reg[31] ),
        .SR(ctl_start_r_reg),
        .acq_tdata(acq_tdata),
        .acq_tlast(acq_tlast),
        .bit_start_reg(bit_start),
        .bram_addr_a(bram_addr_a),
        .bram_en_a(bram_en_a),
        .bram_we_a(bram_we_a),
        .bram_wrdata_a(bram_wrdata_a),
        .buf_sel_ch1(buf_sel_ch1),
        .busy_reg(dat_ctrl_busy),
        .busy_reg_0(busy_reg),
        .\cfg_calib_offset_reg[1] (U_dma_s2mm_n_162),
        .\cfg_filt_coeff_bb_reg[15] (U_dma_s2mm_n_161),
        .\cfg_trig_mask_reg[1] (external_trig_val),
        .\cfg_trig_pre_samp_reg[29] (U_dma_s2mm_n_155),
        .clear(clear),
        .clk_cnt_reg(clk_cnt_reg[31:18]),
        .empty(empty),
        .empty_fwft_i_reg(empty_fwft_i_reg),
        .event_op_reset_i_10(\cfg_trig_pre_samp_reg[0]_0 ),
        .event_op_reset_i_7(event_op_reset_i_7),
        .fifo_dis_reg(fifo_dis),
        .fifo_dis_reg_0(fifo_dis_reg),
        .first_rst(first_rst),
        .first_rst_reg(first_rst_reg),
        .full_immed0(full_immed0),
        .\goreg_dm.dout_i_reg[1] (\goreg_dm.dout_i_reg[1] ),
        .intr_cnt0(intr_cnt0),
        .intr_cnt_reg(intr_cnt_reg[31:25]),
        .intr_reg(intr_reg),
        .intr_reg__0(osc2_dma_intr),
        .m_axi_awvalid_reg(m_axi_awvalid_reg),
        .m_axi_osc2_aclk(m_axi_osc2_aclk),
        .m_axi_osc2_aresetn(m_axi_osc2_aresetn),
        .m_axi_osc2_awlen(m_axi_osc2_awlen),
        .m_axi_osc2_awready(m_axi_osc2_awready),
        .m_axi_osc2_awvalid(m_axi_osc2_awvalid),
        .m_axi_osc2_wdata(m_axi_osc2_wdata),
        .m_axi_osc2_wready(m_axi_osc2_wready),
        .m_axi_wlast_reg(m_axi_wlast_reg),
        .m_axi_wlast_reg_0(m_axi_wlast_reg_0),
        .m_axi_wvalid_reg(m_axi_wvalid_reg),
        .m_axi_wvalid_reg_0(m_axi_wvalid_reg_0),
        .m_axis_tvalid_reg(m_axis_tvalid_reg),
        .m_axis_tvalid_reg_0(m_axis_tvalid_reg_0),
        .missed_samps_ch1(missed_samps_ch1),
        .missed_samps_ch2(missed_samps_ch2),
        .mode_reg(dma_mode),
        .mode_reg_0(mode_reg),
        .\mux_sel_reg[0] (U_dma_s2mm_n_160),
        .\mux_sel_reg[1] (U_dma_s2mm_n_118),
        .\mux_sel_reg[2] (U_dma_s2mm_n_146),
        .\mux_sel_reg[2]_0 (U_dma_s2mm_n_147),
        .\mux_sel_reg[2]_1 (U_dma_s2mm_n_148),
        .\mux_sel_reg[2]_2 (U_dma_s2mm_n_149),
        .\mux_sel_reg[2]_3 (U_dma_s2mm_n_150),
        .\mux_sel_reg[2]_4 (U_dma_s2mm_n_151),
        .\mux_sel_reg[2]_5 (U_dma_s2mm_n_152),
        .\mux_sel_reg[2]_6 (U_dma_s2mm_n_153),
        .next_buf_full1_carry__1_i_10__0(cfg_dma_buf_size[16:0]),
        .next_buf_full_reg(next_buf_full_reg),
        .rd_en(rd_en),
        .\reg_ctrl_reg[0] (\reg_ctrl_reg[9] [0]),
        .\reg_ctrl_reg[17] (U_dma_s2mm_n_172),
        .\reg_ctrl_reg[31] (\reg_ctrl_reg[31] ),
        .\reg_ctrl_reg[9] (\reg_ctrl_reg[9] [2:1]),
        .\reg_rd_data[0]_i_5__0 (\reg_rd_data[17]_i_7__0_n_0 ),
        .\reg_rd_data[0]_i_5__0_0 (cfg_filt_bypass),
        .\reg_rd_data[10]_i_3__0 (\reg_rd_data[10]_i_11__0_n_0 ),
        .\reg_rd_data[10]_i_3__0_0 (\reg_rd_data[10]_i_10__0_n_0 ),
        .\reg_rd_data[15]_i_4__0 (\reg_rd_data[15]_i_11__0_n_0 ),
        .\reg_rd_data[15]_i_4__0_0 (\reg_rd_data[15]_i_12__0_n_0 ),
        .\reg_rd_data[16]_i_2__0 (\reg_rd_data[16]_i_10__0_n_0 ),
        .\reg_rd_data[16]_i_2__0_0 (\reg_rd_data[16]_i_11_n_0 ),
        .\reg_rd_data[16]_i_2__0_1 (\reg_rd_data[16]_i_9__0_n_0 ),
        .\reg_rd_data[17]_i_5__0 (p_4_in),
        .\reg_rd_data[17]_i_5__0_0 (\reg_rd_data[17]_i_12__0_n_0 ),
        .\reg_rd_data[17]_i_5__0_1 (\reg_rd_data[17]_i_11__0_n_0 ),
        .\reg_rd_data[18]_i_2__0 (\reg_rd_data[18]_i_6__0_n_0 ),
        .\reg_rd_data[18]_i_2__0_0 (\reg_rd_data[18]_i_7__0_n_0 ),
        .\reg_rd_data[18]_i_2__0_1 (\reg_rd_data[18]_i_8__0_n_0 ),
        .\reg_rd_data[19]_i_2__0 (\reg_rd_data[19]_i_6__0_n_0 ),
        .\reg_rd_data[19]_i_2__0_0 (\reg_rd_data[19]_i_7__0_n_0 ),
        .\reg_rd_data[19]_i_2__0_1 (\reg_rd_data[19]_i_8__0_n_0 ),
        .\reg_rd_data[1]_i_2__0 (\reg_rd_data[1]_i_11_n_0 ),
        .\reg_rd_data[20]_i_2__0 (\reg_rd_data[20]_i_6__0_n_0 ),
        .\reg_rd_data[20]_i_2__0_0 (\reg_rd_data[20]_i_7__0_n_0 ),
        .\reg_rd_data[20]_i_2__0_1 (\reg_rd_data[20]_i_8__0_n_0 ),
        .\reg_rd_data[21]_i_2__0 (\reg_rd_data[21]_i_6__0_n_0 ),
        .\reg_rd_data[21]_i_2__0_0 (\reg_rd_data[21]_i_7__0_n_0 ),
        .\reg_rd_data[21]_i_2__0_1 (\reg_rd_data[21]_i_8__0_n_0 ),
        .\reg_rd_data[22]_i_2__0 (\reg_rd_data[22]_i_7__0_n_0 ),
        .\reg_rd_data[22]_i_2__0_0 (\reg_rd_data[22]_i_8__0_n_0 ),
        .\reg_rd_data[22]_i_2__0_1 (\reg_rd_data[22]_i_6__0_n_0 ),
        .\reg_rd_data[23]_i_2__0 (\reg_rd_data[23]_i_6__0_n_0 ),
        .\reg_rd_data[23]_i_2__0_0 (\reg_rd_data[23]_i_7__0_n_0 ),
        .\reg_rd_data[23]_i_2__0_1 (\reg_rd_data[23]_i_8__0_n_0 ),
        .\reg_rd_data[24]_i_2__0 (\reg_rd_data[24]_i_6__0_n_0 ),
        .\reg_rd_data[24]_i_2__0_0 (\reg_rd_data[24]_i_7__0_n_0 ),
        .\reg_rd_data[24]_i_2__0_1 (\reg_rd_data[24]_i_8__0_n_0 ),
        .\reg_rd_data[25]_i_2__0 (\reg_rd_data[25]_i_7__0_n_0 ),
        .\reg_rd_data[25]_i_2__0_0 (\reg_rd_data[25]_i_6__0_n_0 ),
        .\reg_rd_data[26]_i_2__0 (\reg_rd_data[26]_i_7__0_n_0 ),
        .\reg_rd_data[26]_i_2__0_0 (\reg_rd_data[26]_i_6__0_n_0 ),
        .\reg_rd_data[27]_i_2__0 (\reg_rd_data[27]_i_7__0_n_0 ),
        .\reg_rd_data[27]_i_2__0_0 (\reg_rd_data[27]_i_6__0_n_0 ),
        .\reg_rd_data[28]_i_2__0 (\reg_rd_data[28]_i_7__0_n_0 ),
        .\reg_rd_data[28]_i_2__0_0 (\reg_rd_data[28]_i_6__0_n_0 ),
        .\reg_rd_data[29]_i_2__0 (\reg_rd_data[29]_i_7__0_n_0 ),
        .\reg_rd_data[29]_i_2__0_0 (\reg_rd_data[29]_i_6__0_n_0 ),
        .\reg_rd_data[2]_i_7__0 (\reg_rd_data[2]_i_19__0_n_0 ),
        .\reg_rd_data[30]_i_2__0 (\reg_rd_data[30]_i_7__0_n_0 ),
        .\reg_rd_data[30]_i_2__0_0 (\reg_rd_data[30]_i_6__0_n_0 ),
        .\reg_rd_data[31]_i_3__0 (\reg_rd_data[31]_i_14__0_n_0 ),
        .\reg_rd_data[31]_i_3__0_0 (\reg_rd_data[31]_i_13__0_n_0 ),
        .\reg_rd_data[3]_i_2__0 (\reg_rd_data[3]_i_14__0_n_0 ),
        .\reg_rd_data[8]_i_3__0 (\reg_rd_data[8]_i_11__0_n_0 ),
        .\reg_rd_data[8]_i_3__0_0 (\reg_rd_data[8]_i_10__0_n_0 ),
        .\reg_rd_data_reg[0] (\reg_rd_data_reg[0]_i_3__0_n_0 ),
        .\reg_rd_data_reg[0]_0 (\reg_rd_data[0]_i_4__0_n_0 ),
        .\reg_rd_data_reg[0]_1 (U_osc_acq_n_24),
        .\reg_rd_data_reg[0]_i_2__0 (\reg_rd_data[0]_i_12__0_n_0 ),
        .\reg_rd_data_reg[10] (\reg_rd_data[10]_i_2__0_n_0 ),
        .\reg_rd_data_reg[10]_0 (U_osc_acq_n_49),
        .\reg_rd_data_reg[10]_1 (\reg_rd_data[10]_i_5__0_n_0 ),
        .\reg_rd_data_reg[10]_2 (\reg_rd_data[10]_i_6__0_n_0 ),
        .\reg_rd_data_reg[11]_i_3__0 (\reg_rd_data[11]_i_8__0_n_0 ),
        .\reg_rd_data_reg[11]_i_3__0_0 (\reg_rd_data[11]_i_10__0_n_0 ),
        .\reg_rd_data_reg[11]_i_5__0 (\reg_rd_data[11]_i_13__0_n_0 ),
        .\reg_rd_data_reg[11]_i_6__0 (U_dma_s2mm_n_168),
        .\reg_rd_data_reg[12]_i_3__0 (\reg_rd_data[12]_i_10__0_n_0 ),
        .\reg_rd_data_reg[12]_i_3__0_0 (\reg_rd_data[12]_i_8__0_n_0 ),
        .\reg_rd_data_reg[12]_i_5__0 (\reg_rd_data[12]_i_13__0_n_0 ),
        .\reg_rd_data_reg[12]_i_6__0 (U_dma_s2mm_n_169),
        .\reg_rd_data_reg[13]_i_3__0 (\reg_rd_data[13]_i_10__0_n_0 ),
        .\reg_rd_data_reg[13]_i_3__0_0 (\reg_rd_data[13]_i_8__0_n_0 ),
        .\reg_rd_data_reg[13]_i_5__0 (\reg_rd_data[13]_i_13__0_n_0 ),
        .\reg_rd_data_reg[13]_i_6__0 (U_dma_s2mm_n_170),
        .\reg_rd_data_reg[14]_i_3__0 (\reg_rd_data[14]_i_10__0_n_0 ),
        .\reg_rd_data_reg[14]_i_3__0_0 (\reg_rd_data[14]_i_8__0_n_0 ),
        .\reg_rd_data_reg[14]_i_5__0 (\reg_rd_data[14]_i_13__0_n_0 ),
        .\reg_rd_data_reg[14]_i_6__0 (U_dma_s2mm_n_171),
        .\reg_rd_data_reg[15] (\reg_rd_data[15]_i_7__0_n_0 ),
        .\reg_rd_data_reg[15]_i_9__0 (cfg_calib_offset),
        .\reg_rd_data_reg[15]_i_9__0_0 (cfg_calib_gain),
        .\reg_rd_data_reg[16] (\reg_rd_data[16]_i_3__0_n_0 ),
        .\reg_rd_data_reg[16]_0 (\reg_rd_data[16]_i_4__0_n_0 ),
        .\reg_rd_data_reg[16]_1 (cfg_dec_factor[16]),
        .\reg_rd_data_reg[16]_2 (\reg_rd_data[16]_i_5__0_n_0 ),
        .\reg_rd_data_reg[16]_3 (U_osc_acq_n_48),
        .\reg_rd_data_reg[17] (\reg_rd_data[17]_i_3__0_n_0 ),
        .\reg_rd_data_reg[17]_0 (\reg_rd_data[31]_i_7__0_n_0 ),
        .\reg_rd_data_reg[17]_1 (\reg_rd_data[17]_i_10__0_n_0 ),
        .\reg_rd_data_reg[18] (U_osc_acq_n_37),
        .\reg_rd_data_reg[19] (U_osc_acq_n_36),
        .\reg_rd_data_reg[20] (U_osc_acq_n_35),
        .\reg_rd_data_reg[21] (U_osc_acq_n_34),
        .\reg_rd_data_reg[22] (U_osc_acq_n_33),
        .\reg_rd_data_reg[23] (U_osc_acq_n_32),
        .\reg_rd_data_reg[24] (U_osc_acq_n_31),
        .\reg_rd_data_reg[25] (U_osc_acq_n_30),
        .\reg_rd_data_reg[26] (U_osc_acq_n_29),
        .\reg_rd_data_reg[27] (U_osc_acq_n_28),
        .\reg_rd_data_reg[28] (U_osc_acq_n_27),
        .\reg_rd_data_reg[29] (U_osc_acq_n_26),
        .\reg_rd_data_reg[2] (\reg_rd_data[3]_i_4__0_n_0 ),
        .\reg_rd_data_reg[2]_0 (\reg_rd_data[2]_i_4__0_n_0 ),
        .\reg_rd_data_reg[2]_1 (\reg_rd_data[2]_i_2__0_n_0 ),
        .\reg_rd_data_reg[2]_2 (\reg_rd_data[2]_i_5__0_n_0 ),
        .\reg_rd_data_reg[2]_3 (U_osc_acq_n_80),
        .\reg_rd_data_reg[2]_i_13 (\reg_rd_data[31]_i_11__0_n_0 ),
        .\reg_rd_data_reg[2]_i_3__0 (\reg_rd_data[2]_i_14_n_0 ),
        .\reg_rd_data_reg[30] (U_osc_acq_n_25),
        .\reg_rd_data_reg[31] (\reg_rd_data[31]_i_2__0_n_0 ),
        .\reg_rd_data_reg[31]_0 (\reg_rd_data[31]_i_4__0_n_0 ),
        .\reg_rd_data_reg[31]_1 (\reg_rd_data[31]_i_5__0_n_0 ),
        .\reg_rd_data_reg[31]_2 (U_osc_acq_n_81),
        .\reg_rd_data_reg[3] (\reg_rd_data[3]_i_7__0_n_0 ),
        .\reg_rd_data_reg[3]_0 (U_osc_acq_n_53),
        .\reg_rd_data_reg[3]_1 (\reg_rd_data[3]_i_5_n_0 ),
        .\reg_rd_data_reg[3]_2 (\reg_rd_data[3]_i_6__0_n_0 ),
        .\reg_rd_data_reg[4] (\reg_rd_data[17]_i_4__0_n_0 ),
        .\reg_rd_data_reg[4]_0 (U_osc_acq_n_52),
        .\reg_rd_data_reg[4]_1 (\reg_rd_data[4]_i_4__0_n_0 ),
        .\reg_rd_data_reg[4]_2 (\reg_rd_data[4]_i_5__0_n_0 ),
        .\reg_rd_data_reg[4]_i_2__0 (\reg_rd_data[4]_i_10__0_n_0 ),
        .\reg_rd_data_reg[4]_i_6__0 (\reg_rd_data[4]_i_14__0_n_0 ),
        .\reg_rd_data_reg[5] (U_osc_acq_n_51),
        .\reg_rd_data_reg[5]_0 (\reg_rd_data[5]_i_4__0_n_0 ),
        .\reg_rd_data_reg[5]_1 (\reg_rd_data[5]_i_5__0_n_0 ),
        .\reg_rd_data_reg[5]_i_2__0 (\reg_rd_data[5]_i_10__0_n_0 ),
        .\reg_rd_data_reg[5]_i_2__0_0 (\reg_rd_data[5]_i_12__0_n_0 ),
        .\reg_rd_data_reg[5]_i_6__0 (\reg_rd_data[5]_i_14__0_n_0 ),
        .\reg_rd_data_reg[6]_i_3__0 (\reg_rd_data[6]_i_10__0_n_0 ),
        .\reg_rd_data_reg[6]_i_3__0_0 (\reg_rd_data[6]_i_8__0_n_0 ),
        .\reg_rd_data_reg[6]_i_5__0 (\reg_rd_data[6]_i_13__0_n_0 ),
        .\reg_rd_data_reg[6]_i_6__0 (U_dma_s2mm_n_163),
        .\reg_rd_data_reg[7]_i_3__0 (\reg_rd_data[7]_i_10__0_n_0 ),
        .\reg_rd_data_reg[7]_i_3__0_0 (\reg_rd_data[7]_i_8__0_n_0 ),
        .\reg_rd_data_reg[7]_i_5__0 (\reg_rd_data[7]_i_13__0_n_0 ),
        .\reg_rd_data_reg[7]_i_6__0 (U_dma_s2mm_n_164),
        .\reg_rd_data_reg[8] (\reg_rd_data[15]_i_2_n_0 ),
        .\reg_rd_data_reg[8]_0 (\reg_rd_data[8]_i_2__0_n_0 ),
        .\reg_rd_data_reg[8]_1 (U_osc_acq_n_50),
        .\reg_rd_data_reg[8]_2 (\reg_rd_data[8]_i_5__0_n_0 ),
        .\reg_rd_data_reg[8]_3 (\reg_rd_data[8]_i_6__0_n_0 ),
        .\reg_rd_data_reg[9]_i_3__0 (\reg_rd_data[9]_i_10__0_n_0 ),
        .\reg_rd_data_reg[9]_i_3__0_0 (\reg_rd_data[9]_i_8__0_n_0 ),
        .\reg_rd_data_reg[9]_i_5__0 (\reg_rd_data[9]_i_13__0_n_0 ),
        .\reg_rd_data_reg[9]_i_6__0 (U_dma_s2mm_n_167),
        .\req_buf_addr_reg[31] (cfg_dma_dst_addr2),
        .\req_buf_addr_reg[31]_0 (cfg_dma_dst_addr1),
        .req_buf_addr_sel_p1_reg(buf_sel_ch2),
        .req_we_reg(req_we_reg),
        .\req_xfer_cnt_reg[6] (\req_xfer_cnt_reg[6] ),
        .\s_axi_reg_araddr[3] (osc2_reg_wr_we),
        .\s_axi_reg_araddr[4] (\s_axi_reg_araddr[4]_0 ),
        .\s_axi_reg_araddr[6] (U_dma_s2mm_n_235),
        .\s_axi_reg_araddr[7] (\s_axi_reg_araddr[7] ),
        .\s_axi_reg_araddr[7]_0 (U_dma_s2mm_n_234),
        .\state_cs_reg[0] (state_cs),
        .\state_cs_reg[0]_0 (state_cs_1[0]),
        .\state_cs_reg[0]_1 (\state_cs_reg[0] ),
        .\state_cs_reg[1] (state_cs_1[1]),
        .\state_cs_reg[2] (state_cs_1[2]),
        .sts_acquire_reg(U_osc_acq_n_55),
        .sts_acquire_reg_0({cfg_trig_pre_samp[31],cfg_trig_pre_samp[29],cfg_trig_pre_samp[25:24],cfg_trig_pre_samp[18],cfg_trig_pre_samp[14],cfg_trig_pre_samp[7],cfg_trig_pre_samp[1]}),
        .sts_acquire_reg_1(U_osc_acq_n_54),
        .tlast_reg(D),
        .tlast_reg_0(acq_tvalid),
        .trig_cnt_reg(trig_cnt_reg[31:18]),
        .\trig_cnt_reg[31] (cfg_trig_mask),
        .trig_ip(trig_ip[5]),
        .\upsize_buf_reg[0][7] (data1),
        .\upsize_buf_reg[2][7] ({U_osc_acq_n_64,U_osc_acq_n_65,U_osc_acq_n_66,U_osc_acq_n_67,U_osc_acq_n_68,U_osc_acq_n_69,U_osc_acq_n_70,U_osc_acq_n_71}),
        .\upsize_buf_reg[7][7] ({U_osc_acq_n_56,U_osc_acq_n_57,U_osc_acq_n_58,U_osc_acq_n_59,U_osc_acq_n_60,U_osc_acq_n_61,U_osc_acq_n_62,U_osc_acq_n_63}),
        .use_8bit_r_reg_0(cfg_8bit_dat),
        .wr_en(wr_en),
        .\xfer_cnt_reg[3] (\xfer_cnt_reg[3] ),
        .\xfer_cnt_reg[6] (\xfer_cnt_reg[6] ));
  system_rp_oscilloscope_0_osc_acquire U_osc_acq
       (.D({U_osc_acq_n_38,U_osc_acq_n_39,U_osc_acq_n_40,U_osc_acq_n_41,U_osc_acq_n_42,U_osc_acq_n_43,U_osc_acq_n_44,U_osc_acq_n_45,U_osc_acq_n_46,U_osc_acq_n_47}),
        .\FSM_sequential_state_cs_reg[0]_0 (state_cs_0[0]),
        .\FSM_sequential_state_cs_reg[1]_0 (state_cs_0[1]),
        .\FSM_sequential_state_cs_reg[2]_0 (state_cs_0[2]),
        .Q(cfg_trig_pre_samp),
        .S(trig_cnt_reg[1]),
        .acq_tdata(acq_tdata),
        .acq_tlast(acq_tlast),
        .acq_tvalid(acq_tvalid),
        .cfg_event_sel(cfg_event_sel),
        .\cfg_event_sel_reg[0] (U_osc_acq_n_24),
        .\cfg_trig_pre_samp_reg[10] (U_osc_acq_n_49),
        .\cfg_trig_pre_samp_reg[16] (U_osc_acq_n_48),
        .\cfg_trig_pre_samp_reg[17] (U_osc_acq_n_54),
        .\cfg_trig_pre_samp_reg[18] (U_osc_acq_n_37),
        .\cfg_trig_pre_samp_reg[19] (U_osc_acq_n_36),
        .\cfg_trig_pre_samp_reg[20] (U_osc_acq_n_35),
        .\cfg_trig_pre_samp_reg[21] (U_osc_acq_n_34),
        .\cfg_trig_pre_samp_reg[22] (U_osc_acq_n_33),
        .\cfg_trig_pre_samp_reg[23] (U_osc_acq_n_32),
        .\cfg_trig_pre_samp_reg[23]_0 (U_osc_acq_n_55),
        .\cfg_trig_pre_samp_reg[24] (U_osc_acq_n_31),
        .\cfg_trig_pre_samp_reg[25] (U_osc_acq_n_30),
        .\cfg_trig_pre_samp_reg[26] (U_osc_acq_n_29),
        .\cfg_trig_pre_samp_reg[27] (U_osc_acq_n_28),
        .\cfg_trig_pre_samp_reg[28] (U_osc_acq_n_27),
        .\cfg_trig_pre_samp_reg[29] (U_osc_acq_n_26),
        .\cfg_trig_pre_samp_reg[30] (U_osc_acq_n_25),
        .\cfg_trig_pre_samp_reg[31] (U_osc_acq_n_81),
        .\cfg_trig_pre_samp_reg[8] (U_osc_acq_n_50),
        .clear(clear),
        .dma_mode(dma_mode),
        .event_num_reset_reg(U_osc_acq_n_18),
        .event_num_start(event_num_start),
        .event_num_stop(event_num_stop),
        .event_num_trig(event_num_trig),
        .event_num_trig_reg(ctl_trg),
        .m_axi_osc2_aclk(m_axi_osc2_aclk),
        .m_axi_osc2_aresetn(m_axi_osc2_aresetn),
        .\m_axis_tdata_reg[0]_0 (U_osc_trigger_n_15),
        .\m_axis_tdata_reg[10]_0 (U_osc_trigger_n_5),
        .\m_axis_tdata_reg[11]_0 (U_osc_trigger_n_4),
        .\m_axis_tdata_reg[12]_0 (U_osc_trigger_n_3),
        .\m_axis_tdata_reg[13]_0 (U_osc_trigger_n_2),
        .\m_axis_tdata_reg[14]_0 (U_osc_trigger_n_1),
        .\m_axis_tdata_reg[15]_0 ({U_osc_acq_n_56,U_osc_acq_n_57,U_osc_acq_n_58,U_osc_acq_n_59,U_osc_acq_n_60,U_osc_acq_n_61,U_osc_acq_n_62,U_osc_acq_n_63}),
        .\m_axis_tdata_reg[15]_1 ({U_osc_acq_n_64,U_osc_acq_n_65,U_osc_acq_n_66,U_osc_acq_n_67,U_osc_acq_n_68,U_osc_acq_n_69,U_osc_acq_n_70,U_osc_acq_n_71}),
        .\m_axis_tdata_reg[15]_2 (data1),
        .\m_axis_tdata_reg[15]_3 (U_osc_trigger_n_0),
        .\m_axis_tdata_reg[1]_0 (U_osc_trigger_n_14),
        .\m_axis_tdata_reg[2]_0 (U_osc_trigger_n_13),
        .\m_axis_tdata_reg[3]_0 (U_osc_trigger_n_12),
        .\m_axis_tdata_reg[4]_0 (U_osc_trigger_n_11),
        .\m_axis_tdata_reg[5]_0 (U_osc_trigger_n_10),
        .\m_axis_tdata_reg[6]_0 (U_osc_trigger_n_9),
        .\m_axis_tdata_reg[7]_0 (U_osc_trigger_n_8),
        .\m_axis_tdata_reg[8]_0 (U_osc_trigger_n_7),
        .\m_axis_tdata_reg[9]_0 (U_osc_trigger_n_6),
        .m_axis_tvalid0(m_axis_tvalid0),
        .\reg_rd_data[30]_i_2__0 (\reg_rd_data[31]_i_11__0_n_0 ),
        .\reg_rd_data[31]_i_3__0 (cfg_trig_post_samp),
        .\reg_rd_data_reg[11] (U_dma_s2mm_n_168),
        .\reg_rd_data_reg[11]_0 (\reg_rd_data[11]_i_4__0_n_0 ),
        .\reg_rd_data_reg[12] (U_dma_s2mm_n_169),
        .\reg_rd_data_reg[12]_0 (\reg_rd_data[12]_i_4__0_n_0 ),
        .\reg_rd_data_reg[13] (U_dma_s2mm_n_170),
        .\reg_rd_data_reg[13]_0 (\reg_rd_data[13]_i_4__0_n_0 ),
        .\reg_rd_data_reg[14] (U_dma_s2mm_n_171),
        .\reg_rd_data_reg[14]_0 (\reg_rd_data[14]_i_4__0_n_0 ),
        .\reg_rd_data_reg[15] (\reg_rd_data[15]_i_2_n_0 ),
        .\reg_rd_data_reg[15]_0 (U_dma_s2mm_n_161),
        .\reg_rd_data_reg[15]_1 (\reg_rd_data[15]_i_5__0_n_0 ),
        .\reg_rd_data_reg[15]_2 (\reg_rd_data[15]_i_6__0_n_0 ),
        .\reg_rd_data_reg[17] (\reg_rd_data[17]_i_3__0_n_0 ),
        .\reg_rd_data_reg[17]_0 (\reg_rd_data[2]_i_4__0_n_0 ),
        .\reg_rd_data_reg[17]_1 (\reg_rd_data[17]_i_7__0_n_0 ),
        .\reg_rd_data_reg[17]_2 (\reg_rd_data[31]_i_2__0_n_0 ),
        .\reg_rd_data_reg[17]_3 (\reg_rd_data[17]_i_4__0_n_0 ),
        .\reg_rd_data_reg[17]_4 (U_dma_s2mm_n_172),
        .\reg_rd_data_reg[17]_5 (\reg_rd_data[17]_i_6__0_n_0 ),
        .\reg_rd_data_reg[1] (\reg_rd_data[31]_i_4__0_n_0 ),
        .\reg_rd_data_reg[1]_0 (\reg_rd_data[31]_i_5__0_n_0 ),
        .\reg_rd_data_reg[1]_1 (clk_cnt_reg[1]),
        .\reg_rd_data_reg[1]_2 (\reg_rd_data[1]_i_3__0_n_0 ),
        .\reg_rd_data_reg[1]_3 (\reg_rd_data[3]_i_4__0_n_0 ),
        .\reg_rd_data_reg[1]_4 (U_dma_s2mm_n_162),
        .\reg_rd_data_reg[2]_i_3__0 (\reg_rd_data[2]_i_16__0_n_0 ),
        .\reg_rd_data_reg[2]_i_3__0_0 (\reg_rd_data[2]_i_17__0_n_0 ),
        .\reg_rd_data_reg[5] (cfg_trig_mask),
        .\reg_rd_data_reg[6] (U_dma_s2mm_n_163),
        .\reg_rd_data_reg[6]_0 (\reg_rd_data[6]_i_4__0_n_0 ),
        .\reg_rd_data_reg[7] (U_dma_s2mm_n_164),
        .\reg_rd_data_reg[7]_0 (\reg_rd_data[7]_i_4__0_n_0 ),
        .\reg_rd_data_reg[9] (U_dma_s2mm_n_167),
        .\reg_rd_data_reg[9]_0 (\reg_rd_data[9]_i_4__0_n_0 ),
        .sts_acquire_reg_0(U_osc_acq_n_82),
        .sts_acquire_reg_1(U_dma_s2mm_n_155),
        .sts_start_reg_0(U_osc_acq_n_80),
        .\sts_trig_post_cnt_reg[0]_0 (event_num_reset_reg_n_0),
        .\sts_trig_pre_cnt_reg[3]_0 (U_osc_acq_n_53),
        .\sts_trig_pre_cnt_reg[4]_0 (U_osc_acq_n_52),
        .\sts_trig_pre_cnt_reg[5]_0 (U_osc_acq_n_51),
        .sts_trig_reg_0(sts_trig_reg),
        .sts_trig_reg_1(sts_trig_reg_0),
        .trig_ip(trig_ip),
        .trig_tvalid(trig_tvalid),
        .\upsize_buf_reg[0][7] (cfg_8bit_dat),
        .\upsize_buf_reg[2][0] (U_dma_s2mm_n_160),
        .\upsize_buf_reg[7][0] (U_dma_s2mm_n_118),
        .\upsize_buf_reg[7][0]_0 (U_dma_s2mm_n_153),
        .\upsize_buf_reg[7][1] (U_dma_s2mm_n_152),
        .\upsize_buf_reg[7][2] (U_dma_s2mm_n_151),
        .\upsize_buf_reg[7][3] (U_dma_s2mm_n_150),
        .\upsize_buf_reg[7][4] (U_dma_s2mm_n_149),
        .\upsize_buf_reg[7][5] (U_dma_s2mm_n_148),
        .\upsize_buf_reg[7][6] (U_dma_s2mm_n_147),
        .\upsize_buf_reg[7][7] (U_dma_s2mm_n_146));
  system_rp_oscilloscope_0_osc_calib U_osc_calib
       (.CO(dec_valid),
        .D(filt_tdata),
        .O({U_osc_calib_n_16,U_osc_calib_n_17,U_osc_calib_n_18,U_osc_calib_n_19}),
        .Q({\cfg_loopback_reg_n_0_[12] ,\cfg_loopback_reg_n_0_[4] }),
        .S({U_osc_decimator_n_27,U_osc_decimator_n_28,U_osc_decimator_n_29,U_osc_decimator_n_30}),
        .\adc_sum_reg[11] ({U_osc_decimator_n_35,U_osc_decimator_n_36,U_osc_decimator_n_37,U_osc_decimator_n_38}),
        .\adc_sum_reg[15] ({U_osc_decimator_n_39,U_osc_decimator_n_40,U_osc_decimator_n_41,U_osc_decimator_n_42}),
        .\adc_sum_reg[19] ({U_osc_decimator_n_43,U_osc_decimator_n_44,U_osc_decimator_n_45,U_osc_decimator_n_46}),
        .\adc_sum_reg[23] ({U_osc_decimator_n_47,U_osc_decimator_n_48,U_osc_decimator_n_49,U_osc_decimator_n_50}),
        .\adc_sum_reg[27] ({U_osc_decimator_n_51,U_osc_decimator_n_52,U_osc_decimator_n_53,U_osc_decimator_n_54}),
        .\adc_sum_reg[31] (Q),
        .\adc_sum_reg[31]_0 ({U_osc_decimator_n_4,U_osc_decimator_n_5,U_osc_decimator_n_6,U_osc_decimator_n_7}),
        .\adc_sum_reg[7] ({U_osc_decimator_n_31,U_osc_decimator_n_32,U_osc_decimator_n_33,U_osc_decimator_n_34}),
        .gain_calc_r_reg_0(cfg_calib_gain),
        .m_axi_osc2_aclk(m_axi_osc2_aclk),
        .\m_axis_tdata_reg[11]_0 ({U_osc_calib_n_24,U_osc_calib_n_25,U_osc_calib_n_26,U_osc_calib_n_27}),
        .\m_axis_tdata_reg[15]_0 ({U_osc_calib_n_28,U_osc_calib_n_29,U_osc_calib_n_30,U_osc_calib_n_31}),
        .\m_axis_tdata_reg[15]_1 ({U_osc_calib_n_32,U_osc_calib_n_33,U_osc_calib_n_34,U_osc_calib_n_35}),
        .\m_axis_tdata_reg[15]_2 ({U_osc_calib_n_36,U_osc_calib_n_37,U_osc_calib_n_38,U_osc_calib_n_39}),
        .\m_axis_tdata_reg[15]_3 ({U_osc_calib_n_40,U_osc_calib_n_41,U_osc_calib_n_42,U_osc_calib_n_43}),
        .\m_axis_tdata_reg[15]_4 ({U_osc_calib_n_44,U_osc_calib_n_45,U_osc_calib_n_46,U_osc_calib_n_47}),
        .\m_axis_tdata_reg[7]_0 ({U_osc_calib_n_20,U_osc_calib_n_21,U_osc_calib_n_22,U_osc_calib_n_23}),
        .\offset_reg_reg[15]_0 (cfg_calib_offset),
        .ramp_sig_reg(ramp_sig_reg),
        .ramp_sig_reg_0_sp_1(U_osc_calib_n_0),
        .ramp_sig_reg_10_sp_1(U_osc_calib_n_10),
        .ramp_sig_reg_11_sp_1(U_osc_calib_n_11),
        .ramp_sig_reg_12_sp_1(U_osc_calib_n_12),
        .ramp_sig_reg_13_sp_1(U_osc_calib_n_13),
        .ramp_sig_reg_14_sp_1(U_osc_calib_n_14),
        .ramp_sig_reg_15_sp_1(U_osc_calib_n_15),
        .ramp_sig_reg_1_sp_1(U_osc_calib_n_1),
        .ramp_sig_reg_2_sp_1(U_osc_calib_n_2),
        .ramp_sig_reg_3_sp_1(U_osc_calib_n_3),
        .ramp_sig_reg_4_sp_1(U_osc_calib_n_4),
        .ramp_sig_reg_5_sp_1(U_osc_calib_n_5),
        .ramp_sig_reg_6_sp_1(U_osc_calib_n_6),
        .ramp_sig_reg_7_sp_1(U_osc_calib_n_7),
        .ramp_sig_reg_8_sp_1(U_osc_calib_n_8),
        .ramp_sig_reg_9_sp_1(U_osc_calib_n_9));
  system_rp_oscilloscope_0_osc_decimator U_osc_decimator
       (.CO(dec_valid),
        .O({U_osc_calib_n_16,U_osc_calib_n_17,U_osc_calib_n_18,U_osc_calib_n_19}),
        .Q(cfg_dec_factor),
        .S({U_osc_decimator_n_27,U_osc_decimator_n_28,U_osc_decimator_n_29,U_osc_decimator_n_30}),
        .\adc_dec_cnt_reg[16]_0 (event_num_reset_reg_n_0),
        .\adc_sum_reg[11]_0 ({U_osc_decimator_n_35,U_osc_decimator_n_36,U_osc_decimator_n_37,U_osc_decimator_n_38}),
        .\adc_sum_reg[11]_1 ({U_osc_calib_n_24,U_osc_calib_n_25,U_osc_calib_n_26,U_osc_calib_n_27}),
        .\adc_sum_reg[11]_2 (U_osc_calib_n_8),
        .\adc_sum_reg[11]_3 (U_osc_calib_n_9),
        .\adc_sum_reg[11]_4 (U_osc_calib_n_10),
        .\adc_sum_reg[11]_5 (U_osc_calib_n_11),
        .\adc_sum_reg[15]_0 ({U_osc_decimator_n_39,U_osc_decimator_n_40,U_osc_decimator_n_41,U_osc_decimator_n_42}),
        .\adc_sum_reg[15]_1 ({U_osc_calib_n_28,U_osc_calib_n_29,U_osc_calib_n_30,U_osc_calib_n_31}),
        .\adc_sum_reg[15]_2 (U_osc_calib_n_12),
        .\adc_sum_reg[15]_3 (U_osc_calib_n_13),
        .\adc_sum_reg[15]_4 (U_osc_calib_n_14),
        .\adc_sum_reg[15]_5 (U_osc_calib_n_15),
        .\adc_sum_reg[19]_0 ({U_osc_decimator_n_43,U_osc_decimator_n_44,U_osc_decimator_n_45,U_osc_decimator_n_46}),
        .\adc_sum_reg[19]_1 ({U_osc_calib_n_32,U_osc_calib_n_33,U_osc_calib_n_34,U_osc_calib_n_35}),
        .\adc_sum_reg[23]_0 ({U_osc_decimator_n_47,U_osc_decimator_n_48,U_osc_decimator_n_49,U_osc_decimator_n_50}),
        .\adc_sum_reg[23]_1 ({U_osc_calib_n_36,U_osc_calib_n_37,U_osc_calib_n_38,U_osc_calib_n_39}),
        .\adc_sum_reg[27]_0 ({U_osc_decimator_n_51,U_osc_decimator_n_52,U_osc_decimator_n_53,U_osc_decimator_n_54}),
        .\adc_sum_reg[27]_1 ({U_osc_calib_n_40,U_osc_calib_n_41,U_osc_calib_n_42,U_osc_calib_n_43}),
        .\adc_sum_reg[31]_0 ({U_osc_decimator_n_4,U_osc_decimator_n_5,U_osc_decimator_n_6,U_osc_decimator_n_7}),
        .\adc_sum_reg[31]_1 (U_osc_acq_n_18),
        .\adc_sum_reg[31]_2 ({U_osc_calib_n_44,U_osc_calib_n_45,U_osc_calib_n_46,U_osc_calib_n_47}),
        .\adc_sum_reg[3]_0 (U_osc_calib_n_0),
        .\adc_sum_reg[3]_1 (U_osc_calib_n_1),
        .\adc_sum_reg[3]_2 (U_osc_calib_n_2),
        .\adc_sum_reg[3]_3 (U_osc_calib_n_3),
        .\adc_sum_reg[7]_0 ({U_osc_decimator_n_31,U_osc_decimator_n_32,U_osc_decimator_n_33,U_osc_decimator_n_34}),
        .\adc_sum_reg[7]_1 ({U_osc_calib_n_20,U_osc_calib_n_21,U_osc_calib_n_22,U_osc_calib_n_23}),
        .\adc_sum_reg[7]_2 (U_osc_calib_n_4),
        .\adc_sum_reg[7]_3 (U_osc_calib_n_5),
        .\adc_sum_reg[7]_4 (U_osc_calib_n_6),
        .\adc_sum_reg[7]_5 (U_osc_calib_n_7),
        .\cfg_trig_high_level_reg[15] (\cfg_trig_high_level_reg[15]_0 ),
        .clear(clear),
        .dec_tvalid(dec_tvalid),
        .m_axi_osc2_aclk(m_axi_osc2_aclk),
        .m_axi_osc2_aresetn(m_axi_osc2_aresetn),
        .\m_axis_tdata_reg[15]_0 (dec_tdata),
        .\m_axis_tdata_reg[15]_1 (CO),
        .\m_axis_tdata_reg[15]_2 (\m_axis_tdata_reg[15] ),
        .m_axis_tvalid_reg_0(U_osc_decimator_n_3),
        .m_axis_tvalid_reg_1(cfg_avg_en),
        .trig_detect_reg(trig_detect_reg_0),
        .trig_detect_reg_0(cfg_trig_edge),
        .trig_detect_reg_i_3__0_0(cfg_trig_high_level),
        .trig_detect_reg_i_5__0_0(cfg_trig_low_level));
  system_rp_oscilloscope_0_osc_trigger U_osc_trigger
       (.dec_tvalid(dec_tvalid),
        .m_axi_osc2_aclk(m_axi_osc2_aclk),
        .\m_axis_tdata_reg[0] (U_osc_trigger_n_15),
        .\m_axis_tdata_reg[10] (U_osc_trigger_n_5),
        .\m_axis_tdata_reg[11] (U_osc_trigger_n_4),
        .\m_axis_tdata_reg[12] (U_osc_trigger_n_3),
        .\m_axis_tdata_reg[13] (U_osc_trigger_n_2),
        .\m_axis_tdata_reg[14] (U_osc_trigger_n_1),
        .\m_axis_tdata_reg[15] (U_osc_trigger_n_0),
        .\m_axis_tdata_reg[15]_0 (dec_tdata),
        .\m_axis_tdata_reg[1] (U_osc_trigger_n_14),
        .\m_axis_tdata_reg[2] (U_osc_trigger_n_13),
        .\m_axis_tdata_reg[3] (U_osc_trigger_n_12),
        .\m_axis_tdata_reg[4] (U_osc_trigger_n_11),
        .\m_axis_tdata_reg[5] (U_osc_trigger_n_10),
        .\m_axis_tdata_reg[6] (U_osc_trigger_n_9),
        .\m_axis_tdata_reg[7] (U_osc_trigger_n_8),
        .\m_axis_tdata_reg[8] (U_osc_trigger_n_7),
        .\m_axis_tdata_reg[9] (U_osc_trigger_n_6),
        .m_axis_tvalid0(m_axis_tvalid0),
        .m_axis_tvalid_reg_0(U_osc_acq_n_82),
        .osc2_trig_op(osc2_trig_op),
        .osc2_trig_op_0(cfg_trig_edge),
        .trig_detect_reg_0(trig_detect_reg),
        .trig_detect_reg_1(U_osc_decimator_n_3),
        .trig_tvalid(trig_tvalid));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bb_mult_i_2__0
       (.I0(bram_addr_a[7]),
        .I1(bram_addr_a[3]),
        .O(\s_axi_reg_araddr[7]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT4 #(
    .INIT(16'hEFFF)) 
    cfg_8bit_dat_i_2
       (.I0(bram_addr_a[4]),
        .I1(bram_addr_a[0]),
        .I2(bram_addr_a[6]),
        .I3(bram_addr_a[2]),
        .O(\s_axi_reg_araddr[4]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT2 #(
    .INIT(4'h1)) 
    cfg_8bit_dat_i_3
       (.I0(bram_addr_a[3]),
        .I1(bram_addr_a[5]),
        .O(\s_axi_reg_araddr[3]_0 ));
  FDRE cfg_8bit_dat_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(cfg_8bit_dat_reg_0),
        .Q(cfg_8bit_dat),
        .R(clear));
  LUT6 #(
    .INIT(64'hFFFDFFFFFFFFFFFF)) 
    cfg_avg_en_i_2__0
       (.I0(bram_addr_a[5]),
        .I1(bram_addr_a[6]),
        .I2(bram_addr_a[7]),
        .I3(bram_addr_a[1]),
        .I4(bram_addr_a[4]),
        .I5(bram_addr_a[3]),
        .O(\s_axi_reg_araddr[5] ));
  FDRE cfg_avg_en_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(cfg_avg_en_reg_0),
        .Q(cfg_avg_en),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \cfg_calib_gain[15]_i_1__0 
       (.I0(bram_addr_a[4]),
        .I1(osc2_reg_wr_we),
        .I2(\cfg_trig_pre_samp_reg[0]_0 ),
        .I3(bram_addr_a[6]),
        .I4(\cfg_calib_gain[15]_i_2_n_0 ),
        .I5(\s_axi_reg_araddr[7]_1 ),
        .O(cfg_calib_gain0));
  LUT2 #(
    .INIT(4'hE)) 
    \cfg_calib_gain[15]_i_2 
       (.I0(bram_addr_a[2]),
        .I1(bram_addr_a[5]),
        .O(\cfg_calib_gain[15]_i_2_n_0 ));
  FDRE \cfg_calib_gain_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[0]),
        .Q(cfg_calib_gain[0]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[10]),
        .Q(cfg_calib_gain[10]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[11]),
        .Q(cfg_calib_gain[11]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[12]),
        .Q(cfg_calib_gain[12]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[13]),
        .Q(cfg_calib_gain[13]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[14]),
        .Q(cfg_calib_gain[14]),
        .R(clear));
  FDSE \cfg_calib_gain_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[15]),
        .Q(cfg_calib_gain[15]),
        .S(clear));
  FDRE \cfg_calib_gain_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[1]),
        .Q(cfg_calib_gain[1]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[2]),
        .Q(cfg_calib_gain[2]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[3]),
        .Q(cfg_calib_gain[3]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[4]),
        .Q(cfg_calib_gain[4]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[5]),
        .Q(cfg_calib_gain[5]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[6]),
        .Q(cfg_calib_gain[6]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[7]),
        .Q(cfg_calib_gain[7]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[8]),
        .Q(cfg_calib_gain[8]),
        .R(clear));
  FDRE \cfg_calib_gain_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_gain0),
        .D(bram_wrdata_a[9]),
        .Q(cfg_calib_gain[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \cfg_calib_offset[15]_i_1__0 
       (.I0(bram_addr_a[4]),
        .I1(bram_addr_a[2]),
        .I2(osc2_reg_wr_we),
        .I3(bram_addr_a[6]),
        .I4(bram_addr_a[7]),
        .I5(\s_axi_reg_araddr[3] ),
        .O(cfg_calib_offset0));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT4 #(
    .INIT(16'hEFFF)) 
    \cfg_calib_offset[15]_i_2 
       (.I0(bram_addr_a[0]),
        .I1(bram_addr_a[1]),
        .I2(bram_addr_a[3]),
        .I3(bram_addr_a[5]),
        .O(\s_axi_reg_araddr[3] ));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_calib_offset[15]_i_2__0 
       (.I0(bram_addr_a[4]),
        .I1(bram_addr_a[5]),
        .O(\s_axi_reg_araddr[4] ));
  FDRE \cfg_calib_offset_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[0]),
        .Q(cfg_calib_offset[0]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[10]),
        .Q(cfg_calib_offset[10]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[11]),
        .Q(cfg_calib_offset[11]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[12]),
        .Q(cfg_calib_offset[12]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[13]),
        .Q(cfg_calib_offset[13]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[14]),
        .Q(cfg_calib_offset[14]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[15]),
        .Q(cfg_calib_offset[15]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[1]),
        .Q(cfg_calib_offset[1]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[2]),
        .Q(cfg_calib_offset[2]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[3]),
        .Q(cfg_calib_offset[3]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[4]),
        .Q(cfg_calib_offset[4]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[5]),
        .Q(cfg_calib_offset[5]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[6]),
        .Q(cfg_calib_offset[6]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[7]),
        .Q(cfg_calib_offset[7]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[8]),
        .Q(cfg_calib_offset[8]),
        .R(clear));
  FDRE \cfg_calib_offset_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_calib_offset0),
        .D(bram_wrdata_a[9]),
        .Q(cfg_calib_offset[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    \cfg_dec_factor[16]_i_1__0 
       (.I0(\cfg_trig_pre_samp_reg[0]_0 ),
        .I1(\s_axi_reg_araddr[4] ),
        .I2(bram_addr_a[3]),
        .I3(osc2_reg_wr_we),
        .I4(bram_addr_a[2]),
        .I5(\cfg_dec_factor_reg[0]_0 ),
        .O(cfg_dec_factor0));
  FDRE \cfg_dec_factor_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[0]),
        .Q(cfg_dec_factor[0]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[10]),
        .Q(cfg_dec_factor[10]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[11]),
        .Q(cfg_dec_factor[11]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[12]),
        .Q(cfg_dec_factor[12]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[13]),
        .Q(cfg_dec_factor[13]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[14]),
        .Q(cfg_dec_factor[14]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[15]),
        .Q(cfg_dec_factor[15]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[16]),
        .Q(cfg_dec_factor[16]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[1]),
        .Q(cfg_dec_factor[1]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[2]),
        .Q(cfg_dec_factor[2]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[3]),
        .Q(cfg_dec_factor[3]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[4]),
        .Q(cfg_dec_factor[4]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[5]),
        .Q(cfg_dec_factor[5]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[6]),
        .Q(cfg_dec_factor[6]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[7]),
        .Q(cfg_dec_factor[7]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[8]),
        .Q(cfg_dec_factor[8]),
        .R(clear));
  FDRE \cfg_dec_factor_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_factor0),
        .D(bram_wrdata_a[9]),
        .Q(cfg_dec_factor[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    \cfg_dec_rshift[3]_i_1__0 
       (.I0(bram_addr_a[3]),
        .I1(\cfg_trig_pre_samp_reg[0]_0 ),
        .I2(osc2_reg_wr_we),
        .I3(bram_addr_a[2]),
        .I4(\s_axi_reg_araddr[4] ),
        .I5(\cfg_dec_factor_reg[0]_0 ),
        .O(cfg_dec_rshift0));
  FDRE \cfg_dec_rshift_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_rshift0),
        .D(bram_wrdata_a[0]),
        .Q(cfg_dec_rshift[0]),
        .R(clear));
  FDRE \cfg_dec_rshift_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_rshift0),
        .D(bram_wrdata_a[1]),
        .Q(cfg_dec_rshift[1]),
        .R(clear));
  FDRE \cfg_dec_rshift_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_rshift0),
        .D(bram_wrdata_a[2]),
        .Q(cfg_dec_rshift[2]),
        .R(clear));
  FDRE \cfg_dec_rshift_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dec_rshift0),
        .D(bram_wrdata_a[3]),
        .Q(cfg_dec_rshift[3]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    \cfg_dma_buf_size[31]_i_1__0 
       (.I0(i_dfilt_n_20),
        .I1(bram_addr_a[7]),
        .I2(osc2_reg_wr_we),
        .I3(bram_addr_a[2]),
        .I4(bram_addr_a[3]),
        .I5(bram_addr_a[4]),
        .O(cfg_dma_buf_size0));
  FDRE \cfg_dma_buf_size_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[0]),
        .Q(cfg_dma_buf_size[0]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[10]),
        .Q(cfg_dma_buf_size[10]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[11]),
        .Q(cfg_dma_buf_size[11]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[12]),
        .Q(cfg_dma_buf_size[12]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[13]),
        .Q(cfg_dma_buf_size[13]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[14]),
        .Q(cfg_dma_buf_size[14]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[15]),
        .Q(cfg_dma_buf_size[15]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[16]),
        .Q(cfg_dma_buf_size[16]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[17]),
        .Q(cfg_dma_buf_size[17]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[18]),
        .Q(cfg_dma_buf_size[18]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[19]),
        .Q(cfg_dma_buf_size[19]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[1]),
        .Q(cfg_dma_buf_size[1]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[20]),
        .Q(cfg_dma_buf_size[20]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[21]),
        .Q(cfg_dma_buf_size[21]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[22]),
        .Q(cfg_dma_buf_size[22]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[23]),
        .Q(cfg_dma_buf_size[23]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[24]),
        .Q(cfg_dma_buf_size[24]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[25]),
        .Q(cfg_dma_buf_size[25]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[26]),
        .Q(cfg_dma_buf_size[26]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[27]),
        .Q(cfg_dma_buf_size[27]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[28]),
        .Q(cfg_dma_buf_size[28]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[29]),
        .Q(cfg_dma_buf_size[29]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[2]),
        .Q(cfg_dma_buf_size[2]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[30]),
        .Q(cfg_dma_buf_size[30]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[31]),
        .Q(cfg_dma_buf_size[31]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[3]),
        .Q(cfg_dma_buf_size[3]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[4]),
        .Q(cfg_dma_buf_size[4]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[5]),
        .Q(cfg_dma_buf_size[5]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[6]),
        .Q(cfg_dma_buf_size[6]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[7]),
        .Q(cfg_dma_buf_size[7]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[8]),
        .Q(cfg_dma_buf_size[8]),
        .R(clear));
  FDRE \cfg_dma_buf_size_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_buf_size0),
        .D(bram_wrdata_a[9]),
        .Q(cfg_dma_buf_size[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \cfg_dma_dst_addr1[31]_i_1__0 
       (.I0(\cfg_dma_dst_addr1[31]_i_2_n_0 ),
        .I1(\cfg_dma_dst_addr1_reg[0]_0 ),
        .I2(bram_addr_a[6]),
        .I3(bram_addr_a[2]),
        .I4(osc2_reg_wr_we),
        .I5(\s_axi_reg_araddr[7] ),
        .O(cfg_dma_dst_addr10));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_dma_dst_addr1[31]_i_2 
       (.I0(bram_addr_a[5]),
        .I1(bram_addr_a[3]),
        .O(\cfg_dma_dst_addr1[31]_i_2_n_0 ));
  FDRE \cfg_dma_dst_addr1_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[0]),
        .Q(cfg_dma_dst_addr1[0]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[10]),
        .Q(cfg_dma_dst_addr1[10]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[11]),
        .Q(cfg_dma_dst_addr1[11]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[12]),
        .Q(cfg_dma_dst_addr1[12]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[13]),
        .Q(cfg_dma_dst_addr1[13]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[14]),
        .Q(cfg_dma_dst_addr1[14]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[15]),
        .Q(cfg_dma_dst_addr1[15]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[16]),
        .Q(cfg_dma_dst_addr1[16]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[17]),
        .Q(cfg_dma_dst_addr1[17]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[18]),
        .Q(cfg_dma_dst_addr1[18]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[19]),
        .Q(cfg_dma_dst_addr1[19]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[1]),
        .Q(cfg_dma_dst_addr1[1]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[20]),
        .Q(cfg_dma_dst_addr1[20]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[21]),
        .Q(cfg_dma_dst_addr1[21]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[22]),
        .Q(cfg_dma_dst_addr1[22]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[23]),
        .Q(cfg_dma_dst_addr1[23]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[24]),
        .Q(cfg_dma_dst_addr1[24]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[25]),
        .Q(cfg_dma_dst_addr1[25]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[26]),
        .Q(cfg_dma_dst_addr1[26]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[27]),
        .Q(cfg_dma_dst_addr1[27]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[28]),
        .Q(cfg_dma_dst_addr1[28]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[29]),
        .Q(cfg_dma_dst_addr1[29]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[2]),
        .Q(cfg_dma_dst_addr1[2]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[30]),
        .Q(cfg_dma_dst_addr1[30]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[31]),
        .Q(cfg_dma_dst_addr1[31]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[3]),
        .Q(cfg_dma_dst_addr1[3]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[4]),
        .Q(cfg_dma_dst_addr1[4]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[5]),
        .Q(cfg_dma_dst_addr1[5]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[6]),
        .Q(cfg_dma_dst_addr1[6]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[7]),
        .Q(cfg_dma_dst_addr1[7]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[8]),
        .Q(cfg_dma_dst_addr1[8]),
        .R(clear));
  FDRE \cfg_dma_dst_addr1_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_dma_dst_addr10),
        .D(bram_wrdata_a[9]),
        .Q(cfg_dma_dst_addr1[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000040000000000)) 
    \cfg_dma_dst_addr2[31]_i_1__0 
       (.I0(\cfg_trig_pre_samp_reg[0]_0 ),
        .I1(\s_axi_reg_araddr[4] ),
        .I2(bram_addr_a[3]),
        .I3(osc2_reg_wr_we),
        .I4(bram_addr_a[2]),
        .I5(\cfg_dma_dst_addr2[31]_i_2__0_n_0 ),
        .O(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \cfg_dma_dst_addr2[31]_i_2__0 
       (.I0(bram_addr_a[6]),
        .I1(bram_addr_a[7]),
        .O(\cfg_dma_dst_addr2[31]_i_2__0_n_0 ));
  FDRE \cfg_dma_dst_addr2_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[0]),
        .Q(cfg_dma_dst_addr2[0]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[10]),
        .Q(cfg_dma_dst_addr2[10]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[11]),
        .Q(cfg_dma_dst_addr2[11]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[12]),
        .Q(cfg_dma_dst_addr2[12]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[13]),
        .Q(cfg_dma_dst_addr2[13]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[14]),
        .Q(cfg_dma_dst_addr2[14]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[15]),
        .Q(cfg_dma_dst_addr2[15]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[16]),
        .Q(cfg_dma_dst_addr2[16]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[17]),
        .Q(cfg_dma_dst_addr2[17]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[18]),
        .Q(cfg_dma_dst_addr2[18]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[19]),
        .Q(cfg_dma_dst_addr2[19]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[1]),
        .Q(cfg_dma_dst_addr2[1]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[20]),
        .Q(cfg_dma_dst_addr2[20]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[21]),
        .Q(cfg_dma_dst_addr2[21]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[22]),
        .Q(cfg_dma_dst_addr2[22]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[23]),
        .Q(cfg_dma_dst_addr2[23]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[24]),
        .Q(cfg_dma_dst_addr2[24]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[25]),
        .Q(cfg_dma_dst_addr2[25]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[26]),
        .Q(cfg_dma_dst_addr2[26]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[27]),
        .Q(cfg_dma_dst_addr2[27]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[28]),
        .Q(cfg_dma_dst_addr2[28]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[29]),
        .Q(cfg_dma_dst_addr2[29]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[2]),
        .Q(cfg_dma_dst_addr2[2]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[30]),
        .Q(cfg_dma_dst_addr2[30]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[31]),
        .Q(cfg_dma_dst_addr2[31]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[3]),
        .Q(cfg_dma_dst_addr2[3]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[4]),
        .Q(cfg_dma_dst_addr2[4]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[5]),
        .Q(cfg_dma_dst_addr2[5]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[6]),
        .Q(cfg_dma_dst_addr2[6]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[7]),
        .Q(cfg_dma_dst_addr2[7]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[8]),
        .Q(cfg_dma_dst_addr2[8]),
        .R(clear));
  FDRE \cfg_dma_dst_addr2_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(\cfg_dma_dst_addr2[31]_i_1__0_n_0 ),
        .D(bram_wrdata_a[9]),
        .Q(cfg_dma_dst_addr2[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \cfg_event_sel[0]_i_1__0 
       (.I0(bram_wrdata_a[0]),
        .I1(event_op_reset_i_3__0_n_0),
        .I2(bram_addr_a[2]),
        .I3(osc2_reg_wr_we),
        .I4(bram_addr_a[3]),
        .I5(cfg_event_sel[0]),
        .O(\cfg_event_sel[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \cfg_event_sel[1]_i_1__0 
       (.I0(bram_wrdata_a[1]),
        .I1(event_op_reset_i_3__0_n_0),
        .I2(bram_addr_a[2]),
        .I3(osc2_reg_wr_we),
        .I4(bram_addr_a[3]),
        .I5(cfg_event_sel[1]),
        .O(\cfg_event_sel[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \cfg_event_sel[2]_i_1__0 
       (.I0(bram_wrdata_a[2]),
        .I1(event_op_reset_i_3__0_n_0),
        .I2(bram_addr_a[2]),
        .I3(osc2_reg_wr_we),
        .I4(bram_addr_a[3]),
        .I5(cfg_event_sel[2]),
        .O(\cfg_event_sel[2]_i_1__0_n_0 ));
  FDRE \cfg_event_sel_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\cfg_event_sel[0]_i_1__0_n_0 ),
        .Q(cfg_event_sel[0]),
        .R(clear));
  FDRE \cfg_event_sel_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\cfg_event_sel[1]_i_1__0_n_0 ),
        .Q(cfg_event_sel[1]),
        .R(clear));
  FDRE \cfg_event_sel_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\cfg_event_sel[2]_i_1__0_n_0 ),
        .Q(cfg_event_sel[2]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0F1F1F1F1F1F1F1F)) 
    cfg_filt_bypass_i_2__0
       (.I0(U_dma_s2mm_n_235),
        .I1(U_dma_s2mm_n_234),
        .I2(bram_addr_a[2]),
        .I3(bram_addr_a[5]),
        .I4(bram_addr_a[3]),
        .I5(\s_axi_reg_araddr[4]_0 ),
        .O(\s_axi_reg_araddr[2] ));
  FDSE cfg_filt_bypass_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(cfg_filt_bypass_reg_0),
        .Q(cfg_filt_bypass),
        .S(clear));
  FDRE \cfg_filt_coeff_aa_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[0]),
        .Q(p_4_in[0]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[10]),
        .Q(p_4_in[10]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[11]),
        .Q(p_4_in[11]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[12]),
        .Q(p_4_in[12]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[13]),
        .Q(p_4_in[13]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[14]),
        .Q(p_4_in[14]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[15]),
        .Q(p_4_in[15]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[16]),
        .Q(p_4_in[16]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[17]),
        .Q(p_4_in[17]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[1]),
        .Q(p_4_in[1]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[2]),
        .Q(p_4_in[2]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[3]),
        .Q(p_4_in[3]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[4]),
        .Q(p_4_in[4]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[5]),
        .Q(p_4_in[5]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[6]),
        .Q(p_4_in[6]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[7]),
        .Q(p_4_in[7]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[8]),
        .Q(p_4_in[8]),
        .R(clear));
  FDRE \cfg_filt_coeff_aa_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_aa0),
        .D(bram_wrdata_a[9]),
        .Q(p_4_in[9]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[0]),
        .Q(p_3_in[0]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[10]),
        .Q(p_3_in[10]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[11]),
        .Q(p_3_in[11]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[12]),
        .Q(p_3_in[12]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[13]),
        .Q(p_3_in[13]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[14]),
        .Q(p_3_in[14]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[15]),
        .Q(p_3_in[15]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[16]),
        .Q(p_3_in[16]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[17]),
        .Q(p_3_in[17]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[18]),
        .Q(p_3_in[18]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[19]),
        .Q(p_3_in[19]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[1]),
        .Q(p_3_in[1]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[20]),
        .Q(p_3_in[20]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[21]),
        .Q(p_3_in[21]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[22]),
        .Q(p_3_in[22]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[23]),
        .Q(p_3_in[23]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[24]),
        .Q(p_3_in[24]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[2]),
        .Q(p_3_in[2]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[3]),
        .Q(p_3_in[3]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[4]),
        .Q(p_3_in[4]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[5]),
        .Q(p_3_in[5]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[6]),
        .Q(p_3_in[6]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[7]),
        .Q(p_3_in[7]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[8]),
        .Q(p_3_in[8]),
        .R(clear));
  FDRE \cfg_filt_coeff_bb_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_bb0),
        .D(bram_wrdata_a[9]),
        .Q(p_3_in[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \cfg_filt_coeff_kk[24]_i_1__0 
       (.I0(i_dfilt_n_19),
        .I1(bram_addr_a[4]),
        .I2(bram_addr_a[3]),
        .I3(osc2_reg_wr_we),
        .I4(bram_addr_a[7]),
        .I5(bram_addr_a[6]),
        .O(cfg_filt_coeff_kk0));
  FDSE \cfg_filt_coeff_kk_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[0]),
        .Q(p_2_in[0]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[10]),
        .Q(p_2_in[10]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[11]),
        .Q(p_2_in[11]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[12]),
        .Q(p_2_in[12]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[13]),
        .Q(p_2_in[13]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[14]),
        .Q(p_2_in[14]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[15]),
        .Q(p_2_in[15]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[16]),
        .Q(p_2_in[16]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[17]),
        .Q(p_2_in[17]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[18]),
        .Q(p_2_in[18]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[19]),
        .Q(p_2_in[19]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[1]),
        .Q(p_2_in[1]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[20]),
        .Q(p_2_in[20]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[21]),
        .Q(p_2_in[21]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[22]),
        .Q(p_2_in[22]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[23]),
        .Q(p_2_in[23]),
        .S(clear));
  FDRE \cfg_filt_coeff_kk_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[24]),
        .Q(p_2_in[24]),
        .R(clear));
  FDSE \cfg_filt_coeff_kk_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[2]),
        .Q(p_2_in[2]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[3]),
        .Q(p_2_in[3]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[4]),
        .Q(p_2_in[4]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[5]),
        .Q(p_2_in[5]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[6]),
        .Q(p_2_in[6]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[7]),
        .Q(p_2_in[7]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[8]),
        .Q(p_2_in[8]),
        .S(clear));
  FDSE \cfg_filt_coeff_kk_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_kk0),
        .D(bram_wrdata_a[9]),
        .Q(p_2_in[9]),
        .S(clear));
  FDRE \cfg_filt_coeff_pp_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[0]),
        .Q(p_1_in[0]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[10]),
        .Q(p_1_in[10]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[11]),
        .Q(p_1_in[11]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[12]),
        .Q(p_1_in[12]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[13]),
        .Q(p_1_in[13]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[14]),
        .Q(p_1_in[14]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[15]),
        .Q(p_1_in[15]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[16]),
        .Q(p_1_in[16]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[17]),
        .Q(p_1_in[17]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[18]),
        .Q(p_1_in[18]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[19]),
        .Q(p_1_in[19]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[1]),
        .Q(p_1_in[1]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[20]),
        .Q(p_1_in[20]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[21]),
        .Q(p_1_in[21]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[22]),
        .Q(p_1_in[22]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[23]),
        .Q(p_1_in[23]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[24]),
        .Q(p_1_in[24]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[2]),
        .Q(p_1_in[2]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[3]),
        .Q(p_1_in[3]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[4]),
        .Q(p_1_in[4]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[5]),
        .Q(p_1_in[5]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[6]),
        .Q(p_1_in[6]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[7]),
        .Q(p_1_in[7]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[8]),
        .Q(p_1_in[8]),
        .R(clear));
  FDRE \cfg_filt_coeff_pp_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_filt_coeff_pp0),
        .D(bram_wrdata_a[9]),
        .Q(p_1_in[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    \cfg_loopback[15]_i_1 
       (.I0(bram_addr_a[2]),
        .I1(osc2_reg_wr_we),
        .I2(bram_addr_a[3]),
        .I3(i_dfilt_n_20),
        .I4(bram_addr_a[4]),
        .I5(bram_addr_a[7]),
        .O(cfg_loopback0));
  FDRE \cfg_loopback_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[0]),
        .Q(\cfg_loopback_reg_n_0_[0] ),
        .R(clear));
  FDRE \cfg_loopback_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[10]),
        .Q(\cfg_loopback_reg_n_0_[10] ),
        .R(clear));
  FDRE \cfg_loopback_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[11]),
        .Q(\cfg_loopback_reg_n_0_[11] ),
        .R(clear));
  FDRE \cfg_loopback_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[12]),
        .Q(\cfg_loopback_reg_n_0_[12] ),
        .R(clear));
  FDRE \cfg_loopback_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[13]),
        .Q(\cfg_loopback_reg_n_0_[13] ),
        .R(clear));
  FDRE \cfg_loopback_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[14]),
        .Q(\cfg_loopback_reg_n_0_[14] ),
        .R(clear));
  FDRE \cfg_loopback_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[15]),
        .Q(\cfg_loopback_reg_n_0_[15] ),
        .R(clear));
  FDRE \cfg_loopback_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[1]),
        .Q(\cfg_loopback_reg_n_0_[1] ),
        .R(clear));
  FDRE \cfg_loopback_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[2]),
        .Q(\cfg_loopback_reg_n_0_[2] ),
        .R(clear));
  FDRE \cfg_loopback_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[3]),
        .Q(\cfg_loopback_reg_n_0_[3] ),
        .R(clear));
  FDRE \cfg_loopback_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[4]),
        .Q(\cfg_loopback_reg_n_0_[4] ),
        .R(clear));
  FDRE \cfg_loopback_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[5]),
        .Q(\cfg_loopback_reg_n_0_[5] ),
        .R(clear));
  FDRE \cfg_loopback_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[6]),
        .Q(\cfg_loopback_reg_n_0_[6] ),
        .R(clear));
  FDRE \cfg_loopback_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[7]),
        .Q(\cfg_loopback_reg_n_0_[7] ),
        .R(clear));
  FDRE \cfg_loopback_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[8]),
        .Q(\cfg_loopback_reg_n_0_[8] ),
        .R(clear));
  FDRE \cfg_loopback_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_loopback0),
        .D(bram_wrdata_a[9]),
        .Q(\cfg_loopback_reg_n_0_[9] ),
        .R(clear));
  LUT6 #(
    .INIT(64'hFFFEFFFFFFFFFFFF)) 
    cfg_trig_edge_i_2__0
       (.I0(bram_addr_a[7]),
        .I1(bram_addr_a[1]),
        .I2(bram_addr_a[4]),
        .I3(bram_addr_a[6]),
        .I4(bram_addr_a[3]),
        .I5(bram_addr_a[5]),
        .O(\s_axi_reg_araddr[7]_0 ));
  FDRE cfg_trig_edge_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(cfg_trig_edge_reg_0),
        .Q(cfg_trig_edge),
        .R(clear));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    \cfg_trig_high_level[15]_i_1__0 
       (.I0(\cfg_trig_high_level[15]_i_2_n_0 ),
        .I1(bram_addr_a[0]),
        .I2(bram_addr_a[5]),
        .I3(bram_addr_a[3]),
        .I4(osc2_reg_wr_we),
        .I5(bram_addr_a[2]),
        .O(cfg_trig_high_level0));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \cfg_trig_high_level[15]_i_2 
       (.I0(bram_addr_a[6]),
        .I1(bram_addr_a[4]),
        .I2(bram_addr_a[1]),
        .I3(bram_addr_a[7]),
        .O(\cfg_trig_high_level[15]_i_2_n_0 ));
  FDRE \cfg_trig_high_level_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[0]),
        .Q(cfg_trig_high_level[0]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[10]),
        .Q(cfg_trig_high_level[10]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[11]),
        .Q(cfg_trig_high_level[11]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[12]),
        .Q(cfg_trig_high_level[12]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[13]),
        .Q(cfg_trig_high_level[13]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[14]),
        .Q(cfg_trig_high_level[14]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[15]),
        .Q(cfg_trig_high_level[15]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[1]),
        .Q(cfg_trig_high_level[1]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[2]),
        .Q(cfg_trig_high_level[2]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[3]),
        .Q(cfg_trig_high_level[3]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[4]),
        .Q(cfg_trig_high_level[4]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[5]),
        .Q(cfg_trig_high_level[5]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[6]),
        .Q(cfg_trig_high_level[6]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[7]),
        .Q(cfg_trig_high_level[7]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[8]),
        .Q(cfg_trig_high_level[8]),
        .R(clear));
  FDRE \cfg_trig_high_level_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_high_level0),
        .D(bram_wrdata_a[9]),
        .Q(cfg_trig_high_level[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \cfg_trig_low_level[15]_i_1__0 
       (.I0(bram_addr_a[2]),
        .I1(osc2_reg_wr_we),
        .I2(bram_addr_a[3]),
        .I3(\cfg_trig_low_level[15]_i_2_n_0 ),
        .I4(bram_addr_a[0]),
        .I5(bram_addr_a[4]),
        .O(cfg_trig_low_level0));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    \cfg_trig_low_level[15]_i_2 
       (.I0(bram_addr_a[1]),
        .I1(bram_addr_a[7]),
        .I2(bram_addr_a[6]),
        .I3(bram_addr_a[5]),
        .O(\cfg_trig_low_level[15]_i_2_n_0 ));
  FDRE \cfg_trig_low_level_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[0]),
        .Q(cfg_trig_low_level[0]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[10]),
        .Q(cfg_trig_low_level[10]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[11]),
        .Q(cfg_trig_low_level[11]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[12]),
        .Q(cfg_trig_low_level[12]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[13]),
        .Q(cfg_trig_low_level[13]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[14]),
        .Q(cfg_trig_low_level[14]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[15]),
        .Q(cfg_trig_low_level[15]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[1]),
        .Q(cfg_trig_low_level[1]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[2]),
        .Q(cfg_trig_low_level[2]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[3]),
        .Q(cfg_trig_low_level[3]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[4]),
        .Q(cfg_trig_low_level[4]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[5]),
        .Q(cfg_trig_low_level[5]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[6]),
        .Q(cfg_trig_low_level[6]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[7]),
        .Q(cfg_trig_low_level[7]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[8]),
        .Q(cfg_trig_low_level[8]),
        .R(clear));
  FDRE \cfg_trig_low_level_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_low_level0),
        .D(bram_wrdata_a[9]),
        .Q(cfg_trig_low_level[9]),
        .R(clear));
  LUT4 #(
    .INIT(16'h0800)) 
    \cfg_trig_mask[5]_i_1__0 
       (.I0(event_op_reset_i_3__0_n_0),
        .I1(bram_addr_a[3]),
        .I2(bram_addr_a[2]),
        .I3(osc2_reg_wr_we),
        .O(cfg_trig_mask0));
  FDRE \cfg_trig_mask_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_mask0),
        .D(bram_wrdata_a[0]),
        .Q(cfg_trig_mask[0]),
        .R(clear));
  FDRE \cfg_trig_mask_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_mask0),
        .D(bram_wrdata_a[1]),
        .Q(cfg_trig_mask[1]),
        .R(clear));
  FDRE \cfg_trig_mask_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_mask0),
        .D(bram_wrdata_a[2]),
        .Q(cfg_trig_mask[2]),
        .R(clear));
  FDRE \cfg_trig_mask_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_mask0),
        .D(bram_wrdata_a[3]),
        .Q(cfg_trig_mask[3]),
        .R(clear));
  FDRE \cfg_trig_mask_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_mask0),
        .D(bram_wrdata_a[4]),
        .Q(cfg_trig_mask[4]),
        .R(clear));
  FDRE \cfg_trig_mask_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_mask0),
        .D(bram_wrdata_a[5]),
        .Q(cfg_trig_mask[5]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \cfg_trig_post_samp[31]_i_1__0 
       (.I0(i_dfilt_n_21),
        .I1(osc2_reg_wr_we),
        .I2(bram_addr_a[2]),
        .I3(bram_addr_a[4]),
        .I4(bram_addr_a[7]),
        .I5(bram_addr_a[6]),
        .O(cfg_trig_post_samp0));
  FDRE \cfg_trig_post_samp_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[0]),
        .Q(cfg_trig_post_samp[0]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[10]),
        .Q(cfg_trig_post_samp[10]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[11]),
        .Q(cfg_trig_post_samp[11]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[12]),
        .Q(cfg_trig_post_samp[12]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[13]),
        .Q(cfg_trig_post_samp[13]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[14]),
        .Q(cfg_trig_post_samp[14]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[15]),
        .Q(cfg_trig_post_samp[15]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[16]),
        .Q(cfg_trig_post_samp[16]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[17]),
        .Q(cfg_trig_post_samp[17]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[18]),
        .Q(cfg_trig_post_samp[18]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[19]),
        .Q(cfg_trig_post_samp[19]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[1]),
        .Q(cfg_trig_post_samp[1]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[20]),
        .Q(cfg_trig_post_samp[20]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[21]),
        .Q(cfg_trig_post_samp[21]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[22]),
        .Q(cfg_trig_post_samp[22]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[23]),
        .Q(cfg_trig_post_samp[23]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[24]),
        .Q(cfg_trig_post_samp[24]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[25]),
        .Q(cfg_trig_post_samp[25]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[26]),
        .Q(cfg_trig_post_samp[26]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[27]),
        .Q(cfg_trig_post_samp[27]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[28]),
        .Q(cfg_trig_post_samp[28]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[29]),
        .Q(cfg_trig_post_samp[29]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[2]),
        .Q(cfg_trig_post_samp[2]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[30]),
        .Q(cfg_trig_post_samp[30]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[31]),
        .Q(cfg_trig_post_samp[31]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[3]),
        .Q(cfg_trig_post_samp[3]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[4]),
        .Q(cfg_trig_post_samp[4]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[5]),
        .Q(cfg_trig_post_samp[5]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[6]),
        .Q(cfg_trig_post_samp[6]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[7]),
        .Q(cfg_trig_post_samp[7]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[8]),
        .Q(cfg_trig_post_samp[8]),
        .R(clear));
  FDRE \cfg_trig_post_samp_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_post_samp0),
        .D(bram_wrdata_a[9]),
        .Q(cfg_trig_post_samp[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \cfg_trig_pre_samp[31]_i_1__0 
       (.I0(\cfg_trig_pre_samp_reg[0]_0 ),
        .I1(bram_addr_a[5]),
        .I2(bram_addr_a[3]),
        .I3(osc2_reg_wr_we),
        .I4(bram_addr_a[2]),
        .I5(\cfg_trig_pre_samp[31]_i_2_n_0 ),
        .O(cfg_trig_pre_samp0));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \cfg_trig_pre_samp[31]_i_2 
       (.I0(bram_addr_a[6]),
        .I1(bram_addr_a[7]),
        .I2(bram_addr_a[4]),
        .O(\cfg_trig_pre_samp[31]_i_2_n_0 ));
  FDRE \cfg_trig_pre_samp_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[0]),
        .Q(cfg_trig_pre_samp[0]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[10]),
        .Q(cfg_trig_pre_samp[10]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[11]),
        .Q(cfg_trig_pre_samp[11]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[12]),
        .Q(cfg_trig_pre_samp[12]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[13]),
        .Q(cfg_trig_pre_samp[13]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[14]),
        .Q(cfg_trig_pre_samp[14]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[15]),
        .Q(cfg_trig_pre_samp[15]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[16]),
        .Q(cfg_trig_pre_samp[16]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[17]),
        .Q(cfg_trig_pre_samp[17]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[18]),
        .Q(cfg_trig_pre_samp[18]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[19]),
        .Q(cfg_trig_pre_samp[19]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[1]),
        .Q(cfg_trig_pre_samp[1]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[20]),
        .Q(cfg_trig_pre_samp[20]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[21]),
        .Q(cfg_trig_pre_samp[21]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[22]),
        .Q(cfg_trig_pre_samp[22]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[23]),
        .Q(cfg_trig_pre_samp[23]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[24]),
        .Q(cfg_trig_pre_samp[24]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[25]),
        .Q(cfg_trig_pre_samp[25]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[26]),
        .Q(cfg_trig_pre_samp[26]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[27]),
        .Q(cfg_trig_pre_samp[27]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[28]),
        .Q(cfg_trig_pre_samp[28]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[29]),
        .Q(cfg_trig_pre_samp[29]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[2]),
        .Q(cfg_trig_pre_samp[2]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[30]),
        .Q(cfg_trig_pre_samp[30]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[31]),
        .Q(cfg_trig_pre_samp[31]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[3]),
        .Q(cfg_trig_pre_samp[3]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[4]),
        .Q(cfg_trig_pre_samp[4]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[5]),
        .Q(cfg_trig_pre_samp[5]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[6]),
        .Q(cfg_trig_pre_samp[6]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[7]),
        .Q(cfg_trig_pre_samp[7]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[8]),
        .Q(cfg_trig_pre_samp[8]),
        .R(clear));
  FDRE \cfg_trig_pre_samp_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(cfg_trig_pre_samp0),
        .D(bram_wrdata_a[9]),
        .Q(cfg_trig_pre_samp[9]),
        .R(clear));
  LUT1 #(
    .INIT(2'h1)) 
    \clk_cnt[0]_i_2__0 
       (.I0(clk_cnt_reg[0]),
        .O(\clk_cnt[0]_i_2__0_n_0 ));
  FDRE \clk_cnt_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[0]_i_1__0_n_7 ),
        .Q(clk_cnt_reg[0]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[0]_i_1__0 
       (.CI(1'b0),
        .CO({\clk_cnt_reg[0]_i_1__0_n_0 ,\clk_cnt_reg[0]_i_1__0_n_1 ,\clk_cnt_reg[0]_i_1__0_n_2 ,\clk_cnt_reg[0]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\clk_cnt_reg[0]_i_1__0_n_4 ,\clk_cnt_reg[0]_i_1__0_n_5 ,\clk_cnt_reg[0]_i_1__0_n_6 ,\clk_cnt_reg[0]_i_1__0_n_7 }),
        .S({clk_cnt_reg[3:1],\clk_cnt[0]_i_2__0_n_0 }));
  FDRE \clk_cnt_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[8]_i_1__0_n_5 ),
        .Q(clk_cnt_reg[10]),
        .R(clear));
  FDRE \clk_cnt_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[8]_i_1__0_n_4 ),
        .Q(clk_cnt_reg[11]),
        .R(clear));
  FDRE \clk_cnt_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[12]_i_1__0_n_7 ),
        .Q(clk_cnt_reg[12]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[12]_i_1__0 
       (.CI(\clk_cnt_reg[8]_i_1__0_n_0 ),
        .CO({\clk_cnt_reg[12]_i_1__0_n_0 ,\clk_cnt_reg[12]_i_1__0_n_1 ,\clk_cnt_reg[12]_i_1__0_n_2 ,\clk_cnt_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_cnt_reg[12]_i_1__0_n_4 ,\clk_cnt_reg[12]_i_1__0_n_5 ,\clk_cnt_reg[12]_i_1__0_n_6 ,\clk_cnt_reg[12]_i_1__0_n_7 }),
        .S(clk_cnt_reg[15:12]));
  FDRE \clk_cnt_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[12]_i_1__0_n_6 ),
        .Q(clk_cnt_reg[13]),
        .R(clear));
  FDRE \clk_cnt_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[12]_i_1__0_n_5 ),
        .Q(clk_cnt_reg[14]),
        .R(clear));
  FDRE \clk_cnt_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[12]_i_1__0_n_4 ),
        .Q(clk_cnt_reg[15]),
        .R(clear));
  FDRE \clk_cnt_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[16]_i_1__0_n_7 ),
        .Q(clk_cnt_reg[16]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[16]_i_1__0 
       (.CI(\clk_cnt_reg[12]_i_1__0_n_0 ),
        .CO({\clk_cnt_reg[16]_i_1__0_n_0 ,\clk_cnt_reg[16]_i_1__0_n_1 ,\clk_cnt_reg[16]_i_1__0_n_2 ,\clk_cnt_reg[16]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_cnt_reg[16]_i_1__0_n_4 ,\clk_cnt_reg[16]_i_1__0_n_5 ,\clk_cnt_reg[16]_i_1__0_n_6 ,\clk_cnt_reg[16]_i_1__0_n_7 }),
        .S(clk_cnt_reg[19:16]));
  FDRE \clk_cnt_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[16]_i_1__0_n_6 ),
        .Q(clk_cnt_reg[17]),
        .R(clear));
  FDRE \clk_cnt_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[16]_i_1__0_n_5 ),
        .Q(clk_cnt_reg[18]),
        .R(clear));
  FDRE \clk_cnt_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[16]_i_1__0_n_4 ),
        .Q(clk_cnt_reg[19]),
        .R(clear));
  FDRE \clk_cnt_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[0]_i_1__0_n_6 ),
        .Q(clk_cnt_reg[1]),
        .R(clear));
  FDRE \clk_cnt_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[20]_i_1__0_n_7 ),
        .Q(clk_cnt_reg[20]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[20]_i_1__0 
       (.CI(\clk_cnt_reg[16]_i_1__0_n_0 ),
        .CO({\clk_cnt_reg[20]_i_1__0_n_0 ,\clk_cnt_reg[20]_i_1__0_n_1 ,\clk_cnt_reg[20]_i_1__0_n_2 ,\clk_cnt_reg[20]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_cnt_reg[20]_i_1__0_n_4 ,\clk_cnt_reg[20]_i_1__0_n_5 ,\clk_cnt_reg[20]_i_1__0_n_6 ,\clk_cnt_reg[20]_i_1__0_n_7 }),
        .S(clk_cnt_reg[23:20]));
  FDRE \clk_cnt_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[20]_i_1__0_n_6 ),
        .Q(clk_cnt_reg[21]),
        .R(clear));
  FDRE \clk_cnt_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[20]_i_1__0_n_5 ),
        .Q(clk_cnt_reg[22]),
        .R(clear));
  FDRE \clk_cnt_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[20]_i_1__0_n_4 ),
        .Q(clk_cnt_reg[23]),
        .R(clear));
  FDRE \clk_cnt_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[24]_i_1__0_n_7 ),
        .Q(clk_cnt_reg[24]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[24]_i_1__0 
       (.CI(\clk_cnt_reg[20]_i_1__0_n_0 ),
        .CO({\clk_cnt_reg[24]_i_1__0_n_0 ,\clk_cnt_reg[24]_i_1__0_n_1 ,\clk_cnt_reg[24]_i_1__0_n_2 ,\clk_cnt_reg[24]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_cnt_reg[24]_i_1__0_n_4 ,\clk_cnt_reg[24]_i_1__0_n_5 ,\clk_cnt_reg[24]_i_1__0_n_6 ,\clk_cnt_reg[24]_i_1__0_n_7 }),
        .S(clk_cnt_reg[27:24]));
  FDRE \clk_cnt_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[24]_i_1__0_n_6 ),
        .Q(clk_cnt_reg[25]),
        .R(clear));
  FDRE \clk_cnt_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[24]_i_1__0_n_5 ),
        .Q(clk_cnt_reg[26]),
        .R(clear));
  FDRE \clk_cnt_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[24]_i_1__0_n_4 ),
        .Q(clk_cnt_reg[27]),
        .R(clear));
  FDRE \clk_cnt_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[28]_i_1__0_n_7 ),
        .Q(clk_cnt_reg[28]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[28]_i_1__0 
       (.CI(\clk_cnt_reg[24]_i_1__0_n_0 ),
        .CO({\NLW_clk_cnt_reg[28]_i_1__0_CO_UNCONNECTED [3],\clk_cnt_reg[28]_i_1__0_n_1 ,\clk_cnt_reg[28]_i_1__0_n_2 ,\clk_cnt_reg[28]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_cnt_reg[28]_i_1__0_n_4 ,\clk_cnt_reg[28]_i_1__0_n_5 ,\clk_cnt_reg[28]_i_1__0_n_6 ,\clk_cnt_reg[28]_i_1__0_n_7 }),
        .S(clk_cnt_reg[31:28]));
  FDRE \clk_cnt_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[28]_i_1__0_n_6 ),
        .Q(clk_cnt_reg[29]),
        .R(clear));
  FDRE \clk_cnt_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[0]_i_1__0_n_5 ),
        .Q(clk_cnt_reg[2]),
        .R(clear));
  FDRE \clk_cnt_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[28]_i_1__0_n_5 ),
        .Q(clk_cnt_reg[30]),
        .R(clear));
  FDRE \clk_cnt_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[28]_i_1__0_n_4 ),
        .Q(clk_cnt_reg[31]),
        .R(clear));
  FDRE \clk_cnt_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[0]_i_1__0_n_4 ),
        .Q(clk_cnt_reg[3]),
        .R(clear));
  FDRE \clk_cnt_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[4]_i_1__0_n_7 ),
        .Q(clk_cnt_reg[4]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[4]_i_1__0 
       (.CI(\clk_cnt_reg[0]_i_1__0_n_0 ),
        .CO({\clk_cnt_reg[4]_i_1__0_n_0 ,\clk_cnt_reg[4]_i_1__0_n_1 ,\clk_cnt_reg[4]_i_1__0_n_2 ,\clk_cnt_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_cnt_reg[4]_i_1__0_n_4 ,\clk_cnt_reg[4]_i_1__0_n_5 ,\clk_cnt_reg[4]_i_1__0_n_6 ,\clk_cnt_reg[4]_i_1__0_n_7 }),
        .S(clk_cnt_reg[7:4]));
  FDRE \clk_cnt_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[4]_i_1__0_n_6 ),
        .Q(clk_cnt_reg[5]),
        .R(clear));
  FDRE \clk_cnt_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[4]_i_1__0_n_5 ),
        .Q(clk_cnt_reg[6]),
        .R(clear));
  FDRE \clk_cnt_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[4]_i_1__0_n_4 ),
        .Q(clk_cnt_reg[7]),
        .R(clear));
  FDRE \clk_cnt_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[8]_i_1__0_n_7 ),
        .Q(clk_cnt_reg[8]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \clk_cnt_reg[8]_i_1__0 
       (.CI(\clk_cnt_reg[4]_i_1__0_n_0 ),
        .CO({\clk_cnt_reg[8]_i_1__0_n_0 ,\clk_cnt_reg[8]_i_1__0_n_1 ,\clk_cnt_reg[8]_i_1__0_n_2 ,\clk_cnt_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_cnt_reg[8]_i_1__0_n_4 ,\clk_cnt_reg[8]_i_1__0_n_5 ,\clk_cnt_reg[8]_i_1__0_n_6 ,\clk_cnt_reg[8]_i_1__0_n_7 }),
        .S(clk_cnt_reg[11:8]));
  FDRE \clk_cnt_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\clk_cnt_reg[8]_i_1__0_n_6 ),
        .Q(clk_cnt_reg[9]),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    event_num_reset_i_1__0
       (.I0(event_ip_reset[4]),
        .I1(cfg_event_sel[2]),
        .I2(event_num_reset_i_2__0_n_0),
        .O(event_num_reset_i_1__0_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    event_num_reset_i_2__0
       (.I0(event_ip_reset[3]),
        .I1(event_ip_reset[2]),
        .I2(cfg_event_sel[1]),
        .I3(event_ip_reset[1]),
        .I4(cfg_event_sel[0]),
        .I5(event_ip_reset[0]),
        .O(event_num_reset_i_2__0_n_0));
  FDRE event_num_reset_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(event_num_reset_i_1__0_n_0),
        .Q(event_num_reset_reg_n_0),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    event_num_start_i_1__0
       (.I0(event_ip_start[4]),
        .I1(cfg_event_sel[2]),
        .I2(event_num_start_i_2__0_n_0),
        .O(event_num_start_i_1__0_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    event_num_start_i_2__0
       (.I0(event_ip_start[3]),
        .I1(event_ip_start[2]),
        .I2(cfg_event_sel[1]),
        .I3(event_ip_start[1]),
        .I4(cfg_event_sel[0]),
        .I5(event_ip_start[0]),
        .O(event_num_start_i_2__0_n_0));
  FDRE event_num_start_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(event_num_start_i_1__0_n_0),
        .Q(event_num_start),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    event_num_stop_i_1__0
       (.I0(event_ip_stop[4]),
        .I1(cfg_event_sel[2]),
        .I2(event_num_stop_i_2__0_n_0),
        .O(event_num_stop_i_1__0_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    event_num_stop_i_2__0
       (.I0(event_ip_stop[3]),
        .I1(event_ip_stop[2]),
        .I2(cfg_event_sel[1]),
        .I3(event_ip_stop[1]),
        .I4(cfg_event_sel[0]),
        .I5(event_ip_stop[0]),
        .O(event_num_stop_i_2__0_n_0));
  FDRE event_num_stop_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(event_num_stop_i_1__0_n_0),
        .Q(event_num_stop),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    event_num_trig_i_1__0
       (.I0(event_ip_trig[4]),
        .I1(cfg_event_sel[2]),
        .I2(event_num_trig_i_2__0_n_0),
        .O(event_num_trig_i_1__0_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    event_num_trig_i_2__0
       (.I0(event_ip_trig[3]),
        .I1(event_ip_trig[2]),
        .I2(cfg_event_sel[1]),
        .I3(event_ip_trig[1]),
        .I4(cfg_event_sel[0]),
        .I5(event_ip_trig[0]),
        .O(event_num_trig_i_2__0_n_0));
  FDRE event_num_trig_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(event_num_trig_i_1__0_n_0),
        .Q(event_num_trig),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT5 #(
    .INIT(32'h00000800)) 
    event_op_reset_i_2__0
       (.I0(bram_wrdata_a[0]),
        .I1(event_op_reset_i_3__0_n_0),
        .I2(bram_addr_a[3]),
        .I3(osc2_reg_wr_we),
        .I4(bram_addr_a[2]),
        .O(event_op_reset_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    event_op_reset_i_3__0
       (.I0(bram_addr_a[0]),
        .I1(bram_addr_a[1]),
        .I2(bram_addr_a[7]),
        .I3(bram_addr_a[6]),
        .I4(bram_addr_a[5]),
        .I5(bram_addr_a[4]),
        .O(event_op_reset_i_3__0_n_0));
  FDRE event_op_reset_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(event_op_reset_i_2__0_n_0),
        .Q(osc2_event_op[3]),
        .R(clear));
  LUT5 #(
    .INIT(32'h00000800)) 
    event_op_start_i_1__0
       (.I0(bram_wrdata_a[1]),
        .I1(event_op_reset_i_3__0_n_0),
        .I2(bram_addr_a[3]),
        .I3(osc2_reg_wr_we),
        .I4(bram_addr_a[2]),
        .O(event_op_start_i_1__0_n_0));
  FDRE event_op_start_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(event_op_start_i_1__0_n_0),
        .Q(osc2_event_op[2]),
        .R(clear));
  LUT5 #(
    .INIT(32'h00000800)) 
    event_op_stop_i_1__0
       (.I0(bram_wrdata_a[2]),
        .I1(event_op_reset_i_3__0_n_0),
        .I2(bram_addr_a[3]),
        .I3(osc2_reg_wr_we),
        .I4(bram_addr_a[2]),
        .O(event_op_stop_i_1__0_n_0));
  FDRE event_op_stop_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(event_op_stop_i_1__0_n_0),
        .Q(osc2_event_op[1]),
        .R(clear));
  LUT5 #(
    .INIT(32'h00000800)) 
    event_op_trig_i_1__0
       (.I0(bram_wrdata_a[3]),
        .I1(event_op_reset_i_3__0_n_0),
        .I2(bram_addr_a[3]),
        .I3(osc2_reg_wr_we),
        .I4(bram_addr_a[2]),
        .O(event_op_trig_i_1__0_n_0));
  FDRE event_op_trig_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(event_op_trig_i_1__0_n_0),
        .Q(osc2_event_op[0]),
        .R(clear));
  system_rp_oscilloscope_0_osc_filter i_dfilt
       (.D(filt_tdata),
        .E(cfg_filt_coeff_pp0),
        .Q(Q),
        .bb_mult_0(osc2_reg_wr_we),
        .bram_addr_a(bram_addr_a),
        .bram_wrdata_a(bram_wrdata_a[24:0]),
        .bypass_reg_reg_0(cfg_filt_bypass),
        .clear(clear),
        .kk_mult_0(p_2_in),
        .m_axi_osc2_aclk(m_axi_osc2_aclk),
        .m_axi_osc2_aresetn(m_axi_osc2_aresetn),
        .\s_axi_reg_araddr[3] (i_dfilt_n_21),
        .\s_axi_reg_araddr[4] (cfg_filt_coeff_aa0),
        .\s_axi_reg_araddr[4]_0 (cfg_filt_coeff_bb0),
        .\s_axi_reg_araddr[5] (i_dfilt_n_19),
        .\s_axi_reg_araddr[5]_0 (i_dfilt_n_20));
  LUT1 #(
    .INIT(2'h1)) 
    \intr_cnt[0]_i_3__0 
       (.I0(intr_cnt_reg[0]),
        .O(\intr_cnt[0]_i_3__0_n_0 ));
  FDRE \intr_cnt_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[0]_i_2__0_n_7 ),
        .Q(intr_cnt_reg[0]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[0]_i_2__0 
       (.CI(1'b0),
        .CO({\intr_cnt_reg[0]_i_2__0_n_0 ,\intr_cnt_reg[0]_i_2__0_n_1 ,\intr_cnt_reg[0]_i_2__0_n_2 ,\intr_cnt_reg[0]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\intr_cnt_reg[0]_i_2__0_n_4 ,\intr_cnt_reg[0]_i_2__0_n_5 ,\intr_cnt_reg[0]_i_2__0_n_6 ,\intr_cnt_reg[0]_i_2__0_n_7 }),
        .S({intr_cnt_reg[3:1],\intr_cnt[0]_i_3__0_n_0 }));
  FDRE \intr_cnt_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[8]_i_1__0_n_5 ),
        .Q(intr_cnt_reg[10]),
        .R(clear));
  FDRE \intr_cnt_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[8]_i_1__0_n_4 ),
        .Q(intr_cnt_reg[11]),
        .R(clear));
  FDRE \intr_cnt_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[12]_i_1__0_n_7 ),
        .Q(intr_cnt_reg[12]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[12]_i_1__0 
       (.CI(\intr_cnt_reg[8]_i_1__0_n_0 ),
        .CO({\intr_cnt_reg[12]_i_1__0_n_0 ,\intr_cnt_reg[12]_i_1__0_n_1 ,\intr_cnt_reg[12]_i_1__0_n_2 ,\intr_cnt_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\intr_cnt_reg[12]_i_1__0_n_4 ,\intr_cnt_reg[12]_i_1__0_n_5 ,\intr_cnt_reg[12]_i_1__0_n_6 ,\intr_cnt_reg[12]_i_1__0_n_7 }),
        .S(intr_cnt_reg[15:12]));
  FDRE \intr_cnt_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[12]_i_1__0_n_6 ),
        .Q(intr_cnt_reg[13]),
        .R(clear));
  FDRE \intr_cnt_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[12]_i_1__0_n_5 ),
        .Q(intr_cnt_reg[14]),
        .R(clear));
  FDRE \intr_cnt_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[12]_i_1__0_n_4 ),
        .Q(intr_cnt_reg[15]),
        .R(clear));
  FDRE \intr_cnt_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[16]_i_1__0_n_7 ),
        .Q(intr_cnt_reg[16]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[16]_i_1__0 
       (.CI(\intr_cnt_reg[12]_i_1__0_n_0 ),
        .CO({\intr_cnt_reg[16]_i_1__0_n_0 ,\intr_cnt_reg[16]_i_1__0_n_1 ,\intr_cnt_reg[16]_i_1__0_n_2 ,\intr_cnt_reg[16]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\intr_cnt_reg[16]_i_1__0_n_4 ,\intr_cnt_reg[16]_i_1__0_n_5 ,\intr_cnt_reg[16]_i_1__0_n_6 ,\intr_cnt_reg[16]_i_1__0_n_7 }),
        .S(intr_cnt_reg[19:16]));
  FDRE \intr_cnt_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[16]_i_1__0_n_6 ),
        .Q(intr_cnt_reg[17]),
        .R(clear));
  FDRE \intr_cnt_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[16]_i_1__0_n_5 ),
        .Q(intr_cnt_reg[18]),
        .R(clear));
  FDRE \intr_cnt_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[16]_i_1__0_n_4 ),
        .Q(intr_cnt_reg[19]),
        .R(clear));
  FDRE \intr_cnt_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[0]_i_2__0_n_6 ),
        .Q(intr_cnt_reg[1]),
        .R(clear));
  FDRE \intr_cnt_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[20]_i_1__0_n_7 ),
        .Q(intr_cnt_reg[20]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[20]_i_1__0 
       (.CI(\intr_cnt_reg[16]_i_1__0_n_0 ),
        .CO({\intr_cnt_reg[20]_i_1__0_n_0 ,\intr_cnt_reg[20]_i_1__0_n_1 ,\intr_cnt_reg[20]_i_1__0_n_2 ,\intr_cnt_reg[20]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\intr_cnt_reg[20]_i_1__0_n_4 ,\intr_cnt_reg[20]_i_1__0_n_5 ,\intr_cnt_reg[20]_i_1__0_n_6 ,\intr_cnt_reg[20]_i_1__0_n_7 }),
        .S(intr_cnt_reg[23:20]));
  FDRE \intr_cnt_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[20]_i_1__0_n_6 ),
        .Q(intr_cnt_reg[21]),
        .R(clear));
  FDRE \intr_cnt_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[20]_i_1__0_n_5 ),
        .Q(intr_cnt_reg[22]),
        .R(clear));
  FDRE \intr_cnt_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[20]_i_1__0_n_4 ),
        .Q(intr_cnt_reg[23]),
        .R(clear));
  FDRE \intr_cnt_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[24]_i_1__0_n_7 ),
        .Q(intr_cnt_reg[24]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[24]_i_1__0 
       (.CI(\intr_cnt_reg[20]_i_1__0_n_0 ),
        .CO({\intr_cnt_reg[24]_i_1__0_n_0 ,\intr_cnt_reg[24]_i_1__0_n_1 ,\intr_cnt_reg[24]_i_1__0_n_2 ,\intr_cnt_reg[24]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\intr_cnt_reg[24]_i_1__0_n_4 ,\intr_cnt_reg[24]_i_1__0_n_5 ,\intr_cnt_reg[24]_i_1__0_n_6 ,\intr_cnt_reg[24]_i_1__0_n_7 }),
        .S(intr_cnt_reg[27:24]));
  FDRE \intr_cnt_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[24]_i_1__0_n_6 ),
        .Q(intr_cnt_reg[25]),
        .R(clear));
  FDRE \intr_cnt_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[24]_i_1__0_n_5 ),
        .Q(intr_cnt_reg[26]),
        .R(clear));
  FDRE \intr_cnt_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[24]_i_1__0_n_4 ),
        .Q(intr_cnt_reg[27]),
        .R(clear));
  FDRE \intr_cnt_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[28]_i_1__0_n_7 ),
        .Q(intr_cnt_reg[28]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[28]_i_1__0 
       (.CI(\intr_cnt_reg[24]_i_1__0_n_0 ),
        .CO({\NLW_intr_cnt_reg[28]_i_1__0_CO_UNCONNECTED [3],\intr_cnt_reg[28]_i_1__0_n_1 ,\intr_cnt_reg[28]_i_1__0_n_2 ,\intr_cnt_reg[28]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\intr_cnt_reg[28]_i_1__0_n_4 ,\intr_cnt_reg[28]_i_1__0_n_5 ,\intr_cnt_reg[28]_i_1__0_n_6 ,\intr_cnt_reg[28]_i_1__0_n_7 }),
        .S(intr_cnt_reg[31:28]));
  FDRE \intr_cnt_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[28]_i_1__0_n_6 ),
        .Q(intr_cnt_reg[29]),
        .R(clear));
  FDRE \intr_cnt_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[0]_i_2__0_n_5 ),
        .Q(intr_cnt_reg[2]),
        .R(clear));
  FDRE \intr_cnt_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[28]_i_1__0_n_5 ),
        .Q(intr_cnt_reg[30]),
        .R(clear));
  FDRE \intr_cnt_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[28]_i_1__0_n_4 ),
        .Q(intr_cnt_reg[31]),
        .R(clear));
  FDRE \intr_cnt_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[0]_i_2__0_n_4 ),
        .Q(intr_cnt_reg[3]),
        .R(clear));
  FDRE \intr_cnt_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[4]_i_1__0_n_7 ),
        .Q(intr_cnt_reg[4]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[4]_i_1__0 
       (.CI(\intr_cnt_reg[0]_i_2__0_n_0 ),
        .CO({\intr_cnt_reg[4]_i_1__0_n_0 ,\intr_cnt_reg[4]_i_1__0_n_1 ,\intr_cnt_reg[4]_i_1__0_n_2 ,\intr_cnt_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\intr_cnt_reg[4]_i_1__0_n_4 ,\intr_cnt_reg[4]_i_1__0_n_5 ,\intr_cnt_reg[4]_i_1__0_n_6 ,\intr_cnt_reg[4]_i_1__0_n_7 }),
        .S(intr_cnt_reg[7:4]));
  FDRE \intr_cnt_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[4]_i_1__0_n_6 ),
        .Q(intr_cnt_reg[5]),
        .R(clear));
  FDRE \intr_cnt_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[4]_i_1__0_n_5 ),
        .Q(intr_cnt_reg[6]),
        .R(clear));
  FDRE \intr_cnt_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[4]_i_1__0_n_4 ),
        .Q(intr_cnt_reg[7]),
        .R(clear));
  FDRE \intr_cnt_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[8]_i_1__0_n_7 ),
        .Q(intr_cnt_reg[8]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \intr_cnt_reg[8]_i_1__0 
       (.CI(\intr_cnt_reg[4]_i_1__0_n_0 ),
        .CO({\intr_cnt_reg[8]_i_1__0_n_0 ,\intr_cnt_reg[8]_i_1__0_n_1 ,\intr_cnt_reg[8]_i_1__0_n_2 ,\intr_cnt_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\intr_cnt_reg[8]_i_1__0_n_4 ,\intr_cnt_reg[8]_i_1__0_n_5 ,\intr_cnt_reg[8]_i_1__0_n_6 ,\intr_cnt_reg[8]_i_1__0_n_7 }),
        .S(intr_cnt_reg[11:8]));
  FDRE \intr_cnt_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(intr_cnt0),
        .D(\intr_cnt_reg[8]_i_1__0_n_6 ),
        .Q(intr_cnt_reg[9]),
        .R(clear));
  FDRE intr_reg_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(osc2_dma_intr),
        .Q(intr_reg),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \ramp_sig[0]_i_2__0 
       (.I0(ramp_sig_reg[0]),
        .O(\ramp_sig[0]_i_2__0_n_0 ));
  FDRE \ramp_sig_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[0]_i_1__0_n_7 ),
        .Q(ramp_sig_reg[0]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \ramp_sig_reg[0]_i_1__0 
       (.CI(1'b0),
        .CO({\ramp_sig_reg[0]_i_1__0_n_0 ,\ramp_sig_reg[0]_i_1__0_n_1 ,\ramp_sig_reg[0]_i_1__0_n_2 ,\ramp_sig_reg[0]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\ramp_sig_reg[0]_i_1__0_n_4 ,\ramp_sig_reg[0]_i_1__0_n_5 ,\ramp_sig_reg[0]_i_1__0_n_6 ,\ramp_sig_reg[0]_i_1__0_n_7 }),
        .S({ramp_sig_reg[3:1],\ramp_sig[0]_i_2__0_n_0 }));
  FDRE \ramp_sig_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[8]_i_1__0_n_5 ),
        .Q(ramp_sig_reg[10]),
        .R(clear));
  FDRE \ramp_sig_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[8]_i_1__0_n_4 ),
        .Q(ramp_sig_reg[11]),
        .R(clear));
  FDRE \ramp_sig_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[12]_i_1__0_n_7 ),
        .Q(ramp_sig_reg[12]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \ramp_sig_reg[12]_i_1__0 
       (.CI(\ramp_sig_reg[8]_i_1__0_n_0 ),
        .CO({\NLW_ramp_sig_reg[12]_i_1__0_CO_UNCONNECTED [3],\ramp_sig_reg[12]_i_1__0_n_1 ,\ramp_sig_reg[12]_i_1__0_n_2 ,\ramp_sig_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\ramp_sig_reg[12]_i_1__0_n_4 ,\ramp_sig_reg[12]_i_1__0_n_5 ,\ramp_sig_reg[12]_i_1__0_n_6 ,\ramp_sig_reg[12]_i_1__0_n_7 }),
        .S(ramp_sig_reg[15:12]));
  FDRE \ramp_sig_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[12]_i_1__0_n_6 ),
        .Q(ramp_sig_reg[13]),
        .R(clear));
  FDRE \ramp_sig_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[12]_i_1__0_n_5 ),
        .Q(ramp_sig_reg[14]),
        .R(clear));
  FDRE \ramp_sig_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[12]_i_1__0_n_4 ),
        .Q(ramp_sig_reg[15]),
        .R(clear));
  FDRE \ramp_sig_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[0]_i_1__0_n_6 ),
        .Q(ramp_sig_reg[1]),
        .R(clear));
  FDRE \ramp_sig_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[0]_i_1__0_n_5 ),
        .Q(ramp_sig_reg[2]),
        .R(clear));
  FDRE \ramp_sig_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[0]_i_1__0_n_4 ),
        .Q(ramp_sig_reg[3]),
        .R(clear));
  FDRE \ramp_sig_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[4]_i_1__0_n_7 ),
        .Q(ramp_sig_reg[4]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \ramp_sig_reg[4]_i_1__0 
       (.CI(\ramp_sig_reg[0]_i_1__0_n_0 ),
        .CO({\ramp_sig_reg[4]_i_1__0_n_0 ,\ramp_sig_reg[4]_i_1__0_n_1 ,\ramp_sig_reg[4]_i_1__0_n_2 ,\ramp_sig_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\ramp_sig_reg[4]_i_1__0_n_4 ,\ramp_sig_reg[4]_i_1__0_n_5 ,\ramp_sig_reg[4]_i_1__0_n_6 ,\ramp_sig_reg[4]_i_1__0_n_7 }),
        .S(ramp_sig_reg[7:4]));
  FDRE \ramp_sig_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[4]_i_1__0_n_6 ),
        .Q(ramp_sig_reg[5]),
        .R(clear));
  FDRE \ramp_sig_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[4]_i_1__0_n_5 ),
        .Q(ramp_sig_reg[6]),
        .R(clear));
  FDRE \ramp_sig_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[4]_i_1__0_n_4 ),
        .Q(ramp_sig_reg[7]),
        .R(clear));
  FDRE \ramp_sig_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[8]_i_1__0_n_7 ),
        .Q(ramp_sig_reg[8]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \ramp_sig_reg[8]_i_1__0 
       (.CI(\ramp_sig_reg[4]_i_1__0_n_0 ),
        .CO({\ramp_sig_reg[8]_i_1__0_n_0 ,\ramp_sig_reg[8]_i_1__0_n_1 ,\ramp_sig_reg[8]_i_1__0_n_2 ,\ramp_sig_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\ramp_sig_reg[8]_i_1__0_n_4 ,\ramp_sig_reg[8]_i_1__0_n_5 ,\ramp_sig_reg[8]_i_1__0_n_6 ,\ramp_sig_reg[8]_i_1__0_n_7 }),
        .S(ramp_sig_reg[11:8]));
  FDRE \ramp_sig_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\ramp_sig_reg[8]_i_1__0_n_6 ),
        .Q(ramp_sig_reg[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h530053F0530F53FF)) 
    \reg_rd_data[0]_i_12__0 
       (.I0(p_3_in[0]),
        .I1(p_2_in[0]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(\reg_rd_data[2]_i_4__0_n_0 ),
        .I4(p_1_in[0]),
        .I5(intr_cnt_reg[0]),
        .O(\reg_rd_data[0]_i_12__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[0]_i_4__0 
       (.I0(trig_cnt_reg[0]),
        .I1(\reg_rd_data[31]_i_5__0_n_0 ),
        .I2(clk_cnt_reg[0]),
        .O(\reg_rd_data[0]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[0]_i_7__0 
       (.I0(cfg_dec_rshift[0]),
        .I1(cfg_avg_en),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[0] ),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(cfg_8bit_dat),
        .O(\reg_rd_data[0]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'h530053F0530F53FF)) 
    \reg_rd_data[0]_i_8__0 
       (.I0(cfg_trig_low_level[0]),
        .I1(cfg_trig_high_level[0]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(\reg_rd_data[2]_i_4__0_n_0 ),
        .I4(cfg_trig_edge),
        .I5(cfg_dec_factor[0]),
        .O(\reg_rd_data[0]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[10]_i_10__0 
       (.I0(missed_samps_ch1[7]),
        .I1(missed_samps_ch1[8]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(missed_samps_ch2[7]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[8]),
        .O(\reg_rd_data[10]_i_10__0_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[10]_i_11__0 
       (.I0(cfg_dma_dst_addr1[10]),
        .I1(\reg_rd_data[2]_i_4__0_n_0 ),
        .I2(cfg_dma_dst_addr2[10]),
        .I3(\reg_rd_data[17]_i_7__0_n_0 ),
        .I4(cfg_dma_buf_size[10]),
        .O(\reg_rd_data[10]_i_11__0_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[10]_i_2__0 
       (.I0(clk_cnt_reg[10]),
        .I1(\reg_rd_data[31]_i_5__0_n_0 ),
        .I2(trig_cnt_reg[10]),
        .I3(\reg_rd_data[31]_i_4__0_n_0 ),
        .O(\reg_rd_data[10]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[10]_i_5__0 
       (.I0(\reg_rd_data[10]_i_9__0_n_0 ),
        .I1(cfg_dec_factor[10]),
        .I2(\reg_rd_data[17]_i_4__0_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[10] ),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(\reg_rd_data[2]_i_4__0_n_0 ),
        .O(\reg_rd_data[10]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[10]_i_6__0 
       (.I0(p_3_in[10]),
        .I1(p_2_in[10]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[10]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(intr_cnt_reg[10]),
        .O(\reg_rd_data[10]_i_6__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[10]_i_9__0 
       (.I0(cfg_trig_low_level[10]),
        .I1(\reg_rd_data[17]_i_7__0_n_0 ),
        .I2(cfg_trig_high_level[10]),
        .O(\reg_rd_data[10]_i_9__0_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[11]_i_10__0 
       (.I0(cfg_dma_dst_addr1[11]),
        .I1(\reg_rd_data[2]_i_4__0_n_0 ),
        .I2(cfg_dma_dst_addr2[11]),
        .I3(\reg_rd_data[17]_i_7__0_n_0 ),
        .I4(cfg_dma_buf_size[11]),
        .O(\reg_rd_data[11]_i_10__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[11]_i_12__0 
       (.I0(cfg_trig_low_level[11]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_trig_high_level[11]),
        .O(\reg_rd_data[11]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[11]_i_13__0 
       (.I0(missed_samps_ch1[8]),
        .I1(missed_samps_ch1[9]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(missed_samps_ch2[8]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[9]),
        .O(\reg_rd_data[11]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF8A808A808A80)) 
    \reg_rd_data[11]_i_4__0 
       (.I0(\reg_rd_data[31]_i_4__0_n_0 ),
        .I1(trig_cnt_reg[11]),
        .I2(\reg_rd_data[31]_i_5__0_n_0 ),
        .I3(clk_cnt_reg[11]),
        .I4(\reg_rd_data[31]_i_2__0_n_0 ),
        .I5(\reg_rd_data[11]_i_7__0_n_0 ),
        .O(\reg_rd_data[11]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[11]_i_7__0 
       (.I0(\reg_rd_data[11]_i_12__0_n_0 ),
        .I1(cfg_dec_factor[11]),
        .I2(\reg_rd_data[17]_i_4__0_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[11] ),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(\reg_rd_data[2]_i_4__0_n_0 ),
        .O(\reg_rd_data[11]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[11]_i_8__0 
       (.I0(p_3_in[11]),
        .I1(p_2_in[11]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[11]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(intr_cnt_reg[11]),
        .O(\reg_rd_data[11]_i_8__0_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[12]_i_10__0 
       (.I0(cfg_dma_dst_addr1[12]),
        .I1(\reg_rd_data[2]_i_4__0_n_0 ),
        .I2(cfg_dma_dst_addr2[12]),
        .I3(\reg_rd_data[17]_i_7__0_n_0 ),
        .I4(cfg_dma_buf_size[12]),
        .O(\reg_rd_data[12]_i_10__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[12]_i_12__0 
       (.I0(cfg_trig_low_level[12]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_trig_high_level[12]),
        .O(\reg_rd_data[12]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[12]_i_13__0 
       (.I0(missed_samps_ch1[9]),
        .I1(missed_samps_ch1[10]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(missed_samps_ch2[9]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[10]),
        .O(\reg_rd_data[12]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF8A808A808A80)) 
    \reg_rd_data[12]_i_4__0 
       (.I0(\reg_rd_data[31]_i_4__0_n_0 ),
        .I1(trig_cnt_reg[12]),
        .I2(\reg_rd_data[31]_i_5__0_n_0 ),
        .I3(clk_cnt_reg[12]),
        .I4(\reg_rd_data[31]_i_2__0_n_0 ),
        .I5(\reg_rd_data[12]_i_7__0_n_0 ),
        .O(\reg_rd_data[12]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[12]_i_7__0 
       (.I0(\reg_rd_data[12]_i_12__0_n_0 ),
        .I1(cfg_dec_factor[12]),
        .I2(\reg_rd_data[17]_i_4__0_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[12] ),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(\reg_rd_data[2]_i_4__0_n_0 ),
        .O(\reg_rd_data[12]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[12]_i_8__0 
       (.I0(p_3_in[12]),
        .I1(p_2_in[12]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[12]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(intr_cnt_reg[12]),
        .O(\reg_rd_data[12]_i_8__0_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[13]_i_10__0 
       (.I0(cfg_dma_dst_addr1[13]),
        .I1(\reg_rd_data[2]_i_4__0_n_0 ),
        .I2(cfg_dma_dst_addr2[13]),
        .I3(\reg_rd_data[17]_i_7__0_n_0 ),
        .I4(cfg_dma_buf_size[13]),
        .O(\reg_rd_data[13]_i_10__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[13]_i_12__0 
       (.I0(cfg_trig_low_level[13]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_trig_high_level[13]),
        .O(\reg_rd_data[13]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[13]_i_13__0 
       (.I0(missed_samps_ch1[10]),
        .I1(missed_samps_ch1[11]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(missed_samps_ch2[10]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[11]),
        .O(\reg_rd_data[13]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF8A808A808A80)) 
    \reg_rd_data[13]_i_4__0 
       (.I0(\reg_rd_data[31]_i_4__0_n_0 ),
        .I1(trig_cnt_reg[13]),
        .I2(\reg_rd_data[31]_i_5__0_n_0 ),
        .I3(clk_cnt_reg[13]),
        .I4(\reg_rd_data[31]_i_2__0_n_0 ),
        .I5(\reg_rd_data[13]_i_7__0_n_0 ),
        .O(\reg_rd_data[13]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[13]_i_7__0 
       (.I0(\reg_rd_data[13]_i_12__0_n_0 ),
        .I1(cfg_dec_factor[13]),
        .I2(\reg_rd_data[17]_i_4__0_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[13] ),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(\reg_rd_data[2]_i_4__0_n_0 ),
        .O(\reg_rd_data[13]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[13]_i_8__0 
       (.I0(p_3_in[13]),
        .I1(p_2_in[13]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[13]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(intr_cnt_reg[13]),
        .O(\reg_rd_data[13]_i_8__0_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[14]_i_10__0 
       (.I0(cfg_dma_dst_addr1[14]),
        .I1(\reg_rd_data[2]_i_4__0_n_0 ),
        .I2(cfg_dma_dst_addr2[14]),
        .I3(\reg_rd_data[17]_i_7__0_n_0 ),
        .I4(cfg_dma_buf_size[14]),
        .O(\reg_rd_data[14]_i_10__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[14]_i_12__0 
       (.I0(cfg_trig_low_level[14]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_trig_high_level[14]),
        .O(\reg_rd_data[14]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[14]_i_13__0 
       (.I0(missed_samps_ch1[11]),
        .I1(missed_samps_ch1[12]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(missed_samps_ch2[11]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[12]),
        .O(\reg_rd_data[14]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF8A808A808A80)) 
    \reg_rd_data[14]_i_4__0 
       (.I0(\reg_rd_data[31]_i_4__0_n_0 ),
        .I1(trig_cnt_reg[14]),
        .I2(\reg_rd_data[31]_i_5__0_n_0 ),
        .I3(clk_cnt_reg[14]),
        .I4(\reg_rd_data[31]_i_2__0_n_0 ),
        .I5(\reg_rd_data[14]_i_7__0_n_0 ),
        .O(\reg_rd_data[14]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[14]_i_7__0 
       (.I0(\reg_rd_data[14]_i_12__0_n_0 ),
        .I1(cfg_dec_factor[14]),
        .I2(\reg_rd_data[17]_i_4__0_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[14] ),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(\reg_rd_data[2]_i_4__0_n_0 ),
        .O(\reg_rd_data[14]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[14]_i_8__0 
       (.I0(p_3_in[14]),
        .I1(p_2_in[14]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[14]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(intr_cnt_reg[14]),
        .O(\reg_rd_data[14]_i_8__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[15]_i_10__0 
       (.I0(cfg_trig_low_level[15]),
        .I1(\reg_rd_data[17]_i_7__0_n_0 ),
        .I2(cfg_trig_high_level[15]),
        .O(\reg_rd_data[15]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[15]_i_11__0 
       (.I0(missed_samps_ch1[12]),
        .I1(missed_samps_ch1[13]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(missed_samps_ch2[12]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[13]),
        .O(\reg_rd_data[15]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[15]_i_12__0 
       (.I0(cfg_dma_dst_addr1[15]),
        .I1(\reg_rd_data[2]_i_4__0_n_0 ),
        .I2(cfg_dma_dst_addr2[15]),
        .I3(\reg_rd_data[17]_i_7__0_n_0 ),
        .I4(cfg_dma_buf_size[15]),
        .O(\reg_rd_data[15]_i_12__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \reg_rd_data[15]_i_2 
       (.I0(\reg_rd_data[17]_i_4__0_n_0 ),
        .I1(\reg_rd_data[17]_i_3__0_n_0 ),
        .O(\reg_rd_data[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[15]_i_5__0 
       (.I0(\reg_rd_data[15]_i_10__0_n_0 ),
        .I1(cfg_dec_factor[15]),
        .I2(\reg_rd_data[17]_i_4__0_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[15] ),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(\reg_rd_data[2]_i_4__0_n_0 ),
        .O(\reg_rd_data[15]_i_5__0_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[15]_i_6__0 
       (.I0(clk_cnt_reg[15]),
        .I1(\reg_rd_data[31]_i_5__0_n_0 ),
        .I2(trig_cnt_reg[15]),
        .I3(\reg_rd_data[31]_i_4__0_n_0 ),
        .O(\reg_rd_data[15]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[15]_i_7__0 
       (.I0(p_3_in[15]),
        .I1(p_2_in[15]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[15]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(intr_cnt_reg[15]),
        .O(\reg_rd_data[15]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[16]_i_10__0 
       (.I0(p_3_in[16]),
        .I1(p_2_in[16]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[16]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(intr_cnt_reg[16]),
        .O(\reg_rd_data[16]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[16]_i_11 
       (.I0(missed_samps_ch1[13]),
        .I1(missed_samps_ch1[14]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(missed_samps_ch2[13]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[14]),
        .O(\reg_rd_data[16]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \reg_rd_data[16]_i_3__0 
       (.I0(\reg_rd_data[17]_i_7__0_n_0 ),
        .I1(\reg_rd_data[2]_i_4__0_n_0 ),
        .O(\reg_rd_data[16]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hF5E8F692755FD775)) 
    \reg_rd_data[16]_i_4__0 
       (.I0(bram_addr_a[6]),
        .I1(bram_addr_a[2]),
        .I2(bram_addr_a[5]),
        .I3(bram_addr_a[7]),
        .I4(bram_addr_a[3]),
        .I5(bram_addr_a[4]),
        .O(\reg_rd_data[16]_i_4__0_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[16]_i_5__0 
       (.I0(clk_cnt_reg[16]),
        .I1(\reg_rd_data[31]_i_5__0_n_0 ),
        .I2(trig_cnt_reg[16]),
        .I3(\reg_rd_data[31]_i_4__0_n_0 ),
        .O(\reg_rd_data[16]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[16]_i_9__0 
       (.I0(cfg_dma_dst_addr2[16]),
        .I1(\reg_rd_data[17]_i_7__0_n_0 ),
        .I2(cfg_dma_buf_size[16]),
        .O(\reg_rd_data[16]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[17]_i_10__0 
       (.I0(p_3_in[17]),
        .I1(p_2_in[17]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[17]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(intr_cnt_reg[17]),
        .O(\reg_rd_data[17]_i_10__0_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[17]_i_11__0 
       (.I0(cfg_dma_dst_addr2[17]),
        .I1(\reg_rd_data[17]_i_7__0_n_0 ),
        .I2(cfg_dma_buf_size[17]),
        .O(\reg_rd_data[17]_i_11__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[17]_i_12__0 
       (.I0(missed_samps_ch1[14]),
        .I1(missed_samps_ch1[15]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(missed_samps_ch2[14]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[15]),
        .O(\reg_rd_data[17]_i_12__0_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \reg_rd_data[17]_i_3__0 
       (.I0(\reg_rd_data[16]_i_4__0_n_0 ),
        .I1(bram_addr_a[0]),
        .I2(bram_addr_a[1]),
        .O(\reg_rd_data[17]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hEEEEEEE0)) 
    \reg_rd_data[17]_i_4__0 
       (.I0(\reg_rd_data[31]_i_7__0_n_0 ),
        .I1(\reg_rd_data[17]_i_3__0_n_0 ),
        .I2(\reg_rd_data[31]_i_6__0_n_0 ),
        .I3(bram_addr_a[1]),
        .I4(bram_addr_a[0]),
        .O(\reg_rd_data[17]_i_4__0_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[17]_i_6__0 
       (.I0(clk_cnt_reg[17]),
        .I1(\reg_rd_data[31]_i_5__0_n_0 ),
        .I2(trig_cnt_reg[17]),
        .I3(\reg_rd_data[31]_i_4__0_n_0 ),
        .O(\reg_rd_data[17]_i_6__0_n_0 ));
  LUT4 #(
    .INIT(16'hFEFF)) 
    \reg_rd_data[17]_i_7__0 
       (.I0(bram_addr_a[1]),
        .I1(bram_addr_a[0]),
        .I2(\reg_rd_data[31]_i_15__0_n_0 ),
        .I3(\reg_rd_data[31]_i_16_n_0 ),
        .O(\reg_rd_data[17]_i_7__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[18]_i_6__0 
       (.I0(cfg_dma_dst_addr2[18]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_dma_buf_size[18]),
        .O(\reg_rd_data[18]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[18]_i_7__0 
       (.I0(missed_samps_ch1[15]),
        .I1(missed_samps_ch1[16]),
        .I2(\reg_rd_data[31]_i_11__0_n_0 ),
        .I3(missed_samps_ch2[15]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[16]),
        .O(\reg_rd_data[18]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[18]_i_8__0 
       (.I0(p_3_in[18]),
        .I1(p_2_in[18]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[18]),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(intr_cnt_reg[18]),
        .O(\reg_rd_data[18]_i_8__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[19]_i_6__0 
       (.I0(cfg_dma_dst_addr2[19]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_dma_buf_size[19]),
        .O(\reg_rd_data[19]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[19]_i_7__0 
       (.I0(missed_samps_ch1[16]),
        .I1(missed_samps_ch1[17]),
        .I2(\reg_rd_data[31]_i_11__0_n_0 ),
        .I3(missed_samps_ch2[16]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[17]),
        .O(\reg_rd_data[19]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[19]_i_8__0 
       (.I0(p_3_in[19]),
        .I1(p_2_in[19]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[19]),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(intr_cnt_reg[19]),
        .O(\reg_rd_data[19]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[1]_i_11 
       (.I0(p_3_in[1]),
        .I1(p_2_in[1]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[1]),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(intr_cnt_reg[1]),
        .O(\reg_rd_data[1]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hB888B8B8B8888888)) 
    \reg_rd_data[1]_i_3__0 
       (.I0(\reg_rd_data[1]_i_6__0_n_0 ),
        .I1(\reg_rd_data[17]_i_4__0_n_0 ),
        .I2(\reg_rd_data[31]_i_11__0_n_0 ),
        .I3(cfg_dec_rshift[1]),
        .I4(\reg_rd_data[2]_i_4__0_n_0 ),
        .I5(\cfg_loopback_reg_n_0_[1] ),
        .O(\reg_rd_data[1]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[1]_i_6__0 
       (.I0(cfg_trig_low_level[1]),
        .I1(cfg_trig_high_level[1]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(cfg_dec_factor[1]),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .O(\reg_rd_data[1]_i_6__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[20]_i_6__0 
       (.I0(cfg_dma_dst_addr2[20]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_dma_buf_size[20]),
        .O(\reg_rd_data[20]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[20]_i_7__0 
       (.I0(missed_samps_ch1[17]),
        .I1(missed_samps_ch1[18]),
        .I2(\reg_rd_data[31]_i_11__0_n_0 ),
        .I3(missed_samps_ch2[17]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[18]),
        .O(\reg_rd_data[20]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[20]_i_8__0 
       (.I0(p_3_in[20]),
        .I1(p_2_in[20]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[20]),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(intr_cnt_reg[20]),
        .O(\reg_rd_data[20]_i_8__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[21]_i_6__0 
       (.I0(cfg_dma_dst_addr2[21]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_dma_buf_size[21]),
        .O(\reg_rd_data[21]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[21]_i_7__0 
       (.I0(missed_samps_ch1[18]),
        .I1(missed_samps_ch1[19]),
        .I2(\reg_rd_data[31]_i_11__0_n_0 ),
        .I3(missed_samps_ch2[18]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[19]),
        .O(\reg_rd_data[21]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[21]_i_8__0 
       (.I0(p_3_in[21]),
        .I1(p_2_in[21]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[21]),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(intr_cnt_reg[21]),
        .O(\reg_rd_data[21]_i_8__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[22]_i_6__0 
       (.I0(cfg_dma_dst_addr2[22]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_dma_buf_size[22]),
        .O(\reg_rd_data[22]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[22]_i_7__0 
       (.I0(missed_samps_ch1[19]),
        .I1(missed_samps_ch1[20]),
        .I2(\reg_rd_data[31]_i_11__0_n_0 ),
        .I3(missed_samps_ch2[19]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[20]),
        .O(\reg_rd_data[22]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[22]_i_8__0 
       (.I0(p_3_in[22]),
        .I1(p_2_in[22]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[22]),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(intr_cnt_reg[22]),
        .O(\reg_rd_data[22]_i_8__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[23]_i_6__0 
       (.I0(cfg_dma_dst_addr2[23]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_dma_buf_size[23]),
        .O(\reg_rd_data[23]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[23]_i_7__0 
       (.I0(missed_samps_ch1[20]),
        .I1(missed_samps_ch1[21]),
        .I2(\reg_rd_data[31]_i_11__0_n_0 ),
        .I3(missed_samps_ch2[20]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[21]),
        .O(\reg_rd_data[23]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[23]_i_8__0 
       (.I0(p_3_in[23]),
        .I1(p_2_in[23]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[23]),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(intr_cnt_reg[23]),
        .O(\reg_rd_data[23]_i_8__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[24]_i_6__0 
       (.I0(cfg_dma_dst_addr2[24]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_dma_buf_size[24]),
        .O(\reg_rd_data[24]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[24]_i_7__0 
       (.I0(missed_samps_ch1[21]),
        .I1(missed_samps_ch1[22]),
        .I2(\reg_rd_data[31]_i_11__0_n_0 ),
        .I3(missed_samps_ch2[21]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[22]),
        .O(\reg_rd_data[24]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[24]_i_8__0 
       (.I0(p_3_in[24]),
        .I1(p_2_in[24]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[24]),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(intr_cnt_reg[24]),
        .O(\reg_rd_data[24]_i_8__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[25]_i_6__0 
       (.I0(cfg_dma_dst_addr2[25]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_dma_buf_size[25]),
        .O(\reg_rd_data[25]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[25]_i_7__0 
       (.I0(missed_samps_ch1[22]),
        .I1(missed_samps_ch1[23]),
        .I2(\reg_rd_data[31]_i_11__0_n_0 ),
        .I3(missed_samps_ch2[22]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[23]),
        .O(\reg_rd_data[25]_i_7__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[26]_i_6__0 
       (.I0(cfg_dma_dst_addr2[26]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_dma_buf_size[26]),
        .O(\reg_rd_data[26]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[26]_i_7__0 
       (.I0(missed_samps_ch1[23]),
        .I1(missed_samps_ch1[24]),
        .I2(\reg_rd_data[31]_i_11__0_n_0 ),
        .I3(missed_samps_ch2[23]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[24]),
        .O(\reg_rd_data[26]_i_7__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[27]_i_6__0 
       (.I0(cfg_dma_dst_addr2[27]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_dma_buf_size[27]),
        .O(\reg_rd_data[27]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[27]_i_7__0 
       (.I0(missed_samps_ch1[24]),
        .I1(missed_samps_ch1[25]),
        .I2(\reg_rd_data[31]_i_11__0_n_0 ),
        .I3(missed_samps_ch2[24]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[25]),
        .O(\reg_rd_data[27]_i_7__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[28]_i_6__0 
       (.I0(cfg_dma_dst_addr2[28]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_dma_buf_size[28]),
        .O(\reg_rd_data[28]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[28]_i_7__0 
       (.I0(missed_samps_ch1[25]),
        .I1(missed_samps_ch1[26]),
        .I2(\reg_rd_data[31]_i_11__0_n_0 ),
        .I3(missed_samps_ch2[25]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[26]),
        .O(\reg_rd_data[28]_i_7__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[29]_i_6__0 
       (.I0(cfg_dma_dst_addr2[29]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_dma_buf_size[29]),
        .O(\reg_rd_data[29]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[29]_i_7__0 
       (.I0(missed_samps_ch1[26]),
        .I1(missed_samps_ch1[27]),
        .I2(\reg_rd_data[31]_i_11__0_n_0 ),
        .I3(missed_samps_ch2[26]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[27]),
        .O(\reg_rd_data[29]_i_7__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT5 #(
    .INIT(32'h8E489758)) 
    \reg_rd_data[2]_i_10 
       (.I0(bram_addr_a[2]),
        .I1(bram_addr_a[7]),
        .I2(bram_addr_a[6]),
        .I3(bram_addr_a[3]),
        .I4(bram_addr_a[5]),
        .O(\reg_rd_data[2]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \reg_rd_data[2]_i_10__0 
       (.I0(bram_addr_a[2]),
        .I1(bram_addr_a[3]),
        .O(\s_axi_reg_araddr[2]_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[2]_i_14 
       (.I0(p_3_in[2]),
        .I1(p_2_in[2]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[2]),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(intr_cnt_reg[2]),
        .O(\reg_rd_data[2]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \reg_rd_data[2]_i_16__0 
       (.I0(\reg_rd_data[17]_i_3__0_n_0 ),
        .I1(\reg_rd_data[2]_i_4__0_n_0 ),
        .O(\reg_rd_data[2]_i_16__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \reg_rd_data[2]_i_17__0 
       (.I0(\reg_rd_data[2]_i_4__0_n_0 ),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(\reg_rd_data[17]_i_3__0_n_0 ),
        .O(\reg_rd_data[2]_i_17__0_n_0 ));
  LUT4 #(
    .INIT(16'hF4F7)) 
    \reg_rd_data[2]_i_19__0 
       (.I0(missed_samps_ch1[0]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_8bit_dat),
        .I3(missed_samps_ch2[0]),
        .O(\reg_rd_data[2]_i_19__0_n_0 ));
  LUT6 #(
    .INIT(64'h888BBB8BBBBBBBBB)) 
    \reg_rd_data[2]_i_2__0 
       (.I0(\reg_rd_data[2]_i_6__0_n_0 ),
        .I1(\reg_rd_data[17]_i_4__0_n_0 ),
        .I2(\cfg_loopback_reg_n_0_[2] ),
        .I3(\reg_rd_data[2]_i_4__0_n_0 ),
        .I4(cfg_dec_rshift[2]),
        .I5(\reg_rd_data[31]_i_11__0_n_0 ),
        .O(\reg_rd_data[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000057)) 
    \reg_rd_data[2]_i_4__0 
       (.I0(\s_axi_reg_araddr[4] ),
        .I1(\s_axi_reg_araddr[2]_0 ),
        .I2(bram_addr_a[7]),
        .I3(\cfg_trig_pre_samp_reg[0]_0 ),
        .I4(\reg_rd_data[2]_i_9__0_n_0 ),
        .I5(\reg_rd_data[2]_i_10_n_0 ),
        .O(\reg_rd_data[2]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[2]_i_5__0 
       (.I0(trig_cnt_reg[2]),
        .I1(\reg_rd_data[31]_i_5__0_n_0 ),
        .I2(clk_cnt_reg[2]),
        .O(\reg_rd_data[2]_i_5__0_n_0 ));
  LUT5 #(
    .INIT(32'h5F305F3F)) 
    \reg_rd_data[2]_i_6__0 
       (.I0(cfg_trig_low_level[2]),
        .I1(cfg_trig_high_level[2]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(\reg_rd_data[31]_i_11__0_n_0 ),
        .I4(cfg_dec_factor[2]),
        .O(\reg_rd_data[2]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'h0111033301110000)) 
    \reg_rd_data[2]_i_9__0 
       (.I0(bram_addr_a[5]),
        .I1(bram_addr_a[4]),
        .I2(bram_addr_a[7]),
        .I3(bram_addr_a[6]),
        .I4(bram_addr_a[2]),
        .I5(bram_addr_a[3]),
        .O(\reg_rd_data[2]_i_9__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[30]_i_6__0 
       (.I0(cfg_dma_dst_addr2[30]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_dma_buf_size[30]),
        .O(\reg_rd_data[30]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[30]_i_7__0 
       (.I0(missed_samps_ch1[27]),
        .I1(missed_samps_ch1[28]),
        .I2(\reg_rd_data[31]_i_11__0_n_0 ),
        .I3(missed_samps_ch2[27]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[28]),
        .O(\reg_rd_data[30]_i_7__0_n_0 ));
  LUT4 #(
    .INIT(16'hFEFF)) 
    \reg_rd_data[31]_i_11__0 
       (.I0(bram_addr_a[1]),
        .I1(bram_addr_a[0]),
        .I2(\reg_rd_data[31]_i_15__0_n_0 ),
        .I3(\reg_rd_data[31]_i_16_n_0 ),
        .O(\reg_rd_data[31]_i_11__0_n_0 ));
  LUT6 #(
    .INIT(64'hFE17EE777A75A075)) 
    \reg_rd_data[31]_i_12__0 
       (.I0(bram_addr_a[6]),
        .I1(bram_addr_a[7]),
        .I2(bram_addr_a[3]),
        .I3(bram_addr_a[5]),
        .I4(bram_addr_a[2]),
        .I5(bram_addr_a[4]),
        .O(\reg_rd_data[31]_i_12__0_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[31]_i_13__0 
       (.I0(cfg_dma_dst_addr2[31]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_dma_buf_size[31]),
        .O(\reg_rd_data[31]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[31]_i_14__0 
       (.I0(missed_samps_ch1[28]),
        .I1(missed_samps_ch1[29]),
        .I2(\reg_rd_data[31]_i_11__0_n_0 ),
        .I3(missed_samps_ch2[28]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[29]),
        .O(\reg_rd_data[31]_i_14__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000111ED096)) 
    \reg_rd_data[31]_i_15__0 
       (.I0(bram_addr_a[6]),
        .I1(bram_addr_a[5]),
        .I2(bram_addr_a[4]),
        .I3(bram_addr_a[7]),
        .I4(bram_addr_a[3]),
        .I5(bram_addr_a[2]),
        .O(\reg_rd_data[31]_i_15__0_n_0 ));
  LUT6 #(
    .INIT(64'h05555757C755D5FD)) 
    \reg_rd_data[31]_i_16 
       (.I0(bram_addr_a[2]),
        .I1(bram_addr_a[6]),
        .I2(bram_addr_a[5]),
        .I3(bram_addr_a[3]),
        .I4(bram_addr_a[7]),
        .I5(bram_addr_a[4]),
        .O(\reg_rd_data[31]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \reg_rd_data[31]_i_2__0 
       (.I0(\reg_rd_data[31]_i_6__0_n_0 ),
        .I1(\reg_rd_data[31]_i_7__0_n_0 ),
        .O(\reg_rd_data[31]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \reg_rd_data[31]_i_4__0 
       (.I0(\reg_rd_data[2]_i_4__0_n_0 ),
        .I1(\reg_rd_data[3]_i_4__0_n_0 ),
        .O(\reg_rd_data[31]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT3 #(
    .INIT(8'h0D)) 
    \reg_rd_data[31]_i_5__0 
       (.I0(\reg_rd_data[2]_i_4__0_n_0 ),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(\reg_rd_data[3]_i_4__0_n_0 ),
        .O(\reg_rd_data[31]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hF1F3638313231F2F)) 
    \reg_rd_data[31]_i_6__0 
       (.I0(bram_addr_a[3]),
        .I1(bram_addr_a[6]),
        .I2(bram_addr_a[7]),
        .I3(bram_addr_a[2]),
        .I4(bram_addr_a[4]),
        .I5(bram_addr_a[5]),
        .O(\reg_rd_data[31]_i_6__0_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \reg_rd_data[31]_i_7__0 
       (.I0(\reg_rd_data[31]_i_12__0_n_0 ),
        .I1(bram_addr_a[0]),
        .I2(bram_addr_a[1]),
        .O(\reg_rd_data[31]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'h5451D67BFFFFA3FF)) 
    \reg_rd_data[3]_i_12__0 
       (.I0(bram_addr_a[5]),
        .I1(bram_addr_a[2]),
        .I2(bram_addr_a[6]),
        .I3(bram_addr_a[3]),
        .I4(bram_addr_a[4]),
        .I5(bram_addr_a[7]),
        .O(\reg_rd_data[3]_i_12__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[3]_i_13__0 
       (.I0(cfg_trig_low_level[3]),
        .I1(cfg_trig_high_level[3]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(cfg_dec_factor[3]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .O(\reg_rd_data[3]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[3]_i_14__0 
       (.I0(missed_samps_ch1[0]),
        .I1(missed_samps_ch1[1]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(missed_samps_ch2[0]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[1]),
        .O(\reg_rd_data[3]_i_14__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \reg_rd_data[3]_i_4__0 
       (.I0(\reg_rd_data[3]_i_12__0_n_0 ),
        .I1(bram_addr_a[0]),
        .I2(bram_addr_a[1]),
        .O(\reg_rd_data[3]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hB888B8B8B8888888)) 
    \reg_rd_data[3]_i_5 
       (.I0(\reg_rd_data[3]_i_13__0_n_0 ),
        .I1(\reg_rd_data[17]_i_4__0_n_0 ),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(cfg_dec_rshift[3]),
        .I4(\reg_rd_data[2]_i_4__0_n_0 ),
        .I5(\cfg_loopback_reg_n_0_[3] ),
        .O(\reg_rd_data[3]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[3]_i_6__0 
       (.I0(clk_cnt_reg[3]),
        .I1(\reg_rd_data[31]_i_5__0_n_0 ),
        .I2(trig_cnt_reg[3]),
        .I3(\reg_rd_data[31]_i_4__0_n_0 ),
        .O(\reg_rd_data[3]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[3]_i_7__0 
       (.I0(p_3_in[3]),
        .I1(p_2_in[3]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[3]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(intr_cnt_reg[3]),
        .O(\reg_rd_data[3]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[4]_i_10__0 
       (.I0(p_3_in[4]),
        .I1(p_2_in[4]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[4]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(intr_cnt_reg[4]),
        .O(\reg_rd_data[4]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[4]_i_14__0 
       (.I0(missed_samps_ch1[1]),
        .I1(missed_samps_ch1[2]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(missed_samps_ch2[1]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[2]),
        .O(\reg_rd_data[4]_i_14__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[4]_i_4__0 
       (.I0(\reg_rd_data[4]_i_9__0_n_0 ),
        .I1(cfg_dec_factor[4]),
        .I2(\reg_rd_data[17]_i_4__0_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[4] ),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(\reg_rd_data[2]_i_4__0_n_0 ),
        .O(\reg_rd_data[4]_i_4__0_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[4]_i_5__0 
       (.I0(clk_cnt_reg[4]),
        .I1(\reg_rd_data[31]_i_5__0_n_0 ),
        .I2(trig_cnt_reg[4]),
        .I3(\reg_rd_data[31]_i_4__0_n_0 ),
        .O(\reg_rd_data[4]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[4]_i_9__0 
       (.I0(cfg_trig_low_level[4]),
        .I1(\reg_rd_data[17]_i_7__0_n_0 ),
        .I2(cfg_trig_high_level[4]),
        .O(\reg_rd_data[4]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[5]_i_10__0 
       (.I0(p_3_in[5]),
        .I1(p_2_in[5]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[5]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(intr_cnt_reg[5]),
        .O(\reg_rd_data[5]_i_10__0_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[5]_i_12__0 
       (.I0(cfg_dma_dst_addr1[5]),
        .I1(\reg_rd_data[2]_i_4__0_n_0 ),
        .I2(cfg_dma_dst_addr2[5]),
        .I3(\reg_rd_data[17]_i_7__0_n_0 ),
        .I4(cfg_dma_buf_size[5]),
        .O(\reg_rd_data[5]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[5]_i_14__0 
       (.I0(missed_samps_ch1[2]),
        .I1(missed_samps_ch1[3]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(missed_samps_ch2[2]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[3]),
        .O(\reg_rd_data[5]_i_14__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[5]_i_4__0 
       (.I0(\reg_rd_data[5]_i_9__0_n_0 ),
        .I1(cfg_dec_factor[5]),
        .I2(\reg_rd_data[17]_i_4__0_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[5] ),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(\reg_rd_data[2]_i_4__0_n_0 ),
        .O(\reg_rd_data[5]_i_4__0_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[5]_i_5__0 
       (.I0(clk_cnt_reg[5]),
        .I1(\reg_rd_data[31]_i_5__0_n_0 ),
        .I2(trig_cnt_reg[5]),
        .I3(\reg_rd_data[31]_i_4__0_n_0 ),
        .O(\reg_rd_data[5]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[5]_i_9__0 
       (.I0(cfg_trig_low_level[5]),
        .I1(\reg_rd_data[17]_i_7__0_n_0 ),
        .I2(cfg_trig_high_level[5]),
        .O(\reg_rd_data[5]_i_9__0_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[6]_i_10__0 
       (.I0(cfg_dma_dst_addr1[6]),
        .I1(\reg_rd_data[2]_i_4__0_n_0 ),
        .I2(cfg_dma_dst_addr2[6]),
        .I3(\reg_rd_data[17]_i_7__0_n_0 ),
        .I4(cfg_dma_buf_size[6]),
        .O(\reg_rd_data[6]_i_10__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[6]_i_12__0 
       (.I0(cfg_trig_low_level[6]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_trig_high_level[6]),
        .O(\reg_rd_data[6]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[6]_i_13__0 
       (.I0(missed_samps_ch1[3]),
        .I1(missed_samps_ch1[4]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(missed_samps_ch2[3]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[4]),
        .O(\reg_rd_data[6]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF8A808A808A80)) 
    \reg_rd_data[6]_i_4__0 
       (.I0(\reg_rd_data[31]_i_4__0_n_0 ),
        .I1(trig_cnt_reg[6]),
        .I2(\reg_rd_data[31]_i_5__0_n_0 ),
        .I3(clk_cnt_reg[6]),
        .I4(\reg_rd_data[31]_i_2__0_n_0 ),
        .I5(\reg_rd_data[6]_i_7__0_n_0 ),
        .O(\reg_rd_data[6]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[6]_i_7__0 
       (.I0(\reg_rd_data[6]_i_12__0_n_0 ),
        .I1(cfg_dec_factor[6]),
        .I2(\reg_rd_data[17]_i_4__0_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[6] ),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(\reg_rd_data[2]_i_4__0_n_0 ),
        .O(\reg_rd_data[6]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[6]_i_8__0 
       (.I0(p_3_in[6]),
        .I1(p_2_in[6]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[6]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(intr_cnt_reg[6]),
        .O(\reg_rd_data[6]_i_8__0_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[7]_i_10__0 
       (.I0(cfg_dma_dst_addr1[7]),
        .I1(\reg_rd_data[2]_i_4__0_n_0 ),
        .I2(cfg_dma_dst_addr2[7]),
        .I3(\reg_rd_data[17]_i_7__0_n_0 ),
        .I4(cfg_dma_buf_size[7]),
        .O(\reg_rd_data[7]_i_10__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[7]_i_12__0 
       (.I0(cfg_trig_low_level[7]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_trig_high_level[7]),
        .O(\reg_rd_data[7]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[7]_i_13__0 
       (.I0(missed_samps_ch1[4]),
        .I1(missed_samps_ch1[5]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(missed_samps_ch2[4]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[5]),
        .O(\reg_rd_data[7]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF8A808A808A80)) 
    \reg_rd_data[7]_i_4__0 
       (.I0(\reg_rd_data[31]_i_4__0_n_0 ),
        .I1(trig_cnt_reg[7]),
        .I2(\reg_rd_data[31]_i_5__0_n_0 ),
        .I3(clk_cnt_reg[7]),
        .I4(\reg_rd_data[31]_i_2__0_n_0 ),
        .I5(\reg_rd_data[7]_i_7__0_n_0 ),
        .O(\reg_rd_data[7]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[7]_i_7__0 
       (.I0(\reg_rd_data[7]_i_12__0_n_0 ),
        .I1(cfg_dec_factor[7]),
        .I2(\reg_rd_data[17]_i_4__0_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[7] ),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(\reg_rd_data[2]_i_4__0_n_0 ),
        .O(\reg_rd_data[7]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[7]_i_8__0 
       (.I0(p_3_in[7]),
        .I1(p_2_in[7]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[7]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(intr_cnt_reg[7]),
        .O(\reg_rd_data[7]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[8]_i_10__0 
       (.I0(missed_samps_ch1[5]),
        .I1(missed_samps_ch1[6]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(missed_samps_ch2[5]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[6]),
        .O(\reg_rd_data[8]_i_10__0_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[8]_i_11__0 
       (.I0(cfg_dma_dst_addr1[8]),
        .I1(\reg_rd_data[2]_i_4__0_n_0 ),
        .I2(cfg_dma_dst_addr2[8]),
        .I3(\reg_rd_data[17]_i_7__0_n_0 ),
        .I4(cfg_dma_buf_size[8]),
        .O(\reg_rd_data[8]_i_11__0_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \reg_rd_data[8]_i_2__0 
       (.I0(clk_cnt_reg[8]),
        .I1(\reg_rd_data[31]_i_5__0_n_0 ),
        .I2(trig_cnt_reg[8]),
        .I3(\reg_rd_data[31]_i_4__0_n_0 ),
        .O(\reg_rd_data[8]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[8]_i_5__0 
       (.I0(\reg_rd_data[8]_i_9__0_n_0 ),
        .I1(cfg_dec_factor[8]),
        .I2(\reg_rd_data[17]_i_4__0_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[8] ),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(\reg_rd_data[2]_i_4__0_n_0 ),
        .O(\reg_rd_data[8]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[8]_i_6__0 
       (.I0(p_3_in[8]),
        .I1(p_2_in[8]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[8]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(intr_cnt_reg[8]),
        .O(\reg_rd_data[8]_i_6__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[8]_i_9__0 
       (.I0(cfg_trig_low_level[8]),
        .I1(\reg_rd_data[17]_i_7__0_n_0 ),
        .I2(cfg_trig_high_level[8]),
        .O(\reg_rd_data[8]_i_9__0_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \reg_rd_data[9]_i_10__0 
       (.I0(cfg_dma_dst_addr1[9]),
        .I1(\reg_rd_data[2]_i_4__0_n_0 ),
        .I2(cfg_dma_dst_addr2[9]),
        .I3(\reg_rd_data[17]_i_7__0_n_0 ),
        .I4(cfg_dma_buf_size[9]),
        .O(\reg_rd_data[9]_i_10__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[9]_i_12__0 
       (.I0(cfg_trig_low_level[9]),
        .I1(\reg_rd_data[31]_i_11__0_n_0 ),
        .I2(cfg_trig_high_level[9]),
        .O(\reg_rd_data[9]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[9]_i_13__0 
       (.I0(missed_samps_ch1[6]),
        .I1(missed_samps_ch1[7]),
        .I2(\reg_rd_data[17]_i_7__0_n_0 ),
        .I3(missed_samps_ch2[6]),
        .I4(cfg_8bit_dat),
        .I5(missed_samps_ch2[7]),
        .O(\reg_rd_data[9]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF8A808A808A80)) 
    \reg_rd_data[9]_i_4__0 
       (.I0(\reg_rd_data[31]_i_4__0_n_0 ),
        .I1(trig_cnt_reg[9]),
        .I2(\reg_rd_data[31]_i_5__0_n_0 ),
        .I3(clk_cnt_reg[9]),
        .I4(\reg_rd_data[31]_i_2__0_n_0 ),
        .I5(\reg_rd_data[9]_i_7__0_n_0 ),
        .O(\reg_rd_data[9]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A0A00F00C0C0)) 
    \reg_rd_data[9]_i_7__0 
       (.I0(\reg_rd_data[9]_i_12__0_n_0 ),
        .I1(cfg_dec_factor[9]),
        .I2(\reg_rd_data[17]_i_4__0_n_0 ),
        .I3(\cfg_loopback_reg_n_0_[9] ),
        .I4(\reg_rd_data[31]_i_11__0_n_0 ),
        .I5(\reg_rd_data[2]_i_4__0_n_0 ),
        .O(\reg_rd_data[9]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[9]_i_8__0 
       (.I0(p_3_in[9]),
        .I1(p_2_in[9]),
        .I2(\reg_rd_data[2]_i_4__0_n_0 ),
        .I3(p_1_in[9]),
        .I4(\reg_rd_data[17]_i_7__0_n_0 ),
        .I5(intr_cnt_reg[9]),
        .O(\reg_rd_data[9]_i_8__0_n_0 ));
  FDRE \reg_rd_data_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_140),
        .Q(\reg_rd_data_reg[31]_0 [0]),
        .R(1'b0));
  MUXF7 \reg_rd_data_reg[0]_i_3__0 
       (.I0(\reg_rd_data[0]_i_7__0_n_0 ),
        .I1(\reg_rd_data[0]_i_8__0_n_0 ),
        .O(\reg_rd_data_reg[0]_i_3__0_n_0 ),
        .S(\reg_rd_data[17]_i_4__0_n_0 ));
  FDRE \reg_rd_data_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_134),
        .Q(\reg_rd_data_reg[31]_0 [10]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_43),
        .Q(\reg_rd_data_reg[31]_0 [11]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_42),
        .Q(\reg_rd_data_reg[31]_0 [12]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_41),
        .Q(\reg_rd_data_reg[31]_0 [13]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_40),
        .Q(\reg_rd_data_reg[31]_0 [14]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_39),
        .Q(\reg_rd_data_reg[31]_0 [15]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_133),
        .Q(\reg_rd_data_reg[31]_0 [16]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_38),
        .Q(\reg_rd_data_reg[31]_0 [17]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_132),
        .Q(\reg_rd_data_reg[31]_0 [18]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_131),
        .Q(\reg_rd_data_reg[31]_0 [19]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_47),
        .Q(\reg_rd_data_reg[31]_0 [1]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_130),
        .Q(\reg_rd_data_reg[31]_0 [20]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_129),
        .Q(\reg_rd_data_reg[31]_0 [21]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_128),
        .Q(\reg_rd_data_reg[31]_0 [22]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_127),
        .Q(\reg_rd_data_reg[31]_0 [23]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_126),
        .Q(\reg_rd_data_reg[31]_0 [24]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_125),
        .Q(\reg_rd_data_reg[31]_0 [25]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_124),
        .Q(\reg_rd_data_reg[31]_0 [26]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_123),
        .Q(\reg_rd_data_reg[31]_0 [27]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_122),
        .Q(\reg_rd_data_reg[31]_0 [28]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_121),
        .Q(\reg_rd_data_reg[31]_0 [29]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_139),
        .Q(\reg_rd_data_reg[31]_0 [2]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_120),
        .Q(\reg_rd_data_reg[31]_0 [30]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_119),
        .Q(\reg_rd_data_reg[31]_0 [31]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_138),
        .Q(\reg_rd_data_reg[31]_0 [3]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_137),
        .Q(\reg_rd_data_reg[31]_0 [4]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_136),
        .Q(\reg_rd_data_reg[31]_0 [5]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_46),
        .Q(\reg_rd_data_reg[31]_0 [6]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_45),
        .Q(\reg_rd_data_reg[31]_0 [7]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_n_135),
        .Q(\reg_rd_data_reg[31]_0 [8]),
        .R(1'b0));
  FDRE \reg_rd_data_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_osc_acq_n_44),
        .Q(\reg_rd_data_reg[31]_0 [9]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \trig_cnt[0]_i_2__0 
       (.I0(trig_cnt_reg[0]),
        .O(\trig_cnt[0]_i_2__0_n_0 ));
  FDRE \trig_cnt_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[0]_i_1__0_n_7 ),
        .Q(trig_cnt_reg[0]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[0]_i_1__0 
       (.CI(1'b0),
        .CO({\trig_cnt_reg[0]_i_1__0_n_0 ,\trig_cnt_reg[0]_i_1__0_n_1 ,\trig_cnt_reg[0]_i_1__0_n_2 ,\trig_cnt_reg[0]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\trig_cnt_reg[0]_i_1__0_n_4 ,\trig_cnt_reg[0]_i_1__0_n_5 ,\trig_cnt_reg[0]_i_1__0_n_6 ,\trig_cnt_reg[0]_i_1__0_n_7 }),
        .S({trig_cnt_reg[3:1],\trig_cnt[0]_i_2__0_n_0 }));
  FDRE \trig_cnt_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[8]_i_1__0_n_5 ),
        .Q(trig_cnt_reg[10]),
        .R(clear));
  FDRE \trig_cnt_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[8]_i_1__0_n_4 ),
        .Q(trig_cnt_reg[11]),
        .R(clear));
  FDRE \trig_cnt_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[12]_i_1__0_n_7 ),
        .Q(trig_cnt_reg[12]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[12]_i_1__0 
       (.CI(\trig_cnt_reg[8]_i_1__0_n_0 ),
        .CO({\trig_cnt_reg[12]_i_1__0_n_0 ,\trig_cnt_reg[12]_i_1__0_n_1 ,\trig_cnt_reg[12]_i_1__0_n_2 ,\trig_cnt_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\trig_cnt_reg[12]_i_1__0_n_4 ,\trig_cnt_reg[12]_i_1__0_n_5 ,\trig_cnt_reg[12]_i_1__0_n_6 ,\trig_cnt_reg[12]_i_1__0_n_7 }),
        .S(trig_cnt_reg[15:12]));
  FDRE \trig_cnt_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[12]_i_1__0_n_6 ),
        .Q(trig_cnt_reg[13]),
        .R(clear));
  FDRE \trig_cnt_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[12]_i_1__0_n_5 ),
        .Q(trig_cnt_reg[14]),
        .R(clear));
  FDRE \trig_cnt_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[12]_i_1__0_n_4 ),
        .Q(trig_cnt_reg[15]),
        .R(clear));
  FDRE \trig_cnt_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[16]_i_1__0_n_7 ),
        .Q(trig_cnt_reg[16]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[16]_i_1__0 
       (.CI(\trig_cnt_reg[12]_i_1__0_n_0 ),
        .CO({\trig_cnt_reg[16]_i_1__0_n_0 ,\trig_cnt_reg[16]_i_1__0_n_1 ,\trig_cnt_reg[16]_i_1__0_n_2 ,\trig_cnt_reg[16]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\trig_cnt_reg[16]_i_1__0_n_4 ,\trig_cnt_reg[16]_i_1__0_n_5 ,\trig_cnt_reg[16]_i_1__0_n_6 ,\trig_cnt_reg[16]_i_1__0_n_7 }),
        .S(trig_cnt_reg[19:16]));
  FDRE \trig_cnt_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[16]_i_1__0_n_6 ),
        .Q(trig_cnt_reg[17]),
        .R(clear));
  FDRE \trig_cnt_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[16]_i_1__0_n_5 ),
        .Q(trig_cnt_reg[18]),
        .R(clear));
  FDRE \trig_cnt_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[16]_i_1__0_n_4 ),
        .Q(trig_cnt_reg[19]),
        .R(clear));
  FDRE \trig_cnt_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[0]_i_1__0_n_6 ),
        .Q(trig_cnt_reg[1]),
        .R(clear));
  FDRE \trig_cnt_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[20]_i_1__0_n_7 ),
        .Q(trig_cnt_reg[20]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[20]_i_1__0 
       (.CI(\trig_cnt_reg[16]_i_1__0_n_0 ),
        .CO({\trig_cnt_reg[20]_i_1__0_n_0 ,\trig_cnt_reg[20]_i_1__0_n_1 ,\trig_cnt_reg[20]_i_1__0_n_2 ,\trig_cnt_reg[20]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\trig_cnt_reg[20]_i_1__0_n_4 ,\trig_cnt_reg[20]_i_1__0_n_5 ,\trig_cnt_reg[20]_i_1__0_n_6 ,\trig_cnt_reg[20]_i_1__0_n_7 }),
        .S(trig_cnt_reg[23:20]));
  FDRE \trig_cnt_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[20]_i_1__0_n_6 ),
        .Q(trig_cnt_reg[21]),
        .R(clear));
  FDRE \trig_cnt_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[20]_i_1__0_n_5 ),
        .Q(trig_cnt_reg[22]),
        .R(clear));
  FDRE \trig_cnt_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[20]_i_1__0_n_4 ),
        .Q(trig_cnt_reg[23]),
        .R(clear));
  FDRE \trig_cnt_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[24]_i_1__0_n_7 ),
        .Q(trig_cnt_reg[24]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[24]_i_1__0 
       (.CI(\trig_cnt_reg[20]_i_1__0_n_0 ),
        .CO({\trig_cnt_reg[24]_i_1__0_n_0 ,\trig_cnt_reg[24]_i_1__0_n_1 ,\trig_cnt_reg[24]_i_1__0_n_2 ,\trig_cnt_reg[24]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\trig_cnt_reg[24]_i_1__0_n_4 ,\trig_cnt_reg[24]_i_1__0_n_5 ,\trig_cnt_reg[24]_i_1__0_n_6 ,\trig_cnt_reg[24]_i_1__0_n_7 }),
        .S(trig_cnt_reg[27:24]));
  FDRE \trig_cnt_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[24]_i_1__0_n_6 ),
        .Q(trig_cnt_reg[25]),
        .R(clear));
  FDRE \trig_cnt_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[24]_i_1__0_n_5 ),
        .Q(trig_cnt_reg[26]),
        .R(clear));
  FDRE \trig_cnt_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[24]_i_1__0_n_4 ),
        .Q(trig_cnt_reg[27]),
        .R(clear));
  FDRE \trig_cnt_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[28]_i_1__0_n_7 ),
        .Q(trig_cnt_reg[28]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[28]_i_1__0 
       (.CI(\trig_cnt_reg[24]_i_1__0_n_0 ),
        .CO({\NLW_trig_cnt_reg[28]_i_1__0_CO_UNCONNECTED [3],\trig_cnt_reg[28]_i_1__0_n_1 ,\trig_cnt_reg[28]_i_1__0_n_2 ,\trig_cnt_reg[28]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\trig_cnt_reg[28]_i_1__0_n_4 ,\trig_cnt_reg[28]_i_1__0_n_5 ,\trig_cnt_reg[28]_i_1__0_n_6 ,\trig_cnt_reg[28]_i_1__0_n_7 }),
        .S(trig_cnt_reg[31:28]));
  FDRE \trig_cnt_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[28]_i_1__0_n_6 ),
        .Q(trig_cnt_reg[29]),
        .R(clear));
  FDRE \trig_cnt_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[0]_i_1__0_n_5 ),
        .Q(trig_cnt_reg[2]),
        .R(clear));
  FDRE \trig_cnt_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[28]_i_1__0_n_5 ),
        .Q(trig_cnt_reg[30]),
        .R(clear));
  FDRE \trig_cnt_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[28]_i_1__0_n_4 ),
        .Q(trig_cnt_reg[31]),
        .R(clear));
  FDRE \trig_cnt_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[0]_i_1__0_n_4 ),
        .Q(trig_cnt_reg[3]),
        .R(clear));
  FDRE \trig_cnt_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[4]_i_1__0_n_7 ),
        .Q(trig_cnt_reg[4]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[4]_i_1__0 
       (.CI(\trig_cnt_reg[0]_i_1__0_n_0 ),
        .CO({\trig_cnt_reg[4]_i_1__0_n_0 ,\trig_cnt_reg[4]_i_1__0_n_1 ,\trig_cnt_reg[4]_i_1__0_n_2 ,\trig_cnt_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\trig_cnt_reg[4]_i_1__0_n_4 ,\trig_cnt_reg[4]_i_1__0_n_5 ,\trig_cnt_reg[4]_i_1__0_n_6 ,\trig_cnt_reg[4]_i_1__0_n_7 }),
        .S(trig_cnt_reg[7:4]));
  FDRE \trig_cnt_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[4]_i_1__0_n_6 ),
        .Q(trig_cnt_reg[5]),
        .R(clear));
  FDRE \trig_cnt_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[4]_i_1__0_n_5 ),
        .Q(trig_cnt_reg[6]),
        .R(clear));
  FDRE \trig_cnt_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[4]_i_1__0_n_4 ),
        .Q(trig_cnt_reg[7]),
        .R(clear));
  FDRE \trig_cnt_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[8]_i_1__0_n_7 ),
        .Q(trig_cnt_reg[8]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \trig_cnt_reg[8]_i_1__0 
       (.CI(\trig_cnt_reg[4]_i_1__0_n_0 ),
        .CO({\trig_cnt_reg[8]_i_1__0_n_0 ,\trig_cnt_reg[8]_i_1__0_n_1 ,\trig_cnt_reg[8]_i_1__0_n_2 ,\trig_cnt_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\trig_cnt_reg[8]_i_1__0_n_4 ,\trig_cnt_reg[8]_i_1__0_n_5 ,\trig_cnt_reg[8]_i_1__0_n_6 ,\trig_cnt_reg[8]_i_1__0_n_7 }),
        .S(trig_cnt_reg[11:8]));
  FDRE \trig_cnt_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(external_trig_val),
        .D(\trig_cnt_reg[8]_i_1__0_n_6 ),
        .Q(trig_cnt_reg[9]),
        .R(clear));
endmodule

(* ORIG_REF_NAME = "osc_trigger" *) 
module system_rp_oscilloscope_0_osc_trigger
   (\m_axis_tdata_reg[15] ,
    \m_axis_tdata_reg[14] ,
    \m_axis_tdata_reg[13] ,
    \m_axis_tdata_reg[12] ,
    \m_axis_tdata_reg[11] ,
    \m_axis_tdata_reg[10] ,
    \m_axis_tdata_reg[9] ,
    \m_axis_tdata_reg[8] ,
    \m_axis_tdata_reg[7] ,
    \m_axis_tdata_reg[6] ,
    \m_axis_tdata_reg[5] ,
    \m_axis_tdata_reg[4] ,
    \m_axis_tdata_reg[3] ,
    \m_axis_tdata_reg[2] ,
    \m_axis_tdata_reg[1] ,
    \m_axis_tdata_reg[0] ,
    trig_detect_reg_0,
    trig_tvalid,
    m_axis_tvalid0,
    osc2_trig_op,
    \m_axis_tdata_reg[15]_0 ,
    m_axi_osc2_aclk,
    dec_tvalid,
    trig_detect_reg_1,
    m_axis_tvalid_reg_0,
    osc2_trig_op_0);
  output \m_axis_tdata_reg[15] ;
  output \m_axis_tdata_reg[14] ;
  output \m_axis_tdata_reg[13] ;
  output \m_axis_tdata_reg[12] ;
  output \m_axis_tdata_reg[11] ;
  output \m_axis_tdata_reg[10] ;
  output \m_axis_tdata_reg[9] ;
  output \m_axis_tdata_reg[8] ;
  output \m_axis_tdata_reg[7] ;
  output \m_axis_tdata_reg[6] ;
  output \m_axis_tdata_reg[5] ;
  output \m_axis_tdata_reg[4] ;
  output \m_axis_tdata_reg[3] ;
  output \m_axis_tdata_reg[2] ;
  output \m_axis_tdata_reg[1] ;
  output \m_axis_tdata_reg[0] ;
  output trig_detect_reg_0;
  output trig_tvalid;
  output m_axis_tvalid0;
  output osc2_trig_op;
  input [15:0]\m_axis_tdata_reg[15]_0 ;
  input m_axi_osc2_aclk;
  input dec_tvalid;
  input trig_detect_reg_1;
  input m_axis_tvalid_reg_0;
  input osc2_trig_op_0;

  wire axis_tvalid_p1;
  wire dec_tvalid;
  wire m_axi_osc2_aclk;
  wire \m_axis_tdata_reg[0] ;
  wire \m_axis_tdata_reg[10] ;
  wire \m_axis_tdata_reg[11] ;
  wire \m_axis_tdata_reg[12] ;
  wire \m_axis_tdata_reg[13] ;
  wire \m_axis_tdata_reg[14] ;
  wire \m_axis_tdata_reg[15] ;
  wire [15:0]\m_axis_tdata_reg[15]_0 ;
  wire \m_axis_tdata_reg[1] ;
  wire \m_axis_tdata_reg[2] ;
  wire \m_axis_tdata_reg[3] ;
  wire \m_axis_tdata_reg[4] ;
  wire \m_axis_tdata_reg[5] ;
  wire \m_axis_tdata_reg[6] ;
  wire \m_axis_tdata_reg[7] ;
  wire \m_axis_tdata_reg[8] ;
  wire \m_axis_tdata_reg[9] ;
  wire m_axis_tvalid0;
  wire m_axis_tvalid_reg_0;
  wire osc2_trig_op;
  wire osc2_trig_op_0;
  wire trig_detect_p1;
  wire trig_detect_reg_0;
  wire trig_detect_reg_1;
  wire trig_tvalid;

  FDRE axis_tvalid_p1_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(dec_tvalid),
        .Q(axis_tvalid_p1),
        .R(1'b0));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[0]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[0]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [0]),
        .Q(\m_axis_tdata_reg[0] ));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[10]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[10]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [10]),
        .Q(\m_axis_tdata_reg[10] ));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[11]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[11]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [11]),
        .Q(\m_axis_tdata_reg[11] ));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[12]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[12]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [12]),
        .Q(\m_axis_tdata_reg[12] ));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[13]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[13]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [13]),
        .Q(\m_axis_tdata_reg[13] ));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[14]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[14]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [14]),
        .Q(\m_axis_tdata_reg[14] ));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[15]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[15]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [15]),
        .Q(\m_axis_tdata_reg[15] ));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[1]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [1]),
        .Q(\m_axis_tdata_reg[1] ));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[2]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[2]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [2]),
        .Q(\m_axis_tdata_reg[2] ));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[3]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[3]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [3]),
        .Q(\m_axis_tdata_reg[3] ));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[4]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[4]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [4]),
        .Q(\m_axis_tdata_reg[4] ));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[5]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[5]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [5]),
        .Q(\m_axis_tdata_reg[5] ));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[6]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[6]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [6]),
        .Q(\m_axis_tdata_reg[6] ));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[7]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[7]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [7]),
        .Q(\m_axis_tdata_reg[7] ));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[8]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[8]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [8]),
        .Q(\m_axis_tdata_reg[8] ));
  (* srl_bus_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc2/U_osc_trigger/m_axis_tdata_reg[9]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[9]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc2_aclk),
        .D(\m_axis_tdata_reg[15]_0 [9]),
        .Q(\m_axis_tdata_reg[9] ));
  LUT2 #(
    .INIT(4'h8)) 
    m_axis_tvalid_i_1__1__0
       (.I0(trig_tvalid),
        .I1(m_axis_tvalid_reg_0),
        .O(m_axis_tvalid0));
  FDRE m_axis_tvalid_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(axis_tvalid_p1),
        .Q(trig_tvalid),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h24)) 
    osc2_trig_op_INST_0
       (.I0(osc2_trig_op_0),
        .I1(trig_detect_reg_0),
        .I2(trig_detect_p1),
        .O(osc2_trig_op));
  FDRE trig_detect_p1_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(trig_detect_reg_0),
        .Q(trig_detect_p1),
        .R(1'b0));
  FDRE trig_detect_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(trig_detect_reg_1),
        .Q(trig_detect_reg_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "osc_trigger" *) 
module system_rp_oscilloscope_0_osc_trigger_16
   (\m_axis_tdata_reg[15] ,
    \m_axis_tdata_reg[14] ,
    \m_axis_tdata_reg[13] ,
    \m_axis_tdata_reg[12] ,
    \m_axis_tdata_reg[11] ,
    \m_axis_tdata_reg[10] ,
    \m_axis_tdata_reg[9] ,
    \m_axis_tdata_reg[8] ,
    \m_axis_tdata_reg[7] ,
    \m_axis_tdata_reg[6] ,
    \m_axis_tdata_reg[5] ,
    \m_axis_tdata_reg[4] ,
    \m_axis_tdata_reg[3] ,
    \m_axis_tdata_reg[2] ,
    \m_axis_tdata_reg[1] ,
    \m_axis_tdata_reg[0] ,
    trig_detect_reg_0,
    trig_tvalid,
    m_axis_tvalid0,
    osc1_trig_op,
    \m_axis_tdata_reg[15]_0 ,
    m_axi_osc1_aclk,
    dec_tvalid,
    trig_detect_reg_1,
    m_axis_tvalid_reg_0,
    osc1_trig_op_0);
  output \m_axis_tdata_reg[15] ;
  output \m_axis_tdata_reg[14] ;
  output \m_axis_tdata_reg[13] ;
  output \m_axis_tdata_reg[12] ;
  output \m_axis_tdata_reg[11] ;
  output \m_axis_tdata_reg[10] ;
  output \m_axis_tdata_reg[9] ;
  output \m_axis_tdata_reg[8] ;
  output \m_axis_tdata_reg[7] ;
  output \m_axis_tdata_reg[6] ;
  output \m_axis_tdata_reg[5] ;
  output \m_axis_tdata_reg[4] ;
  output \m_axis_tdata_reg[3] ;
  output \m_axis_tdata_reg[2] ;
  output \m_axis_tdata_reg[1] ;
  output \m_axis_tdata_reg[0] ;
  output trig_detect_reg_0;
  output trig_tvalid;
  output m_axis_tvalid0;
  output osc1_trig_op;
  input [15:0]\m_axis_tdata_reg[15]_0 ;
  input m_axi_osc1_aclk;
  input dec_tvalid;
  input trig_detect_reg_1;
  input m_axis_tvalid_reg_0;
  input osc1_trig_op_0;

  wire axis_tvalid_p1;
  wire dec_tvalid;
  wire m_axi_osc1_aclk;
  wire \m_axis_tdata_reg[0] ;
  wire \m_axis_tdata_reg[10] ;
  wire \m_axis_tdata_reg[11] ;
  wire \m_axis_tdata_reg[12] ;
  wire \m_axis_tdata_reg[13] ;
  wire \m_axis_tdata_reg[14] ;
  wire \m_axis_tdata_reg[15] ;
  wire [15:0]\m_axis_tdata_reg[15]_0 ;
  wire \m_axis_tdata_reg[1] ;
  wire \m_axis_tdata_reg[2] ;
  wire \m_axis_tdata_reg[3] ;
  wire \m_axis_tdata_reg[4] ;
  wire \m_axis_tdata_reg[5] ;
  wire \m_axis_tdata_reg[6] ;
  wire \m_axis_tdata_reg[7] ;
  wire \m_axis_tdata_reg[8] ;
  wire \m_axis_tdata_reg[9] ;
  wire m_axis_tvalid0;
  wire m_axis_tvalid_reg_0;
  wire osc1_trig_op;
  wire osc1_trig_op_0;
  wire trig_detect_p1;
  wire trig_detect_reg_0;
  wire trig_detect_reg_1;
  wire trig_tvalid;

  FDRE axis_tvalid_p1_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(dec_tvalid),
        .Q(axis_tvalid_p1),
        .R(1'b0));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[0]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[0]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [0]),
        .Q(\m_axis_tdata_reg[0] ));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[10]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[10]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [10]),
        .Q(\m_axis_tdata_reg[10] ));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[11]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[11]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [11]),
        .Q(\m_axis_tdata_reg[11] ));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[12]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[12]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [12]),
        .Q(\m_axis_tdata_reg[12] ));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[13]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[13]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [13]),
        .Q(\m_axis_tdata_reg[13] ));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[14]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[14]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [14]),
        .Q(\m_axis_tdata_reg[14] ));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[15]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[15]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [15]),
        .Q(\m_axis_tdata_reg[15] ));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[1]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [1]),
        .Q(\m_axis_tdata_reg[1] ));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[2]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[2]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [2]),
        .Q(\m_axis_tdata_reg[2] ));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[3]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[3]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [3]),
        .Q(\m_axis_tdata_reg[3] ));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[4]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[4]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [4]),
        .Q(\m_axis_tdata_reg[4] ));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[5]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[5]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [5]),
        .Q(\m_axis_tdata_reg[5] ));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[6]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[6]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [6]),
        .Q(\m_axis_tdata_reg[6] ));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[7]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[7]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [7]),
        .Q(\m_axis_tdata_reg[7] ));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[8]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[8]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [8]),
        .Q(\m_axis_tdata_reg[8] ));
  (* srl_bus_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg " *) 
  (* srl_name = "\inst/U_osc1/U_osc_trigger/m_axis_tdata_reg[9]_srl2 " *) 
  SRL16E \m_axis_tdata_reg[9]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(m_axi_osc1_aclk),
        .D(\m_axis_tdata_reg[15]_0 [9]),
        .Q(\m_axis_tdata_reg[9] ));
  LUT2 #(
    .INIT(4'h8)) 
    m_axis_tvalid_i_1
       (.I0(trig_tvalid),
        .I1(m_axis_tvalid_reg_0),
        .O(m_axis_tvalid0));
  FDRE m_axis_tvalid_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(axis_tvalid_p1),
        .Q(trig_tvalid),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h24)) 
    osc1_trig_op_INST_0
       (.I0(osc1_trig_op_0),
        .I1(trig_detect_reg_0),
        .I2(trig_detect_p1),
        .O(osc1_trig_op));
  FDRE trig_detect_p1_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(trig_detect_reg_0),
        .Q(trig_detect_p1),
        .R(1'b0));
  FDRE trig_detect_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(trig_detect_reg_1),
        .Q(trig_detect_reg_0),
        .R(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "reg_ctrl,axi_bram_ctrl,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "reg_ctrl" *) 
(* X_CORE_INFO = "axi_bram_ctrl,Vivado 2020.1" *) 
module system_rp_oscilloscope_0_reg_ctrl
   (s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awprot,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arprot,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    bram_rst_a,
    bram_clk_a,
    bram_en_a,
    bram_we_a,
    bram_addr_a,
    bram_wrdata_a,
    bram_rddata_a);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLKIF CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME CLKIF, ASSOCIATED_BUSIF S_AXI:S_AXI_CTRL, ASSOCIATED_RESET s_axi_aresetn, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, INSERT_VIP 0" *) input s_axi_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RSTIF RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME RSTIF, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_axi_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME S_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 12, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.000, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input [11:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWPROT" *) input [2:0]s_axi_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARADDR" *) input [11:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARPROT" *) input [2:0]s_axi_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RREADY" *) input s_axi_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME BRAM_PORTA, MASTER_TYPE BRAM_CTRL, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, READ_LATENCY 1" *) output bram_rst_a;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) output bram_clk_a;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) output bram_en_a;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) output [3:0]bram_we_a;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) output [11:0]bram_addr_a;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) output [31:0]bram_wrdata_a;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) input [31:0]bram_rddata_a;

  wire \<const0> ;
  wire [11:2]\^bram_addr_a ;
  wire bram_en_a;
  wire [31:0]bram_rddata_a;
  wire bram_rst_a;
  wire [3:0]bram_we_a;
  wire s_axi_aclk;
  wire [11:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [11:0]s_axi_awaddr;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;

  assign bram_addr_a[11:2] = \^bram_addr_a [11:2];
  assign bram_addr_a[1] = \<const0> ;
  assign bram_addr_a[0] = \<const0> ;
  assign bram_clk_a = s_axi_aclk;
  assign bram_wrdata_a[31:0] = s_axi_wdata;
  assign s_axi_awready = s_axi_wready;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_rdata[31:0] = bram_rddata_a;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  system_rp_oscilloscope_0_axi_bram_ctrl U0
       (.bram_addr_a(\^bram_addr_a ),
        .bram_en_a(bram_en_a),
        .bram_we_a(bram_we_a),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr[11:2]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr[11:2]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_reg_aresetn(bram_rst_a),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "rp_dma_s2mm" *) 
module system_rp_oscilloscope_0_rp_dma_s2mm
   (empty,
    empty_fwft_i_reg,
    wr_en,
    m_axi_osc2_wdata,
    rd_en,
    bit_start_reg,
    full_immed0,
    req_buf_addr_sel_p1_reg,
    m_axi_wlast_reg,
    Q,
    \state_cs_reg[0] ,
    m_axi_wvalid_reg,
    busy_reg,
    m_axi_osc2_awvalid,
    fifo_dis_reg,
    intr_reg__0,
    next_buf_full_reg,
    mode_reg,
    first_rst,
    E,
    \state_cs_reg[2] ,
    \state_cs_reg[1] ,
    \state_cs_reg[0]_0 ,
    \xfer_cnt_reg[3] ,
    \mux_sel_reg[1] ,
    D,
    \req_xfer_cnt_reg[6] ,
    SR,
    \reg_ctrl_reg[0] ,
    \cfg_trig_mask_reg[1] ,
    m_axis_tvalid_reg,
    \mux_sel_reg[2] ,
    \mux_sel_reg[2]_0 ,
    \mux_sel_reg[2]_1 ,
    \mux_sel_reg[2]_2 ,
    \mux_sel_reg[2]_3 ,
    \mux_sel_reg[2]_4 ,
    \mux_sel_reg[2]_5 ,
    \mux_sel_reg[2]_6 ,
    intr_cnt0,
    \cfg_trig_pre_samp_reg[29] ,
    \s_axi_reg_araddr[7] ,
    \s_axi_reg_araddr[3] ,
    \xfer_cnt_reg[6] ,
    \goreg_dm.dout_i_reg[1] ,
    \mux_sel_reg[0] ,
    \cfg_filt_coeff_bb_reg[15] ,
    \cfg_calib_offset_reg[1] ,
    \reg_rd_data_reg[6]_i_6__0 ,
    \reg_rd_data_reg[7]_i_6__0 ,
    \reg_ctrl_reg[9] ,
    \reg_rd_data_reg[9]_i_6__0 ,
    \reg_rd_data_reg[11]_i_6__0 ,
    \reg_rd_data_reg[12]_i_6__0 ,
    \reg_rd_data_reg[13]_i_6__0 ,
    \reg_rd_data_reg[14]_i_6__0 ,
    \reg_ctrl_reg[17] ,
    missed_samps_ch1,
    missed_samps_ch2,
    \s_axi_reg_araddr[4] ,
    \s_axi_reg_araddr[7]_0 ,
    \s_axi_reg_araddr[6] ,
    m_axi_osc2_awlen,
    tlast_reg,
    m_axi_osc2_aclk,
    clear,
    use_8bit_r_reg_0,
    \state_cs_reg[0]_1 ,
    m_axi_wvalid_reg_0,
    m_axi_wlast_reg_0,
    busy_reg_0,
    m_axi_awvalid_reg,
    fifo_dis_reg_0,
    mode_reg_0,
    first_rst_reg,
    m_axis_tvalid_reg_0,
    req_we_reg,
    m_axi_osc2_awready,
    \req_buf_addr_reg[31] ,
    \req_buf_addr_reg[31]_0 ,
    \reg_rd_data_reg[4] ,
    \reg_rd_data_reg[3] ,
    \reg_rd_data_reg[17] ,
    \reg_rd_data_reg[17]_0 ,
    \reg_rd_data_reg[31] ,
    \reg_rd_data_reg[0] ,
    \reg_rd_data_reg[0]_0 ,
    \reg_rd_data_reg[2] ,
    \reg_rd_data_reg[2]_0 ,
    \reg_rd_data_reg[0]_1 ,
    \reg_rd_data_reg[31]_0 ,
    trig_cnt_reg,
    \reg_rd_data_reg[31]_1 ,
    clk_cnt_reg,
    \reg_rd_data_reg[30] ,
    \reg_rd_data_reg[29] ,
    \reg_rd_data_reg[28] ,
    \reg_rd_data_reg[27] ,
    \reg_rd_data_reg[26] ,
    \reg_rd_data_reg[25] ,
    \reg_rd_data_reg[24] ,
    \reg_rd_data_reg[23] ,
    \reg_rd_data_reg[22] ,
    \reg_rd_data_reg[21] ,
    \reg_rd_data_reg[20] ,
    \reg_rd_data_reg[19] ,
    \reg_rd_data_reg[18] ,
    \reg_rd_data_reg[16] ,
    \reg_rd_data_reg[16]_0 ,
    \reg_rd_data_reg[16]_1 ,
    \reg_rd_data_reg[16]_2 ,
    \reg_rd_data_reg[16]_3 ,
    \reg_rd_data_reg[10] ,
    \reg_rd_data_reg[8] ,
    \reg_rd_data_reg[10]_0 ,
    \reg_rd_data_reg[10]_1 ,
    \reg_rd_data_reg[8]_0 ,
    \reg_rd_data_reg[8]_1 ,
    \reg_rd_data_reg[8]_2 ,
    \reg_rd_data_reg[5] ,
    \reg_rd_data_reg[5]_0 ,
    \reg_rd_data_reg[5]_1 ,
    \reg_rd_data_reg[4]_0 ,
    \reg_rd_data_reg[4]_1 ,
    \reg_rd_data_reg[4]_2 ,
    \reg_rd_data_reg[3]_0 ,
    \reg_rd_data_reg[3]_1 ,
    \reg_rd_data_reg[3]_2 ,
    m_axi_osc2_wready,
    m_axi_osc2_aresetn,
    \trig_cnt_reg[31] ,
    trig_ip,
    tlast_reg_0,
    acq_tdata,
    buf_sel_ch1,
    intr_reg,
    sts_acquire_reg,
    sts_acquire_reg_0,
    sts_acquire_reg_1,
    \reg_ctrl_reg[31] ,
    bram_addr_a,
    \reg_rd_data_reg[2]_1 ,
    \reg_rd_data_reg[2]_2 ,
    \reg_rd_data_reg[2]_3 ,
    \reg_rd_data_reg[2]_i_3__0 ,
    \reg_rd_data_reg[2]_i_13 ,
    next_buf_full1_carry__1_i_10__0,
    \reg_rd_data[2]_i_7__0 ,
    \reg_rd_data[17]_i_5__0 ,
    \reg_rd_data_reg[8]_3 ,
    \reg_rd_data_reg[10]_2 ,
    \reg_rd_data_reg[15] ,
    \reg_rd_data_reg[31]_2 ,
    \reg_rd_data_reg[0]_i_2__0 ,
    \reg_rd_data[23]_i_2__0 ,
    \reg_rd_data[20]_i_2__0 ,
    \reg_rd_data[31]_i_3__0 ,
    intr_cnt_reg,
    \reg_rd_data[30]_i_2__0 ,
    \reg_rd_data[29]_i_2__0 ,
    \reg_rd_data[28]_i_2__0 ,
    \reg_rd_data[27]_i_2__0 ,
    \reg_rd_data[26]_i_2__0 ,
    \reg_rd_data[25]_i_2__0 ,
    \reg_rd_data[25]_i_2__0_0 ,
    \reg_rd_data[18]_i_2__0 ,
    \reg_rd_data[0]_i_5__0 ,
    \reg_rd_data_reg[15]_i_9__0 ,
    \reg_rd_data_reg[15]_i_9__0_0 ,
    \reg_rd_data[0]_i_5__0_0 ,
    \reg_rd_data[1]_i_2__0 ,
    \reg_rd_data[3]_i_2__0 ,
    \reg_rd_data_reg[4]_i_2__0 ,
    \reg_rd_data_reg[4]_i_6__0 ,
    \reg_rd_data_reg[5]_i_2__0 ,
    \reg_rd_data_reg[5]_i_6__0 ,
    \reg_rd_data_reg[5]_i_2__0_0 ,
    \reg_rd_data_reg[6]_i_3__0 ,
    \reg_rd_data_reg[6]_i_3__0_0 ,
    \reg_rd_data_reg[6]_i_5__0 ,
    \reg_rd_data_reg[7]_i_3__0 ,
    \reg_rd_data_reg[7]_i_3__0_0 ,
    \reg_rd_data_reg[7]_i_5__0 ,
    \reg_rd_data[8]_i_3__0 ,
    \reg_rd_data[8]_i_3__0_0 ,
    \reg_rd_data_reg[9]_i_3__0 ,
    \reg_rd_data_reg[9]_i_3__0_0 ,
    \reg_rd_data_reg[9]_i_5__0 ,
    \reg_rd_data[10]_i_3__0 ,
    \reg_rd_data[10]_i_3__0_0 ,
    \reg_rd_data_reg[11]_i_3__0 ,
    \reg_rd_data_reg[11]_i_5__0 ,
    \reg_rd_data_reg[11]_i_3__0_0 ,
    \reg_rd_data_reg[12]_i_3__0 ,
    \reg_rd_data_reg[12]_i_3__0_0 ,
    \reg_rd_data_reg[12]_i_5__0 ,
    \reg_rd_data_reg[13]_i_3__0 ,
    \reg_rd_data_reg[13]_i_3__0_0 ,
    \reg_rd_data_reg[13]_i_5__0 ,
    \reg_rd_data_reg[14]_i_3__0 ,
    \reg_rd_data_reg[14]_i_3__0_0 ,
    \reg_rd_data_reg[14]_i_5__0 ,
    \reg_rd_data[15]_i_4__0 ,
    \reg_rd_data[15]_i_4__0_0 ,
    \reg_rd_data[16]_i_2__0 ,
    \reg_rd_data[16]_i_2__0_0 ,
    \reg_rd_data[16]_i_2__0_1 ,
    \reg_rd_data_reg[17]_1 ,
    \reg_rd_data[17]_i_5__0_0 ,
    \reg_rd_data[17]_i_5__0_1 ,
    \reg_rd_data[18]_i_2__0_0 ,
    \reg_rd_data[18]_i_2__0_1 ,
    \reg_rd_data[19]_i_2__0 ,
    \reg_rd_data[19]_i_2__0_0 ,
    \reg_rd_data[19]_i_2__0_1 ,
    \reg_rd_data[20]_i_2__0_0 ,
    \reg_rd_data[20]_i_2__0_1 ,
    \reg_rd_data[21]_i_2__0 ,
    \reg_rd_data[21]_i_2__0_0 ,
    \reg_rd_data[21]_i_2__0_1 ,
    \reg_rd_data[22]_i_2__0 ,
    \reg_rd_data[22]_i_2__0_0 ,
    \reg_rd_data[22]_i_2__0_1 ,
    \reg_rd_data[23]_i_2__0_0 ,
    \reg_rd_data[23]_i_2__0_1 ,
    \reg_rd_data[24]_i_2__0 ,
    \reg_rd_data[24]_i_2__0_0 ,
    \reg_rd_data[24]_i_2__0_1 ,
    \reg_rd_data[26]_i_2__0_0 ,
    \reg_rd_data[27]_i_2__0_0 ,
    \reg_rd_data[28]_i_2__0_0 ,
    \reg_rd_data[29]_i_2__0_0 ,
    \reg_rd_data[30]_i_2__0_0 ,
    \reg_rd_data[31]_i_3__0_0 ,
    event_op_reset_i_7,
    bram_we_a,
    bram_en_a,
    event_op_reset_i_10,
    bram_wrdata_a,
    acq_tlast,
    \upsize_buf_reg[0][7] ,
    \upsize_buf_reg[7][7] ,
    \upsize_buf_reg[2][7] );
  output empty;
  output empty_fwft_i_reg;
  output wr_en;
  output [63:0]m_axi_osc2_wdata;
  output rd_en;
  output bit_start_reg;
  output full_immed0;
  output req_buf_addr_sel_p1_reg;
  output m_axi_wlast_reg;
  output [31:0]Q;
  output \state_cs_reg[0] ;
  output m_axi_wvalid_reg;
  output busy_reg;
  output m_axi_osc2_awvalid;
  output fifo_dis_reg;
  output intr_reg__0;
  output next_buf_full_reg;
  output mode_reg;
  output first_rst;
  output [0:0]E;
  output \state_cs_reg[2] ;
  output \state_cs_reg[1] ;
  output \state_cs_reg[0]_0 ;
  output \xfer_cnt_reg[3] ;
  output \mux_sel_reg[1] ;
  output [21:0]D;
  output \req_xfer_cnt_reg[6] ;
  output [0:0]SR;
  output \reg_ctrl_reg[0] ;
  output \cfg_trig_mask_reg[1] ;
  output m_axis_tvalid_reg;
  output \mux_sel_reg[2] ;
  output \mux_sel_reg[2]_0 ;
  output \mux_sel_reg[2]_1 ;
  output \mux_sel_reg[2]_2 ;
  output \mux_sel_reg[2]_3 ;
  output \mux_sel_reg[2]_4 ;
  output \mux_sel_reg[2]_5 ;
  output \mux_sel_reg[2]_6 ;
  output intr_cnt0;
  output \cfg_trig_pre_samp_reg[29] ;
  output \s_axi_reg_araddr[7] ;
  output \s_axi_reg_araddr[3] ;
  output \xfer_cnt_reg[6] ;
  output \goreg_dm.dout_i_reg[1] ;
  output \mux_sel_reg[0] ;
  output \cfg_filt_coeff_bb_reg[15] ;
  output \cfg_calib_offset_reg[1] ;
  output \reg_rd_data_reg[6]_i_6__0 ;
  output \reg_rd_data_reg[7]_i_6__0 ;
  output [1:0]\reg_ctrl_reg[9] ;
  output \reg_rd_data_reg[9]_i_6__0 ;
  output \reg_rd_data_reg[11]_i_6__0 ;
  output \reg_rd_data_reg[12]_i_6__0 ;
  output \reg_rd_data_reg[13]_i_6__0 ;
  output \reg_rd_data_reg[14]_i_6__0 ;
  output \reg_ctrl_reg[17] ;
  output [29:0]missed_samps_ch1;
  output [29:0]missed_samps_ch2;
  output \s_axi_reg_araddr[4] ;
  output \s_axi_reg_araddr[7]_0 ;
  output \s_axi_reg_araddr[6] ;
  output [7:0]m_axi_osc2_awlen;
  output [0:0]tlast_reg;
  input m_axi_osc2_aclk;
  input clear;
  input use_8bit_r_reg_0;
  input \state_cs_reg[0]_1 ;
  input m_axi_wvalid_reg_0;
  input m_axi_wlast_reg_0;
  input busy_reg_0;
  input m_axi_awvalid_reg;
  input fifo_dis_reg_0;
  input mode_reg_0;
  input first_rst_reg;
  input m_axis_tvalid_reg_0;
  input req_we_reg;
  input m_axi_osc2_awready;
  input [31:0]\req_buf_addr_reg[31] ;
  input [31:0]\req_buf_addr_reg[31]_0 ;
  input \reg_rd_data_reg[4] ;
  input \reg_rd_data_reg[3] ;
  input \reg_rd_data_reg[17] ;
  input \reg_rd_data_reg[17]_0 ;
  input \reg_rd_data_reg[31] ;
  input \reg_rd_data_reg[0] ;
  input \reg_rd_data_reg[0]_0 ;
  input \reg_rd_data_reg[2] ;
  input \reg_rd_data_reg[2]_0 ;
  input \reg_rd_data_reg[0]_1 ;
  input \reg_rd_data_reg[31]_0 ;
  input [13:0]trig_cnt_reg;
  input \reg_rd_data_reg[31]_1 ;
  input [13:0]clk_cnt_reg;
  input \reg_rd_data_reg[30] ;
  input \reg_rd_data_reg[29] ;
  input \reg_rd_data_reg[28] ;
  input \reg_rd_data_reg[27] ;
  input \reg_rd_data_reg[26] ;
  input \reg_rd_data_reg[25] ;
  input \reg_rd_data_reg[24] ;
  input \reg_rd_data_reg[23] ;
  input \reg_rd_data_reg[22] ;
  input \reg_rd_data_reg[21] ;
  input \reg_rd_data_reg[20] ;
  input \reg_rd_data_reg[19] ;
  input \reg_rd_data_reg[18] ;
  input \reg_rd_data_reg[16] ;
  input \reg_rd_data_reg[16]_0 ;
  input [0:0]\reg_rd_data_reg[16]_1 ;
  input \reg_rd_data_reg[16]_2 ;
  input \reg_rd_data_reg[16]_3 ;
  input \reg_rd_data_reg[10] ;
  input \reg_rd_data_reg[8] ;
  input \reg_rd_data_reg[10]_0 ;
  input \reg_rd_data_reg[10]_1 ;
  input \reg_rd_data_reg[8]_0 ;
  input \reg_rd_data_reg[8]_1 ;
  input \reg_rd_data_reg[8]_2 ;
  input \reg_rd_data_reg[5] ;
  input \reg_rd_data_reg[5]_0 ;
  input \reg_rd_data_reg[5]_1 ;
  input \reg_rd_data_reg[4]_0 ;
  input \reg_rd_data_reg[4]_1 ;
  input \reg_rd_data_reg[4]_2 ;
  input \reg_rd_data_reg[3]_0 ;
  input \reg_rd_data_reg[3]_1 ;
  input \reg_rd_data_reg[3]_2 ;
  input m_axi_osc2_wready;
  input m_axi_osc2_aresetn;
  input [5:0]\trig_cnt_reg[31] ;
  input [0:0]trig_ip;
  input tlast_reg_0;
  input [15:0]acq_tdata;
  input buf_sel_ch1;
  input intr_reg;
  input sts_acquire_reg;
  input [7:0]sts_acquire_reg_0;
  input sts_acquire_reg_1;
  input \reg_ctrl_reg[31] ;
  input [7:0]bram_addr_a;
  input \reg_rd_data_reg[2]_1 ;
  input \reg_rd_data_reg[2]_2 ;
  input \reg_rd_data_reg[2]_3 ;
  input \reg_rd_data_reg[2]_i_3__0 ;
  input \reg_rd_data_reg[2]_i_13 ;
  input [16:0]next_buf_full1_carry__1_i_10__0;
  input \reg_rd_data[2]_i_7__0 ;
  input [17:0]\reg_rd_data[17]_i_5__0 ;
  input \reg_rd_data_reg[8]_3 ;
  input \reg_rd_data_reg[10]_2 ;
  input \reg_rd_data_reg[15] ;
  input \reg_rd_data_reg[31]_2 ;
  input \reg_rd_data_reg[0]_i_2__0 ;
  input \reg_rd_data[23]_i_2__0 ;
  input \reg_rd_data[20]_i_2__0 ;
  input \reg_rd_data[31]_i_3__0 ;
  input [6:0]intr_cnt_reg;
  input \reg_rd_data[30]_i_2__0 ;
  input \reg_rd_data[29]_i_2__0 ;
  input \reg_rd_data[28]_i_2__0 ;
  input \reg_rd_data[27]_i_2__0 ;
  input \reg_rd_data[26]_i_2__0 ;
  input \reg_rd_data[25]_i_2__0 ;
  input \reg_rd_data[25]_i_2__0_0 ;
  input \reg_rd_data[18]_i_2__0 ;
  input \reg_rd_data[0]_i_5__0 ;
  input [15:0]\reg_rd_data_reg[15]_i_9__0 ;
  input [15:0]\reg_rd_data_reg[15]_i_9__0_0 ;
  input \reg_rd_data[0]_i_5__0_0 ;
  input \reg_rd_data[1]_i_2__0 ;
  input \reg_rd_data[3]_i_2__0 ;
  input \reg_rd_data_reg[4]_i_2__0 ;
  input \reg_rd_data_reg[4]_i_6__0 ;
  input \reg_rd_data_reg[5]_i_2__0 ;
  input \reg_rd_data_reg[5]_i_6__0 ;
  input \reg_rd_data_reg[5]_i_2__0_0 ;
  input \reg_rd_data_reg[6]_i_3__0 ;
  input \reg_rd_data_reg[6]_i_3__0_0 ;
  input \reg_rd_data_reg[6]_i_5__0 ;
  input \reg_rd_data_reg[7]_i_3__0 ;
  input \reg_rd_data_reg[7]_i_3__0_0 ;
  input \reg_rd_data_reg[7]_i_5__0 ;
  input \reg_rd_data[8]_i_3__0 ;
  input \reg_rd_data[8]_i_3__0_0 ;
  input \reg_rd_data_reg[9]_i_3__0 ;
  input \reg_rd_data_reg[9]_i_3__0_0 ;
  input \reg_rd_data_reg[9]_i_5__0 ;
  input \reg_rd_data[10]_i_3__0 ;
  input \reg_rd_data[10]_i_3__0_0 ;
  input \reg_rd_data_reg[11]_i_3__0 ;
  input \reg_rd_data_reg[11]_i_5__0 ;
  input \reg_rd_data_reg[11]_i_3__0_0 ;
  input \reg_rd_data_reg[12]_i_3__0 ;
  input \reg_rd_data_reg[12]_i_3__0_0 ;
  input \reg_rd_data_reg[12]_i_5__0 ;
  input \reg_rd_data_reg[13]_i_3__0 ;
  input \reg_rd_data_reg[13]_i_3__0_0 ;
  input \reg_rd_data_reg[13]_i_5__0 ;
  input \reg_rd_data_reg[14]_i_3__0 ;
  input \reg_rd_data_reg[14]_i_3__0_0 ;
  input \reg_rd_data_reg[14]_i_5__0 ;
  input \reg_rd_data[15]_i_4__0 ;
  input \reg_rd_data[15]_i_4__0_0 ;
  input \reg_rd_data[16]_i_2__0 ;
  input \reg_rd_data[16]_i_2__0_0 ;
  input \reg_rd_data[16]_i_2__0_1 ;
  input \reg_rd_data_reg[17]_1 ;
  input \reg_rd_data[17]_i_5__0_0 ;
  input \reg_rd_data[17]_i_5__0_1 ;
  input \reg_rd_data[18]_i_2__0_0 ;
  input \reg_rd_data[18]_i_2__0_1 ;
  input \reg_rd_data[19]_i_2__0 ;
  input \reg_rd_data[19]_i_2__0_0 ;
  input \reg_rd_data[19]_i_2__0_1 ;
  input \reg_rd_data[20]_i_2__0_0 ;
  input \reg_rd_data[20]_i_2__0_1 ;
  input \reg_rd_data[21]_i_2__0 ;
  input \reg_rd_data[21]_i_2__0_0 ;
  input \reg_rd_data[21]_i_2__0_1 ;
  input \reg_rd_data[22]_i_2__0 ;
  input \reg_rd_data[22]_i_2__0_0 ;
  input \reg_rd_data[22]_i_2__0_1 ;
  input \reg_rd_data[23]_i_2__0_0 ;
  input \reg_rd_data[23]_i_2__0_1 ;
  input \reg_rd_data[24]_i_2__0 ;
  input \reg_rd_data[24]_i_2__0_0 ;
  input \reg_rd_data[24]_i_2__0_1 ;
  input \reg_rd_data[26]_i_2__0_0 ;
  input \reg_rd_data[27]_i_2__0_0 ;
  input \reg_rd_data[28]_i_2__0_0 ;
  input \reg_rd_data[29]_i_2__0_0 ;
  input \reg_rd_data[30]_i_2__0_0 ;
  input \reg_rd_data[31]_i_3__0_0 ;
  input event_op_reset_i_7;
  input [3:0]bram_we_a;
  input bram_en_a;
  input event_op_reset_i_10;
  input [31:0]bram_wrdata_a;
  input acq_tlast;
  input [7:0]\upsize_buf_reg[0][7] ;
  input [7:0]\upsize_buf_reg[7][7] ;
  input [7:0]\upsize_buf_reg[2][7] ;

  wire [21:0]D;
  wire [0:0]E;
  wire [31:0]Q;
  wire [0:0]SR;
  wire [15:0]acq_tdata;
  wire acq_tlast;
  wire bit_start_reg;
  wire [7:0]bram_addr_a;
  wire bram_en_a;
  wire [3:0]bram_we_a;
  wire [31:0]bram_wrdata_a;
  wire buf_sel_ch1;
  wire busy_reg;
  wire busy_reg_0;
  wire \cfg_calib_offset_reg[1] ;
  wire \cfg_filt_coeff_bb_reg[15] ;
  wire \cfg_trig_mask_reg[1] ;
  wire \cfg_trig_pre_samp_reg[29] ;
  wire clear;
  wire [13:0]clk_cnt_reg;
  wire ctl_start_r;
  wire empty;
  wire empty_fwft_i_reg;
  wire event_op_reset_i_10;
  wire event_op_reset_i_7;
  wire fifo_dis_reg;
  wire fifo_dis_reg_0;
  wire [9:0]fifo_rd_cnt;
  wire fifo_rst;
  wire [63:0]fifo_wr_data;
  wire fifo_wr_we;
  wire first_rst;
  wire first_rst_reg;
  wire full_immed0;
  wire \goreg_dm.dout_i_reg[1] ;
  wire intr_cnt0;
  wire [6:0]intr_cnt_reg;
  wire intr_reg;
  wire intr_reg__0;
  wire m_axi_awvalid_reg;
  wire m_axi_osc2_aclk;
  wire m_axi_osc2_aresetn;
  wire [7:0]m_axi_osc2_awlen;
  wire m_axi_osc2_awready;
  wire m_axi_osc2_awvalid;
  wire [63:0]m_axi_osc2_wdata;
  wire m_axi_osc2_wready;
  wire m_axi_wlast_reg;
  wire m_axi_wlast_reg_0;
  wire m_axi_wvalid_reg;
  wire m_axi_wvalid_reg_0;
  wire m_axis_tvalid_reg;
  wire m_axis_tvalid_reg_0;
  wire [29:0]missed_samps_ch1;
  wire [29:0]missed_samps_ch2;
  wire mode_reg;
  wire mode_reg_0;
  wire \mux_sel_reg[0] ;
  wire \mux_sel_reg[1] ;
  wire \mux_sel_reg[2] ;
  wire \mux_sel_reg[2]_0 ;
  wire \mux_sel_reg[2]_1 ;
  wire \mux_sel_reg[2]_2 ;
  wire \mux_sel_reg[2]_3 ;
  wire \mux_sel_reg[2]_4 ;
  wire \mux_sel_reg[2]_5 ;
  wire \mux_sel_reg[2]_6 ;
  wire [16:0]next_buf_full1_carry__1_i_10__0;
  wire next_buf_full_reg;
  wire rd_en;
  wire \reg_ctrl_reg[0] ;
  wire \reg_ctrl_reg[17] ;
  wire \reg_ctrl_reg[31] ;
  wire [1:0]\reg_ctrl_reg[9] ;
  wire \reg_rd_data[0]_i_5__0 ;
  wire \reg_rd_data[0]_i_5__0_0 ;
  wire \reg_rd_data[10]_i_3__0 ;
  wire \reg_rd_data[10]_i_3__0_0 ;
  wire \reg_rd_data[15]_i_4__0 ;
  wire \reg_rd_data[15]_i_4__0_0 ;
  wire \reg_rd_data[16]_i_2__0 ;
  wire \reg_rd_data[16]_i_2__0_0 ;
  wire \reg_rd_data[16]_i_2__0_1 ;
  wire [17:0]\reg_rd_data[17]_i_5__0 ;
  wire \reg_rd_data[17]_i_5__0_0 ;
  wire \reg_rd_data[17]_i_5__0_1 ;
  wire \reg_rd_data[18]_i_2__0 ;
  wire \reg_rd_data[18]_i_2__0_0 ;
  wire \reg_rd_data[18]_i_2__0_1 ;
  wire \reg_rd_data[19]_i_2__0 ;
  wire \reg_rd_data[19]_i_2__0_0 ;
  wire \reg_rd_data[19]_i_2__0_1 ;
  wire \reg_rd_data[1]_i_2__0 ;
  wire \reg_rd_data[20]_i_2__0 ;
  wire \reg_rd_data[20]_i_2__0_0 ;
  wire \reg_rd_data[20]_i_2__0_1 ;
  wire \reg_rd_data[21]_i_2__0 ;
  wire \reg_rd_data[21]_i_2__0_0 ;
  wire \reg_rd_data[21]_i_2__0_1 ;
  wire \reg_rd_data[22]_i_2__0 ;
  wire \reg_rd_data[22]_i_2__0_0 ;
  wire \reg_rd_data[22]_i_2__0_1 ;
  wire \reg_rd_data[23]_i_2__0 ;
  wire \reg_rd_data[23]_i_2__0_0 ;
  wire \reg_rd_data[23]_i_2__0_1 ;
  wire \reg_rd_data[24]_i_2__0 ;
  wire \reg_rd_data[24]_i_2__0_0 ;
  wire \reg_rd_data[24]_i_2__0_1 ;
  wire \reg_rd_data[25]_i_2__0 ;
  wire \reg_rd_data[25]_i_2__0_0 ;
  wire \reg_rd_data[26]_i_2__0 ;
  wire \reg_rd_data[26]_i_2__0_0 ;
  wire \reg_rd_data[27]_i_2__0 ;
  wire \reg_rd_data[27]_i_2__0_0 ;
  wire \reg_rd_data[28]_i_2__0 ;
  wire \reg_rd_data[28]_i_2__0_0 ;
  wire \reg_rd_data[29]_i_2__0 ;
  wire \reg_rd_data[29]_i_2__0_0 ;
  wire \reg_rd_data[2]_i_7__0 ;
  wire \reg_rd_data[30]_i_2__0 ;
  wire \reg_rd_data[30]_i_2__0_0 ;
  wire \reg_rd_data[31]_i_3__0 ;
  wire \reg_rd_data[31]_i_3__0_0 ;
  wire \reg_rd_data[3]_i_2__0 ;
  wire \reg_rd_data[8]_i_3__0 ;
  wire \reg_rd_data[8]_i_3__0_0 ;
  wire \reg_rd_data_reg[0] ;
  wire \reg_rd_data_reg[0]_0 ;
  wire \reg_rd_data_reg[0]_1 ;
  wire \reg_rd_data_reg[0]_i_2__0 ;
  wire \reg_rd_data_reg[10] ;
  wire \reg_rd_data_reg[10]_0 ;
  wire \reg_rd_data_reg[10]_1 ;
  wire \reg_rd_data_reg[10]_2 ;
  wire \reg_rd_data_reg[11]_i_3__0 ;
  wire \reg_rd_data_reg[11]_i_3__0_0 ;
  wire \reg_rd_data_reg[11]_i_5__0 ;
  wire \reg_rd_data_reg[11]_i_6__0 ;
  wire \reg_rd_data_reg[12]_i_3__0 ;
  wire \reg_rd_data_reg[12]_i_3__0_0 ;
  wire \reg_rd_data_reg[12]_i_5__0 ;
  wire \reg_rd_data_reg[12]_i_6__0 ;
  wire \reg_rd_data_reg[13]_i_3__0 ;
  wire \reg_rd_data_reg[13]_i_3__0_0 ;
  wire \reg_rd_data_reg[13]_i_5__0 ;
  wire \reg_rd_data_reg[13]_i_6__0 ;
  wire \reg_rd_data_reg[14]_i_3__0 ;
  wire \reg_rd_data_reg[14]_i_3__0_0 ;
  wire \reg_rd_data_reg[14]_i_5__0 ;
  wire \reg_rd_data_reg[14]_i_6__0 ;
  wire \reg_rd_data_reg[15] ;
  wire [15:0]\reg_rd_data_reg[15]_i_9__0 ;
  wire [15:0]\reg_rd_data_reg[15]_i_9__0_0 ;
  wire \reg_rd_data_reg[16] ;
  wire \reg_rd_data_reg[16]_0 ;
  wire [0:0]\reg_rd_data_reg[16]_1 ;
  wire \reg_rd_data_reg[16]_2 ;
  wire \reg_rd_data_reg[16]_3 ;
  wire \reg_rd_data_reg[17] ;
  wire \reg_rd_data_reg[17]_0 ;
  wire \reg_rd_data_reg[17]_1 ;
  wire \reg_rd_data_reg[18] ;
  wire \reg_rd_data_reg[19] ;
  wire \reg_rd_data_reg[20] ;
  wire \reg_rd_data_reg[21] ;
  wire \reg_rd_data_reg[22] ;
  wire \reg_rd_data_reg[23] ;
  wire \reg_rd_data_reg[24] ;
  wire \reg_rd_data_reg[25] ;
  wire \reg_rd_data_reg[26] ;
  wire \reg_rd_data_reg[27] ;
  wire \reg_rd_data_reg[28] ;
  wire \reg_rd_data_reg[29] ;
  wire \reg_rd_data_reg[2] ;
  wire \reg_rd_data_reg[2]_0 ;
  wire \reg_rd_data_reg[2]_1 ;
  wire \reg_rd_data_reg[2]_2 ;
  wire \reg_rd_data_reg[2]_3 ;
  wire \reg_rd_data_reg[2]_i_13 ;
  wire \reg_rd_data_reg[2]_i_3__0 ;
  wire \reg_rd_data_reg[30] ;
  wire \reg_rd_data_reg[31] ;
  wire \reg_rd_data_reg[31]_0 ;
  wire \reg_rd_data_reg[31]_1 ;
  wire \reg_rd_data_reg[31]_2 ;
  wire \reg_rd_data_reg[3] ;
  wire \reg_rd_data_reg[3]_0 ;
  wire \reg_rd_data_reg[3]_1 ;
  wire \reg_rd_data_reg[3]_2 ;
  wire \reg_rd_data_reg[4] ;
  wire \reg_rd_data_reg[4]_0 ;
  wire \reg_rd_data_reg[4]_1 ;
  wire \reg_rd_data_reg[4]_2 ;
  wire \reg_rd_data_reg[4]_i_2__0 ;
  wire \reg_rd_data_reg[4]_i_6__0 ;
  wire \reg_rd_data_reg[5] ;
  wire \reg_rd_data_reg[5]_0 ;
  wire \reg_rd_data_reg[5]_1 ;
  wire \reg_rd_data_reg[5]_i_2__0 ;
  wire \reg_rd_data_reg[5]_i_2__0_0 ;
  wire \reg_rd_data_reg[5]_i_6__0 ;
  wire \reg_rd_data_reg[6]_i_3__0 ;
  wire \reg_rd_data_reg[6]_i_3__0_0 ;
  wire \reg_rd_data_reg[6]_i_5__0 ;
  wire \reg_rd_data_reg[6]_i_6__0 ;
  wire \reg_rd_data_reg[7]_i_3__0 ;
  wire \reg_rd_data_reg[7]_i_3__0_0 ;
  wire \reg_rd_data_reg[7]_i_5__0 ;
  wire \reg_rd_data_reg[7]_i_6__0 ;
  wire \reg_rd_data_reg[8] ;
  wire \reg_rd_data_reg[8]_0 ;
  wire \reg_rd_data_reg[8]_1 ;
  wire \reg_rd_data_reg[8]_2 ;
  wire \reg_rd_data_reg[8]_3 ;
  wire \reg_rd_data_reg[9]_i_3__0 ;
  wire \reg_rd_data_reg[9]_i_3__0_0 ;
  wire \reg_rd_data_reg[9]_i_5__0 ;
  wire \reg_rd_data_reg[9]_i_6__0 ;
  wire [31:0]\req_buf_addr_reg[31] ;
  wire [31:0]\req_buf_addr_reg[31]_0 ;
  wire req_buf_addr_sel_p1_reg;
  wire [7:0]req_data;
  wire req_we_reg;
  wire \req_xfer_cnt_reg[6] ;
  wire \s_axi_reg_araddr[3] ;
  wire \s_axi_reg_araddr[4] ;
  wire \s_axi_reg_araddr[6] ;
  wire \s_axi_reg_araddr[7] ;
  wire \s_axi_reg_araddr[7]_0 ;
  wire \state_cs_reg[0] ;
  wire \state_cs_reg[0]_0 ;
  wire \state_cs_reg[0]_1 ;
  wire \state_cs_reg[1] ;
  wire \state_cs_reg[2] ;
  wire sts_acquire_reg;
  wire [7:0]sts_acquire_reg_0;
  wire sts_acquire_reg_1;
  wire [0:0]tlast_reg;
  wire tlast_reg_0;
  wire [13:0]trig_cnt_reg;
  wire [5:0]\trig_cnt_reg[31] ;
  wire [0:0]trig_ip;
  wire trig_out2;
  wire [7:0]\upsize_buf_reg[0][7] ;
  wire [7:0]\upsize_buf_reg[2][7] ;
  wire [7:0]\upsize_buf_reg[7][7] ;
  wire use_8bit_r;
  wire use_8bit_r_reg_0;
  wire wr_en;
  wire wr_en0;
  wire \xfer_cnt_reg[3] ;
  wire \xfer_cnt_reg[6] ;
  wire NLW_U_fifo_axi_data_empty_UNCONNECTED;
  wire NLW_U_fifo_axi_data_full_UNCONNECTED;
  wire NLW_U_fifo_axi_data_rd_rst_busy_UNCONNECTED;
  wire NLW_U_fifo_axi_data_wr_rst_busy_UNCONNECTED;
  wire [9:0]NLW_U_fifo_axi_data_wr_data_count_UNCONNECTED;

  system_rp_oscilloscope_0_rp_dma_s2mm_ctrl U_dma_s2mm_ctrl
       (.D(D),
        .E(E),
        .Q(req_data),
        .bit_start_reg_0(bit_start_reg),
        .bram_addr_a(bram_addr_a),
        .bram_en_a(bram_en_a),
        .bram_we_a(bram_we_a),
        .bram_wrdata_a(bram_wrdata_a),
        .buf_sel_ch1(buf_sel_ch1),
        .busy_reg(busy_reg),
        .busy_reg_0(busy_reg_0),
        .\cfg_calib_offset_reg[1] (\cfg_calib_offset_reg[1] ),
        .\cfg_filt_coeff_bb_reg[15] (\cfg_filt_coeff_bb_reg[15] ),
        .\cfg_trig_mask_reg[1] (\cfg_trig_mask_reg[1] ),
        .\cfg_trig_pre_samp_reg[29] (\cfg_trig_pre_samp_reg[29] ),
        .clear(clear),
        .clk_cnt_reg(clk_cnt_reg),
        .ctl_start_r(ctl_start_r),
        .ctl_start_r_reg(SR),
        .empty(empty),
        .empty_fwft_i_reg(empty_fwft_i_reg),
        .event_op_reset_i_10_0(event_op_reset_i_10),
        .event_op_reset_i_7(event_op_reset_i_7),
        .fifo_dis_reg_0(wr_en),
        .fifo_dis_reg_1(fifo_dis_reg),
        .fifo_dis_reg_2(fifo_dis_reg_0),
        .first_rst(first_rst),
        .first_rst_reg_0(first_rst_reg),
        .full_immed0(full_immed0),
        .\goreg_dm.dout_i_reg[1] (\goreg_dm.dout_i_reg[1] ),
        .intr_cnt0(intr_cnt0),
        .intr_cnt_reg(intr_cnt_reg),
        .intr_reg(intr_reg),
        .intr_reg__0_0(intr_reg__0),
        .m_axi_awvalid_reg_0(m_axi_awvalid_reg),
        .m_axi_osc2_aclk(m_axi_osc2_aclk),
        .m_axi_osc2_aresetn(m_axi_osc2_aresetn),
        .m_axi_osc2_awlen(m_axi_osc2_awlen),
        .m_axi_osc2_awready(m_axi_osc2_awready),
        .m_axi_osc2_awvalid(m_axi_osc2_awvalid),
        .m_axi_osc2_wready(m_axi_osc2_wready),
        .m_axi_wlast_reg(m_axi_wlast_reg),
        .m_axi_wlast_reg_0(m_axi_wlast_reg_0),
        .m_axi_wvalid_reg(m_axi_wvalid_reg),
        .m_axi_wvalid_reg_0(m_axi_wvalid_reg_0),
        .missed_samps_ch1(missed_samps_ch1),
        .missed_samps_ch2(missed_samps_ch2),
        .mode_reg_0(mode_reg),
        .mode_reg_1(mode_reg_0),
        .next_buf_full1_carry__1_i_10__0_0(next_buf_full1_carry__1_i_10__0),
        .next_buf_full_reg_0(next_buf_full_reg),
        .rd_data_count(fifo_rd_cnt),
        .rd_en(rd_en),
        .\reg_ctrl_reg[0]_0 (\reg_ctrl_reg[0] ),
        .\reg_ctrl_reg[17]_0 (\reg_ctrl_reg[17] ),
        .\reg_ctrl_reg[31]_0 (\reg_ctrl_reg[31] ),
        .\reg_ctrl_reg[9]_0 (\reg_ctrl_reg[9] ),
        .\reg_rd_data[0]_i_5__0_0 (\reg_rd_data[0]_i_5__0 ),
        .\reg_rd_data[0]_i_5__0_1 (\reg_rd_data[0]_i_5__0_0 ),
        .\reg_rd_data[10]_i_3__0_0 (\reg_rd_data[10]_i_3__0 ),
        .\reg_rd_data[10]_i_3__0_1 (\reg_rd_data[10]_i_3__0_0 ),
        .\reg_rd_data[15]_i_4__0_0 (\reg_rd_data[15]_i_4__0 ),
        .\reg_rd_data[15]_i_4__0_1 (\reg_rd_data[15]_i_4__0_0 ),
        .\reg_rd_data[16]_i_2__0_0 (\reg_rd_data[16]_i_2__0 ),
        .\reg_rd_data[16]_i_2__0_1 (\reg_rd_data[16]_i_2__0_0 ),
        .\reg_rd_data[16]_i_2__0_2 (\reg_rd_data[16]_i_2__0_1 ),
        .\reg_rd_data[17]_i_5__0_0 (\reg_rd_data[17]_i_5__0 ),
        .\reg_rd_data[17]_i_5__0_1 (\reg_rd_data[17]_i_5__0_0 ),
        .\reg_rd_data[17]_i_5__0_2 (\reg_rd_data[17]_i_5__0_1 ),
        .\reg_rd_data[18]_i_2__0_0 (\reg_rd_data[18]_i_2__0 ),
        .\reg_rd_data[18]_i_2__0_1 (\reg_rd_data[18]_i_2__0_0 ),
        .\reg_rd_data[18]_i_2__0_2 (\reg_rd_data[18]_i_2__0_1 ),
        .\reg_rd_data[19]_i_2__0_0 (\reg_rd_data[19]_i_2__0 ),
        .\reg_rd_data[19]_i_2__0_1 (\reg_rd_data[19]_i_2__0_0 ),
        .\reg_rd_data[19]_i_2__0_2 (\reg_rd_data[19]_i_2__0_1 ),
        .\reg_rd_data[1]_i_2__0 (\reg_rd_data[1]_i_2__0 ),
        .\reg_rd_data[20]_i_2__0_0 (\reg_rd_data[20]_i_2__0 ),
        .\reg_rd_data[20]_i_2__0_1 (\reg_rd_data[20]_i_2__0_0 ),
        .\reg_rd_data[20]_i_2__0_2 (\reg_rd_data[20]_i_2__0_1 ),
        .\reg_rd_data[21]_i_2__0_0 (\reg_rd_data[21]_i_2__0 ),
        .\reg_rd_data[21]_i_2__0_1 (\reg_rd_data[21]_i_2__0_0 ),
        .\reg_rd_data[21]_i_2__0_2 (\reg_rd_data[21]_i_2__0_1 ),
        .\reg_rd_data[22]_i_2__0_0 (\reg_rd_data[22]_i_2__0 ),
        .\reg_rd_data[22]_i_2__0_1 (\reg_rd_data[22]_i_2__0_0 ),
        .\reg_rd_data[22]_i_2__0_2 (\reg_rd_data[22]_i_2__0_1 ),
        .\reg_rd_data[23]_i_2__0_0 (\reg_rd_data[23]_i_2__0 ),
        .\reg_rd_data[23]_i_2__0_1 (\reg_rd_data[23]_i_2__0_0 ),
        .\reg_rd_data[23]_i_2__0_2 (\reg_rd_data[23]_i_2__0_1 ),
        .\reg_rd_data[24]_i_2__0_0 (\reg_rd_data[24]_i_2__0 ),
        .\reg_rd_data[24]_i_2__0_1 (\reg_rd_data[24]_i_2__0_0 ),
        .\reg_rd_data[24]_i_2__0_2 (\reg_rd_data[24]_i_2__0_1 ),
        .\reg_rd_data[25]_i_2__0_0 (\reg_rd_data[25]_i_2__0 ),
        .\reg_rd_data[25]_i_2__0_1 (\reg_rd_data[25]_i_2__0_0 ),
        .\reg_rd_data[26]_i_2__0_0 (\reg_rd_data[26]_i_2__0 ),
        .\reg_rd_data[26]_i_2__0_1 (\reg_rd_data[26]_i_2__0_0 ),
        .\reg_rd_data[27]_i_2__0_0 (\reg_rd_data[27]_i_2__0 ),
        .\reg_rd_data[27]_i_2__0_1 (\reg_rd_data[27]_i_2__0_0 ),
        .\reg_rd_data[28]_i_2__0_0 (\reg_rd_data[28]_i_2__0 ),
        .\reg_rd_data[28]_i_2__0_1 (\reg_rd_data[28]_i_2__0_0 ),
        .\reg_rd_data[29]_i_2__0_0 (\reg_rd_data[29]_i_2__0 ),
        .\reg_rd_data[29]_i_2__0_1 (\reg_rd_data[29]_i_2__0_0 ),
        .\reg_rd_data[2]_i_7__0_0 (\reg_rd_data[2]_i_7__0 ),
        .\reg_rd_data[30]_i_2__0_0 (\reg_rd_data[30]_i_2__0 ),
        .\reg_rd_data[30]_i_2__0_1 (\reg_rd_data[30]_i_2__0_0 ),
        .\reg_rd_data[31]_i_3__0_0 (\reg_rd_data[31]_i_3__0 ),
        .\reg_rd_data[31]_i_3__0_1 (\reg_rd_data[31]_i_3__0_0 ),
        .\reg_rd_data[3]_i_2__0_0 (\reg_rd_data[3]_i_2__0 ),
        .\reg_rd_data[8]_i_3__0_0 (\reg_rd_data[8]_i_3__0 ),
        .\reg_rd_data[8]_i_3__0_1 (\reg_rd_data[8]_i_3__0_0 ),
        .\reg_rd_data_reg[0] (\reg_rd_data_reg[0] ),
        .\reg_rd_data_reg[0]_0 (\reg_rd_data_reg[0]_0 ),
        .\reg_rd_data_reg[0]_1 (\reg_rd_data_reg[0]_1 ),
        .\reg_rd_data_reg[0]_i_2__0_0 (\reg_rd_data_reg[0]_i_2__0 ),
        .\reg_rd_data_reg[10] (\reg_rd_data_reg[10] ),
        .\reg_rd_data_reg[10]_0 (\reg_rd_data_reg[10]_0 ),
        .\reg_rd_data_reg[10]_1 (\reg_rd_data_reg[10]_1 ),
        .\reg_rd_data_reg[10]_2 (\reg_rd_data_reg[10]_2 ),
        .\reg_rd_data_reg[11]_i_3__0_0 (\reg_rd_data_reg[11]_i_3__0 ),
        .\reg_rd_data_reg[11]_i_3__0_1 (\reg_rd_data_reg[11]_i_3__0_0 ),
        .\reg_rd_data_reg[11]_i_5__0_0 (\reg_rd_data_reg[11]_i_5__0 ),
        .\reg_rd_data_reg[11]_i_6__0_0 (\reg_rd_data_reg[11]_i_6__0 ),
        .\reg_rd_data_reg[12]_i_3__0_0 (\reg_rd_data_reg[12]_i_3__0 ),
        .\reg_rd_data_reg[12]_i_3__0_1 (\reg_rd_data_reg[12]_i_3__0_0 ),
        .\reg_rd_data_reg[12]_i_5__0_0 (\reg_rd_data_reg[12]_i_5__0 ),
        .\reg_rd_data_reg[12]_i_6__0_0 (\reg_rd_data_reg[12]_i_6__0 ),
        .\reg_rd_data_reg[13]_i_3__0_0 (\reg_rd_data_reg[13]_i_3__0 ),
        .\reg_rd_data_reg[13]_i_3__0_1 (\reg_rd_data_reg[13]_i_3__0_0 ),
        .\reg_rd_data_reg[13]_i_5__0_0 (\reg_rd_data_reg[13]_i_5__0 ),
        .\reg_rd_data_reg[13]_i_6__0_0 (\reg_rd_data_reg[13]_i_6__0 ),
        .\reg_rd_data_reg[14]_i_3__0_0 (\reg_rd_data_reg[14]_i_3__0 ),
        .\reg_rd_data_reg[14]_i_3__0_1 (\reg_rd_data_reg[14]_i_3__0_0 ),
        .\reg_rd_data_reg[14]_i_5__0_0 (\reg_rd_data_reg[14]_i_5__0 ),
        .\reg_rd_data_reg[14]_i_6__0_0 (\reg_rd_data_reg[14]_i_6__0 ),
        .\reg_rd_data_reg[15] (\reg_rd_data_reg[15] ),
        .\reg_rd_data_reg[15]_i_9__0_0 (\reg_rd_data_reg[15]_i_9__0 ),
        .\reg_rd_data_reg[15]_i_9__0_1 (\reg_rd_data_reg[15]_i_9__0_0 ),
        .\reg_rd_data_reg[16] (\reg_rd_data_reg[16] ),
        .\reg_rd_data_reg[16]_0 (\reg_rd_data_reg[16]_0 ),
        .\reg_rd_data_reg[16]_1 (\reg_rd_data_reg[16]_1 ),
        .\reg_rd_data_reg[16]_2 (\reg_rd_data_reg[16]_2 ),
        .\reg_rd_data_reg[16]_3 (\reg_rd_data_reg[16]_3 ),
        .\reg_rd_data_reg[17] (\reg_rd_data_reg[17] ),
        .\reg_rd_data_reg[17]_0 (\reg_rd_data_reg[17]_0 ),
        .\reg_rd_data_reg[17]_1 (\reg_rd_data_reg[17]_1 ),
        .\reg_rd_data_reg[18] (\reg_rd_data_reg[18] ),
        .\reg_rd_data_reg[19] (\reg_rd_data_reg[19] ),
        .\reg_rd_data_reg[20] (\reg_rd_data_reg[20] ),
        .\reg_rd_data_reg[21] (\reg_rd_data_reg[21] ),
        .\reg_rd_data_reg[22] (\reg_rd_data_reg[22] ),
        .\reg_rd_data_reg[23] (\reg_rd_data_reg[23] ),
        .\reg_rd_data_reg[24] (\reg_rd_data_reg[24] ),
        .\reg_rd_data_reg[25] (\reg_rd_data_reg[25] ),
        .\reg_rd_data_reg[26] (\reg_rd_data_reg[26] ),
        .\reg_rd_data_reg[27] (\reg_rd_data_reg[27] ),
        .\reg_rd_data_reg[28] (\reg_rd_data_reg[28] ),
        .\reg_rd_data_reg[29] (\reg_rd_data_reg[29] ),
        .\reg_rd_data_reg[2] (\reg_rd_data_reg[2] ),
        .\reg_rd_data_reg[2]_0 (\reg_rd_data_reg[2]_0 ),
        .\reg_rd_data_reg[2]_1 (\reg_rd_data_reg[2]_1 ),
        .\reg_rd_data_reg[2]_2 (\reg_rd_data_reg[2]_2 ),
        .\reg_rd_data_reg[2]_3 (\reg_rd_data_reg[2]_3 ),
        .\reg_rd_data_reg[2]_i_13_0 (\reg_rd_data_reg[2]_i_13 ),
        .\reg_rd_data_reg[2]_i_3__0_0 (\reg_rd_data_reg[2]_i_3__0 ),
        .\reg_rd_data_reg[30] (\reg_rd_data_reg[30] ),
        .\reg_rd_data_reg[31] (\reg_rd_data_reg[31] ),
        .\reg_rd_data_reg[31]_0 (\reg_rd_data_reg[31]_0 ),
        .\reg_rd_data_reg[31]_1 (\reg_rd_data_reg[31]_1 ),
        .\reg_rd_data_reg[31]_2 (\reg_rd_data_reg[31]_2 ),
        .\reg_rd_data_reg[3] (\reg_rd_data_reg[3] ),
        .\reg_rd_data_reg[3]_0 (\reg_rd_data_reg[3]_0 ),
        .\reg_rd_data_reg[3]_1 (\reg_rd_data_reg[3]_1 ),
        .\reg_rd_data_reg[3]_2 (\reg_rd_data_reg[3]_2 ),
        .\reg_rd_data_reg[4] (\reg_rd_data_reg[4] ),
        .\reg_rd_data_reg[4]_0 (\reg_rd_data_reg[4]_0 ),
        .\reg_rd_data_reg[4]_1 (\reg_rd_data_reg[4]_1 ),
        .\reg_rd_data_reg[4]_2 (\reg_rd_data_reg[4]_2 ),
        .\reg_rd_data_reg[4]_i_2__0_0 (\reg_rd_data_reg[4]_i_2__0 ),
        .\reg_rd_data_reg[4]_i_6__0_0 (\reg_rd_data_reg[4]_i_6__0 ),
        .\reg_rd_data_reg[5] (\reg_rd_data_reg[5] ),
        .\reg_rd_data_reg[5]_0 (\reg_rd_data_reg[5]_0 ),
        .\reg_rd_data_reg[5]_1 (\reg_rd_data_reg[5]_1 ),
        .\reg_rd_data_reg[5]_i_2__0_0 (\reg_rd_data_reg[5]_i_2__0 ),
        .\reg_rd_data_reg[5]_i_2__0_1 (\reg_rd_data_reg[5]_i_2__0_0 ),
        .\reg_rd_data_reg[5]_i_6__0_0 (\reg_rd_data_reg[5]_i_6__0 ),
        .\reg_rd_data_reg[6]_i_3__0_0 (\reg_rd_data_reg[6]_i_3__0 ),
        .\reg_rd_data_reg[6]_i_3__0_1 (\reg_rd_data_reg[6]_i_3__0_0 ),
        .\reg_rd_data_reg[6]_i_5__0_0 (\reg_rd_data_reg[6]_i_5__0 ),
        .\reg_rd_data_reg[6]_i_6__0_0 (\reg_rd_data_reg[6]_i_6__0 ),
        .\reg_rd_data_reg[7]_i_3__0_0 (\reg_rd_data_reg[7]_i_3__0 ),
        .\reg_rd_data_reg[7]_i_3__0_1 (\reg_rd_data_reg[7]_i_3__0_0 ),
        .\reg_rd_data_reg[7]_i_5__0_0 (\reg_rd_data_reg[7]_i_5__0 ),
        .\reg_rd_data_reg[7]_i_6__0_0 (\reg_rd_data_reg[7]_i_6__0 ),
        .\reg_rd_data_reg[8] (\reg_rd_data_reg[8] ),
        .\reg_rd_data_reg[8]_0 (\reg_rd_data_reg[8]_0 ),
        .\reg_rd_data_reg[8]_1 (\reg_rd_data_reg[8]_1 ),
        .\reg_rd_data_reg[8]_2 (\reg_rd_data_reg[8]_2 ),
        .\reg_rd_data_reg[8]_3 (\reg_rd_data_reg[8]_3 ),
        .\reg_rd_data_reg[9]_i_3__0_0 (\reg_rd_data_reg[9]_i_3__0 ),
        .\reg_rd_data_reg[9]_i_3__0_1 (\reg_rd_data_reg[9]_i_3__0_0 ),
        .\reg_rd_data_reg[9]_i_5__0_0 (\reg_rd_data_reg[9]_i_5__0 ),
        .\reg_rd_data_reg[9]_i_6__0_0 (\reg_rd_data_reg[9]_i_6__0 ),
        .\req_addr_reg[31]_0 (Q),
        .\req_buf_addr_reg[31]_0 (\req_buf_addr_reg[31] ),
        .\req_buf_addr_reg[31]_1 (\req_buf_addr_reg[31]_0 ),
        .req_buf_addr_sel_p1_reg_0(req_buf_addr_sel_p1_reg),
        .\req_xfer_cnt_reg[6] (\req_xfer_cnt_reg[6] ),
        .rst(fifo_rst),
        .\s_axi_reg_araddr[3] (\s_axi_reg_araddr[3] ),
        .\s_axi_reg_araddr[4] (\s_axi_reg_araddr[4] ),
        .\s_axi_reg_araddr[6] (\s_axi_reg_araddr[6] ),
        .\s_axi_reg_araddr[7] (\s_axi_reg_araddr[7] ),
        .\s_axi_reg_araddr[7]_0 (\s_axi_reg_araddr[7]_0 ),
        .\state_cs_reg[0]_0 (\state_cs_reg[0] ),
        .\state_cs_reg[0]_1 (\state_cs_reg[0]_0 ),
        .\state_cs_reg[0]_2 (\state_cs_reg[0]_1 ),
        .\state_cs_reg[1]_0 (\state_cs_reg[1] ),
        .\state_cs_reg[2]_0 (\state_cs_reg[2] ),
        .sts_acquire_reg(sts_acquire_reg),
        .sts_acquire_reg_0(sts_acquire_reg_0),
        .sts_acquire_reg_1(sts_acquire_reg_1),
        .trig_cnt_reg(trig_cnt_reg),
        .\trig_cnt_reg[31] (\trig_cnt_reg[31] ),
        .trig_ip(trig_ip),
        .trig_out2(trig_out2),
        .use_8bit_r(use_8bit_r),
        .wr_en(fifo_wr_we),
        .\xfer_cnt_reg[6] (use_8bit_r_reg_0));
  system_rp_oscilloscope_0_rp_dma_s2mm_upsize U_dma_s2mm_upsize
       (.E(E),
        .Q(req_data),
        .acq_tdata(acq_tdata),
        .acq_tlast(acq_tlast),
        .din(fifo_wr_data),
        .\gic0.gc0.count_reg[3] (fifo_dis_reg),
        .m_axi_osc2_aclk(m_axi_osc2_aclk),
        .m_axis_tvalid_reg_0(m_axis_tvalid_reg),
        .m_axis_tvalid_reg_1(wr_en0),
        .m_axis_tvalid_reg_2(m_axis_tvalid_reg_0),
        .\mux_sel_reg[0]_0 (\mux_sel_reg[0] ),
        .\mux_sel_reg[1]_0 (\mux_sel_reg[1] ),
        .\mux_sel_reg[2]_0 (\mux_sel_reg[2] ),
        .\mux_sel_reg[2]_1 (\mux_sel_reg[2]_0 ),
        .\mux_sel_reg[2]_2 (\mux_sel_reg[2]_1 ),
        .\mux_sel_reg[2]_3 (\mux_sel_reg[2]_2 ),
        .\mux_sel_reg[2]_4 (\mux_sel_reg[2]_3 ),
        .\mux_sel_reg[2]_5 (\mux_sel_reg[2]_4 ),
        .\mux_sel_reg[2]_6 (\mux_sel_reg[2]_5 ),
        .\mux_sel_reg[2]_7 (\mux_sel_reg[2]_6 ),
        .\mux_sel_reg[2]_8 (use_8bit_r_reg_0),
        .req_we_reg_0(req_we_reg),
        .tlast_reg_0(tlast_reg),
        .tlast_reg_1(tlast_reg_0),
        .\upsize_buf_reg[0][7]_0 (\upsize_buf_reg[0][7] ),
        .\upsize_buf_reg[2][7]_0 (\upsize_buf_reg[2][7] ),
        .\upsize_buf_reg[7][7]_0 (\upsize_buf_reg[7][7] ),
        .wr_en(fifo_wr_we),
        .\xfer_cnt_reg[3]_0 (\xfer_cnt_reg[3] ),
        .\xfer_cnt_reg[6]_0 (\xfer_cnt_reg[6] ),
        .\xfer_cnt_reg[6]_1 (SR));
  (* CHECK_LICENSE_TYPE = "fifo_axi_data,fifo_generator_v13_2_5,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2020.1" *) 
  system_rp_oscilloscope_0_fifo_axi_data U_fifo_axi_data
       (.din(fifo_wr_data),
        .dout(m_axi_osc2_wdata),
        .empty(NLW_U_fifo_axi_data_empty_UNCONNECTED),
        .full(NLW_U_fifo_axi_data_full_UNCONNECTED),
        .rd_clk(m_axi_osc2_aclk),
        .rd_data_count(fifo_rd_cnt),
        .rd_en(rd_en),
        .rd_rst_busy(NLW_U_fifo_axi_data_rd_rst_busy_UNCONNECTED),
        .rst(fifo_rst),
        .wr_clk(m_axi_osc2_aclk),
        .wr_data_count(NLW_U_fifo_axi_data_wr_data_count_UNCONNECTED[9:0]),
        .wr_en(wr_en0),
        .wr_rst_busy(NLW_U_fifo_axi_data_wr_rst_busy_UNCONNECTED));
  FDRE ctl_start_r_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(trig_out2),
        .Q(ctl_start_r),
        .R(1'b0));
  FDRE use_8bit_r_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(use_8bit_r_reg_0),
        .Q(use_8bit_r),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "rp_dma_s2mm" *) 
module system_rp_oscilloscope_0_rp_dma_s2mm__xdcDup__1
   (empty,
    empty_fwft_i_reg,
    wr_en,
    m_axi_osc1_wdata,
    rd_en,
    full_immed0,
    req_buf_addr_sel_p1_reg,
    m_axi_wlast_reg,
    \state_cs_reg[0] ,
    m_axi_wvalid_reg,
    busy_reg,
    m_axi_osc1_awvalid,
    fifo_dis_reg,
    osc1_dma_intr,
    next_buf_full_reg,
    mode_reg,
    first_rst,
    E,
    Q,
    trig_out,
    external_trig_val_1,
    \state_cs_reg[1] ,
    \state_cs_reg[0]_0 ,
    \state_cs_reg[2] ,
    \xfer_cnt_reg[3] ,
    \mux_sel_reg[1] ,
    \s_axi_reg_araddr[6] ,
    intr,
    \s_axi_reg_araddr[2] ,
    D,
    \req_xfer_cnt_reg[0] ,
    SR,
    m_axis_tvalid_reg,
    \mux_sel_reg[2] ,
    \mux_sel_reg[2]_0 ,
    \mux_sel_reg[2]_1 ,
    \mux_sel_reg[2]_2 ,
    \mux_sel_reg[2]_3 ,
    \mux_sel_reg[2]_4 ,
    \mux_sel_reg[2]_5 ,
    \mux_sel_reg[2]_6 ,
    intr_cnt0,
    \cfg_trig_pre_samp_reg[29] ,
    \s_axi_reg_araddr[7] ,
    \s_axi_reg_araddr[3] ,
    \xfer_cnt_reg[6] ,
    \goreg_dm.dout_i_reg[1] ,
    \mux_sel_reg[0] ,
    \reg_rd_data_reg[7]_i_6 ,
    \reg_rd_data_reg[9]_i_6 ,
    \reg_rd_data_reg[11]_i_6 ,
    \cfg_dma_dst_addr1_reg[16] ,
    \cfg_dma_dst_addr1_reg[17] ,
    \reg_rd_data_reg[6]_i_6 ,
    \reg_ctrl_reg[9] ,
    \reg_rd_data_reg[12]_i_6 ,
    \reg_rd_data_reg[13]_i_6 ,
    \reg_rd_data_reg[14]_i_6 ,
    \req_addr_reg[15] ,
    missed_samps_ch1,
    missed_samps_ch2,
    m_axi_osc1_awlen,
    tlast_reg,
    m_axi_osc1_aclk,
    clear,
    use_8bit_r_reg_0,
    \state_cs_reg[0]_1 ,
    m_axi_wvalid_reg_0,
    m_axi_wlast_reg_0,
    busy_reg_0,
    m_axi_awvalid_reg,
    fifo_dis_reg_0,
    mode_reg_0,
    first_rst_reg,
    m_axis_tvalid_reg_0,
    req_we_reg,
    m_axi_osc1_awready,
    cfg_dma_ctrl_reg,
    external_trig_val,
    bit_start,
    \req_buf_addr_reg[31] ,
    \req_buf_addr_reg[31]_0 ,
    bram_addr_a,
    osc2_dma_intr,
    \reg_rd_data_reg[31] ,
    \reg_rd_data_reg[0] ,
    \reg_rd_data_reg[0]_0 ,
    \reg_rd_data_reg[1] ,
    \reg_rd_data_reg[2] ,
    \reg_rd_data_reg[3] ,
    \reg_rd_data_reg[0]_1 ,
    \reg_rd_data_reg[31]_0 ,
    trig_cnt_reg,
    \reg_rd_data_reg[31]_1 ,
    clk_cnt_reg,
    \reg_rd_data_reg[30] ,
    \reg_rd_data_reg[15] ,
    \reg_rd_data_reg[15]_0 ,
    \reg_rd_data_reg[29] ,
    \reg_rd_data_reg[28] ,
    \reg_rd_data_reg[27] ,
    \reg_rd_data_reg[26] ,
    \reg_rd_data_reg[25] ,
    \reg_rd_data_reg[24] ,
    \reg_rd_data_reg[23] ,
    \reg_rd_data_reg[22] ,
    \reg_rd_data_reg[21] ,
    \reg_rd_data_reg[20] ,
    \reg_rd_data_reg[19] ,
    \reg_rd_data_reg[18] ,
    \reg_rd_data_reg[10] ,
    \reg_rd_data_reg[8] ,
    \reg_rd_data_reg[10]_0 ,
    \reg_rd_data_reg[10]_1 ,
    \reg_rd_data_reg[8]_0 ,
    \reg_rd_data_reg[8]_1 ,
    \reg_rd_data_reg[8]_2 ,
    \reg_rd_data_reg[5] ,
    \reg_rd_data_reg[5]_0 ,
    \reg_rd_data_reg[5]_1 ,
    \reg_rd_data_reg[4] ,
    \reg_rd_data_reg[4]_0 ,
    \reg_rd_data_reg[4]_1 ,
    \reg_rd_data_reg[3]_0 ,
    \reg_rd_data_reg[3]_1 ,
    \reg_rd_data_reg[3]_2 ,
    \reg_rd_data_reg[2]_0 ,
    \reg_rd_data_reg[2]_1 ,
    \reg_rd_data_reg[2]_2 ,
    \reg_rd_data_reg[1]_0 ,
    \reg_rd_data_reg[1]_1 ,
    \reg_rd_data_reg[1]_2 ,
    m_axi_osc1_wready,
    m_axi_osc1_aresetn,
    \trig_cnt_reg[0] ,
    trig_ip,
    tlast_reg_0,
    acq_tdata,
    intr_reg,
    sts_acquire_reg,
    sts_acquire_reg_0,
    sts_acquire_reg_1,
    osc1_reg_wr_we,
    buf_sel_ch2,
    \reg_rd_data_reg[2]_i_3 ,
    \reg_rd_data[2]_i_8 ,
    next_buf_full1_carry__1_i_10,
    \reg_rd_data[2]_i_8_0 ,
    \reg_rd_data[17]_i_5 ,
    \reg_rd_data_reg[0]_i_2 ,
    \reg_rd_data_reg[15]_i_9 ,
    \reg_rd_data_reg[15]_i_9_0 ,
    \reg_rd_data[0]_i_5 ,
    \reg_rd_data_reg[1]_3 ,
    \reg_rd_data_reg[3]_i_3 ,
    \reg_rd_data_reg[3]_i_8 ,
    \reg_rd_data_reg[4]_i_2 ,
    \reg_rd_data_reg[4]_i_6 ,
    \reg_rd_data_reg[5]_i_2 ,
    \reg_rd_data_reg[5]_i_6 ,
    \reg_rd_data_reg[7]_i_3 ,
    \reg_rd_data_reg[7]_i_5 ,
    \reg_rd_data_reg[9]_i_3 ,
    \reg_rd_data_reg[9]_i_5 ,
    \reg_rd_data_reg[11]_i_3 ,
    \reg_rd_data_reg[11]_i_5 ,
    \reg_rd_data_reg[16] ,
    \reg_rd_data[16]_i_3 ,
    \reg_rd_data_reg[17] ,
    \reg_rd_data[18]_i_2 ,
    \reg_rd_data[18]_i_2_0 ,
    \reg_rd_data[18]_i_2_1 ,
    \reg_rd_data[19]_i_2 ,
    \reg_rd_data[19]_i_2_0 ,
    \reg_rd_data[20]_i_2 ,
    \reg_rd_data[20]_i_2_0 ,
    \reg_rd_data[21]_i_2 ,
    \reg_rd_data[21]_i_2_0 ,
    \reg_rd_data[22]_i_2 ,
    \reg_rd_data[22]_i_2_0 ,
    \reg_rd_data[23]_i_2 ,
    \reg_rd_data[23]_i_2_0 ,
    \reg_rd_data[24]_i_2 ,
    \reg_rd_data[24]_i_2_0 ,
    intr_cnt_reg,
    \reg_rd_data[25]_i_2 ,
    \reg_rd_data[26]_i_2 ,
    \reg_rd_data[27]_i_2 ,
    \reg_rd_data[28]_i_2 ,
    \reg_rd_data[29]_i_2 ,
    \reg_rd_data[30]_i_2 ,
    \reg_rd_data_reg[31]_2 ,
    \reg_rd_data[31]_i_3 ,
    \reg_rd_data[31]_i_3_0 ,
    \reg_rd_data_reg[5]_i_2_0 ,
    \reg_rd_data_reg[6]_i_3 ,
    \reg_rd_data_reg[6]_i_3_0 ,
    \reg_rd_data_reg[6]_i_5 ,
    \reg_rd_data_reg[7]_i_3_0 ,
    \reg_rd_data_reg[8]_3 ,
    \reg_rd_data[8]_i_3 ,
    \reg_rd_data[8]_i_3_0 ,
    \reg_rd_data_reg[9]_i_3_0 ,
    \reg_rd_data_reg[10]_2 ,
    \reg_rd_data[10]_i_3 ,
    \reg_rd_data[10]_i_3_0 ,
    \reg_rd_data_reg[11]_i_3_0 ,
    \reg_rd_data_reg[12]_i_3 ,
    \reg_rd_data_reg[12]_i_3_0 ,
    \reg_rd_data_reg[12]_i_5 ,
    \reg_rd_data_reg[13]_i_3 ,
    \reg_rd_data_reg[13]_i_5 ,
    \reg_rd_data_reg[13]_i_3_0 ,
    \reg_rd_data_reg[14]_i_3 ,
    \reg_rd_data_reg[14]_i_5 ,
    \reg_rd_data_reg[14]_i_3_0 ,
    \reg_rd_data_reg[15]_1 ,
    \reg_rd_data[15]_i_4 ,
    \reg_rd_data[15]_i_4_0 ,
    \reg_rd_data[16]_i_3_0 ,
    \reg_rd_data[17]_i_5_0 ,
    \reg_rd_data[17]_i_5_1 ,
    \reg_rd_data[19]_i_2_1 ,
    \reg_rd_data[20]_i_2_1 ,
    \reg_rd_data[21]_i_2_1 ,
    \reg_rd_data[22]_i_2_1 ,
    \reg_rd_data[23]_i_2_1 ,
    \reg_rd_data[24]_i_2_1 ,
    \reg_rd_data[25]_i_2_0 ,
    \reg_rd_data[26]_i_2_0 ,
    \reg_rd_data[27]_i_2_0 ,
    \reg_rd_data[28]_i_2_0 ,
    \reg_rd_data[29]_i_2_0 ,
    \reg_rd_data[30]_i_2_0 ,
    \reg_ctrl_reg[31] ,
    acq_tlast,
    \upsize_buf_reg[0][7] ,
    \upsize_buf_reg[7][7] ,
    \upsize_buf_reg[2][7] );
  output empty;
  output empty_fwft_i_reg;
  output wr_en;
  output [63:0]m_axi_osc1_wdata;
  output rd_en;
  output full_immed0;
  output req_buf_addr_sel_p1_reg;
  output m_axi_wlast_reg;
  output \state_cs_reg[0] ;
  output m_axi_wvalid_reg;
  output busy_reg;
  output m_axi_osc1_awvalid;
  output fifo_dis_reg;
  output osc1_dma_intr;
  output next_buf_full_reg;
  output mode_reg;
  output first_rst;
  output [0:0]E;
  output [31:0]Q;
  output trig_out;
  output external_trig_val_1;
  output \state_cs_reg[1] ;
  output \state_cs_reg[0]_0 ;
  output \state_cs_reg[2] ;
  output \xfer_cnt_reg[3] ;
  output \mux_sel_reg[1] ;
  output \s_axi_reg_araddr[6] ;
  output intr;
  output \s_axi_reg_araddr[2] ;
  output [21:0]D;
  output \req_xfer_cnt_reg[0] ;
  output [0:0]SR;
  output m_axis_tvalid_reg;
  output \mux_sel_reg[2] ;
  output \mux_sel_reg[2]_0 ;
  output \mux_sel_reg[2]_1 ;
  output \mux_sel_reg[2]_2 ;
  output \mux_sel_reg[2]_3 ;
  output \mux_sel_reg[2]_4 ;
  output \mux_sel_reg[2]_5 ;
  output \mux_sel_reg[2]_6 ;
  output intr_cnt0;
  output \cfg_trig_pre_samp_reg[29] ;
  output \s_axi_reg_araddr[7] ;
  output \s_axi_reg_araddr[3] ;
  output \xfer_cnt_reg[6] ;
  output \goreg_dm.dout_i_reg[1] ;
  output \mux_sel_reg[0] ;
  output \reg_rd_data_reg[7]_i_6 ;
  output \reg_rd_data_reg[9]_i_6 ;
  output \reg_rd_data_reg[11]_i_6 ;
  output \cfg_dma_dst_addr1_reg[16] ;
  output \cfg_dma_dst_addr1_reg[17] ;
  output \reg_rd_data_reg[6]_i_6 ;
  output [1:0]\reg_ctrl_reg[9] ;
  output \reg_rd_data_reg[12]_i_6 ;
  output \reg_rd_data_reg[13]_i_6 ;
  output \reg_rd_data_reg[14]_i_6 ;
  output \req_addr_reg[15] ;
  output [29:0]missed_samps_ch1;
  output [29:0]missed_samps_ch2;
  output [7:0]m_axi_osc1_awlen;
  output [0:0]tlast_reg;
  input m_axi_osc1_aclk;
  input clear;
  input use_8bit_r_reg_0;
  input \state_cs_reg[0]_1 ;
  input m_axi_wvalid_reg_0;
  input m_axi_wlast_reg_0;
  input busy_reg_0;
  input m_axi_awvalid_reg;
  input fifo_dis_reg_0;
  input mode_reg_0;
  input first_rst_reg;
  input m_axis_tvalid_reg_0;
  input req_we_reg;
  input m_axi_osc1_awready;
  input [0:0]cfg_dma_ctrl_reg;
  input external_trig_val;
  input bit_start;
  input [31:0]\req_buf_addr_reg[31] ;
  input [31:0]\req_buf_addr_reg[31]_0 ;
  input [7:0]bram_addr_a;
  input osc2_dma_intr;
  input \reg_rd_data_reg[31] ;
  input \reg_rd_data_reg[0] ;
  input \reg_rd_data_reg[0]_0 ;
  input \reg_rd_data_reg[1] ;
  input \reg_rd_data_reg[2] ;
  input \reg_rd_data_reg[3] ;
  input \reg_rd_data_reg[0]_1 ;
  input \reg_rd_data_reg[31]_0 ;
  input [13:0]trig_cnt_reg;
  input \reg_rd_data_reg[31]_1 ;
  input [13:0]clk_cnt_reg;
  input \reg_rd_data_reg[30] ;
  input \reg_rd_data_reg[15] ;
  input \reg_rd_data_reg[15]_0 ;
  input \reg_rd_data_reg[29] ;
  input \reg_rd_data_reg[28] ;
  input \reg_rd_data_reg[27] ;
  input \reg_rd_data_reg[26] ;
  input \reg_rd_data_reg[25] ;
  input \reg_rd_data_reg[24] ;
  input \reg_rd_data_reg[23] ;
  input \reg_rd_data_reg[22] ;
  input \reg_rd_data_reg[21] ;
  input \reg_rd_data_reg[20] ;
  input \reg_rd_data_reg[19] ;
  input \reg_rd_data_reg[18] ;
  input \reg_rd_data_reg[10] ;
  input \reg_rd_data_reg[8] ;
  input \reg_rd_data_reg[10]_0 ;
  input \reg_rd_data_reg[10]_1 ;
  input \reg_rd_data_reg[8]_0 ;
  input \reg_rd_data_reg[8]_1 ;
  input \reg_rd_data_reg[8]_2 ;
  input \reg_rd_data_reg[5] ;
  input \reg_rd_data_reg[5]_0 ;
  input \reg_rd_data_reg[5]_1 ;
  input \reg_rd_data_reg[4] ;
  input \reg_rd_data_reg[4]_0 ;
  input \reg_rd_data_reg[4]_1 ;
  input \reg_rd_data_reg[3]_0 ;
  input \reg_rd_data_reg[3]_1 ;
  input \reg_rd_data_reg[3]_2 ;
  input \reg_rd_data_reg[2]_0 ;
  input \reg_rd_data_reg[2]_1 ;
  input \reg_rd_data_reg[2]_2 ;
  input \reg_rd_data_reg[1]_0 ;
  input \reg_rd_data_reg[1]_1 ;
  input \reg_rd_data_reg[1]_2 ;
  input m_axi_osc1_wready;
  input m_axi_osc1_aresetn;
  input [5:0]\trig_cnt_reg[0] ;
  input [0:0]trig_ip;
  input tlast_reg_0;
  input [15:0]acq_tdata;
  input intr_reg;
  input sts_acquire_reg;
  input [7:0]sts_acquire_reg_0;
  input sts_acquire_reg_1;
  input osc1_reg_wr_we;
  input buf_sel_ch2;
  input \reg_rd_data_reg[2]_i_3 ;
  input \reg_rd_data[2]_i_8 ;
  input [16:0]next_buf_full1_carry__1_i_10;
  input \reg_rd_data[2]_i_8_0 ;
  input [17:0]\reg_rd_data[17]_i_5 ;
  input \reg_rd_data_reg[0]_i_2 ;
  input [15:0]\reg_rd_data_reg[15]_i_9 ;
  input [15:0]\reg_rd_data_reg[15]_i_9_0 ;
  input \reg_rd_data[0]_i_5 ;
  input \reg_rd_data_reg[1]_3 ;
  input \reg_rd_data_reg[3]_i_3 ;
  input \reg_rd_data_reg[3]_i_8 ;
  input \reg_rd_data_reg[4]_i_2 ;
  input \reg_rd_data_reg[4]_i_6 ;
  input \reg_rd_data_reg[5]_i_2 ;
  input \reg_rd_data_reg[5]_i_6 ;
  input \reg_rd_data_reg[7]_i_3 ;
  input \reg_rd_data_reg[7]_i_5 ;
  input \reg_rd_data_reg[9]_i_3 ;
  input \reg_rd_data_reg[9]_i_5 ;
  input \reg_rd_data_reg[11]_i_3 ;
  input \reg_rd_data_reg[11]_i_5 ;
  input \reg_rd_data_reg[16] ;
  input \reg_rd_data[16]_i_3 ;
  input \reg_rd_data_reg[17] ;
  input \reg_rd_data[18]_i_2 ;
  input \reg_rd_data[18]_i_2_0 ;
  input \reg_rd_data[18]_i_2_1 ;
  input \reg_rd_data[19]_i_2 ;
  input \reg_rd_data[19]_i_2_0 ;
  input \reg_rd_data[20]_i_2 ;
  input \reg_rd_data[20]_i_2_0 ;
  input \reg_rd_data[21]_i_2 ;
  input \reg_rd_data[21]_i_2_0 ;
  input \reg_rd_data[22]_i_2 ;
  input \reg_rd_data[22]_i_2_0 ;
  input \reg_rd_data[23]_i_2 ;
  input \reg_rd_data[23]_i_2_0 ;
  input \reg_rd_data[24]_i_2 ;
  input \reg_rd_data[24]_i_2_0 ;
  input [6:0]intr_cnt_reg;
  input \reg_rd_data[25]_i_2 ;
  input \reg_rd_data[26]_i_2 ;
  input \reg_rd_data[27]_i_2 ;
  input \reg_rd_data[28]_i_2 ;
  input \reg_rd_data[29]_i_2 ;
  input \reg_rd_data[30]_i_2 ;
  input \reg_rd_data_reg[31]_2 ;
  input \reg_rd_data[31]_i_3 ;
  input \reg_rd_data[31]_i_3_0 ;
  input \reg_rd_data_reg[5]_i_2_0 ;
  input \reg_rd_data_reg[6]_i_3 ;
  input \reg_rd_data_reg[6]_i_3_0 ;
  input \reg_rd_data_reg[6]_i_5 ;
  input \reg_rd_data_reg[7]_i_3_0 ;
  input \reg_rd_data_reg[8]_3 ;
  input \reg_rd_data[8]_i_3 ;
  input \reg_rd_data[8]_i_3_0 ;
  input \reg_rd_data_reg[9]_i_3_0 ;
  input \reg_rd_data_reg[10]_2 ;
  input \reg_rd_data[10]_i_3 ;
  input \reg_rd_data[10]_i_3_0 ;
  input \reg_rd_data_reg[11]_i_3_0 ;
  input \reg_rd_data_reg[12]_i_3 ;
  input \reg_rd_data_reg[12]_i_3_0 ;
  input \reg_rd_data_reg[12]_i_5 ;
  input \reg_rd_data_reg[13]_i_3 ;
  input \reg_rd_data_reg[13]_i_5 ;
  input \reg_rd_data_reg[13]_i_3_0 ;
  input \reg_rd_data_reg[14]_i_3 ;
  input \reg_rd_data_reg[14]_i_5 ;
  input \reg_rd_data_reg[14]_i_3_0 ;
  input \reg_rd_data_reg[15]_1 ;
  input \reg_rd_data[15]_i_4 ;
  input \reg_rd_data[15]_i_4_0 ;
  input \reg_rd_data[16]_i_3_0 ;
  input \reg_rd_data[17]_i_5_0 ;
  input \reg_rd_data[17]_i_5_1 ;
  input \reg_rd_data[19]_i_2_1 ;
  input \reg_rd_data[20]_i_2_1 ;
  input \reg_rd_data[21]_i_2_1 ;
  input \reg_rd_data[22]_i_2_1 ;
  input \reg_rd_data[23]_i_2_1 ;
  input \reg_rd_data[24]_i_2_1 ;
  input \reg_rd_data[25]_i_2_0 ;
  input \reg_rd_data[26]_i_2_0 ;
  input \reg_rd_data[27]_i_2_0 ;
  input \reg_rd_data[28]_i_2_0 ;
  input \reg_rd_data[29]_i_2_0 ;
  input \reg_rd_data[30]_i_2_0 ;
  input [31:0]\reg_ctrl_reg[31] ;
  input acq_tlast;
  input [7:0]\upsize_buf_reg[0][7] ;
  input [7:0]\upsize_buf_reg[7][7] ;
  input [7:0]\upsize_buf_reg[2][7] ;

  wire [21:0]D;
  wire [0:0]E;
  wire [31:0]Q;
  wire [0:0]SR;
  wire [15:0]acq_tdata;
  wire acq_tlast;
  wire bit_start;
  wire [7:0]bram_addr_a;
  wire buf_sel_ch2;
  wire busy_reg;
  wire busy_reg_0;
  wire [0:0]cfg_dma_ctrl_reg;
  wire \cfg_dma_dst_addr1_reg[16] ;
  wire \cfg_dma_dst_addr1_reg[17] ;
  wire \cfg_trig_pre_samp_reg[29] ;
  wire clear;
  wire [13:0]clk_cnt_reg;
  wire ctl_start_r;
  wire empty;
  wire empty_fwft_i_reg;
  wire external_trig_val;
  wire external_trig_val_1;
  wire fifo_dis_reg;
  wire fifo_dis_reg_0;
  wire [9:0]fifo_rd_cnt;
  wire fifo_rst;
  wire [63:0]fifo_wr_data;
  wire fifo_wr_we;
  wire first_rst;
  wire first_rst_reg;
  wire full_immed0;
  wire \goreg_dm.dout_i_reg[1] ;
  wire intr;
  wire intr_cnt0;
  wire [6:0]intr_cnt_reg;
  wire intr_reg;
  wire m_axi_awvalid_reg;
  wire m_axi_osc1_aclk;
  wire m_axi_osc1_aresetn;
  wire [7:0]m_axi_osc1_awlen;
  wire m_axi_osc1_awready;
  wire m_axi_osc1_awvalid;
  wire [63:0]m_axi_osc1_wdata;
  wire m_axi_osc1_wready;
  wire m_axi_wlast_reg;
  wire m_axi_wlast_reg_0;
  wire m_axi_wvalid_reg;
  wire m_axi_wvalid_reg_0;
  wire m_axis_tvalid_reg;
  wire m_axis_tvalid_reg_0;
  wire [29:0]missed_samps_ch1;
  wire [29:0]missed_samps_ch2;
  wire mode_reg;
  wire mode_reg_0;
  wire \mux_sel_reg[0] ;
  wire \mux_sel_reg[1] ;
  wire \mux_sel_reg[2] ;
  wire \mux_sel_reg[2]_0 ;
  wire \mux_sel_reg[2]_1 ;
  wire \mux_sel_reg[2]_2 ;
  wire \mux_sel_reg[2]_3 ;
  wire \mux_sel_reg[2]_4 ;
  wire \mux_sel_reg[2]_5 ;
  wire \mux_sel_reg[2]_6 ;
  wire [16:0]next_buf_full1_carry__1_i_10;
  wire next_buf_full_reg;
  wire osc1_dma_intr;
  wire osc1_reg_wr_we;
  wire osc2_dma_intr;
  wire rd_en;
  wire [31:0]\reg_ctrl_reg[31] ;
  wire [1:0]\reg_ctrl_reg[9] ;
  wire \reg_rd_data[0]_i_5 ;
  wire \reg_rd_data[10]_i_3 ;
  wire \reg_rd_data[10]_i_3_0 ;
  wire \reg_rd_data[15]_i_4 ;
  wire \reg_rd_data[15]_i_4_0 ;
  wire \reg_rd_data[16]_i_3 ;
  wire \reg_rd_data[16]_i_3_0 ;
  wire [17:0]\reg_rd_data[17]_i_5 ;
  wire \reg_rd_data[17]_i_5_0 ;
  wire \reg_rd_data[17]_i_5_1 ;
  wire \reg_rd_data[18]_i_2 ;
  wire \reg_rd_data[18]_i_2_0 ;
  wire \reg_rd_data[18]_i_2_1 ;
  wire \reg_rd_data[19]_i_2 ;
  wire \reg_rd_data[19]_i_2_0 ;
  wire \reg_rd_data[19]_i_2_1 ;
  wire \reg_rd_data[20]_i_2 ;
  wire \reg_rd_data[20]_i_2_0 ;
  wire \reg_rd_data[20]_i_2_1 ;
  wire \reg_rd_data[21]_i_2 ;
  wire \reg_rd_data[21]_i_2_0 ;
  wire \reg_rd_data[21]_i_2_1 ;
  wire \reg_rd_data[22]_i_2 ;
  wire \reg_rd_data[22]_i_2_0 ;
  wire \reg_rd_data[22]_i_2_1 ;
  wire \reg_rd_data[23]_i_2 ;
  wire \reg_rd_data[23]_i_2_0 ;
  wire \reg_rd_data[23]_i_2_1 ;
  wire \reg_rd_data[24]_i_2 ;
  wire \reg_rd_data[24]_i_2_0 ;
  wire \reg_rd_data[24]_i_2_1 ;
  wire \reg_rd_data[25]_i_2 ;
  wire \reg_rd_data[25]_i_2_0 ;
  wire \reg_rd_data[26]_i_2 ;
  wire \reg_rd_data[26]_i_2_0 ;
  wire \reg_rd_data[27]_i_2 ;
  wire \reg_rd_data[27]_i_2_0 ;
  wire \reg_rd_data[28]_i_2 ;
  wire \reg_rd_data[28]_i_2_0 ;
  wire \reg_rd_data[29]_i_2 ;
  wire \reg_rd_data[29]_i_2_0 ;
  wire \reg_rd_data[2]_i_8 ;
  wire \reg_rd_data[2]_i_8_0 ;
  wire \reg_rd_data[30]_i_2 ;
  wire \reg_rd_data[30]_i_2_0 ;
  wire \reg_rd_data[31]_i_3 ;
  wire \reg_rd_data[31]_i_3_0 ;
  wire \reg_rd_data[8]_i_3 ;
  wire \reg_rd_data[8]_i_3_0 ;
  wire \reg_rd_data_reg[0] ;
  wire \reg_rd_data_reg[0]_0 ;
  wire \reg_rd_data_reg[0]_1 ;
  wire \reg_rd_data_reg[0]_i_2 ;
  wire \reg_rd_data_reg[10] ;
  wire \reg_rd_data_reg[10]_0 ;
  wire \reg_rd_data_reg[10]_1 ;
  wire \reg_rd_data_reg[10]_2 ;
  wire \reg_rd_data_reg[11]_i_3 ;
  wire \reg_rd_data_reg[11]_i_3_0 ;
  wire \reg_rd_data_reg[11]_i_5 ;
  wire \reg_rd_data_reg[11]_i_6 ;
  wire \reg_rd_data_reg[12]_i_3 ;
  wire \reg_rd_data_reg[12]_i_3_0 ;
  wire \reg_rd_data_reg[12]_i_5 ;
  wire \reg_rd_data_reg[12]_i_6 ;
  wire \reg_rd_data_reg[13]_i_3 ;
  wire \reg_rd_data_reg[13]_i_3_0 ;
  wire \reg_rd_data_reg[13]_i_5 ;
  wire \reg_rd_data_reg[13]_i_6 ;
  wire \reg_rd_data_reg[14]_i_3 ;
  wire \reg_rd_data_reg[14]_i_3_0 ;
  wire \reg_rd_data_reg[14]_i_5 ;
  wire \reg_rd_data_reg[14]_i_6 ;
  wire \reg_rd_data_reg[15] ;
  wire \reg_rd_data_reg[15]_0 ;
  wire \reg_rd_data_reg[15]_1 ;
  wire [15:0]\reg_rd_data_reg[15]_i_9 ;
  wire [15:0]\reg_rd_data_reg[15]_i_9_0 ;
  wire \reg_rd_data_reg[16] ;
  wire \reg_rd_data_reg[17] ;
  wire \reg_rd_data_reg[18] ;
  wire \reg_rd_data_reg[19] ;
  wire \reg_rd_data_reg[1] ;
  wire \reg_rd_data_reg[1]_0 ;
  wire \reg_rd_data_reg[1]_1 ;
  wire \reg_rd_data_reg[1]_2 ;
  wire \reg_rd_data_reg[1]_3 ;
  wire \reg_rd_data_reg[20] ;
  wire \reg_rd_data_reg[21] ;
  wire \reg_rd_data_reg[22] ;
  wire \reg_rd_data_reg[23] ;
  wire \reg_rd_data_reg[24] ;
  wire \reg_rd_data_reg[25] ;
  wire \reg_rd_data_reg[26] ;
  wire \reg_rd_data_reg[27] ;
  wire \reg_rd_data_reg[28] ;
  wire \reg_rd_data_reg[29] ;
  wire \reg_rd_data_reg[2] ;
  wire \reg_rd_data_reg[2]_0 ;
  wire \reg_rd_data_reg[2]_1 ;
  wire \reg_rd_data_reg[2]_2 ;
  wire \reg_rd_data_reg[2]_i_3 ;
  wire \reg_rd_data_reg[30] ;
  wire \reg_rd_data_reg[31] ;
  wire \reg_rd_data_reg[31]_0 ;
  wire \reg_rd_data_reg[31]_1 ;
  wire \reg_rd_data_reg[31]_2 ;
  wire \reg_rd_data_reg[3] ;
  wire \reg_rd_data_reg[3]_0 ;
  wire \reg_rd_data_reg[3]_1 ;
  wire \reg_rd_data_reg[3]_2 ;
  wire \reg_rd_data_reg[3]_i_3 ;
  wire \reg_rd_data_reg[3]_i_8 ;
  wire \reg_rd_data_reg[4] ;
  wire \reg_rd_data_reg[4]_0 ;
  wire \reg_rd_data_reg[4]_1 ;
  wire \reg_rd_data_reg[4]_i_2 ;
  wire \reg_rd_data_reg[4]_i_6 ;
  wire \reg_rd_data_reg[5] ;
  wire \reg_rd_data_reg[5]_0 ;
  wire \reg_rd_data_reg[5]_1 ;
  wire \reg_rd_data_reg[5]_i_2 ;
  wire \reg_rd_data_reg[5]_i_2_0 ;
  wire \reg_rd_data_reg[5]_i_6 ;
  wire \reg_rd_data_reg[6]_i_3 ;
  wire \reg_rd_data_reg[6]_i_3_0 ;
  wire \reg_rd_data_reg[6]_i_5 ;
  wire \reg_rd_data_reg[6]_i_6 ;
  wire \reg_rd_data_reg[7]_i_3 ;
  wire \reg_rd_data_reg[7]_i_3_0 ;
  wire \reg_rd_data_reg[7]_i_5 ;
  wire \reg_rd_data_reg[7]_i_6 ;
  wire \reg_rd_data_reg[8] ;
  wire \reg_rd_data_reg[8]_0 ;
  wire \reg_rd_data_reg[8]_1 ;
  wire \reg_rd_data_reg[8]_2 ;
  wire \reg_rd_data_reg[8]_3 ;
  wire \reg_rd_data_reg[9]_i_3 ;
  wire \reg_rd_data_reg[9]_i_3_0 ;
  wire \reg_rd_data_reg[9]_i_5 ;
  wire \reg_rd_data_reg[9]_i_6 ;
  wire \req_addr_reg[15] ;
  wire [31:0]\req_buf_addr_reg[31] ;
  wire [31:0]\req_buf_addr_reg[31]_0 ;
  wire req_buf_addr_sel_p1_reg;
  wire [7:0]req_data;
  wire req_we_reg;
  wire \req_xfer_cnt_reg[0] ;
  wire \s_axi_reg_araddr[2] ;
  wire \s_axi_reg_araddr[3] ;
  wire \s_axi_reg_araddr[6] ;
  wire \s_axi_reg_araddr[7] ;
  wire \state_cs_reg[0] ;
  wire \state_cs_reg[0]_0 ;
  wire \state_cs_reg[0]_1 ;
  wire \state_cs_reg[1] ;
  wire \state_cs_reg[2] ;
  wire sts_acquire_reg;
  wire [7:0]sts_acquire_reg_0;
  wire sts_acquire_reg_1;
  wire [0:0]tlast_reg;
  wire tlast_reg_0;
  wire [13:0]trig_cnt_reg;
  wire [5:0]\trig_cnt_reg[0] ;
  wire [0:0]trig_ip;
  wire trig_out;
  wire trig_out1;
  wire [7:0]\upsize_buf_reg[0][7] ;
  wire [7:0]\upsize_buf_reg[2][7] ;
  wire [7:0]\upsize_buf_reg[7][7] ;
  wire use_8bit_r;
  wire use_8bit_r_reg_0;
  wire wr_en;
  wire wr_en0;
  wire \xfer_cnt_reg[3] ;
  wire \xfer_cnt_reg[6] ;
  wire NLW_U_fifo_axi_data_empty_UNCONNECTED;
  wire NLW_U_fifo_axi_data_full_UNCONNECTED;
  wire NLW_U_fifo_axi_data_rd_rst_busy_UNCONNECTED;
  wire NLW_U_fifo_axi_data_wr_rst_busy_UNCONNECTED;
  wire [9:0]NLW_U_fifo_axi_data_wr_data_count_UNCONNECTED;

  system_rp_oscilloscope_0_rp_dma_s2mm_ctrl__xdcDup__1 U_dma_s2mm_ctrl
       (.D(D),
        .E(E),
        .Q(req_data),
        .bit_start(bit_start),
        .bram_addr_a(bram_addr_a),
        .buf_sel_ch2(buf_sel_ch2),
        .busy_reg(busy_reg),
        .busy_reg_0(busy_reg_0),
        .cfg_dma_ctrl_reg(cfg_dma_ctrl_reg),
        .\cfg_dma_dst_addr1_reg[16] (\cfg_dma_dst_addr1_reg[16] ),
        .\cfg_dma_dst_addr1_reg[17] (\cfg_dma_dst_addr1_reg[17] ),
        .\cfg_trig_mask_reg[1] (external_trig_val_1),
        .\cfg_trig_pre_samp_reg[29] (\cfg_trig_pre_samp_reg[29] ),
        .clear(clear),
        .clk_cnt_reg(clk_cnt_reg),
        .ctl_start_r(ctl_start_r),
        .ctl_start_r_reg(SR),
        .empty(empty),
        .empty_fwft_i_reg(empty_fwft_i_reg),
        .external_trig_val(external_trig_val),
        .fifo_dis_reg_0(wr_en),
        .fifo_dis_reg_1(fifo_dis_reg),
        .fifo_dis_reg_2(fifo_dis_reg_0),
        .first_rst(first_rst),
        .first_rst_reg_0(first_rst_reg),
        .full_immed0(full_immed0),
        .\goreg_dm.dout_i_reg[1] (\goreg_dm.dout_i_reg[1] ),
        .intr(intr),
        .intr_cnt0(intr_cnt0),
        .intr_cnt_reg(intr_cnt_reg),
        .intr_reg(intr_reg),
        .intr_reg__0_0(osc1_dma_intr),
        .m_axi_awvalid_reg_0(m_axi_awvalid_reg),
        .m_axi_osc1_aclk(m_axi_osc1_aclk),
        .m_axi_osc1_aresetn(m_axi_osc1_aresetn),
        .m_axi_osc1_awlen(m_axi_osc1_awlen),
        .m_axi_osc1_awready(m_axi_osc1_awready),
        .m_axi_osc1_awvalid(m_axi_osc1_awvalid),
        .m_axi_osc1_wready(m_axi_osc1_wready),
        .m_axi_wlast_reg(m_axi_wlast_reg),
        .m_axi_wlast_reg_0(m_axi_wlast_reg_0),
        .m_axi_wvalid_reg(m_axi_wvalid_reg),
        .m_axi_wvalid_reg_0(m_axi_wvalid_reg_0),
        .missed_samps_ch1(missed_samps_ch1),
        .missed_samps_ch2(missed_samps_ch2),
        .mode_reg_0(mode_reg),
        .mode_reg_1(mode_reg_0),
        .next_buf_full1_carry__1_i_10_0(next_buf_full1_carry__1_i_10),
        .next_buf_full_reg_0(next_buf_full_reg),
        .osc1_reg_wr_we(osc1_reg_wr_we),
        .osc2_dma_intr(osc2_dma_intr),
        .rd_data_count(fifo_rd_cnt),
        .rd_en(rd_en),
        .\reg_ctrl_reg[31]_0 (\reg_ctrl_reg[31] ),
        .\reg_ctrl_reg[9]_0 (\reg_ctrl_reg[9] ),
        .\reg_rd_data[0]_i_5_0 (\reg_rd_data[0]_i_5 ),
        .\reg_rd_data[10]_i_3_0 (\reg_rd_data[10]_i_3 ),
        .\reg_rd_data[10]_i_3_1 (\reg_rd_data[10]_i_3_0 ),
        .\reg_rd_data[15]_i_4_0 (\reg_rd_data[15]_i_4 ),
        .\reg_rd_data[15]_i_4_1 (\reg_rd_data[15]_i_4_0 ),
        .\reg_rd_data[16]_i_3_0 (\reg_rd_data[16]_i_3 ),
        .\reg_rd_data[16]_i_3_1 (\reg_rd_data[16]_i_3_0 ),
        .\reg_rd_data[17]_i_5_0 (\reg_rd_data[17]_i_5 ),
        .\reg_rd_data[17]_i_5_1 (\reg_rd_data[17]_i_5_0 ),
        .\reg_rd_data[17]_i_5_2 (\reg_rd_data[17]_i_5_1 ),
        .\reg_rd_data[18]_i_2_0 (\reg_rd_data[18]_i_2 ),
        .\reg_rd_data[18]_i_2_1 (\reg_rd_data[18]_i_2_0 ),
        .\reg_rd_data[18]_i_2_2 (\reg_rd_data[18]_i_2_1 ),
        .\reg_rd_data[19]_i_2_0 (\reg_rd_data[19]_i_2 ),
        .\reg_rd_data[19]_i_2_1 (\reg_rd_data[19]_i_2_0 ),
        .\reg_rd_data[19]_i_2_2 (\reg_rd_data[19]_i_2_1 ),
        .\reg_rd_data[20]_i_2_0 (\reg_rd_data[20]_i_2 ),
        .\reg_rd_data[20]_i_2_1 (\reg_rd_data[20]_i_2_0 ),
        .\reg_rd_data[20]_i_2_2 (\reg_rd_data[20]_i_2_1 ),
        .\reg_rd_data[21]_i_2_0 (\reg_rd_data[21]_i_2 ),
        .\reg_rd_data[21]_i_2_1 (\reg_rd_data[21]_i_2_0 ),
        .\reg_rd_data[21]_i_2_2 (\reg_rd_data[21]_i_2_1 ),
        .\reg_rd_data[22]_i_2_0 (\reg_rd_data[22]_i_2 ),
        .\reg_rd_data[22]_i_2_1 (\reg_rd_data[22]_i_2_0 ),
        .\reg_rd_data[22]_i_2_2 (\reg_rd_data[22]_i_2_1 ),
        .\reg_rd_data[23]_i_2_0 (\reg_rd_data[23]_i_2 ),
        .\reg_rd_data[23]_i_2_1 (\reg_rd_data[23]_i_2_0 ),
        .\reg_rd_data[23]_i_2_2 (\reg_rd_data[23]_i_2_1 ),
        .\reg_rd_data[24]_i_2_0 (\reg_rd_data[24]_i_2 ),
        .\reg_rd_data[24]_i_2_1 (\reg_rd_data[24]_i_2_0 ),
        .\reg_rd_data[24]_i_2_2 (\reg_rd_data[24]_i_2_1 ),
        .\reg_rd_data[25]_i_2_0 (\reg_rd_data[25]_i_2 ),
        .\reg_rd_data[25]_i_2_1 (\reg_rd_data[25]_i_2_0 ),
        .\reg_rd_data[26]_i_2_0 (\reg_rd_data[26]_i_2 ),
        .\reg_rd_data[26]_i_2_1 (\reg_rd_data[26]_i_2_0 ),
        .\reg_rd_data[27]_i_2_0 (\reg_rd_data[27]_i_2 ),
        .\reg_rd_data[27]_i_2_1 (\reg_rd_data[27]_i_2_0 ),
        .\reg_rd_data[28]_i_2_0 (\reg_rd_data[28]_i_2 ),
        .\reg_rd_data[28]_i_2_1 (\reg_rd_data[28]_i_2_0 ),
        .\reg_rd_data[29]_i_2_0 (\reg_rd_data[29]_i_2 ),
        .\reg_rd_data[29]_i_2_1 (\reg_rd_data[29]_i_2_0 ),
        .\reg_rd_data[2]_i_8_0 (\reg_rd_data[2]_i_8 ),
        .\reg_rd_data[2]_i_8_1 (\reg_rd_data[2]_i_8_0 ),
        .\reg_rd_data[30]_i_2_0 (\reg_rd_data[30]_i_2 ),
        .\reg_rd_data[30]_i_2_1 (\reg_rd_data[30]_i_2_0 ),
        .\reg_rd_data[31]_i_3_0 (\reg_rd_data[31]_i_3 ),
        .\reg_rd_data[31]_i_3_1 (\reg_rd_data[31]_i_3_0 ),
        .\reg_rd_data[8]_i_3_0 (\reg_rd_data[8]_i_3 ),
        .\reg_rd_data[8]_i_3_1 (\reg_rd_data[8]_i_3_0 ),
        .\reg_rd_data_reg[0] (\reg_rd_data_reg[0] ),
        .\reg_rd_data_reg[0]_0 (\reg_rd_data_reg[0]_0 ),
        .\reg_rd_data_reg[0]_1 (\reg_rd_data_reg[0]_1 ),
        .\reg_rd_data_reg[0]_i_2_0 (\reg_rd_data_reg[0]_i_2 ),
        .\reg_rd_data_reg[10] (\reg_rd_data_reg[10] ),
        .\reg_rd_data_reg[10]_0 (\reg_rd_data_reg[10]_0 ),
        .\reg_rd_data_reg[10]_1 (\reg_rd_data_reg[10]_1 ),
        .\reg_rd_data_reg[10]_2 (\reg_rd_data_reg[10]_2 ),
        .\reg_rd_data_reg[11]_i_3_0 (\reg_rd_data_reg[11]_i_3 ),
        .\reg_rd_data_reg[11]_i_3_1 (\reg_rd_data_reg[11]_i_3_0 ),
        .\reg_rd_data_reg[11]_i_5_0 (\reg_rd_data_reg[11]_i_5 ),
        .\reg_rd_data_reg[11]_i_6_0 (\reg_rd_data_reg[11]_i_6 ),
        .\reg_rd_data_reg[12]_i_3_0 (\reg_rd_data_reg[12]_i_3 ),
        .\reg_rd_data_reg[12]_i_3_1 (\reg_rd_data_reg[12]_i_3_0 ),
        .\reg_rd_data_reg[12]_i_5_0 (\reg_rd_data_reg[12]_i_5 ),
        .\reg_rd_data_reg[12]_i_6_0 (\reg_rd_data_reg[12]_i_6 ),
        .\reg_rd_data_reg[13]_i_3_0 (\reg_rd_data_reg[13]_i_3 ),
        .\reg_rd_data_reg[13]_i_3_1 (\reg_rd_data_reg[13]_i_3_0 ),
        .\reg_rd_data_reg[13]_i_5_0 (\reg_rd_data_reg[13]_i_5 ),
        .\reg_rd_data_reg[13]_i_6_0 (\reg_rd_data_reg[13]_i_6 ),
        .\reg_rd_data_reg[14]_i_3_0 (\reg_rd_data_reg[14]_i_3 ),
        .\reg_rd_data_reg[14]_i_3_1 (\reg_rd_data_reg[14]_i_3_0 ),
        .\reg_rd_data_reg[14]_i_5_0 (\reg_rd_data_reg[14]_i_5 ),
        .\reg_rd_data_reg[14]_i_6_0 (\reg_rd_data_reg[14]_i_6 ),
        .\reg_rd_data_reg[15] (\reg_rd_data_reg[15] ),
        .\reg_rd_data_reg[15]_0 (\reg_rd_data_reg[15]_0 ),
        .\reg_rd_data_reg[15]_1 (\reg_rd_data_reg[15]_1 ),
        .\reg_rd_data_reg[15]_i_9_0 (\reg_rd_data_reg[15]_i_9 ),
        .\reg_rd_data_reg[15]_i_9_1 (\reg_rd_data_reg[15]_i_9_0 ),
        .\reg_rd_data_reg[16] (\reg_rd_data_reg[16] ),
        .\reg_rd_data_reg[17] (\reg_rd_data_reg[17] ),
        .\reg_rd_data_reg[18] (\reg_rd_data_reg[18] ),
        .\reg_rd_data_reg[19] (\reg_rd_data_reg[19] ),
        .\reg_rd_data_reg[1] (\reg_rd_data_reg[1] ),
        .\reg_rd_data_reg[1]_0 (\reg_rd_data_reg[1]_0 ),
        .\reg_rd_data_reg[1]_1 (\reg_rd_data_reg[1]_1 ),
        .\reg_rd_data_reg[1]_2 (\reg_rd_data_reg[1]_2 ),
        .\reg_rd_data_reg[1]_3 (\reg_rd_data_reg[1]_3 ),
        .\reg_rd_data_reg[20] (\reg_rd_data_reg[20] ),
        .\reg_rd_data_reg[21] (\reg_rd_data_reg[21] ),
        .\reg_rd_data_reg[22] (\reg_rd_data_reg[22] ),
        .\reg_rd_data_reg[23] (\reg_rd_data_reg[23] ),
        .\reg_rd_data_reg[24] (\reg_rd_data_reg[24] ),
        .\reg_rd_data_reg[25] (\reg_rd_data_reg[25] ),
        .\reg_rd_data_reg[26] (\reg_rd_data_reg[26] ),
        .\reg_rd_data_reg[27] (\reg_rd_data_reg[27] ),
        .\reg_rd_data_reg[28] (\reg_rd_data_reg[28] ),
        .\reg_rd_data_reg[29] (\reg_rd_data_reg[29] ),
        .\reg_rd_data_reg[2] (\reg_rd_data_reg[2] ),
        .\reg_rd_data_reg[2]_0 (\reg_rd_data_reg[2]_0 ),
        .\reg_rd_data_reg[2]_1 (\reg_rd_data_reg[2]_1 ),
        .\reg_rd_data_reg[2]_2 (\reg_rd_data_reg[2]_2 ),
        .\reg_rd_data_reg[2]_i_3_0 (\reg_rd_data_reg[2]_i_3 ),
        .\reg_rd_data_reg[30] (\reg_rd_data_reg[30] ),
        .\reg_rd_data_reg[31] (\reg_rd_data_reg[31] ),
        .\reg_rd_data_reg[31]_0 (\reg_rd_data_reg[31]_0 ),
        .\reg_rd_data_reg[31]_1 (\reg_rd_data_reg[31]_1 ),
        .\reg_rd_data_reg[31]_2 (\reg_rd_data_reg[31]_2 ),
        .\reg_rd_data_reg[3] (\reg_rd_data_reg[3] ),
        .\reg_rd_data_reg[3]_0 (\reg_rd_data_reg[3]_0 ),
        .\reg_rd_data_reg[3]_1 (\reg_rd_data_reg[3]_1 ),
        .\reg_rd_data_reg[3]_2 (\reg_rd_data_reg[3]_2 ),
        .\reg_rd_data_reg[3]_i_3_0 (\reg_rd_data_reg[3]_i_3 ),
        .\reg_rd_data_reg[3]_i_8_0 (\reg_rd_data_reg[3]_i_8 ),
        .\reg_rd_data_reg[4] (\reg_rd_data_reg[4] ),
        .\reg_rd_data_reg[4]_0 (\reg_rd_data_reg[4]_0 ),
        .\reg_rd_data_reg[4]_1 (\reg_rd_data_reg[4]_1 ),
        .\reg_rd_data_reg[4]_i_2_0 (\reg_rd_data_reg[4]_i_2 ),
        .\reg_rd_data_reg[4]_i_6_0 (\reg_rd_data_reg[4]_i_6 ),
        .\reg_rd_data_reg[5] (\reg_rd_data_reg[5] ),
        .\reg_rd_data_reg[5]_0 (\reg_rd_data_reg[5]_0 ),
        .\reg_rd_data_reg[5]_1 (\reg_rd_data_reg[5]_1 ),
        .\reg_rd_data_reg[5]_i_2_0 (\reg_rd_data_reg[5]_i_2 ),
        .\reg_rd_data_reg[5]_i_2_1 (\reg_rd_data_reg[5]_i_2_0 ),
        .\reg_rd_data_reg[5]_i_6_0 (\reg_rd_data_reg[5]_i_6 ),
        .\reg_rd_data_reg[6]_i_3_0 (\reg_rd_data_reg[6]_i_3 ),
        .\reg_rd_data_reg[6]_i_3_1 (\reg_rd_data_reg[6]_i_3_0 ),
        .\reg_rd_data_reg[6]_i_5_0 (\reg_rd_data_reg[6]_i_5 ),
        .\reg_rd_data_reg[6]_i_6_0 (\reg_rd_data_reg[6]_i_6 ),
        .\reg_rd_data_reg[7]_i_3_0 (\reg_rd_data_reg[7]_i_3 ),
        .\reg_rd_data_reg[7]_i_3_1 (\reg_rd_data_reg[7]_i_3_0 ),
        .\reg_rd_data_reg[7]_i_5_0 (\reg_rd_data_reg[7]_i_5 ),
        .\reg_rd_data_reg[7]_i_6_0 (\reg_rd_data_reg[7]_i_6 ),
        .\reg_rd_data_reg[8] (\reg_rd_data_reg[8] ),
        .\reg_rd_data_reg[8]_0 (\reg_rd_data_reg[8]_0 ),
        .\reg_rd_data_reg[8]_1 (\reg_rd_data_reg[8]_1 ),
        .\reg_rd_data_reg[8]_2 (\reg_rd_data_reg[8]_2 ),
        .\reg_rd_data_reg[8]_3 (\reg_rd_data_reg[8]_3 ),
        .\reg_rd_data_reg[9]_i_3_0 (\reg_rd_data_reg[9]_i_3 ),
        .\reg_rd_data_reg[9]_i_3_1 (\reg_rd_data_reg[9]_i_3_0 ),
        .\reg_rd_data_reg[9]_i_5_0 (\reg_rd_data_reg[9]_i_5 ),
        .\reg_rd_data_reg[9]_i_6_0 (\reg_rd_data_reg[9]_i_6 ),
        .\req_addr_reg[15]_0 (\req_addr_reg[15] ),
        .\req_addr_reg[31]_0 (Q),
        .\req_buf_addr_reg[31]_0 (\req_buf_addr_reg[31] ),
        .\req_buf_addr_reg[31]_1 (\req_buf_addr_reg[31]_0 ),
        .req_buf_addr_sel_p1_reg_0(req_buf_addr_sel_p1_reg),
        .\req_xfer_cnt_reg[0] (\req_xfer_cnt_reg[0] ),
        .rst(fifo_rst),
        .\s_axi_reg_araddr[2] (\s_axi_reg_araddr[2] ),
        .\s_axi_reg_araddr[3] (\s_axi_reg_araddr[3] ),
        .\s_axi_reg_araddr[6] (\s_axi_reg_araddr[6] ),
        .\s_axi_reg_araddr[7] (\s_axi_reg_araddr[7] ),
        .\state_cs_reg[0]_0 (\state_cs_reg[0] ),
        .\state_cs_reg[0]_1 (\state_cs_reg[0]_0 ),
        .\state_cs_reg[0]_2 (\state_cs_reg[0]_1 ),
        .\state_cs_reg[1]_0 (\state_cs_reg[1] ),
        .\state_cs_reg[2]_0 (\state_cs_reg[2] ),
        .sts_acquire_reg(sts_acquire_reg),
        .sts_acquire_reg_0(sts_acquire_reg_0),
        .sts_acquire_reg_1(sts_acquire_reg_1),
        .trig_cnt_reg(trig_cnt_reg),
        .\trig_cnt_reg[0] (\trig_cnt_reg[0] ),
        .trig_ip(trig_ip),
        .trig_out(trig_out),
        .trig_out1(trig_out1),
        .use_8bit_r(use_8bit_r),
        .wr_en(fifo_wr_we),
        .\xfer_cnt_reg[6] (use_8bit_r_reg_0));
  system_rp_oscilloscope_0_rp_dma_s2mm_upsize_21 U_dma_s2mm_upsize
       (.E(E),
        .Q(req_data),
        .acq_tdata(acq_tdata),
        .acq_tlast(acq_tlast),
        .din(fifo_wr_data),
        .\gic0.gc0.count_reg[3] (fifo_dis_reg),
        .m_axi_osc1_aclk(m_axi_osc1_aclk),
        .m_axis_tvalid_reg_0(m_axis_tvalid_reg),
        .m_axis_tvalid_reg_1(wr_en0),
        .m_axis_tvalid_reg_2(m_axis_tvalid_reg_0),
        .\mux_sel_reg[0]_0 (\mux_sel_reg[0] ),
        .\mux_sel_reg[1]_0 (\mux_sel_reg[1] ),
        .\mux_sel_reg[2]_0 (\mux_sel_reg[2] ),
        .\mux_sel_reg[2]_1 (\mux_sel_reg[2]_0 ),
        .\mux_sel_reg[2]_2 (\mux_sel_reg[2]_1 ),
        .\mux_sel_reg[2]_3 (\mux_sel_reg[2]_2 ),
        .\mux_sel_reg[2]_4 (\mux_sel_reg[2]_3 ),
        .\mux_sel_reg[2]_5 (\mux_sel_reg[2]_4 ),
        .\mux_sel_reg[2]_6 (\mux_sel_reg[2]_5 ),
        .\mux_sel_reg[2]_7 (\mux_sel_reg[2]_6 ),
        .\mux_sel_reg[2]_8 (use_8bit_r_reg_0),
        .req_we_reg_0(req_we_reg),
        .tlast_reg_0(tlast_reg),
        .tlast_reg_1(tlast_reg_0),
        .\upsize_buf_reg[0][7]_0 (\upsize_buf_reg[0][7] ),
        .\upsize_buf_reg[2][7]_0 (\upsize_buf_reg[2][7] ),
        .\upsize_buf_reg[7][7]_0 (\upsize_buf_reg[7][7] ),
        .wr_en(fifo_wr_we),
        .\xfer_cnt_reg[3]_0 (\xfer_cnt_reg[3] ),
        .\xfer_cnt_reg[6]_0 (\xfer_cnt_reg[6] ),
        .\xfer_cnt_reg[6]_1 (SR));
  (* CHECK_LICENSE_TYPE = "fifo_axi_data,fifo_generator_v13_2_5,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2020.1" *) 
  system_rp_oscilloscope_0_fifo_axi_data__xdcDup__1 U_fifo_axi_data
       (.din(fifo_wr_data),
        .dout(m_axi_osc1_wdata),
        .empty(NLW_U_fifo_axi_data_empty_UNCONNECTED),
        .full(NLW_U_fifo_axi_data_full_UNCONNECTED),
        .rd_clk(m_axi_osc1_aclk),
        .rd_data_count(fifo_rd_cnt),
        .rd_en(rd_en),
        .rd_rst_busy(NLW_U_fifo_axi_data_rd_rst_busy_UNCONNECTED),
        .rst(fifo_rst),
        .wr_clk(m_axi_osc1_aclk),
        .wr_data_count(NLW_U_fifo_axi_data_wr_data_count_UNCONNECTED[9:0]),
        .wr_en(wr_en0),
        .wr_rst_busy(NLW_U_fifo_axi_data_wr_rst_busy_UNCONNECTED));
  FDRE ctl_start_r_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(trig_out1),
        .Q(ctl_start_r),
        .R(1'b0));
  FDRE use_8bit_r_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(use_8bit_r_reg_0),
        .Q(use_8bit_r),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "rp_dma_s2mm_ctrl" *) 
module system_rp_oscilloscope_0_rp_dma_s2mm_ctrl
   (empty,
    rst,
    empty_fwft_i_reg,
    fifo_dis_reg_0,
    bit_start_reg_0,
    full_immed0,
    req_buf_addr_sel_p1_reg_0,
    m_axi_wlast_reg,
    \req_addr_reg[31]_0 ,
    \state_cs_reg[0]_0 ,
    m_axi_wvalid_reg,
    busy_reg,
    m_axi_osc2_awvalid,
    fifo_dis_reg_1,
    intr_reg__0_0,
    next_buf_full_reg_0,
    mode_reg_0,
    first_rst,
    \state_cs_reg[2]_0 ,
    \state_cs_reg[1]_0 ,
    \state_cs_reg[0]_1 ,
    D,
    rd_en,
    \req_xfer_cnt_reg[6] ,
    ctl_start_r_reg,
    trig_out2,
    \reg_ctrl_reg[0]_0 ,
    \cfg_trig_mask_reg[1] ,
    intr_cnt0,
    \cfg_trig_pre_samp_reg[29] ,
    \s_axi_reg_araddr[7] ,
    \s_axi_reg_araddr[3] ,
    \goreg_dm.dout_i_reg[1] ,
    \cfg_filt_coeff_bb_reg[15] ,
    \cfg_calib_offset_reg[1] ,
    \reg_rd_data_reg[6]_i_6__0_0 ,
    \reg_rd_data_reg[7]_i_6__0_0 ,
    \reg_ctrl_reg[9]_0 ,
    \reg_rd_data_reg[9]_i_6__0_0 ,
    \reg_rd_data_reg[11]_i_6__0_0 ,
    \reg_rd_data_reg[12]_i_6__0_0 ,
    \reg_rd_data_reg[13]_i_6__0_0 ,
    \reg_rd_data_reg[14]_i_6__0_0 ,
    \reg_ctrl_reg[17]_0 ,
    missed_samps_ch1,
    missed_samps_ch2,
    \s_axi_reg_araddr[4] ,
    \s_axi_reg_araddr[7]_0 ,
    \s_axi_reg_araddr[6] ,
    m_axi_osc2_awlen,
    m_axi_osc2_aclk,
    Q,
    wr_en,
    clear,
    \state_cs_reg[0]_2 ,
    m_axi_wvalid_reg_0,
    m_axi_wlast_reg_0,
    busy_reg_0,
    m_axi_awvalid_reg_0,
    fifo_dis_reg_2,
    mode_reg_1,
    first_rst_reg_0,
    m_axi_osc2_awready,
    rd_data_count,
    \req_buf_addr_reg[31]_0 ,
    \req_buf_addr_reg[31]_1 ,
    \reg_rd_data_reg[4] ,
    \reg_rd_data_reg[3] ,
    \reg_rd_data_reg[17] ,
    \reg_rd_data_reg[17]_0 ,
    \reg_rd_data_reg[31] ,
    \reg_rd_data_reg[0] ,
    \reg_rd_data_reg[0]_0 ,
    \reg_rd_data_reg[2] ,
    \reg_rd_data_reg[2]_0 ,
    \reg_rd_data_reg[0]_1 ,
    \reg_rd_data_reg[31]_0 ,
    trig_cnt_reg,
    \reg_rd_data_reg[31]_1 ,
    clk_cnt_reg,
    \reg_rd_data_reg[30] ,
    \reg_rd_data_reg[29] ,
    \reg_rd_data_reg[28] ,
    \reg_rd_data_reg[27] ,
    \reg_rd_data_reg[26] ,
    \reg_rd_data_reg[25] ,
    \reg_rd_data_reg[24] ,
    \reg_rd_data_reg[23] ,
    \reg_rd_data_reg[22] ,
    \reg_rd_data_reg[21] ,
    \reg_rd_data_reg[20] ,
    \reg_rd_data_reg[19] ,
    \reg_rd_data_reg[18] ,
    \reg_rd_data_reg[16] ,
    \reg_rd_data_reg[16]_0 ,
    \reg_rd_data_reg[16]_1 ,
    \reg_rd_data_reg[16]_2 ,
    \reg_rd_data_reg[16]_3 ,
    \reg_rd_data_reg[10] ,
    \reg_rd_data_reg[8] ,
    \reg_rd_data_reg[10]_0 ,
    \reg_rd_data_reg[10]_1 ,
    \reg_rd_data_reg[8]_0 ,
    \reg_rd_data_reg[8]_1 ,
    \reg_rd_data_reg[8]_2 ,
    \reg_rd_data_reg[5] ,
    \reg_rd_data_reg[5]_0 ,
    \reg_rd_data_reg[5]_1 ,
    \reg_rd_data_reg[4]_0 ,
    \reg_rd_data_reg[4]_1 ,
    \reg_rd_data_reg[4]_2 ,
    \reg_rd_data_reg[3]_0 ,
    \reg_rd_data_reg[3]_1 ,
    \reg_rd_data_reg[3]_2 ,
    m_axi_osc2_wready,
    ctl_start_r,
    m_axi_osc2_aresetn,
    \xfer_cnt_reg[6] ,
    use_8bit_r,
    \trig_cnt_reg[31] ,
    trig_ip,
    E,
    buf_sel_ch1,
    intr_reg,
    sts_acquire_reg,
    sts_acquire_reg_0,
    sts_acquire_reg_1,
    \reg_ctrl_reg[31]_0 ,
    bram_addr_a,
    \reg_rd_data_reg[2]_1 ,
    \reg_rd_data_reg[2]_2 ,
    \reg_rd_data_reg[2]_3 ,
    \reg_rd_data_reg[2]_i_3__0_0 ,
    \reg_rd_data_reg[2]_i_13_0 ,
    next_buf_full1_carry__1_i_10__0_0,
    \reg_rd_data[2]_i_7__0_0 ,
    \reg_rd_data[17]_i_5__0_0 ,
    \reg_rd_data_reg[8]_3 ,
    \reg_rd_data_reg[10]_2 ,
    \reg_rd_data_reg[15] ,
    \reg_rd_data_reg[31]_2 ,
    \reg_rd_data_reg[0]_i_2__0_0 ,
    \reg_rd_data[23]_i_2__0_0 ,
    \reg_rd_data[20]_i_2__0_0 ,
    \reg_rd_data[31]_i_3__0_0 ,
    intr_cnt_reg,
    \reg_rd_data[30]_i_2__0_0 ,
    \reg_rd_data[29]_i_2__0_0 ,
    \reg_rd_data[28]_i_2__0_0 ,
    \reg_rd_data[27]_i_2__0_0 ,
    \reg_rd_data[26]_i_2__0_0 ,
    \reg_rd_data[25]_i_2__0_0 ,
    \reg_rd_data[25]_i_2__0_1 ,
    \reg_rd_data[18]_i_2__0_0 ,
    \reg_rd_data[0]_i_5__0_0 ,
    \reg_rd_data_reg[15]_i_9__0_0 ,
    \reg_rd_data_reg[15]_i_9__0_1 ,
    \reg_rd_data[0]_i_5__0_1 ,
    \reg_rd_data[1]_i_2__0 ,
    \reg_rd_data[3]_i_2__0_0 ,
    \reg_rd_data_reg[4]_i_2__0_0 ,
    \reg_rd_data_reg[4]_i_6__0_0 ,
    \reg_rd_data_reg[5]_i_2__0_0 ,
    \reg_rd_data_reg[5]_i_6__0_0 ,
    \reg_rd_data_reg[5]_i_2__0_1 ,
    \reg_rd_data_reg[6]_i_3__0_0 ,
    \reg_rd_data_reg[6]_i_3__0_1 ,
    \reg_rd_data_reg[6]_i_5__0_0 ,
    \reg_rd_data_reg[7]_i_3__0_0 ,
    \reg_rd_data_reg[7]_i_3__0_1 ,
    \reg_rd_data_reg[7]_i_5__0_0 ,
    \reg_rd_data[8]_i_3__0_0 ,
    \reg_rd_data[8]_i_3__0_1 ,
    \reg_rd_data_reg[9]_i_3__0_0 ,
    \reg_rd_data_reg[9]_i_3__0_1 ,
    \reg_rd_data_reg[9]_i_5__0_0 ,
    \reg_rd_data[10]_i_3__0_0 ,
    \reg_rd_data[10]_i_3__0_1 ,
    \reg_rd_data_reg[11]_i_3__0_0 ,
    \reg_rd_data_reg[11]_i_5__0_0 ,
    \reg_rd_data_reg[11]_i_3__0_1 ,
    \reg_rd_data_reg[12]_i_3__0_0 ,
    \reg_rd_data_reg[12]_i_3__0_1 ,
    \reg_rd_data_reg[12]_i_5__0_0 ,
    \reg_rd_data_reg[13]_i_3__0_0 ,
    \reg_rd_data_reg[13]_i_3__0_1 ,
    \reg_rd_data_reg[13]_i_5__0_0 ,
    \reg_rd_data_reg[14]_i_3__0_0 ,
    \reg_rd_data_reg[14]_i_3__0_1 ,
    \reg_rd_data_reg[14]_i_5__0_0 ,
    \reg_rd_data[15]_i_4__0_0 ,
    \reg_rd_data[15]_i_4__0_1 ,
    \reg_rd_data[16]_i_2__0_0 ,
    \reg_rd_data[16]_i_2__0_1 ,
    \reg_rd_data[16]_i_2__0_2 ,
    \reg_rd_data_reg[17]_1 ,
    \reg_rd_data[17]_i_5__0_1 ,
    \reg_rd_data[17]_i_5__0_2 ,
    \reg_rd_data[18]_i_2__0_1 ,
    \reg_rd_data[18]_i_2__0_2 ,
    \reg_rd_data[19]_i_2__0_0 ,
    \reg_rd_data[19]_i_2__0_1 ,
    \reg_rd_data[19]_i_2__0_2 ,
    \reg_rd_data[20]_i_2__0_1 ,
    \reg_rd_data[20]_i_2__0_2 ,
    \reg_rd_data[21]_i_2__0_0 ,
    \reg_rd_data[21]_i_2__0_1 ,
    \reg_rd_data[21]_i_2__0_2 ,
    \reg_rd_data[22]_i_2__0_0 ,
    \reg_rd_data[22]_i_2__0_1 ,
    \reg_rd_data[22]_i_2__0_2 ,
    \reg_rd_data[23]_i_2__0_1 ,
    \reg_rd_data[23]_i_2__0_2 ,
    \reg_rd_data[24]_i_2__0_0 ,
    \reg_rd_data[24]_i_2__0_1 ,
    \reg_rd_data[24]_i_2__0_2 ,
    \reg_rd_data[26]_i_2__0_1 ,
    \reg_rd_data[27]_i_2__0_1 ,
    \reg_rd_data[28]_i_2__0_1 ,
    \reg_rd_data[29]_i_2__0_1 ,
    \reg_rd_data[30]_i_2__0_1 ,
    \reg_rd_data[31]_i_3__0_1 ,
    event_op_reset_i_7,
    bram_we_a,
    bram_en_a,
    event_op_reset_i_10_0,
    bram_wrdata_a);
  output empty;
  output rst;
  output empty_fwft_i_reg;
  output fifo_dis_reg_0;
  output bit_start_reg_0;
  output full_immed0;
  output req_buf_addr_sel_p1_reg_0;
  output m_axi_wlast_reg;
  output [31:0]\req_addr_reg[31]_0 ;
  output \state_cs_reg[0]_0 ;
  output m_axi_wvalid_reg;
  output busy_reg;
  output m_axi_osc2_awvalid;
  output fifo_dis_reg_1;
  output intr_reg__0_0;
  output next_buf_full_reg_0;
  output mode_reg_0;
  output first_rst;
  output \state_cs_reg[2]_0 ;
  output \state_cs_reg[1]_0 ;
  output \state_cs_reg[0]_1 ;
  output [21:0]D;
  output rd_en;
  output \req_xfer_cnt_reg[6] ;
  output ctl_start_r_reg;
  output trig_out2;
  output \reg_ctrl_reg[0]_0 ;
  output \cfg_trig_mask_reg[1] ;
  output intr_cnt0;
  output \cfg_trig_pre_samp_reg[29] ;
  output \s_axi_reg_araddr[7] ;
  output \s_axi_reg_araddr[3] ;
  output \goreg_dm.dout_i_reg[1] ;
  output \cfg_filt_coeff_bb_reg[15] ;
  output \cfg_calib_offset_reg[1] ;
  output \reg_rd_data_reg[6]_i_6__0_0 ;
  output \reg_rd_data_reg[7]_i_6__0_0 ;
  output [1:0]\reg_ctrl_reg[9]_0 ;
  output \reg_rd_data_reg[9]_i_6__0_0 ;
  output \reg_rd_data_reg[11]_i_6__0_0 ;
  output \reg_rd_data_reg[12]_i_6__0_0 ;
  output \reg_rd_data_reg[13]_i_6__0_0 ;
  output \reg_rd_data_reg[14]_i_6__0_0 ;
  output \reg_ctrl_reg[17]_0 ;
  output [29:0]missed_samps_ch1;
  output [29:0]missed_samps_ch2;
  output \s_axi_reg_araddr[4] ;
  output \s_axi_reg_araddr[7]_0 ;
  output \s_axi_reg_araddr[6] ;
  output [7:0]m_axi_osc2_awlen;
  input m_axi_osc2_aclk;
  input [7:0]Q;
  input wr_en;
  input clear;
  input \state_cs_reg[0]_2 ;
  input m_axi_wvalid_reg_0;
  input m_axi_wlast_reg_0;
  input busy_reg_0;
  input m_axi_awvalid_reg_0;
  input fifo_dis_reg_2;
  input mode_reg_1;
  input first_rst_reg_0;
  input m_axi_osc2_awready;
  input [9:0]rd_data_count;
  input [31:0]\req_buf_addr_reg[31]_0 ;
  input [31:0]\req_buf_addr_reg[31]_1 ;
  input \reg_rd_data_reg[4] ;
  input \reg_rd_data_reg[3] ;
  input \reg_rd_data_reg[17] ;
  input \reg_rd_data_reg[17]_0 ;
  input \reg_rd_data_reg[31] ;
  input \reg_rd_data_reg[0] ;
  input \reg_rd_data_reg[0]_0 ;
  input \reg_rd_data_reg[2] ;
  input \reg_rd_data_reg[2]_0 ;
  input \reg_rd_data_reg[0]_1 ;
  input \reg_rd_data_reg[31]_0 ;
  input [13:0]trig_cnt_reg;
  input \reg_rd_data_reg[31]_1 ;
  input [13:0]clk_cnt_reg;
  input \reg_rd_data_reg[30] ;
  input \reg_rd_data_reg[29] ;
  input \reg_rd_data_reg[28] ;
  input \reg_rd_data_reg[27] ;
  input \reg_rd_data_reg[26] ;
  input \reg_rd_data_reg[25] ;
  input \reg_rd_data_reg[24] ;
  input \reg_rd_data_reg[23] ;
  input \reg_rd_data_reg[22] ;
  input \reg_rd_data_reg[21] ;
  input \reg_rd_data_reg[20] ;
  input \reg_rd_data_reg[19] ;
  input \reg_rd_data_reg[18] ;
  input \reg_rd_data_reg[16] ;
  input \reg_rd_data_reg[16]_0 ;
  input [0:0]\reg_rd_data_reg[16]_1 ;
  input \reg_rd_data_reg[16]_2 ;
  input \reg_rd_data_reg[16]_3 ;
  input \reg_rd_data_reg[10] ;
  input \reg_rd_data_reg[8] ;
  input \reg_rd_data_reg[10]_0 ;
  input \reg_rd_data_reg[10]_1 ;
  input \reg_rd_data_reg[8]_0 ;
  input \reg_rd_data_reg[8]_1 ;
  input \reg_rd_data_reg[8]_2 ;
  input \reg_rd_data_reg[5] ;
  input \reg_rd_data_reg[5]_0 ;
  input \reg_rd_data_reg[5]_1 ;
  input \reg_rd_data_reg[4]_0 ;
  input \reg_rd_data_reg[4]_1 ;
  input \reg_rd_data_reg[4]_2 ;
  input \reg_rd_data_reg[3]_0 ;
  input \reg_rd_data_reg[3]_1 ;
  input \reg_rd_data_reg[3]_2 ;
  input m_axi_osc2_wready;
  input ctl_start_r;
  input m_axi_osc2_aresetn;
  input \xfer_cnt_reg[6] ;
  input use_8bit_r;
  input [5:0]\trig_cnt_reg[31] ;
  input [0:0]trig_ip;
  input [0:0]E;
  input buf_sel_ch1;
  input intr_reg;
  input sts_acquire_reg;
  input [7:0]sts_acquire_reg_0;
  input sts_acquire_reg_1;
  input \reg_ctrl_reg[31]_0 ;
  input [7:0]bram_addr_a;
  input \reg_rd_data_reg[2]_1 ;
  input \reg_rd_data_reg[2]_2 ;
  input \reg_rd_data_reg[2]_3 ;
  input \reg_rd_data_reg[2]_i_3__0_0 ;
  input \reg_rd_data_reg[2]_i_13_0 ;
  input [16:0]next_buf_full1_carry__1_i_10__0_0;
  input \reg_rd_data[2]_i_7__0_0 ;
  input [17:0]\reg_rd_data[17]_i_5__0_0 ;
  input \reg_rd_data_reg[8]_3 ;
  input \reg_rd_data_reg[10]_2 ;
  input \reg_rd_data_reg[15] ;
  input \reg_rd_data_reg[31]_2 ;
  input \reg_rd_data_reg[0]_i_2__0_0 ;
  input \reg_rd_data[23]_i_2__0_0 ;
  input \reg_rd_data[20]_i_2__0_0 ;
  input \reg_rd_data[31]_i_3__0_0 ;
  input [6:0]intr_cnt_reg;
  input \reg_rd_data[30]_i_2__0_0 ;
  input \reg_rd_data[29]_i_2__0_0 ;
  input \reg_rd_data[28]_i_2__0_0 ;
  input \reg_rd_data[27]_i_2__0_0 ;
  input \reg_rd_data[26]_i_2__0_0 ;
  input \reg_rd_data[25]_i_2__0_0 ;
  input \reg_rd_data[25]_i_2__0_1 ;
  input \reg_rd_data[18]_i_2__0_0 ;
  input \reg_rd_data[0]_i_5__0_0 ;
  input [15:0]\reg_rd_data_reg[15]_i_9__0_0 ;
  input [15:0]\reg_rd_data_reg[15]_i_9__0_1 ;
  input \reg_rd_data[0]_i_5__0_1 ;
  input \reg_rd_data[1]_i_2__0 ;
  input \reg_rd_data[3]_i_2__0_0 ;
  input \reg_rd_data_reg[4]_i_2__0_0 ;
  input \reg_rd_data_reg[4]_i_6__0_0 ;
  input \reg_rd_data_reg[5]_i_2__0_0 ;
  input \reg_rd_data_reg[5]_i_6__0_0 ;
  input \reg_rd_data_reg[5]_i_2__0_1 ;
  input \reg_rd_data_reg[6]_i_3__0_0 ;
  input \reg_rd_data_reg[6]_i_3__0_1 ;
  input \reg_rd_data_reg[6]_i_5__0_0 ;
  input \reg_rd_data_reg[7]_i_3__0_0 ;
  input \reg_rd_data_reg[7]_i_3__0_1 ;
  input \reg_rd_data_reg[7]_i_5__0_0 ;
  input \reg_rd_data[8]_i_3__0_0 ;
  input \reg_rd_data[8]_i_3__0_1 ;
  input \reg_rd_data_reg[9]_i_3__0_0 ;
  input \reg_rd_data_reg[9]_i_3__0_1 ;
  input \reg_rd_data_reg[9]_i_5__0_0 ;
  input \reg_rd_data[10]_i_3__0_0 ;
  input \reg_rd_data[10]_i_3__0_1 ;
  input \reg_rd_data_reg[11]_i_3__0_0 ;
  input \reg_rd_data_reg[11]_i_5__0_0 ;
  input \reg_rd_data_reg[11]_i_3__0_1 ;
  input \reg_rd_data_reg[12]_i_3__0_0 ;
  input \reg_rd_data_reg[12]_i_3__0_1 ;
  input \reg_rd_data_reg[12]_i_5__0_0 ;
  input \reg_rd_data_reg[13]_i_3__0_0 ;
  input \reg_rd_data_reg[13]_i_3__0_1 ;
  input \reg_rd_data_reg[13]_i_5__0_0 ;
  input \reg_rd_data_reg[14]_i_3__0_0 ;
  input \reg_rd_data_reg[14]_i_3__0_1 ;
  input \reg_rd_data_reg[14]_i_5__0_0 ;
  input \reg_rd_data[15]_i_4__0_0 ;
  input \reg_rd_data[15]_i_4__0_1 ;
  input \reg_rd_data[16]_i_2__0_0 ;
  input \reg_rd_data[16]_i_2__0_1 ;
  input \reg_rd_data[16]_i_2__0_2 ;
  input \reg_rd_data_reg[17]_1 ;
  input \reg_rd_data[17]_i_5__0_1 ;
  input \reg_rd_data[17]_i_5__0_2 ;
  input \reg_rd_data[18]_i_2__0_1 ;
  input \reg_rd_data[18]_i_2__0_2 ;
  input \reg_rd_data[19]_i_2__0_0 ;
  input \reg_rd_data[19]_i_2__0_1 ;
  input \reg_rd_data[19]_i_2__0_2 ;
  input \reg_rd_data[20]_i_2__0_1 ;
  input \reg_rd_data[20]_i_2__0_2 ;
  input \reg_rd_data[21]_i_2__0_0 ;
  input \reg_rd_data[21]_i_2__0_1 ;
  input \reg_rd_data[21]_i_2__0_2 ;
  input \reg_rd_data[22]_i_2__0_0 ;
  input \reg_rd_data[22]_i_2__0_1 ;
  input \reg_rd_data[22]_i_2__0_2 ;
  input \reg_rd_data[23]_i_2__0_1 ;
  input \reg_rd_data[23]_i_2__0_2 ;
  input \reg_rd_data[24]_i_2__0_0 ;
  input \reg_rd_data[24]_i_2__0_1 ;
  input \reg_rd_data[24]_i_2__0_2 ;
  input \reg_rd_data[26]_i_2__0_1 ;
  input \reg_rd_data[27]_i_2__0_1 ;
  input \reg_rd_data[28]_i_2__0_1 ;
  input \reg_rd_data[29]_i_2__0_1 ;
  input \reg_rd_data[30]_i_2__0_1 ;
  input \reg_rd_data[31]_i_3__0_1 ;
  input event_op_reset_i_7;
  input [3:0]bram_we_a;
  input bram_en_a;
  input event_op_reset_i_10_0;
  input [31:0]bram_wrdata_a;

  wire [21:0]D;
  wire [0:0]E;
  wire [7:0]Q;
  wire U_dma_s2mm_data_ctrl_n_10;
  wire U_dma_s2mm_data_ctrl_n_13;
  wire U_dma_s2mm_data_ctrl_n_14;
  wire U_dma_s2mm_data_ctrl_n_16;
  wire U_dma_s2mm_data_ctrl_n_17;
  wire U_dma_s2mm_data_ctrl_n_8;
  wire U_fifo_axi_req_i_11_n_0;
  wire axi_last_r;
  wire axi_last_r2;
  wire bit_start_reg_0;
  wire [7:0]bram_addr_a;
  wire bram_en_a;
  wire [3:0]bram_we_a;
  wire [31:0]bram_wrdata_a;
  wire buf1_full_i_1__0_n_0;
  wire buf1_full_i_2_n_0;
  wire buf1_missed_samp0;
  wire \buf1_missed_samp[0]_i_10__0_n_0 ;
  wire \buf1_missed_samp[0]_i_11__0_n_0 ;
  wire \buf1_missed_samp[0]_i_12__0_n_0 ;
  wire \buf1_missed_samp[0]_i_13__0_n_0 ;
  wire \buf1_missed_samp[0]_i_4__0_n_0 ;
  wire \buf1_missed_samp[0]_i_5__0_n_0 ;
  wire \buf1_missed_samp[0]_i_6__0_n_0 ;
  wire \buf1_missed_samp[0]_i_7__0_n_0 ;
  wire \buf1_missed_samp[0]_i_8__0_n_0 ;
  wire \buf1_missed_samp[0]_i_9__0_n_0 ;
  wire [31:0]buf1_missed_samp_reg;
  wire \buf1_missed_samp_reg[0]_i_3__0_n_0 ;
  wire \buf1_missed_samp_reg[0]_i_3__0_n_1 ;
  wire \buf1_missed_samp_reg[0]_i_3__0_n_2 ;
  wire \buf1_missed_samp_reg[0]_i_3__0_n_3 ;
  wire \buf1_missed_samp_reg[0]_i_3__0_n_4 ;
  wire \buf1_missed_samp_reg[0]_i_3__0_n_5 ;
  wire \buf1_missed_samp_reg[0]_i_3__0_n_6 ;
  wire \buf1_missed_samp_reg[0]_i_3__0_n_7 ;
  wire \buf1_missed_samp_reg[12]_i_1__0_n_0 ;
  wire \buf1_missed_samp_reg[12]_i_1__0_n_1 ;
  wire \buf1_missed_samp_reg[12]_i_1__0_n_2 ;
  wire \buf1_missed_samp_reg[12]_i_1__0_n_3 ;
  wire \buf1_missed_samp_reg[12]_i_1__0_n_4 ;
  wire \buf1_missed_samp_reg[12]_i_1__0_n_5 ;
  wire \buf1_missed_samp_reg[12]_i_1__0_n_6 ;
  wire \buf1_missed_samp_reg[12]_i_1__0_n_7 ;
  wire \buf1_missed_samp_reg[16]_i_1__0_n_0 ;
  wire \buf1_missed_samp_reg[16]_i_1__0_n_1 ;
  wire \buf1_missed_samp_reg[16]_i_1__0_n_2 ;
  wire \buf1_missed_samp_reg[16]_i_1__0_n_3 ;
  wire \buf1_missed_samp_reg[16]_i_1__0_n_4 ;
  wire \buf1_missed_samp_reg[16]_i_1__0_n_5 ;
  wire \buf1_missed_samp_reg[16]_i_1__0_n_6 ;
  wire \buf1_missed_samp_reg[16]_i_1__0_n_7 ;
  wire \buf1_missed_samp_reg[20]_i_1__0_n_0 ;
  wire \buf1_missed_samp_reg[20]_i_1__0_n_1 ;
  wire \buf1_missed_samp_reg[20]_i_1__0_n_2 ;
  wire \buf1_missed_samp_reg[20]_i_1__0_n_3 ;
  wire \buf1_missed_samp_reg[20]_i_1__0_n_4 ;
  wire \buf1_missed_samp_reg[20]_i_1__0_n_5 ;
  wire \buf1_missed_samp_reg[20]_i_1__0_n_6 ;
  wire \buf1_missed_samp_reg[20]_i_1__0_n_7 ;
  wire \buf1_missed_samp_reg[24]_i_1__0_n_0 ;
  wire \buf1_missed_samp_reg[24]_i_1__0_n_1 ;
  wire \buf1_missed_samp_reg[24]_i_1__0_n_2 ;
  wire \buf1_missed_samp_reg[24]_i_1__0_n_3 ;
  wire \buf1_missed_samp_reg[24]_i_1__0_n_4 ;
  wire \buf1_missed_samp_reg[24]_i_1__0_n_5 ;
  wire \buf1_missed_samp_reg[24]_i_1__0_n_6 ;
  wire \buf1_missed_samp_reg[24]_i_1__0_n_7 ;
  wire \buf1_missed_samp_reg[28]_i_1__0_n_1 ;
  wire \buf1_missed_samp_reg[28]_i_1__0_n_2 ;
  wire \buf1_missed_samp_reg[28]_i_1__0_n_3 ;
  wire \buf1_missed_samp_reg[28]_i_1__0_n_4 ;
  wire \buf1_missed_samp_reg[28]_i_1__0_n_5 ;
  wire \buf1_missed_samp_reg[28]_i_1__0_n_6 ;
  wire \buf1_missed_samp_reg[28]_i_1__0_n_7 ;
  wire \buf1_missed_samp_reg[4]_i_1__0_n_0 ;
  wire \buf1_missed_samp_reg[4]_i_1__0_n_1 ;
  wire \buf1_missed_samp_reg[4]_i_1__0_n_2 ;
  wire \buf1_missed_samp_reg[4]_i_1__0_n_3 ;
  wire \buf1_missed_samp_reg[4]_i_1__0_n_4 ;
  wire \buf1_missed_samp_reg[4]_i_1__0_n_5 ;
  wire \buf1_missed_samp_reg[4]_i_1__0_n_6 ;
  wire \buf1_missed_samp_reg[4]_i_1__0_n_7 ;
  wire \buf1_missed_samp_reg[8]_i_1__0_n_0 ;
  wire \buf1_missed_samp_reg[8]_i_1__0_n_1 ;
  wire \buf1_missed_samp_reg[8]_i_1__0_n_2 ;
  wire \buf1_missed_samp_reg[8]_i_1__0_n_3 ;
  wire \buf1_missed_samp_reg[8]_i_1__0_n_4 ;
  wire \buf1_missed_samp_reg[8]_i_1__0_n_5 ;
  wire \buf1_missed_samp_reg[8]_i_1__0_n_6 ;
  wire \buf1_missed_samp_reg[8]_i_1__0_n_7 ;
  wire [9:0]buf1_ms_lvl;
  wire \buf1_ms_lvl[0]_i_1__0_n_0 ;
  wire \buf1_ms_lvl[1]_i_1__0_n_0 ;
  wire \buf1_ms_lvl[2]_i_1__0_n_0 ;
  wire \buf1_ms_lvl[3]_i_1__0_n_0 ;
  wire \buf1_ms_lvl[4]_i_1__0_n_0 ;
  wire \buf1_ms_lvl[5]_i_1__0_n_0 ;
  wire \buf1_ms_lvl[6]_i_1__0_n_0 ;
  wire \buf1_ms_lvl[7]_i_1__0_n_0 ;
  wire \buf1_ms_lvl[8]_i_1__0_n_0 ;
  wire \buf1_ms_lvl[9]_i_1__0_n_0 ;
  wire \buf1_ms_lvl[9]_i_2__0_n_0 ;
  wire \buf1_ms_lvl[9]_i_3__0_n_0 ;
  wire buf1_ovr_i_1__0_n_0;
  wire buf2_full_i_1__0_n_0;
  wire buf2_missed_samp0;
  wire \buf2_missed_samp[0]_i_10__0_n_0 ;
  wire \buf2_missed_samp[0]_i_11__0_n_0 ;
  wire \buf2_missed_samp[0]_i_12__0_n_0 ;
  wire \buf2_missed_samp[0]_i_4__0_n_0 ;
  wire \buf2_missed_samp[0]_i_5__0_n_0 ;
  wire \buf2_missed_samp[0]_i_6__0_n_0 ;
  wire \buf2_missed_samp[0]_i_7__0_n_0 ;
  wire \buf2_missed_samp[0]_i_8__0_n_0 ;
  wire \buf2_missed_samp[0]_i_9__0_n_0 ;
  wire [31:0]buf2_missed_samp_reg;
  wire \buf2_missed_samp_reg[0]_i_3__0_n_0 ;
  wire \buf2_missed_samp_reg[0]_i_3__0_n_1 ;
  wire \buf2_missed_samp_reg[0]_i_3__0_n_2 ;
  wire \buf2_missed_samp_reg[0]_i_3__0_n_3 ;
  wire \buf2_missed_samp_reg[0]_i_3__0_n_4 ;
  wire \buf2_missed_samp_reg[0]_i_3__0_n_5 ;
  wire \buf2_missed_samp_reg[0]_i_3__0_n_6 ;
  wire \buf2_missed_samp_reg[0]_i_3__0_n_7 ;
  wire \buf2_missed_samp_reg[12]_i_1__0_n_0 ;
  wire \buf2_missed_samp_reg[12]_i_1__0_n_1 ;
  wire \buf2_missed_samp_reg[12]_i_1__0_n_2 ;
  wire \buf2_missed_samp_reg[12]_i_1__0_n_3 ;
  wire \buf2_missed_samp_reg[12]_i_1__0_n_4 ;
  wire \buf2_missed_samp_reg[12]_i_1__0_n_5 ;
  wire \buf2_missed_samp_reg[12]_i_1__0_n_6 ;
  wire \buf2_missed_samp_reg[12]_i_1__0_n_7 ;
  wire \buf2_missed_samp_reg[16]_i_1__0_n_0 ;
  wire \buf2_missed_samp_reg[16]_i_1__0_n_1 ;
  wire \buf2_missed_samp_reg[16]_i_1__0_n_2 ;
  wire \buf2_missed_samp_reg[16]_i_1__0_n_3 ;
  wire \buf2_missed_samp_reg[16]_i_1__0_n_4 ;
  wire \buf2_missed_samp_reg[16]_i_1__0_n_5 ;
  wire \buf2_missed_samp_reg[16]_i_1__0_n_6 ;
  wire \buf2_missed_samp_reg[16]_i_1__0_n_7 ;
  wire \buf2_missed_samp_reg[20]_i_1__0_n_0 ;
  wire \buf2_missed_samp_reg[20]_i_1__0_n_1 ;
  wire \buf2_missed_samp_reg[20]_i_1__0_n_2 ;
  wire \buf2_missed_samp_reg[20]_i_1__0_n_3 ;
  wire \buf2_missed_samp_reg[20]_i_1__0_n_4 ;
  wire \buf2_missed_samp_reg[20]_i_1__0_n_5 ;
  wire \buf2_missed_samp_reg[20]_i_1__0_n_6 ;
  wire \buf2_missed_samp_reg[20]_i_1__0_n_7 ;
  wire \buf2_missed_samp_reg[24]_i_1__0_n_0 ;
  wire \buf2_missed_samp_reg[24]_i_1__0_n_1 ;
  wire \buf2_missed_samp_reg[24]_i_1__0_n_2 ;
  wire \buf2_missed_samp_reg[24]_i_1__0_n_3 ;
  wire \buf2_missed_samp_reg[24]_i_1__0_n_4 ;
  wire \buf2_missed_samp_reg[24]_i_1__0_n_5 ;
  wire \buf2_missed_samp_reg[24]_i_1__0_n_6 ;
  wire \buf2_missed_samp_reg[24]_i_1__0_n_7 ;
  wire \buf2_missed_samp_reg[28]_i_1__0_n_1 ;
  wire \buf2_missed_samp_reg[28]_i_1__0_n_2 ;
  wire \buf2_missed_samp_reg[28]_i_1__0_n_3 ;
  wire \buf2_missed_samp_reg[28]_i_1__0_n_4 ;
  wire \buf2_missed_samp_reg[28]_i_1__0_n_5 ;
  wire \buf2_missed_samp_reg[28]_i_1__0_n_6 ;
  wire \buf2_missed_samp_reg[28]_i_1__0_n_7 ;
  wire \buf2_missed_samp_reg[4]_i_1__0_n_0 ;
  wire \buf2_missed_samp_reg[4]_i_1__0_n_1 ;
  wire \buf2_missed_samp_reg[4]_i_1__0_n_2 ;
  wire \buf2_missed_samp_reg[4]_i_1__0_n_3 ;
  wire \buf2_missed_samp_reg[4]_i_1__0_n_4 ;
  wire \buf2_missed_samp_reg[4]_i_1__0_n_5 ;
  wire \buf2_missed_samp_reg[4]_i_1__0_n_6 ;
  wire \buf2_missed_samp_reg[4]_i_1__0_n_7 ;
  wire \buf2_missed_samp_reg[8]_i_1__0_n_0 ;
  wire \buf2_missed_samp_reg[8]_i_1__0_n_1 ;
  wire \buf2_missed_samp_reg[8]_i_1__0_n_2 ;
  wire \buf2_missed_samp_reg[8]_i_1__0_n_3 ;
  wire \buf2_missed_samp_reg[8]_i_1__0_n_4 ;
  wire \buf2_missed_samp_reg[8]_i_1__0_n_5 ;
  wire \buf2_missed_samp_reg[8]_i_1__0_n_6 ;
  wire \buf2_missed_samp_reg[8]_i_1__0_n_7 ;
  wire [9:0]buf2_ms_lvl;
  wire \buf2_ms_lvl[9]_i_1__0_n_0 ;
  wire \buf2_ms_lvl[9]_i_2__0_n_0 ;
  wire buf2_ovr_i_1__0_n_0;
  wire buf_sel_ch1;
  wire busy_reg;
  wire busy_reg_0;
  wire \cfg_calib_offset_reg[1] ;
  wire [31:1]cfg_dma_ctrl_reg;
  wire [4:0]cfg_dma_sts_reg;
  wire \cfg_filt_coeff_bb_reg[15] ;
  wire \cfg_trig_mask_reg[1] ;
  wire \cfg_trig_pre_samp_reg[29] ;
  wire clear;
  wire [13:0]clk_cnt_reg;
  wire ctl_start_r;
  wire ctl_start_r_reg;
  wire [7:0]dat_ctrl_req_data;
  wire empty;
  wire empty_fwft_i_reg;
  wire event_op_reset_i_10_0;
  wire event_op_reset_i_10_n_0;
  wire event_op_reset_i_11_n_0;
  wire event_op_reset_i_12__0_n_0;
  wire event_op_reset_i_7;
  wire event_op_reset_i_9__0_n_0;
  wire fifo_dis_reg_0;
  wire fifo_dis_reg_1;
  wire fifo_dis_reg_2;
  wire [7:0]fifo_rd_data;
  wire fifo_rd_re;
  wire fifo_rst_cnt;
  wire [4:0]fifo_rst_cnt_reg;
  wire fifo_rst_i_2__0_n_0;
  wire first_rst;
  wire first_rst_reg_0;
  wire full_immed0;
  wire \goreg_dm.dout_i_reg[1] ;
  wire i__carry_i_1__10_n_0;
  wire intr_cnt0;
  wire [6:0]intr_cnt_reg;
  wire intr_i_3__0_n_0;
  wire intr_reg;
  wire intr_reg__0_0;
  wire [0:0]m_axi_awlen0;
  wire \m_axi_awlen[1]_i_1__0_n_0 ;
  wire \m_axi_awlen[2]_i_1__0_n_0 ;
  wire \m_axi_awlen[3]_i_1__0_n_0 ;
  wire \m_axi_awlen[4]_i_1__0_n_0 ;
  wire \m_axi_awlen[5]_i_1__0_n_0 ;
  wire \m_axi_awlen[6]_i_1__0_n_0 ;
  wire \m_axi_awlen[7]_i_1__0_n_0 ;
  wire \m_axi_awlen[7]_i_2__0_n_0 ;
  wire \m_axi_awlen[7]_i_3_n_0 ;
  wire m_axi_awvalid_reg_0;
  wire m_axi_osc2_aclk;
  wire m_axi_osc2_aresetn;
  wire [7:0]m_axi_osc2_awlen;
  wire m_axi_osc2_awready;
  wire m_axi_osc2_awvalid;
  wire m_axi_osc2_wready;
  wire m_axi_wlast_reg;
  wire m_axi_wlast_reg_0;
  wire m_axi_wvalid_reg;
  wire m_axi_wvalid_reg_0;
  wire [29:0]missed_samps_ch1;
  wire [29:0]missed_samps_ch2;
  wire mode_reg_0;
  wire mode_reg_1;
  wire next_buf_full1;
  wire next_buf_full1_carry__0_i_10__0_n_0;
  wire next_buf_full1_carry__0_i_10__0_n_1;
  wire next_buf_full1_carry__0_i_10__0_n_2;
  wire next_buf_full1_carry__0_i_10__0_n_3;
  wire next_buf_full1_carry__0_i_11__0_n_0;
  wire next_buf_full1_carry__0_i_12__0_n_0;
  wire next_buf_full1_carry__0_i_13__0_n_0;
  wire next_buf_full1_carry__0_i_14__0_n_0;
  wire next_buf_full1_carry__0_i_15__0_n_0;
  wire next_buf_full1_carry__0_i_16__0_n_0;
  wire next_buf_full1_carry__0_i_17__0_n_0;
  wire next_buf_full1_carry__0_i_18__0_n_0;
  wire next_buf_full1_carry__0_i_1__0_n_0;
  wire next_buf_full1_carry__0_i_2__0_n_0;
  wire next_buf_full1_carry__0_i_3__0_n_0;
  wire next_buf_full1_carry__0_i_4__0_n_0;
  wire next_buf_full1_carry__0_i_5__0_n_0;
  wire next_buf_full1_carry__0_i_6__0_n_0;
  wire next_buf_full1_carry__0_i_7__0_n_0;
  wire next_buf_full1_carry__0_i_8__0_n_0;
  wire next_buf_full1_carry__0_i_9__0_n_0;
  wire next_buf_full1_carry__0_i_9__0_n_1;
  wire next_buf_full1_carry__0_i_9__0_n_2;
  wire next_buf_full1_carry__0_i_9__0_n_3;
  wire next_buf_full1_carry__0_n_0;
  wire next_buf_full1_carry__0_n_1;
  wire next_buf_full1_carry__0_n_2;
  wire next_buf_full1_carry__0_n_3;
  wire [16:0]next_buf_full1_carry__1_i_10__0_0;
  wire next_buf_full1_carry__1_i_10__0_n_0;
  wire next_buf_full1_carry__1_i_10__0_n_1;
  wire next_buf_full1_carry__1_i_10__0_n_2;
  wire next_buf_full1_carry__1_i_10__0_n_3;
  wire next_buf_full1_carry__1_i_11__0_n_0;
  wire next_buf_full1_carry__1_i_1__0_n_0;
  wire next_buf_full1_carry__1_i_2__0_n_0;
  wire next_buf_full1_carry__1_i_3__0_n_0;
  wire next_buf_full1_carry__1_i_4__0_n_0;
  wire next_buf_full1_carry__1_i_5__0_n_0;
  wire next_buf_full1_carry__1_i_6__0_n_0;
  wire next_buf_full1_carry__1_i_7__0_n_0;
  wire next_buf_full1_carry__1_i_8__0_n_0;
  wire next_buf_full1_carry__1_i_9__0_n_0;
  wire next_buf_full1_carry__1_i_9__0_n_1;
  wire next_buf_full1_carry__1_i_9__0_n_2;
  wire next_buf_full1_carry__1_i_9__0_n_3;
  wire next_buf_full1_carry__1_n_0;
  wire next_buf_full1_carry__1_n_1;
  wire next_buf_full1_carry__1_n_2;
  wire next_buf_full1_carry__1_n_3;
  wire next_buf_full1_carry__2_i_10__0_n_0;
  wire next_buf_full1_carry__2_i_10__0_n_1;
  wire next_buf_full1_carry__2_i_10__0_n_2;
  wire next_buf_full1_carry__2_i_10__0_n_3;
  wire next_buf_full1_carry__2_i_1__0_n_0;
  wire next_buf_full1_carry__2_i_2__0_n_0;
  wire next_buf_full1_carry__2_i_3__0_n_0;
  wire next_buf_full1_carry__2_i_4__0_n_0;
  wire next_buf_full1_carry__2_i_5__0_n_0;
  wire next_buf_full1_carry__2_i_6__0_n_0;
  wire next_buf_full1_carry__2_i_7__0_n_0;
  wire next_buf_full1_carry__2_i_8__0_n_0;
  wire next_buf_full1_carry__2_i_9__0_n_1;
  wire next_buf_full1_carry__2_i_9__0_n_2;
  wire next_buf_full1_carry__2_i_9__0_n_3;
  wire next_buf_full1_carry__2_n_1;
  wire next_buf_full1_carry__2_n_2;
  wire next_buf_full1_carry__2_n_3;
  wire next_buf_full1_carry_i_10__0_n_0;
  wire next_buf_full1_carry_i_10__0_n_1;
  wire next_buf_full1_carry_i_10__0_n_2;
  wire next_buf_full1_carry_i_10__0_n_3;
  wire next_buf_full1_carry_i_11__0_n_0;
  wire next_buf_full1_carry_i_12__0_n_0;
  wire next_buf_full1_carry_i_13__0_n_0;
  wire next_buf_full1_carry_i_14__0_n_0;
  wire next_buf_full1_carry_i_15__0_n_0;
  wire next_buf_full1_carry_i_16__0_n_0;
  wire next_buf_full1_carry_i_17__0_n_0;
  wire next_buf_full1_carry_i_18__0_n_0;
  wire next_buf_full1_carry_i_1__0_n_0;
  wire next_buf_full1_carry_i_2__0_n_0;
  wire next_buf_full1_carry_i_3__0_n_0;
  wire next_buf_full1_carry_i_4__0_n_0;
  wire next_buf_full1_carry_i_5__0_n_0;
  wire next_buf_full1_carry_i_6__0_n_0;
  wire next_buf_full1_carry_i_7__0_n_0;
  wire next_buf_full1_carry_i_8__0_n_0;
  wire next_buf_full1_carry_i_9__0_n_0;
  wire next_buf_full1_carry_i_9__0_n_1;
  wire next_buf_full1_carry_i_9__0_n_2;
  wire next_buf_full1_carry_i_9__0_n_3;
  wire next_buf_full1_carry_n_0;
  wire next_buf_full1_carry_n_1;
  wire next_buf_full1_carry_n_2;
  wire next_buf_full1_carry_n_3;
  wire [31:0]next_buf_full2;
  wire [31:6]next_buf_full20_in;
  wire \next_buf_full2_inferred__0/i__carry__0_n_0 ;
  wire \next_buf_full2_inferred__0/i__carry__0_n_1 ;
  wire \next_buf_full2_inferred__0/i__carry__0_n_2 ;
  wire \next_buf_full2_inferred__0/i__carry__0_n_3 ;
  wire \next_buf_full2_inferred__0/i__carry__1_n_0 ;
  wire \next_buf_full2_inferred__0/i__carry__1_n_1 ;
  wire \next_buf_full2_inferred__0/i__carry__1_n_2 ;
  wire \next_buf_full2_inferred__0/i__carry__1_n_3 ;
  wire \next_buf_full2_inferred__0/i__carry__2_n_0 ;
  wire \next_buf_full2_inferred__0/i__carry__2_n_1 ;
  wire \next_buf_full2_inferred__0/i__carry__2_n_2 ;
  wire \next_buf_full2_inferred__0/i__carry__2_n_3 ;
  wire \next_buf_full2_inferred__0/i__carry__3_n_0 ;
  wire \next_buf_full2_inferred__0/i__carry__3_n_1 ;
  wire \next_buf_full2_inferred__0/i__carry__3_n_2 ;
  wire \next_buf_full2_inferred__0/i__carry__3_n_3 ;
  wire \next_buf_full2_inferred__0/i__carry__4_n_0 ;
  wire \next_buf_full2_inferred__0/i__carry__4_n_1 ;
  wire \next_buf_full2_inferred__0/i__carry__4_n_2 ;
  wire \next_buf_full2_inferred__0/i__carry__4_n_3 ;
  wire \next_buf_full2_inferred__0/i__carry__5_n_3 ;
  wire \next_buf_full2_inferred__0/i__carry_n_0 ;
  wire \next_buf_full2_inferred__0/i__carry_n_1 ;
  wire \next_buf_full2_inferred__0/i__carry_n_2 ;
  wire \next_buf_full2_inferred__0/i__carry_n_3 ;
  wire next_buf_full_i_1__0_n_0;
  wire next_buf_full_reg_0;
  wire [4:0]p_0_in__0;
  wire p_3_in;
  wire [9:0]rd_data_count;
  wire rd_en;
  wire reg_ctrl122_out;
  wire \reg_ctrl[0]_i_1__0_n_0 ;
  wire \reg_ctrl[1]_i_1__0_n_0 ;
  wire \reg_ctrl[2]_i_1__0_n_0 ;
  wire \reg_ctrl[31]_i_3_n_0 ;
  wire \reg_ctrl[3]_i_1__0_n_0 ;
  wire \reg_ctrl[3]_i_2__0_n_0 ;
  wire \reg_ctrl[4]_i_1__0_n_0 ;
  wire \reg_ctrl[8]_i_1__0_n_0 ;
  wire \reg_ctrl[9]_i_1__0_n_0 ;
  wire \reg_ctrl[9]_i_2__0_n_0 ;
  wire \reg_ctrl_reg[0]_0 ;
  wire \reg_ctrl_reg[17]_0 ;
  wire \reg_ctrl_reg[31]_0 ;
  wire [1:0]\reg_ctrl_reg[9]_0 ;
  wire \reg_rd_data[0]_i_10__0_n_0 ;
  wire \reg_rd_data[0]_i_11__0_n_0 ;
  wire \reg_rd_data[0]_i_5__0_0 ;
  wire \reg_rd_data[0]_i_5__0_1 ;
  wire \reg_rd_data[0]_i_5__0_n_0 ;
  wire \reg_rd_data[0]_i_9__0_n_0 ;
  wire \reg_rd_data[10]_i_12__0_n_0 ;
  wire \reg_rd_data[10]_i_17_n_0 ;
  wire \reg_rd_data[10]_i_18__0_n_0 ;
  wire \reg_rd_data[10]_i_19__0_n_0 ;
  wire \reg_rd_data[10]_i_20__0_n_0 ;
  wire \reg_rd_data[10]_i_21__0_n_0 ;
  wire \reg_rd_data[10]_i_22__0_n_0 ;
  wire \reg_rd_data[10]_i_23__0_n_0 ;
  wire \reg_rd_data[10]_i_24_n_0 ;
  wire \reg_rd_data[10]_i_25__0_n_0 ;
  wire \reg_rd_data[10]_i_26__0_n_0 ;
  wire \reg_rd_data[10]_i_27__0_n_0 ;
  wire \reg_rd_data[10]_i_28__0_n_0 ;
  wire \reg_rd_data[10]_i_3__0_0 ;
  wire \reg_rd_data[10]_i_3__0_1 ;
  wire \reg_rd_data[10]_i_3__0_n_0 ;
  wire \reg_rd_data[10]_i_7__0_n_0 ;
  wire \reg_rd_data[11]_i_11__0_n_0 ;
  wire \reg_rd_data[11]_i_9__0_n_0 ;
  wire \reg_rd_data[12]_i_11__0_n_0 ;
  wire \reg_rd_data[12]_i_9__0_n_0 ;
  wire \reg_rd_data[13]_i_11__0_n_0 ;
  wire \reg_rd_data[13]_i_9__0_n_0 ;
  wire \reg_rd_data[14]_i_11__0_n_0 ;
  wire \reg_rd_data[14]_i_9__0_n_0 ;
  wire \reg_rd_data[15]_i_13__0_n_0 ;
  wire \reg_rd_data[15]_i_4__0_0 ;
  wire \reg_rd_data[15]_i_4__0_1 ;
  wire \reg_rd_data[15]_i_8__0_n_0 ;
  wire \reg_rd_data[16]_i_12_n_0 ;
  wire \reg_rd_data[16]_i_2__0_0 ;
  wire \reg_rd_data[16]_i_2__0_1 ;
  wire \reg_rd_data[16]_i_2__0_2 ;
  wire \reg_rd_data[16]_i_2__0_n_0 ;
  wire \reg_rd_data[16]_i_7__0_n_0 ;
  wire \reg_rd_data[16]_i_8__0_n_0 ;
  wire [17:0]\reg_rd_data[17]_i_5__0_0 ;
  wire \reg_rd_data[17]_i_5__0_1 ;
  wire \reg_rd_data[17]_i_5__0_2 ;
  wire \reg_rd_data[17]_i_8__0_n_0 ;
  wire \reg_rd_data[17]_i_9__0_n_0 ;
  wire \reg_rd_data[18]_i_2__0_0 ;
  wire \reg_rd_data[18]_i_2__0_1 ;
  wire \reg_rd_data[18]_i_2__0_2 ;
  wire \reg_rd_data[18]_i_2__0_n_0 ;
  wire \reg_rd_data[18]_i_4__0_n_0 ;
  wire \reg_rd_data[18]_i_5__0_n_0 ;
  wire \reg_rd_data[19]_i_2__0_0 ;
  wire \reg_rd_data[19]_i_2__0_1 ;
  wire \reg_rd_data[19]_i_2__0_2 ;
  wire \reg_rd_data[19]_i_2__0_n_0 ;
  wire \reg_rd_data[19]_i_4__0_n_0 ;
  wire \reg_rd_data[19]_i_5__0_n_0 ;
  wire \reg_rd_data[1]_i_10__0_n_0 ;
  wire \reg_rd_data[1]_i_2__0 ;
  wire \reg_rd_data[1]_i_8__0_n_0 ;
  wire \reg_rd_data[1]_i_9__0_n_0 ;
  wire \reg_rd_data[20]_i_2__0_0 ;
  wire \reg_rd_data[20]_i_2__0_1 ;
  wire \reg_rd_data[20]_i_2__0_2 ;
  wire \reg_rd_data[20]_i_2__0_n_0 ;
  wire \reg_rd_data[20]_i_3__0_n_0 ;
  wire \reg_rd_data[20]_i_4__0_n_0 ;
  wire \reg_rd_data[21]_i_2__0_0 ;
  wire \reg_rd_data[21]_i_2__0_1 ;
  wire \reg_rd_data[21]_i_2__0_2 ;
  wire \reg_rd_data[21]_i_2__0_n_0 ;
  wire \reg_rd_data[21]_i_4__0_n_0 ;
  wire \reg_rd_data[21]_i_5__0_n_0 ;
  wire \reg_rd_data[22]_i_2__0_0 ;
  wire \reg_rd_data[22]_i_2__0_1 ;
  wire \reg_rd_data[22]_i_2__0_2 ;
  wire \reg_rd_data[22]_i_2__0_n_0 ;
  wire \reg_rd_data[22]_i_4__0_n_0 ;
  wire \reg_rd_data[22]_i_5__0_n_0 ;
  wire \reg_rd_data[23]_i_2__0_0 ;
  wire \reg_rd_data[23]_i_2__0_1 ;
  wire \reg_rd_data[23]_i_2__0_2 ;
  wire \reg_rd_data[23]_i_2__0_n_0 ;
  wire \reg_rd_data[23]_i_4__0_n_0 ;
  wire \reg_rd_data[23]_i_5__0_n_0 ;
  wire \reg_rd_data[24]_i_2__0_0 ;
  wire \reg_rd_data[24]_i_2__0_1 ;
  wire \reg_rd_data[24]_i_2__0_2 ;
  wire \reg_rd_data[24]_i_2__0_n_0 ;
  wire \reg_rd_data[24]_i_4__0_n_0 ;
  wire \reg_rd_data[24]_i_5__0_n_0 ;
  wire \reg_rd_data[25]_i_2__0_0 ;
  wire \reg_rd_data[25]_i_2__0_1 ;
  wire \reg_rd_data[25]_i_2__0_n_0 ;
  wire \reg_rd_data[25]_i_4__0_n_0 ;
  wire \reg_rd_data[25]_i_5__0_n_0 ;
  wire \reg_rd_data[26]_i_2__0_0 ;
  wire \reg_rd_data[26]_i_2__0_1 ;
  wire \reg_rd_data[26]_i_2__0_n_0 ;
  wire \reg_rd_data[26]_i_4__0_n_0 ;
  wire \reg_rd_data[26]_i_5__0_n_0 ;
  wire \reg_rd_data[27]_i_2__0_0 ;
  wire \reg_rd_data[27]_i_2__0_1 ;
  wire \reg_rd_data[27]_i_2__0_n_0 ;
  wire \reg_rd_data[27]_i_4__0_n_0 ;
  wire \reg_rd_data[27]_i_5__0_n_0 ;
  wire \reg_rd_data[28]_i_2__0_0 ;
  wire \reg_rd_data[28]_i_2__0_1 ;
  wire \reg_rd_data[28]_i_2__0_n_0 ;
  wire \reg_rd_data[28]_i_4__0_n_0 ;
  wire \reg_rd_data[28]_i_5__0_n_0 ;
  wire \reg_rd_data[29]_i_2__0_0 ;
  wire \reg_rd_data[29]_i_2__0_1 ;
  wire \reg_rd_data[29]_i_2__0_n_0 ;
  wire \reg_rd_data[29]_i_4__0_n_0 ;
  wire \reg_rd_data[29]_i_5__0_n_0 ;
  wire \reg_rd_data[2]_i_11__0_n_0 ;
  wire \reg_rd_data[2]_i_12__0_n_0 ;
  wire \reg_rd_data[2]_i_18_n_0 ;
  wire \reg_rd_data[2]_i_7__0_0 ;
  wire \reg_rd_data[2]_i_7__0_n_0 ;
  wire \reg_rd_data[30]_i_2__0_0 ;
  wire \reg_rd_data[30]_i_2__0_1 ;
  wire \reg_rd_data[30]_i_2__0_n_0 ;
  wire \reg_rd_data[30]_i_4__0_n_0 ;
  wire \reg_rd_data[30]_i_5__0_n_0 ;
  wire \reg_rd_data[31]_i_10__0_n_0 ;
  wire \reg_rd_data[31]_i_3__0_0 ;
  wire \reg_rd_data[31]_i_3__0_1 ;
  wire \reg_rd_data[31]_i_3__0_n_0 ;
  wire \reg_rd_data[31]_i_9__0_n_0 ;
  wire \reg_rd_data[3]_i_15__0_n_0 ;
  wire \reg_rd_data[3]_i_16__0_n_0 ;
  wire \reg_rd_data[3]_i_19_n_0 ;
  wire \reg_rd_data[3]_i_20_n_0 ;
  wire \reg_rd_data[3]_i_21_n_0 ;
  wire \reg_rd_data[3]_i_22_n_0 ;
  wire \reg_rd_data[3]_i_23_n_0 ;
  wire \reg_rd_data[3]_i_24_n_0 ;
  wire \reg_rd_data[3]_i_25_n_0 ;
  wire \reg_rd_data[3]_i_26_n_0 ;
  wire \reg_rd_data[3]_i_2__0_0 ;
  wire \reg_rd_data[3]_i_2__0_n_0 ;
  wire \reg_rd_data[3]_i_8_n_0 ;
  wire \reg_rd_data[4]_i_11__0_n_0 ;
  wire \reg_rd_data[4]_i_12__0_n_0 ;
  wire \reg_rd_data[4]_i_13__0_n_0 ;
  wire \reg_rd_data[5]_i_11__0_n_0 ;
  wire \reg_rd_data[5]_i_13__0_n_0 ;
  wire \reg_rd_data[6]_i_11__0_n_0 ;
  wire \reg_rd_data[6]_i_9__0_n_0 ;
  wire \reg_rd_data[7]_i_11__0_n_0 ;
  wire \reg_rd_data[7]_i_9__0_n_0 ;
  wire \reg_rd_data[8]_i_12__0_n_0 ;
  wire \reg_rd_data[8]_i_3__0_0 ;
  wire \reg_rd_data[8]_i_3__0_1 ;
  wire \reg_rd_data[8]_i_3__0_n_0 ;
  wire \reg_rd_data[8]_i_7__0_n_0 ;
  wire \reg_rd_data[9]_i_11__0_n_0 ;
  wire \reg_rd_data[9]_i_9__0_n_0 ;
  wire \reg_rd_data_reg[0] ;
  wire \reg_rd_data_reg[0]_0 ;
  wire \reg_rd_data_reg[0]_1 ;
  wire \reg_rd_data_reg[0]_i_2__0_0 ;
  wire \reg_rd_data_reg[0]_i_2__0_n_0 ;
  wire \reg_rd_data_reg[10] ;
  wire \reg_rd_data_reg[10]_0 ;
  wire \reg_rd_data_reg[10]_1 ;
  wire \reg_rd_data_reg[10]_2 ;
  wire \reg_rd_data_reg[10]_i_13__0_n_0 ;
  wire \reg_rd_data_reg[10]_i_13__0_n_1 ;
  wire \reg_rd_data_reg[10]_i_13__0_n_2 ;
  wire \reg_rd_data_reg[10]_i_13__0_n_3 ;
  wire \reg_rd_data_reg[10]_i_14__0_n_0 ;
  wire \reg_rd_data_reg[10]_i_14__0_n_1 ;
  wire \reg_rd_data_reg[10]_i_14__0_n_2 ;
  wire \reg_rd_data_reg[10]_i_14__0_n_3 ;
  wire \reg_rd_data_reg[10]_i_15__0_n_0 ;
  wire \reg_rd_data_reg[10]_i_15__0_n_1 ;
  wire \reg_rd_data_reg[10]_i_15__0_n_2 ;
  wire \reg_rd_data_reg[10]_i_15__0_n_3 ;
  wire \reg_rd_data_reg[10]_i_16__0_n_0 ;
  wire \reg_rd_data_reg[10]_i_16__0_n_1 ;
  wire \reg_rd_data_reg[10]_i_16__0_n_2 ;
  wire \reg_rd_data_reg[10]_i_16__0_n_3 ;
  wire \reg_rd_data_reg[10]_i_8__0_n_0 ;
  wire \reg_rd_data_reg[11]_i_3__0_0 ;
  wire \reg_rd_data_reg[11]_i_3__0_1 ;
  wire \reg_rd_data_reg[11]_i_5__0_0 ;
  wire \reg_rd_data_reg[11]_i_5__0_n_0 ;
  wire \reg_rd_data_reg[11]_i_6__0_0 ;
  wire \reg_rd_data_reg[11]_i_6__0_n_0 ;
  wire \reg_rd_data_reg[12]_i_3__0_0 ;
  wire \reg_rd_data_reg[12]_i_3__0_1 ;
  wire \reg_rd_data_reg[12]_i_5__0_0 ;
  wire \reg_rd_data_reg[12]_i_5__0_n_0 ;
  wire \reg_rd_data_reg[12]_i_6__0_0 ;
  wire \reg_rd_data_reg[12]_i_6__0_n_0 ;
  wire \reg_rd_data_reg[13]_i_3__0_0 ;
  wire \reg_rd_data_reg[13]_i_3__0_1 ;
  wire \reg_rd_data_reg[13]_i_5__0_0 ;
  wire \reg_rd_data_reg[13]_i_5__0_n_0 ;
  wire \reg_rd_data_reg[13]_i_6__0_0 ;
  wire \reg_rd_data_reg[13]_i_6__0_n_0 ;
  wire \reg_rd_data_reg[14]_i_3__0_0 ;
  wire \reg_rd_data_reg[14]_i_3__0_1 ;
  wire \reg_rd_data_reg[14]_i_5__0_0 ;
  wire \reg_rd_data_reg[14]_i_5__0_n_0 ;
  wire \reg_rd_data_reg[14]_i_6__0_0 ;
  wire \reg_rd_data_reg[14]_i_6__0_n_0 ;
  wire \reg_rd_data_reg[15] ;
  wire [15:0]\reg_rd_data_reg[15]_i_9__0_0 ;
  wire [15:0]\reg_rd_data_reg[15]_i_9__0_1 ;
  wire \reg_rd_data_reg[15]_i_9__0_n_0 ;
  wire \reg_rd_data_reg[16] ;
  wire \reg_rd_data_reg[16]_0 ;
  wire [0:0]\reg_rd_data_reg[16]_1 ;
  wire \reg_rd_data_reg[16]_2 ;
  wire \reg_rd_data_reg[16]_3 ;
  wire \reg_rd_data_reg[17] ;
  wire \reg_rd_data_reg[17]_0 ;
  wire \reg_rd_data_reg[17]_1 ;
  wire \reg_rd_data_reg[18] ;
  wire \reg_rd_data_reg[18]_i_10__0_n_0 ;
  wire \reg_rd_data_reg[18]_i_10__0_n_1 ;
  wire \reg_rd_data_reg[18]_i_10__0_n_2 ;
  wire \reg_rd_data_reg[18]_i_10__0_n_3 ;
  wire \reg_rd_data_reg[18]_i_9__0_n_0 ;
  wire \reg_rd_data_reg[18]_i_9__0_n_1 ;
  wire \reg_rd_data_reg[18]_i_9__0_n_2 ;
  wire \reg_rd_data_reg[18]_i_9__0_n_3 ;
  wire \reg_rd_data_reg[19] ;
  wire \reg_rd_data_reg[20] ;
  wire \reg_rd_data_reg[21] ;
  wire \reg_rd_data_reg[22] ;
  wire \reg_rd_data_reg[22]_i_10__0_n_0 ;
  wire \reg_rd_data_reg[22]_i_10__0_n_1 ;
  wire \reg_rd_data_reg[22]_i_10__0_n_2 ;
  wire \reg_rd_data_reg[22]_i_10__0_n_3 ;
  wire \reg_rd_data_reg[22]_i_9__0_n_0 ;
  wire \reg_rd_data_reg[22]_i_9__0_n_1 ;
  wire \reg_rd_data_reg[22]_i_9__0_n_2 ;
  wire \reg_rd_data_reg[22]_i_9__0_n_3 ;
  wire \reg_rd_data_reg[23] ;
  wire \reg_rd_data_reg[24] ;
  wire \reg_rd_data_reg[25] ;
  wire \reg_rd_data_reg[26] ;
  wire \reg_rd_data_reg[26]_i_8__0_n_0 ;
  wire \reg_rd_data_reg[26]_i_8__0_n_1 ;
  wire \reg_rd_data_reg[26]_i_8__0_n_2 ;
  wire \reg_rd_data_reg[26]_i_8__0_n_3 ;
  wire \reg_rd_data_reg[26]_i_9__0_n_0 ;
  wire \reg_rd_data_reg[26]_i_9__0_n_1 ;
  wire \reg_rd_data_reg[26]_i_9__0_n_2 ;
  wire \reg_rd_data_reg[26]_i_9__0_n_3 ;
  wire \reg_rd_data_reg[27] ;
  wire \reg_rd_data_reg[28] ;
  wire \reg_rd_data_reg[29] ;
  wire \reg_rd_data_reg[2] ;
  wire \reg_rd_data_reg[2]_0 ;
  wire \reg_rd_data_reg[2]_1 ;
  wire \reg_rd_data_reg[2]_2 ;
  wire \reg_rd_data_reg[2]_3 ;
  wire \reg_rd_data_reg[2]_i_13_0 ;
  wire \reg_rd_data_reg[2]_i_13_n_0 ;
  wire \reg_rd_data_reg[2]_i_3__0_0 ;
  wire \reg_rd_data_reg[2]_i_3__0_n_0 ;
  wire \reg_rd_data_reg[30] ;
  wire \reg_rd_data_reg[30]_i_8__0_n_0 ;
  wire \reg_rd_data_reg[30]_i_8__0_n_1 ;
  wire \reg_rd_data_reg[30]_i_8__0_n_2 ;
  wire \reg_rd_data_reg[30]_i_8__0_n_3 ;
  wire \reg_rd_data_reg[30]_i_9__0_n_0 ;
  wire \reg_rd_data_reg[30]_i_9__0_n_1 ;
  wire \reg_rd_data_reg[30]_i_9__0_n_2 ;
  wire \reg_rd_data_reg[30]_i_9__0_n_3 ;
  wire \reg_rd_data_reg[31] ;
  wire \reg_rd_data_reg[31]_0 ;
  wire \reg_rd_data_reg[31]_1 ;
  wire \reg_rd_data_reg[31]_2 ;
  wire \reg_rd_data_reg[31]_i_17__0_n_3 ;
  wire \reg_rd_data_reg[31]_i_18_n_3 ;
  wire \reg_rd_data_reg[3] ;
  wire \reg_rd_data_reg[3]_0 ;
  wire \reg_rd_data_reg[3]_1 ;
  wire \reg_rd_data_reg[3]_2 ;
  wire \reg_rd_data_reg[3]_i_17_n_0 ;
  wire \reg_rd_data_reg[3]_i_17_n_1 ;
  wire \reg_rd_data_reg[3]_i_17_n_2 ;
  wire \reg_rd_data_reg[3]_i_17_n_3 ;
  wire \reg_rd_data_reg[3]_i_18_n_0 ;
  wire \reg_rd_data_reg[3]_i_18_n_1 ;
  wire \reg_rd_data_reg[3]_i_18_n_2 ;
  wire \reg_rd_data_reg[3]_i_18_n_3 ;
  wire \reg_rd_data_reg[3]_i_9__0_n_0 ;
  wire \reg_rd_data_reg[4] ;
  wire \reg_rd_data_reg[4]_0 ;
  wire \reg_rd_data_reg[4]_1 ;
  wire \reg_rd_data_reg[4]_2 ;
  wire \reg_rd_data_reg[4]_i_2__0_0 ;
  wire \reg_rd_data_reg[4]_i_2__0_n_0 ;
  wire \reg_rd_data_reg[4]_i_6__0_0 ;
  wire \reg_rd_data_reg[4]_i_6__0_n_0 ;
  wire \reg_rd_data_reg[4]_i_7__0_n_0 ;
  wire \reg_rd_data_reg[5] ;
  wire \reg_rd_data_reg[5]_0 ;
  wire \reg_rd_data_reg[5]_1 ;
  wire \reg_rd_data_reg[5]_i_2__0_0 ;
  wire \reg_rd_data_reg[5]_i_2__0_1 ;
  wire \reg_rd_data_reg[5]_i_2__0_n_0 ;
  wire \reg_rd_data_reg[5]_i_6__0_0 ;
  wire \reg_rd_data_reg[5]_i_6__0_n_0 ;
  wire \reg_rd_data_reg[5]_i_7__0_n_0 ;
  wire \reg_rd_data_reg[6]_i_3__0_0 ;
  wire \reg_rd_data_reg[6]_i_3__0_1 ;
  wire \reg_rd_data_reg[6]_i_5__0_0 ;
  wire \reg_rd_data_reg[6]_i_5__0_n_0 ;
  wire \reg_rd_data_reg[6]_i_6__0_0 ;
  wire \reg_rd_data_reg[6]_i_6__0_n_0 ;
  wire \reg_rd_data_reg[7]_i_3__0_0 ;
  wire \reg_rd_data_reg[7]_i_3__0_1 ;
  wire \reg_rd_data_reg[7]_i_5__0_0 ;
  wire \reg_rd_data_reg[7]_i_5__0_n_0 ;
  wire \reg_rd_data_reg[7]_i_6__0_0 ;
  wire \reg_rd_data_reg[7]_i_6__0_n_0 ;
  wire \reg_rd_data_reg[8] ;
  wire \reg_rd_data_reg[8]_0 ;
  wire \reg_rd_data_reg[8]_1 ;
  wire \reg_rd_data_reg[8]_2 ;
  wire \reg_rd_data_reg[8]_3 ;
  wire \reg_rd_data_reg[8]_i_8__0_n_0 ;
  wire \reg_rd_data_reg[9]_i_3__0_0 ;
  wire \reg_rd_data_reg[9]_i_3__0_1 ;
  wire \reg_rd_data_reg[9]_i_5__0_0 ;
  wire \reg_rd_data_reg[9]_i_5__0_n_0 ;
  wire \reg_rd_data_reg[9]_i_6__0_0 ;
  wire \reg_rd_data_reg[9]_i_6__0_n_0 ;
  wire \req_addr[0]_i_1__0_n_0 ;
  wire \req_addr[0]_i_2__0_n_0 ;
  wire \req_addr[0]_i_3__0_n_0 ;
  wire \req_addr[10]_i_1__0_n_0 ;
  wire \req_addr[10]_i_2__0_n_0 ;
  wire \req_addr[11]_i_1__0_n_0 ;
  wire \req_addr[11]_i_2__0_n_0 ;
  wire \req_addr[12]_i_1__0_n_0 ;
  wire \req_addr[12]_i_2__0_n_0 ;
  wire \req_addr[13]_i_1__0_n_0 ;
  wire \req_addr[13]_i_2__0_n_0 ;
  wire \req_addr[14]_i_1__0_n_0 ;
  wire \req_addr[14]_i_2__0_n_0 ;
  wire \req_addr[15]_i_1__0_n_0 ;
  wire \req_addr[15]_i_2__0_n_0 ;
  wire \req_addr[16]_i_1__0_n_0 ;
  wire \req_addr[16]_i_2__0_n_0 ;
  wire \req_addr[17]_i_1__0_n_0 ;
  wire \req_addr[17]_i_2__0_n_0 ;
  wire \req_addr[18]_i_1__0_n_0 ;
  wire \req_addr[18]_i_2__0_n_0 ;
  wire \req_addr[19]_i_1__0_n_0 ;
  wire \req_addr[19]_i_2__0_n_0 ;
  wire \req_addr[1]_i_1__0_n_0 ;
  wire \req_addr[1]_i_2__0_n_0 ;
  wire \req_addr[20]_i_1__0_n_0 ;
  wire \req_addr[20]_i_2__0_n_0 ;
  wire \req_addr[21]_i_1__0_n_0 ;
  wire \req_addr[21]_i_2__0_n_0 ;
  wire \req_addr[22]_i_1__0_n_0 ;
  wire \req_addr[22]_i_2__0_n_0 ;
  wire \req_addr[23]_i_1__0_n_0 ;
  wire \req_addr[23]_i_2__0_n_0 ;
  wire \req_addr[24]_i_1__0_n_0 ;
  wire \req_addr[24]_i_2__0_n_0 ;
  wire \req_addr[25]_i_1__0_n_0 ;
  wire \req_addr[25]_i_2__0_n_0 ;
  wire \req_addr[26]_i_1__0_n_0 ;
  wire \req_addr[26]_i_2__0_n_0 ;
  wire \req_addr[27]_i_1__0_n_0 ;
  wire \req_addr[27]_i_2__0_n_0 ;
  wire \req_addr[28]_i_1__0_n_0 ;
  wire \req_addr[28]_i_2__0_n_0 ;
  wire \req_addr[29]_i_1__0_n_0 ;
  wire \req_addr[29]_i_2__0_n_0 ;
  wire \req_addr[2]_i_1__0_n_0 ;
  wire \req_addr[2]_i_2__0_n_0 ;
  wire \req_addr[2]_i_3__0_n_0 ;
  wire \req_addr[30]_i_1__0_n_0 ;
  wire \req_addr[30]_i_2__0_n_0 ;
  wire \req_addr[31]_i_1__0_n_0 ;
  wire \req_addr[31]_i_2__0_n_0 ;
  wire \req_addr[31]_i_3__0_n_0 ;
  wire \req_addr[31]_i_4__0_n_0 ;
  wire \req_addr[31]_i_5__0_n_0 ;
  wire \req_addr[31]_i_6__0_n_0 ;
  wire \req_addr[3]_i_1__0_n_0 ;
  wire \req_addr[3]_i_2__0_n_0 ;
  wire \req_addr[4]_i_1__0_n_0 ;
  wire \req_addr[4]_i_2__0_n_0 ;
  wire \req_addr[5]_i_1__0_n_0 ;
  wire \req_addr[5]_i_2__0_n_0 ;
  wire \req_addr[6]_i_1__0_n_0 ;
  wire \req_addr[6]_i_2__0_n_0 ;
  wire \req_addr[7]_i_1__0_n_0 ;
  wire \req_addr[7]_i_2__0_n_0 ;
  wire \req_addr[8]_i_1__0_n_0 ;
  wire \req_addr[8]_i_2__0_n_0 ;
  wire \req_addr[9]_i_1__0_n_0 ;
  wire \req_addr[9]_i_2__0_n_0 ;
  wire [31:0]\req_addr_reg[31]_0 ;
  wire \req_buf_addr[0]_i_1__0_n_0 ;
  wire \req_buf_addr[10]_i_1__0_n_0 ;
  wire \req_buf_addr[11]_i_1__0_n_0 ;
  wire \req_buf_addr[12]_i_1__0_n_0 ;
  wire \req_buf_addr[13]_i_1__0_n_0 ;
  wire \req_buf_addr[14]_i_1__0_n_0 ;
  wire \req_buf_addr[15]_i_1__0_n_0 ;
  wire \req_buf_addr[16]_i_1__0_n_0 ;
  wire \req_buf_addr[17]_i_1__0_n_0 ;
  wire \req_buf_addr[18]_i_1__0_n_0 ;
  wire \req_buf_addr[19]_i_1__0_n_0 ;
  wire \req_buf_addr[1]_i_1__0_n_0 ;
  wire \req_buf_addr[20]_i_1__0_n_0 ;
  wire \req_buf_addr[21]_i_1__0_n_0 ;
  wire \req_buf_addr[22]_i_1__0_n_0 ;
  wire \req_buf_addr[23]_i_1__0_n_0 ;
  wire \req_buf_addr[24]_i_1__0_n_0 ;
  wire \req_buf_addr[25]_i_1__0_n_0 ;
  wire \req_buf_addr[26]_i_1__0_n_0 ;
  wire \req_buf_addr[27]_i_1__0_n_0 ;
  wire \req_buf_addr[28]_i_1__0_n_0 ;
  wire \req_buf_addr[29]_i_1__0_n_0 ;
  wire \req_buf_addr[2]_i_1__0_n_0 ;
  wire \req_buf_addr[30]_i_1__0_n_0 ;
  wire \req_buf_addr[31]_i_1__0_n_0 ;
  wire \req_buf_addr[31]_i_2__0_n_0 ;
  wire \req_buf_addr[31]_i_3__0_n_0 ;
  wire \req_buf_addr[31]_i_4__0_n_0 ;
  wire \req_buf_addr[3]_i_1__0_n_0 ;
  wire \req_buf_addr[4]_i_1__0_n_0 ;
  wire \req_buf_addr[5]_i_1__0_n_0 ;
  wire \req_buf_addr[6]_i_1__0_n_0 ;
  wire \req_buf_addr[7]_i_1__0_n_0 ;
  wire \req_buf_addr[8]_i_1__0_n_0 ;
  wire \req_buf_addr[9]_i_1__0_n_0 ;
  wire [31:0]\req_buf_addr_reg[31]_0 ;
  wire [31:0]\req_buf_addr_reg[31]_1 ;
  wire \req_buf_addr_reg_n_0_[0] ;
  wire \req_buf_addr_reg_n_0_[10] ;
  wire \req_buf_addr_reg_n_0_[11] ;
  wire \req_buf_addr_reg_n_0_[12] ;
  wire \req_buf_addr_reg_n_0_[13] ;
  wire \req_buf_addr_reg_n_0_[14] ;
  wire \req_buf_addr_reg_n_0_[15] ;
  wire \req_buf_addr_reg_n_0_[16] ;
  wire \req_buf_addr_reg_n_0_[17] ;
  wire \req_buf_addr_reg_n_0_[18] ;
  wire \req_buf_addr_reg_n_0_[19] ;
  wire \req_buf_addr_reg_n_0_[1] ;
  wire \req_buf_addr_reg_n_0_[20] ;
  wire \req_buf_addr_reg_n_0_[21] ;
  wire \req_buf_addr_reg_n_0_[22] ;
  wire \req_buf_addr_reg_n_0_[23] ;
  wire \req_buf_addr_reg_n_0_[24] ;
  wire \req_buf_addr_reg_n_0_[25] ;
  wire \req_buf_addr_reg_n_0_[26] ;
  wire \req_buf_addr_reg_n_0_[27] ;
  wire \req_buf_addr_reg_n_0_[28] ;
  wire \req_buf_addr_reg_n_0_[29] ;
  wire \req_buf_addr_reg_n_0_[2] ;
  wire \req_buf_addr_reg_n_0_[30] ;
  wire \req_buf_addr_reg_n_0_[31] ;
  wire \req_buf_addr_reg_n_0_[3] ;
  wire \req_buf_addr_reg_n_0_[4] ;
  wire \req_buf_addr_reg_n_0_[5] ;
  wire \req_buf_addr_reg_n_0_[6] ;
  wire \req_buf_addr_reg_n_0_[7] ;
  wire \req_buf_addr_reg_n_0_[8] ;
  wire \req_buf_addr_reg_n_0_[9] ;
  wire req_buf_addr_sel_i_1__0_n_0;
  wire req_buf_addr_sel_i_2__0_n_0;
  wire req_buf_addr_sel_p1_reg_0;
  wire \req_xfer_cnt_reg[6] ;
  wire req_xfer_last;
  wire rst;
  wire \s_axi_reg_araddr[3] ;
  wire \s_axi_reg_araddr[4] ;
  wire \s_axi_reg_araddr[6] ;
  wire \s_axi_reg_araddr[7] ;
  wire \s_axi_reg_araddr[7]_0 ;
  wire \state_cs[0]_i_1__0_n_0 ;
  wire \state_cs[1]_i_1__0_n_0 ;
  wire \state_cs[2]_i_10__0_n_0 ;
  wire \state_cs[2]_i_1__0_n_0 ;
  wire \state_cs[2]_i_4__0_n_0 ;
  wire \state_cs[2]_i_6__0_n_0 ;
  wire \state_cs[2]_i_8__0_n_0 ;
  wire \state_cs[2]_i_9__0_n_0 ;
  wire \state_cs_reg[0]_0 ;
  wire \state_cs_reg[0]_1 ;
  wire \state_cs_reg[0]_2 ;
  wire \state_cs_reg[1]_0 ;
  wire \state_cs_reg[2]_0 ;
  wire [0:0]state_ns;
  wire sts_acquire_i_10__0_n_0;
  wire sts_acquire_reg;
  wire [7:0]sts_acquire_reg_0;
  wire sts_acquire_reg_1;
  wire transf_end;
  wire [13:0]trig_cnt_reg;
  wire [5:0]\trig_cnt_reg[31] ;
  wire [0:0]trig_ip;
  wire trig_out2;
  wire trig_out_INST_0_i_4_n_0;
  wire use_8bit_r;
  wire wr_en;
  wire \xfer_cnt[6]_i_3__0_n_0 ;
  wire \xfer_cnt_reg[6] ;
  wire NLW_U_fifo_axi_req_full_UNCONNECTED;
  wire [3:3]\NLW_buf1_missed_samp_reg[28]_i_1__0_CO_UNCONNECTED ;
  wire [3:3]\NLW_buf2_missed_samp_reg[28]_i_1__0_CO_UNCONNECTED ;
  wire [3:0]NLW_next_buf_full1_carry_O_UNCONNECTED;
  wire [3:0]NLW_next_buf_full1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_next_buf_full1_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_next_buf_full1_carry__2_O_UNCONNECTED;
  wire [3:3]NLW_next_buf_full1_carry__2_i_9__0_CO_UNCONNECTED;
  wire [3:1]\NLW_next_buf_full2_inferred__0/i__carry__5_CO_UNCONNECTED ;
  wire [3:2]\NLW_next_buf_full2_inferred__0/i__carry__5_O_UNCONNECTED ;
  wire [3:1]\NLW_reg_rd_data_reg[31]_i_17__0_CO_UNCONNECTED ;
  wire [3:2]\NLW_reg_rd_data_reg[31]_i_17__0_O_UNCONNECTED ;
  wire [3:1]\NLW_reg_rd_data_reg[31]_i_18_CO_UNCONNECTED ;
  wire [3:2]\NLW_reg_rd_data_reg[31]_i_18_O_UNCONNECTED ;

  system_rp_oscilloscope_0_rp_dma_s2mm_data_ctrl U_dma_s2mm_data_ctrl
       (.Q(fifo_rst_cnt_reg[4]),
        .bit_start_reg(U_dma_s2mm_data_ctrl_n_14),
        .buf1_missed_samp0(buf1_missed_samp0),
        .\buf1_missed_samp_reg[0] (\buf1_missed_samp[0]_i_4__0_n_0 ),
        .\buf1_missed_samp_reg[0]_0 (\buf1_missed_samp[0]_i_5__0_n_0 ),
        .buf2_missed_samp0(buf2_missed_samp0),
        .\buf2_missed_samp_reg[0] (fifo_dis_reg_1),
        .\buf2_missed_samp_reg[0]_0 (\state_cs_reg[2]_0 ),
        .\buf2_missed_samp_reg[0]_1 (\state_cs_reg[1]_0 ),
        .\buf2_missed_samp_reg[0]_2 (\state_cs_reg[0]_1 ),
        .\buf2_missed_samp_reg[0]_3 (req_buf_addr_sel_p1_reg_0),
        .\buf2_missed_samp_reg[0]_4 (next_buf_full_reg_0),
        .\buf2_missed_samp_reg[0]_5 (\buf2_missed_samp[0]_i_4__0_n_0 ),
        .\buf2_missed_samp_reg[0]_6 (\buf2_missed_samp[0]_i_5__0_n_0 ),
        .buf_sel_ch1(buf_sel_ch1),
        .busy_reg_0(busy_reg),
        .busy_reg_1(U_dma_s2mm_data_ctrl_n_13),
        .busy_reg_2(busy_reg_0),
        .cfg_dma_ctrl_reg({cfg_dma_ctrl_reg[4],cfg_dma_ctrl_reg[1]}),
        .cfg_dma_sts_reg(cfg_dma_sts_reg[4]),
        .clear(clear),
        .din(dat_ctrl_req_data),
        .empty(empty),
        .empty_fwft_i_reg(empty_fwft_i_reg),
        .fifo_dis_reg(fifo_dis_reg_0),
        .full_immed0(full_immed0),
        .\goreg_dm.dout_i_reg[1] (\goreg_dm.dout_i_reg[1] ),
        .intr_reg__0(intr_reg__0_0),
        .intr_reg__0_0(buf1_full_i_2_n_0),
        .intr_reg__0_1(intr_i_3__0_n_0),
        .m_axi_osc2_aclk(m_axi_osc2_aclk),
        .m_axi_osc2_aresetn(m_axi_osc2_aresetn),
        .m_axi_osc2_aresetn_0(U_dma_s2mm_data_ctrl_n_16),
        .m_axi_osc2_awready(m_axi_osc2_awready),
        .m_axi_osc2_awvalid(m_axi_osc2_awvalid),
        .m_axi_osc2_wready(m_axi_osc2_wready),
        .m_axi_wlast_reg_0(m_axi_wlast_reg),
        .m_axi_wlast_reg_1(m_axi_wlast_reg_0),
        .m_axi_wvalid_reg_0(m_axi_wvalid_reg),
        .m_axi_wvalid_reg_1(m_axi_wvalid_reg_0),
        .rd_en(rd_en),
        .req_buf_addr_sel_p1_reg(U_dma_s2mm_data_ctrl_n_10),
        .\req_xfer_cnt_reg[6]_0 (\req_xfer_cnt_reg[6] ),
        .req_xfer_last(req_xfer_last),
        .req_xfer_last_reg(U_dma_s2mm_data_ctrl_n_17),
        .rst(rst),
        .\state_cs[2]_i_3__0_0 (\state_cs[2]_i_10__0_n_0 ),
        .\state_cs_reg[0]_0 (\state_cs_reg[0]_0 ),
        .\state_cs_reg[0]_1 (\state_cs_reg[0]_2 ),
        .\state_cs_reg[0]_2 (bit_start_reg_0),
        .\state_cs_reg[0]_3 (\state_cs[2]_i_6__0_n_0 ),
        .\state_cs_reg[2] (U_dma_s2mm_data_ctrl_n_8),
        .\state_cs_reg[2]_0 (\state_cs[2]_i_4__0_n_0 ),
        .state_ns(state_ns),
        .transf_end(transf_end));
  (* CHECK_LICENSE_TYPE = "fifo_axi_req,fifo_generator_v13_2_5,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2020.1" *) 
  system_rp_oscilloscope_0_fifo_axi_req__xdcDup__3 U_fifo_axi_req
       (.din(Q),
        .dout(fifo_rd_data),
        .empty(empty),
        .full(NLW_U_fifo_axi_req_full_UNCONNECTED),
        .rd_clk(m_axi_osc2_aclk),
        .rd_en(fifo_rd_re),
        .rst(rst),
        .wr_clk(m_axi_osc2_aclk),
        .wr_en(wr_en));
  LUT3 #(
    .INIT(8'h78)) 
    U_fifo_axi_req_i_1
       (.I0(U_fifo_axi_req_i_11_n_0),
        .I1(m_axi_osc2_awlen[6]),
        .I2(m_axi_osc2_awlen[7]),
        .O(dat_ctrl_req_data[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    U_fifo_axi_req_i_11
       (.I0(m_axi_osc2_awlen[5]),
        .I1(m_axi_osc2_awlen[3]),
        .I2(m_axi_osc2_awlen[1]),
        .I3(m_axi_osc2_awlen[0]),
        .I4(m_axi_osc2_awlen[2]),
        .I5(m_axi_osc2_awlen[4]),
        .O(U_fifo_axi_req_i_11_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    U_fifo_axi_req_i_2
       (.I0(U_fifo_axi_req_i_11_n_0),
        .I1(m_axi_osc2_awlen[6]),
        .O(dat_ctrl_req_data[6]));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    U_fifo_axi_req_i_2__0
       (.I0(\state_cs_reg[2]_0 ),
        .I1(\state_cs_reg[1]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .I3(empty),
        .O(fifo_rd_re));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    U_fifo_axi_req_i_3
       (.I0(m_axi_osc2_awlen[3]),
        .I1(m_axi_osc2_awlen[1]),
        .I2(m_axi_osc2_awlen[0]),
        .I3(m_axi_osc2_awlen[2]),
        .I4(m_axi_osc2_awlen[4]),
        .I5(m_axi_osc2_awlen[5]),
        .O(dat_ctrl_req_data[5]));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    U_fifo_axi_req_i_4
       (.I0(m_axi_osc2_awlen[2]),
        .I1(m_axi_osc2_awlen[0]),
        .I2(m_axi_osc2_awlen[1]),
        .I3(m_axi_osc2_awlen[3]),
        .I4(m_axi_osc2_awlen[4]),
        .O(dat_ctrl_req_data[4]));
  LUT4 #(
    .INIT(16'h7F80)) 
    U_fifo_axi_req_i_5
       (.I0(m_axi_osc2_awlen[1]),
        .I1(m_axi_osc2_awlen[0]),
        .I2(m_axi_osc2_awlen[2]),
        .I3(m_axi_osc2_awlen[3]),
        .O(dat_ctrl_req_data[3]));
  LUT3 #(
    .INIT(8'h78)) 
    U_fifo_axi_req_i_6
       (.I0(m_axi_osc2_awlen[0]),
        .I1(m_axi_osc2_awlen[1]),
        .I2(m_axi_osc2_awlen[2]),
        .O(dat_ctrl_req_data[2]));
  LUT2 #(
    .INIT(4'h6)) 
    U_fifo_axi_req_i_7
       (.I0(m_axi_osc2_awlen[0]),
        .I1(m_axi_osc2_awlen[1]),
        .O(dat_ctrl_req_data[1]));
  LUT1 #(
    .INIT(2'h1)) 
    U_fifo_axi_req_i_8
       (.I0(m_axi_osc2_awlen[0]),
        .O(dat_ctrl_req_data[0]));
  FDRE axi_last_r2_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(axi_last_r),
        .Q(axi_last_r2),
        .R(1'b0));
  FDRE axi_last_r_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(m_axi_wlast_reg),
        .Q(axi_last_r),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    bit_start_i_1__0
       (.I0(\reg_ctrl_reg[0]_0 ),
        .I1(\cfg_trig_mask_reg[1] ),
        .O(p_3_in));
  FDRE bit_start_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_3_in),
        .Q(bit_start_reg_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000000000000AAEA)) 
    buf1_full_i_1__0
       (.I0(cfg_dma_sts_reg[0]),
        .I1(next_buf_full1),
        .I2(transf_end),
        .I3(cfg_dma_sts_reg[4]),
        .I4(cfg_dma_ctrl_reg[2]),
        .I5(buf1_full_i_2_n_0),
        .O(buf1_full_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT3 #(
    .INIT(8'h01)) 
    buf1_full_i_2
       (.I0(\state_cs_reg[0]_1 ),
        .I1(\state_cs_reg[1]_0 ),
        .I2(\state_cs_reg[2]_0 ),
        .O(buf1_full_i_2_n_0));
  FDRE buf1_full_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(buf1_full_i_1__0_n_0),
        .Q(cfg_dma_sts_reg[0]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \buf1_missed_samp[0]_i_10__0 
       (.I0(buf1_missed_samp_reg[27]),
        .I1(buf1_missed_samp_reg[0]),
        .I2(buf1_missed_samp_reg[1]),
        .I3(buf1_missed_samp_reg[24]),
        .O(\buf1_missed_samp[0]_i_10__0_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \buf1_missed_samp[0]_i_11__0 
       (.I0(buf1_missed_samp_reg[4]),
        .I1(buf1_missed_samp_reg[16]),
        .I2(buf1_missed_samp_reg[19]),
        .I3(buf1_missed_samp_reg[21]),
        .O(\buf1_missed_samp[0]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \buf1_missed_samp[0]_i_12__0 
       (.I0(buf1_missed_samp_reg[26]),
        .I1(buf1_missed_samp_reg[22]),
        .I2(buf1_missed_samp_reg[20]),
        .I3(buf1_missed_samp_reg[15]),
        .I4(\buf1_missed_samp[0]_i_13__0_n_0 ),
        .O(\buf1_missed_samp[0]_i_12__0_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \buf1_missed_samp[0]_i_13__0 
       (.I0(buf1_missed_samp_reg[7]),
        .I1(buf1_missed_samp_reg[25]),
        .I2(buf1_missed_samp_reg[6]),
        .I3(buf1_missed_samp_reg[10]),
        .O(\buf1_missed_samp[0]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFFFFFFF)) 
    \buf1_missed_samp[0]_i_4__0 
       (.I0(\buf1_missed_samp[0]_i_7__0_n_0 ),
        .I1(buf1_missed_samp_reg[12]),
        .I2(buf1_missed_samp_reg[18]),
        .I3(buf1_missed_samp_reg[14]),
        .I4(buf1_missed_samp_reg[17]),
        .I5(\buf1_missed_samp[0]_i_8__0_n_0 ),
        .O(\buf1_missed_samp[0]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    \buf1_missed_samp[0]_i_5__0 
       (.I0(buf1_missed_samp_reg[30]),
        .I1(buf1_missed_samp_reg[28]),
        .I2(buf1_missed_samp_reg[29]),
        .I3(\buf1_missed_samp[0]_i_9__0_n_0 ),
        .I4(buf1_missed_samp_reg[31]),
        .I5(cfg_dma_sts_reg[4]),
        .O(\buf1_missed_samp[0]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \buf1_missed_samp[0]_i_6__0 
       (.I0(buf1_missed_samp_reg[0]),
        .O(\buf1_missed_samp[0]_i_6__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \buf1_missed_samp[0]_i_7__0 
       (.I0(buf1_missed_samp_reg[23]),
        .I1(buf1_missed_samp_reg[11]),
        .I2(buf1_missed_samp_reg[13]),
        .I3(buf1_missed_samp_reg[8]),
        .I4(\buf1_missed_samp[0]_i_10__0_n_0 ),
        .O(\buf1_missed_samp[0]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFFFFFFF)) 
    \buf1_missed_samp[0]_i_8__0 
       (.I0(\buf1_missed_samp[0]_i_11__0_n_0 ),
        .I1(buf1_missed_samp_reg[2]),
        .I2(buf1_missed_samp_reg[9]),
        .I3(buf1_missed_samp_reg[3]),
        .I4(buf1_missed_samp_reg[5]),
        .I5(\buf1_missed_samp[0]_i_12__0_n_0 ),
        .O(\buf1_missed_samp[0]_i_8__0_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \buf1_missed_samp[0]_i_9__0 
       (.I0(first_rst),
        .I1(E),
        .O(\buf1_missed_samp[0]_i_9__0_n_0 ));
  FDRE \buf1_missed_samp_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[0]_i_3__0_n_7 ),
        .Q(buf1_missed_samp_reg[0]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[0]_i_3__0 
       (.CI(1'b0),
        .CO({\buf1_missed_samp_reg[0]_i_3__0_n_0 ,\buf1_missed_samp_reg[0]_i_3__0_n_1 ,\buf1_missed_samp_reg[0]_i_3__0_n_2 ,\buf1_missed_samp_reg[0]_i_3__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\buf1_missed_samp_reg[0]_i_3__0_n_4 ,\buf1_missed_samp_reg[0]_i_3__0_n_5 ,\buf1_missed_samp_reg[0]_i_3__0_n_6 ,\buf1_missed_samp_reg[0]_i_3__0_n_7 }),
        .S({buf1_missed_samp_reg[3:1],\buf1_missed_samp[0]_i_6__0_n_0 }));
  FDRE \buf1_missed_samp_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[8]_i_1__0_n_5 ),
        .Q(buf1_missed_samp_reg[10]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[8]_i_1__0_n_4 ),
        .Q(buf1_missed_samp_reg[11]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[12]_i_1__0_n_7 ),
        .Q(buf1_missed_samp_reg[12]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[12]_i_1__0 
       (.CI(\buf1_missed_samp_reg[8]_i_1__0_n_0 ),
        .CO({\buf1_missed_samp_reg[12]_i_1__0_n_0 ,\buf1_missed_samp_reg[12]_i_1__0_n_1 ,\buf1_missed_samp_reg[12]_i_1__0_n_2 ,\buf1_missed_samp_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf1_missed_samp_reg[12]_i_1__0_n_4 ,\buf1_missed_samp_reg[12]_i_1__0_n_5 ,\buf1_missed_samp_reg[12]_i_1__0_n_6 ,\buf1_missed_samp_reg[12]_i_1__0_n_7 }),
        .S(buf1_missed_samp_reg[15:12]));
  FDRE \buf1_missed_samp_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[12]_i_1__0_n_6 ),
        .Q(buf1_missed_samp_reg[13]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[12]_i_1__0_n_5 ),
        .Q(buf1_missed_samp_reg[14]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[12]_i_1__0_n_4 ),
        .Q(buf1_missed_samp_reg[15]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[16]_i_1__0_n_7 ),
        .Q(buf1_missed_samp_reg[16]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[16]_i_1__0 
       (.CI(\buf1_missed_samp_reg[12]_i_1__0_n_0 ),
        .CO({\buf1_missed_samp_reg[16]_i_1__0_n_0 ,\buf1_missed_samp_reg[16]_i_1__0_n_1 ,\buf1_missed_samp_reg[16]_i_1__0_n_2 ,\buf1_missed_samp_reg[16]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf1_missed_samp_reg[16]_i_1__0_n_4 ,\buf1_missed_samp_reg[16]_i_1__0_n_5 ,\buf1_missed_samp_reg[16]_i_1__0_n_6 ,\buf1_missed_samp_reg[16]_i_1__0_n_7 }),
        .S(buf1_missed_samp_reg[19:16]));
  FDRE \buf1_missed_samp_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[16]_i_1__0_n_6 ),
        .Q(buf1_missed_samp_reg[17]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[16]_i_1__0_n_5 ),
        .Q(buf1_missed_samp_reg[18]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[16]_i_1__0_n_4 ),
        .Q(buf1_missed_samp_reg[19]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[0]_i_3__0_n_6 ),
        .Q(buf1_missed_samp_reg[1]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[20]_i_1__0_n_7 ),
        .Q(buf1_missed_samp_reg[20]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[20]_i_1__0 
       (.CI(\buf1_missed_samp_reg[16]_i_1__0_n_0 ),
        .CO({\buf1_missed_samp_reg[20]_i_1__0_n_0 ,\buf1_missed_samp_reg[20]_i_1__0_n_1 ,\buf1_missed_samp_reg[20]_i_1__0_n_2 ,\buf1_missed_samp_reg[20]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf1_missed_samp_reg[20]_i_1__0_n_4 ,\buf1_missed_samp_reg[20]_i_1__0_n_5 ,\buf1_missed_samp_reg[20]_i_1__0_n_6 ,\buf1_missed_samp_reg[20]_i_1__0_n_7 }),
        .S(buf1_missed_samp_reg[23:20]));
  FDRE \buf1_missed_samp_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[20]_i_1__0_n_6 ),
        .Q(buf1_missed_samp_reg[21]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[20]_i_1__0_n_5 ),
        .Q(buf1_missed_samp_reg[22]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[20]_i_1__0_n_4 ),
        .Q(buf1_missed_samp_reg[23]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[24]_i_1__0_n_7 ),
        .Q(buf1_missed_samp_reg[24]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[24]_i_1__0 
       (.CI(\buf1_missed_samp_reg[20]_i_1__0_n_0 ),
        .CO({\buf1_missed_samp_reg[24]_i_1__0_n_0 ,\buf1_missed_samp_reg[24]_i_1__0_n_1 ,\buf1_missed_samp_reg[24]_i_1__0_n_2 ,\buf1_missed_samp_reg[24]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf1_missed_samp_reg[24]_i_1__0_n_4 ,\buf1_missed_samp_reg[24]_i_1__0_n_5 ,\buf1_missed_samp_reg[24]_i_1__0_n_6 ,\buf1_missed_samp_reg[24]_i_1__0_n_7 }),
        .S(buf1_missed_samp_reg[27:24]));
  FDRE \buf1_missed_samp_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[24]_i_1__0_n_6 ),
        .Q(buf1_missed_samp_reg[25]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[24]_i_1__0_n_5 ),
        .Q(buf1_missed_samp_reg[26]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[24]_i_1__0_n_4 ),
        .Q(buf1_missed_samp_reg[27]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[28]_i_1__0_n_7 ),
        .Q(buf1_missed_samp_reg[28]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[28]_i_1__0 
       (.CI(\buf1_missed_samp_reg[24]_i_1__0_n_0 ),
        .CO({\NLW_buf1_missed_samp_reg[28]_i_1__0_CO_UNCONNECTED [3],\buf1_missed_samp_reg[28]_i_1__0_n_1 ,\buf1_missed_samp_reg[28]_i_1__0_n_2 ,\buf1_missed_samp_reg[28]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf1_missed_samp_reg[28]_i_1__0_n_4 ,\buf1_missed_samp_reg[28]_i_1__0_n_5 ,\buf1_missed_samp_reg[28]_i_1__0_n_6 ,\buf1_missed_samp_reg[28]_i_1__0_n_7 }),
        .S(buf1_missed_samp_reg[31:28]));
  FDRE \buf1_missed_samp_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[28]_i_1__0_n_6 ),
        .Q(buf1_missed_samp_reg[29]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[0]_i_3__0_n_5 ),
        .Q(buf1_missed_samp_reg[2]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[28]_i_1__0_n_5 ),
        .Q(buf1_missed_samp_reg[30]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[28]_i_1__0_n_4 ),
        .Q(buf1_missed_samp_reg[31]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[0]_i_3__0_n_4 ),
        .Q(buf1_missed_samp_reg[3]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[4]_i_1__0_n_7 ),
        .Q(buf1_missed_samp_reg[4]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[4]_i_1__0 
       (.CI(\buf1_missed_samp_reg[0]_i_3__0_n_0 ),
        .CO({\buf1_missed_samp_reg[4]_i_1__0_n_0 ,\buf1_missed_samp_reg[4]_i_1__0_n_1 ,\buf1_missed_samp_reg[4]_i_1__0_n_2 ,\buf1_missed_samp_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf1_missed_samp_reg[4]_i_1__0_n_4 ,\buf1_missed_samp_reg[4]_i_1__0_n_5 ,\buf1_missed_samp_reg[4]_i_1__0_n_6 ,\buf1_missed_samp_reg[4]_i_1__0_n_7 }),
        .S(buf1_missed_samp_reg[7:4]));
  FDRE \buf1_missed_samp_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[4]_i_1__0_n_6 ),
        .Q(buf1_missed_samp_reg[5]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[4]_i_1__0_n_5 ),
        .Q(buf1_missed_samp_reg[6]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[4]_i_1__0_n_4 ),
        .Q(buf1_missed_samp_reg[7]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[8]_i_1__0_n_7 ),
        .Q(buf1_missed_samp_reg[8]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[8]_i_1__0 
       (.CI(\buf1_missed_samp_reg[4]_i_1__0_n_0 ),
        .CO({\buf1_missed_samp_reg[8]_i_1__0_n_0 ,\buf1_missed_samp_reg[8]_i_1__0_n_1 ,\buf1_missed_samp_reg[8]_i_1__0_n_2 ,\buf1_missed_samp_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf1_missed_samp_reg[8]_i_1__0_n_4 ,\buf1_missed_samp_reg[8]_i_1__0_n_5 ,\buf1_missed_samp_reg[8]_i_1__0_n_6 ,\buf1_missed_samp_reg[8]_i_1__0_n_7 }),
        .S(buf1_missed_samp_reg[11:8]));
  FDRE \buf1_missed_samp_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[8]_i_1__0_n_6 ),
        .Q(buf1_missed_samp_reg[9]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[0]_i_1__0 
       (.I0(rd_data_count[0]),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[1]_0 ),
        .I3(\state_cs_reg[0]_1 ),
        .O(\buf1_ms_lvl[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[1]_i_1__0 
       (.I0(rd_data_count[1]),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[1]_0 ),
        .I3(\state_cs_reg[0]_1 ),
        .O(\buf1_ms_lvl[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[2]_i_1__0 
       (.I0(rd_data_count[2]),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[1]_0 ),
        .I3(\state_cs_reg[0]_1 ),
        .O(\buf1_ms_lvl[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[3]_i_1__0 
       (.I0(rd_data_count[3]),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[1]_0 ),
        .I3(\state_cs_reg[0]_1 ),
        .O(\buf1_ms_lvl[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[4]_i_1__0 
       (.I0(rd_data_count[4]),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[1]_0 ),
        .I3(\state_cs_reg[0]_1 ),
        .O(\buf1_ms_lvl[4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[5]_i_1__0 
       (.I0(rd_data_count[5]),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[1]_0 ),
        .I3(\state_cs_reg[0]_1 ),
        .O(\buf1_ms_lvl[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[6]_i_1__0 
       (.I0(rd_data_count[6]),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[1]_0 ),
        .I3(\state_cs_reg[0]_1 ),
        .O(\buf1_ms_lvl[6]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[7]_i_1__0 
       (.I0(rd_data_count[7]),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[1]_0 ),
        .I3(\state_cs_reg[0]_1 ),
        .O(\buf1_ms_lvl[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[8]_i_1__0 
       (.I0(rd_data_count[8]),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[1]_0 ),
        .I3(\state_cs_reg[0]_1 ),
        .O(\buf1_ms_lvl[8]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h0BBBAAAA)) 
    \buf1_ms_lvl[9]_i_1__0 
       (.I0(buf1_full_i_2_n_0),
        .I1(req_buf_addr_sel_p1_reg_0),
        .I2(next_buf_full_reg_0),
        .I3(axi_last_r2),
        .I4(cfg_dma_sts_reg[4]),
        .O(\buf1_ms_lvl[9]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF80F0)) 
    \buf1_ms_lvl[9]_i_2__0 
       (.I0(next_buf_full_reg_0),
        .I1(axi_last_r2),
        .I2(cfg_dma_sts_reg[4]),
        .I3(req_buf_addr_sel_p1_reg_0),
        .I4(buf1_full_i_2_n_0),
        .O(\buf1_ms_lvl[9]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[9]_i_3__0 
       (.I0(rd_data_count[9]),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[1]_0 ),
        .I3(\state_cs_reg[0]_1 ),
        .O(\buf1_ms_lvl[9]_i_3__0_n_0 ));
  FDRE \buf1_ms_lvl_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf1_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[0]_i_1__0_n_0 ),
        .Q(buf1_ms_lvl[0]),
        .R(\buf1_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf1_ms_lvl_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf1_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[1]_i_1__0_n_0 ),
        .Q(buf1_ms_lvl[1]),
        .R(\buf1_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf1_ms_lvl_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf1_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[2]_i_1__0_n_0 ),
        .Q(buf1_ms_lvl[2]),
        .R(\buf1_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf1_ms_lvl_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf1_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[3]_i_1__0_n_0 ),
        .Q(buf1_ms_lvl[3]),
        .R(\buf1_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf1_ms_lvl_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf1_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[4]_i_1__0_n_0 ),
        .Q(buf1_ms_lvl[4]),
        .R(\buf1_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf1_ms_lvl_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf1_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[5]_i_1__0_n_0 ),
        .Q(buf1_ms_lvl[5]),
        .R(\buf1_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf1_ms_lvl_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf1_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[6]_i_1__0_n_0 ),
        .Q(buf1_ms_lvl[6]),
        .R(\buf1_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf1_ms_lvl_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf1_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[7]_i_1__0_n_0 ),
        .Q(buf1_ms_lvl[7]),
        .R(\buf1_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf1_ms_lvl_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf1_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[8]_i_1__0_n_0 ),
        .Q(buf1_ms_lvl[8]),
        .R(\buf1_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf1_ms_lvl_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf1_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[9]_i_3__0_n_0 ),
        .Q(buf1_ms_lvl[9]),
        .R(\buf1_ms_lvl[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000EAAA)) 
    buf1_ovr_i_1__0
       (.I0(cfg_dma_sts_reg[2]),
        .I1(next_buf_full1),
        .I2(cfg_dma_sts_reg[0]),
        .I3(cfg_dma_sts_reg[4]),
        .I4(cfg_dma_ctrl_reg[2]),
        .I5(buf1_full_i_2_n_0),
        .O(buf1_ovr_i_1__0_n_0));
  FDRE buf1_ovr_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(buf1_ovr_i_1__0_n_0),
        .Q(cfg_dma_sts_reg[2]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000000000000EAAA)) 
    buf2_full_i_1__0
       (.I0(cfg_dma_sts_reg[1]),
        .I1(next_buf_full1),
        .I2(transf_end),
        .I3(cfg_dma_sts_reg[4]),
        .I4(buf1_full_i_2_n_0),
        .I5(cfg_dma_ctrl_reg[3]),
        .O(buf2_full_i_1__0_n_0));
  FDRE buf2_full_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(buf2_full_i_1__0_n_0),
        .Q(cfg_dma_sts_reg[1]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \buf2_missed_samp[0]_i_10__0 
       (.I0(buf2_missed_samp_reg[12]),
        .I1(buf2_missed_samp_reg[14]),
        .I2(buf2_missed_samp_reg[4]),
        .I3(buf2_missed_samp_reg[17]),
        .O(\buf2_missed_samp[0]_i_10__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \buf2_missed_samp[0]_i_11__0 
       (.I0(buf2_missed_samp_reg[15]),
        .I1(buf2_missed_samp_reg[10]),
        .I2(buf2_missed_samp_reg[7]),
        .I3(buf2_missed_samp_reg[6]),
        .I4(\buf2_missed_samp[0]_i_12__0_n_0 ),
        .O(\buf2_missed_samp[0]_i_11__0_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \buf2_missed_samp[0]_i_12__0 
       (.I0(buf2_missed_samp_reg[5]),
        .I1(buf2_missed_samp_reg[9]),
        .I2(buf2_missed_samp_reg[3]),
        .I3(buf2_missed_samp_reg[25]),
        .O(\buf2_missed_samp[0]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFFFFFFF)) 
    \buf2_missed_samp[0]_i_4__0 
       (.I0(\buf2_missed_samp[0]_i_7__0_n_0 ),
        .I1(buf2_missed_samp_reg[8]),
        .I2(buf2_missed_samp_reg[23]),
        .I3(buf2_missed_samp_reg[11]),
        .I4(buf2_missed_samp_reg[18]),
        .I5(\buf2_missed_samp[0]_i_8__0_n_0 ),
        .O(\buf2_missed_samp[0]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \buf2_missed_samp[0]_i_5__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(buf2_missed_samp_reg[28]),
        .I2(buf2_missed_samp_reg[29]),
        .I3(buf2_missed_samp_reg[31]),
        .I4(buf2_missed_samp_reg[30]),
        .I5(\buf1_missed_samp[0]_i_9__0_n_0 ),
        .O(\buf2_missed_samp[0]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \buf2_missed_samp[0]_i_6__0 
       (.I0(buf2_missed_samp_reg[0]),
        .O(\buf2_missed_samp[0]_i_6__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \buf2_missed_samp[0]_i_7__0 
       (.I0(buf2_missed_samp_reg[24]),
        .I1(buf2_missed_samp_reg[13]),
        .I2(buf2_missed_samp_reg[27]),
        .I3(buf2_missed_samp_reg[1]),
        .I4(\buf2_missed_samp[0]_i_9__0_n_0 ),
        .O(\buf2_missed_samp[0]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFFFFFFF)) 
    \buf2_missed_samp[0]_i_8__0 
       (.I0(\buf2_missed_samp[0]_i_10__0_n_0 ),
        .I1(buf2_missed_samp_reg[16]),
        .I2(buf2_missed_samp_reg[19]),
        .I3(buf2_missed_samp_reg[2]),
        .I4(buf2_missed_samp_reg[21]),
        .I5(\buf2_missed_samp[0]_i_11__0_n_0 ),
        .O(\buf2_missed_samp[0]_i_8__0_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \buf2_missed_samp[0]_i_9__0 
       (.I0(buf2_missed_samp_reg[20]),
        .I1(buf2_missed_samp_reg[22]),
        .I2(buf2_missed_samp_reg[26]),
        .I3(buf2_missed_samp_reg[0]),
        .O(\buf2_missed_samp[0]_i_9__0_n_0 ));
  FDRE \buf2_missed_samp_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[0]_i_3__0_n_7 ),
        .Q(buf2_missed_samp_reg[0]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[0]_i_3__0 
       (.CI(1'b0),
        .CO({\buf2_missed_samp_reg[0]_i_3__0_n_0 ,\buf2_missed_samp_reg[0]_i_3__0_n_1 ,\buf2_missed_samp_reg[0]_i_3__0_n_2 ,\buf2_missed_samp_reg[0]_i_3__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\buf2_missed_samp_reg[0]_i_3__0_n_4 ,\buf2_missed_samp_reg[0]_i_3__0_n_5 ,\buf2_missed_samp_reg[0]_i_3__0_n_6 ,\buf2_missed_samp_reg[0]_i_3__0_n_7 }),
        .S({buf2_missed_samp_reg[3:1],\buf2_missed_samp[0]_i_6__0_n_0 }));
  FDRE \buf2_missed_samp_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[8]_i_1__0_n_5 ),
        .Q(buf2_missed_samp_reg[10]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[8]_i_1__0_n_4 ),
        .Q(buf2_missed_samp_reg[11]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[12]_i_1__0_n_7 ),
        .Q(buf2_missed_samp_reg[12]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[12]_i_1__0 
       (.CI(\buf2_missed_samp_reg[8]_i_1__0_n_0 ),
        .CO({\buf2_missed_samp_reg[12]_i_1__0_n_0 ,\buf2_missed_samp_reg[12]_i_1__0_n_1 ,\buf2_missed_samp_reg[12]_i_1__0_n_2 ,\buf2_missed_samp_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf2_missed_samp_reg[12]_i_1__0_n_4 ,\buf2_missed_samp_reg[12]_i_1__0_n_5 ,\buf2_missed_samp_reg[12]_i_1__0_n_6 ,\buf2_missed_samp_reg[12]_i_1__0_n_7 }),
        .S(buf2_missed_samp_reg[15:12]));
  FDRE \buf2_missed_samp_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[12]_i_1__0_n_6 ),
        .Q(buf2_missed_samp_reg[13]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[12]_i_1__0_n_5 ),
        .Q(buf2_missed_samp_reg[14]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[12]_i_1__0_n_4 ),
        .Q(buf2_missed_samp_reg[15]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[16]_i_1__0_n_7 ),
        .Q(buf2_missed_samp_reg[16]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[16]_i_1__0 
       (.CI(\buf2_missed_samp_reg[12]_i_1__0_n_0 ),
        .CO({\buf2_missed_samp_reg[16]_i_1__0_n_0 ,\buf2_missed_samp_reg[16]_i_1__0_n_1 ,\buf2_missed_samp_reg[16]_i_1__0_n_2 ,\buf2_missed_samp_reg[16]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf2_missed_samp_reg[16]_i_1__0_n_4 ,\buf2_missed_samp_reg[16]_i_1__0_n_5 ,\buf2_missed_samp_reg[16]_i_1__0_n_6 ,\buf2_missed_samp_reg[16]_i_1__0_n_7 }),
        .S(buf2_missed_samp_reg[19:16]));
  FDRE \buf2_missed_samp_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[16]_i_1__0_n_6 ),
        .Q(buf2_missed_samp_reg[17]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[16]_i_1__0_n_5 ),
        .Q(buf2_missed_samp_reg[18]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[16]_i_1__0_n_4 ),
        .Q(buf2_missed_samp_reg[19]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[0]_i_3__0_n_6 ),
        .Q(buf2_missed_samp_reg[1]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[20]_i_1__0_n_7 ),
        .Q(buf2_missed_samp_reg[20]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[20]_i_1__0 
       (.CI(\buf2_missed_samp_reg[16]_i_1__0_n_0 ),
        .CO({\buf2_missed_samp_reg[20]_i_1__0_n_0 ,\buf2_missed_samp_reg[20]_i_1__0_n_1 ,\buf2_missed_samp_reg[20]_i_1__0_n_2 ,\buf2_missed_samp_reg[20]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf2_missed_samp_reg[20]_i_1__0_n_4 ,\buf2_missed_samp_reg[20]_i_1__0_n_5 ,\buf2_missed_samp_reg[20]_i_1__0_n_6 ,\buf2_missed_samp_reg[20]_i_1__0_n_7 }),
        .S(buf2_missed_samp_reg[23:20]));
  FDRE \buf2_missed_samp_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[20]_i_1__0_n_6 ),
        .Q(buf2_missed_samp_reg[21]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[20]_i_1__0_n_5 ),
        .Q(buf2_missed_samp_reg[22]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[20]_i_1__0_n_4 ),
        .Q(buf2_missed_samp_reg[23]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[24]_i_1__0_n_7 ),
        .Q(buf2_missed_samp_reg[24]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[24]_i_1__0 
       (.CI(\buf2_missed_samp_reg[20]_i_1__0_n_0 ),
        .CO({\buf2_missed_samp_reg[24]_i_1__0_n_0 ,\buf2_missed_samp_reg[24]_i_1__0_n_1 ,\buf2_missed_samp_reg[24]_i_1__0_n_2 ,\buf2_missed_samp_reg[24]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf2_missed_samp_reg[24]_i_1__0_n_4 ,\buf2_missed_samp_reg[24]_i_1__0_n_5 ,\buf2_missed_samp_reg[24]_i_1__0_n_6 ,\buf2_missed_samp_reg[24]_i_1__0_n_7 }),
        .S(buf2_missed_samp_reg[27:24]));
  FDRE \buf2_missed_samp_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[24]_i_1__0_n_6 ),
        .Q(buf2_missed_samp_reg[25]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[24]_i_1__0_n_5 ),
        .Q(buf2_missed_samp_reg[26]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[24]_i_1__0_n_4 ),
        .Q(buf2_missed_samp_reg[27]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[28]_i_1__0_n_7 ),
        .Q(buf2_missed_samp_reg[28]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[28]_i_1__0 
       (.CI(\buf2_missed_samp_reg[24]_i_1__0_n_0 ),
        .CO({\NLW_buf2_missed_samp_reg[28]_i_1__0_CO_UNCONNECTED [3],\buf2_missed_samp_reg[28]_i_1__0_n_1 ,\buf2_missed_samp_reg[28]_i_1__0_n_2 ,\buf2_missed_samp_reg[28]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf2_missed_samp_reg[28]_i_1__0_n_4 ,\buf2_missed_samp_reg[28]_i_1__0_n_5 ,\buf2_missed_samp_reg[28]_i_1__0_n_6 ,\buf2_missed_samp_reg[28]_i_1__0_n_7 }),
        .S(buf2_missed_samp_reg[31:28]));
  FDRE \buf2_missed_samp_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[28]_i_1__0_n_6 ),
        .Q(buf2_missed_samp_reg[29]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[0]_i_3__0_n_5 ),
        .Q(buf2_missed_samp_reg[2]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[28]_i_1__0_n_5 ),
        .Q(buf2_missed_samp_reg[30]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[28]_i_1__0_n_4 ),
        .Q(buf2_missed_samp_reg[31]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[0]_i_3__0_n_4 ),
        .Q(buf2_missed_samp_reg[3]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[4]_i_1__0_n_7 ),
        .Q(buf2_missed_samp_reg[4]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[4]_i_1__0 
       (.CI(\buf2_missed_samp_reg[0]_i_3__0_n_0 ),
        .CO({\buf2_missed_samp_reg[4]_i_1__0_n_0 ,\buf2_missed_samp_reg[4]_i_1__0_n_1 ,\buf2_missed_samp_reg[4]_i_1__0_n_2 ,\buf2_missed_samp_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf2_missed_samp_reg[4]_i_1__0_n_4 ,\buf2_missed_samp_reg[4]_i_1__0_n_5 ,\buf2_missed_samp_reg[4]_i_1__0_n_6 ,\buf2_missed_samp_reg[4]_i_1__0_n_7 }),
        .S(buf2_missed_samp_reg[7:4]));
  FDRE \buf2_missed_samp_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[4]_i_1__0_n_6 ),
        .Q(buf2_missed_samp_reg[5]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[4]_i_1__0_n_5 ),
        .Q(buf2_missed_samp_reg[6]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[4]_i_1__0_n_4 ),
        .Q(buf2_missed_samp_reg[7]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[8]_i_1__0_n_7 ),
        .Q(buf2_missed_samp_reg[8]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[8]_i_1__0 
       (.CI(\buf2_missed_samp_reg[4]_i_1__0_n_0 ),
        .CO({\buf2_missed_samp_reg[8]_i_1__0_n_0 ,\buf2_missed_samp_reg[8]_i_1__0_n_1 ,\buf2_missed_samp_reg[8]_i_1__0_n_2 ,\buf2_missed_samp_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf2_missed_samp_reg[8]_i_1__0_n_4 ,\buf2_missed_samp_reg[8]_i_1__0_n_5 ,\buf2_missed_samp_reg[8]_i_1__0_n_6 ,\buf2_missed_samp_reg[8]_i_1__0_n_7 }),
        .S(buf2_missed_samp_reg[11:8]));
  FDRE \buf2_missed_samp_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[8]_i_1__0_n_6 ),
        .Q(buf2_missed_samp_reg[9]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  LUT5 #(
    .INIT(32'hAAAA0EEE)) 
    \buf2_ms_lvl[9]_i_1__0 
       (.I0(buf1_full_i_2_n_0),
        .I1(req_buf_addr_sel_p1_reg_0),
        .I2(next_buf_full_reg_0),
        .I3(axi_last_r2),
        .I4(cfg_dma_sts_reg[4]),
        .O(\buf2_ms_lvl[9]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF00F8)) 
    \buf2_ms_lvl[9]_i_2__0 
       (.I0(next_buf_full_reg_0),
        .I1(axi_last_r2),
        .I2(req_buf_addr_sel_p1_reg_0),
        .I3(cfg_dma_sts_reg[4]),
        .I4(buf1_full_i_2_n_0),
        .O(\buf2_ms_lvl[9]_i_2__0_n_0 ));
  FDRE \buf2_ms_lvl_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf2_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[0]_i_1__0_n_0 ),
        .Q(buf2_ms_lvl[0]),
        .R(\buf2_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf2_ms_lvl_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf2_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[1]_i_1__0_n_0 ),
        .Q(buf2_ms_lvl[1]),
        .R(\buf2_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf2_ms_lvl_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf2_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[2]_i_1__0_n_0 ),
        .Q(buf2_ms_lvl[2]),
        .R(\buf2_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf2_ms_lvl_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf2_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[3]_i_1__0_n_0 ),
        .Q(buf2_ms_lvl[3]),
        .R(\buf2_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf2_ms_lvl_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf2_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[4]_i_1__0_n_0 ),
        .Q(buf2_ms_lvl[4]),
        .R(\buf2_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf2_ms_lvl_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf2_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[5]_i_1__0_n_0 ),
        .Q(buf2_ms_lvl[5]),
        .R(\buf2_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf2_ms_lvl_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf2_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[6]_i_1__0_n_0 ),
        .Q(buf2_ms_lvl[6]),
        .R(\buf2_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf2_ms_lvl_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf2_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[7]_i_1__0_n_0 ),
        .Q(buf2_ms_lvl[7]),
        .R(\buf2_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf2_ms_lvl_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf2_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[8]_i_1__0_n_0 ),
        .Q(buf2_ms_lvl[8]),
        .R(\buf2_ms_lvl[9]_i_1__0_n_0 ));
  FDRE \buf2_ms_lvl_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(\buf2_ms_lvl[9]_i_2__0_n_0 ),
        .D(\buf1_ms_lvl[9]_i_3__0_n_0 ),
        .Q(buf2_ms_lvl[9]),
        .R(\buf2_ms_lvl[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000AAEA)) 
    buf2_ovr_i_1__0
       (.I0(cfg_dma_sts_reg[3]),
        .I1(next_buf_full1),
        .I2(cfg_dma_sts_reg[1]),
        .I3(cfg_dma_sts_reg[4]),
        .I4(buf1_full_i_2_n_0),
        .I5(cfg_dma_ctrl_reg[3]),
        .O(buf2_ovr_i_1__0_n_0));
  FDRE buf2_ovr_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(buf2_ovr_i_1__0_n_0),
        .Q(cfg_dma_sts_reg[3]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    ctl_start_r_i_1__0
       (.I0(\reg_ctrl_reg[0]_0 ),
        .I1(\cfg_trig_mask_reg[1] ),
        .I2(bit_start_reg_0),
        .O(trig_out2));
  LUT6 #(
    .INIT(64'h2020FF0020200000)) 
    event_op_reset_i_10
       (.I0(event_op_reset_i_11_n_0),
        .I1(bram_addr_a[5]),
        .I2(bram_addr_a[6]),
        .I3(event_op_reset_i_9__0_n_0),
        .I4(bram_addr_a[4]),
        .I5(event_op_reset_i_12__0_n_0),
        .O(event_op_reset_i_10_n_0));
  LUT6 #(
    .INIT(64'h10F00010F0F0F0F0)) 
    event_op_reset_i_11
       (.I0(bram_addr_a[1]),
        .I1(bram_addr_a[0]),
        .I2(event_op_reset_i_7),
        .I3(bram_addr_a[2]),
        .I4(bram_addr_a[7]),
        .I5(bram_addr_a[3]),
        .O(event_op_reset_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT4 #(
    .INIT(16'h1001)) 
    event_op_reset_i_12__0
       (.I0(bram_addr_a[6]),
        .I1(bram_addr_a[2]),
        .I2(bram_addr_a[5]),
        .I3(bram_addr_a[3]),
        .O(event_op_reset_i_12__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF8000)) 
    event_op_reset_i_4
       (.I0(\s_axi_reg_araddr[4] ),
        .I1(bram_addr_a[3]),
        .I2(bram_addr_a[5]),
        .I3(bram_addr_a[2]),
        .I4(\s_axi_reg_araddr[7]_0 ),
        .I5(\s_axi_reg_araddr[6] ),
        .O(\s_axi_reg_araddr[3] ));
  LUT5 #(
    .INIT(32'h00040000)) 
    event_op_reset_i_5
       (.I0(bram_addr_a[4]),
        .I1(event_op_reset_i_7),
        .I2(bram_addr_a[1]),
        .I3(bram_addr_a[0]),
        .I4(bram_addr_a[6]),
        .O(\s_axi_reg_araddr[4] ));
  LUT6 #(
    .INIT(64'h5000040400000000)) 
    event_op_reset_i_6
       (.I0(bram_addr_a[7]),
        .I1(bram_addr_a[4]),
        .I2(bram_addr_a[2]),
        .I3(bram_addr_a[5]),
        .I4(bram_addr_a[3]),
        .I5(event_op_reset_i_9__0_n_0),
        .O(\s_axi_reg_araddr[7]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000222A)) 
    event_op_reset_i_7__0
       (.I0(event_op_reset_i_7),
        .I1(bram_addr_a[6]),
        .I2(bram_addr_a[4]),
        .I3(bram_addr_a[5]),
        .I4(bram_addr_a[7]),
        .I5(event_op_reset_i_10_n_0),
        .O(\s_axi_reg_araddr[6] ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    event_op_reset_i_9__0
       (.I0(bram_we_a[3]),
        .I1(bram_we_a[2]),
        .I2(bram_we_a[1]),
        .I3(bram_we_a[0]),
        .I4(bram_en_a),
        .I5(event_op_reset_i_10_0),
        .O(event_op_reset_i_9__0_n_0));
  FDRE fifo_dis_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(fifo_dis_reg_2),
        .Q(fifo_dis_reg_1),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \fifo_rst_cnt[0]_i_1__0 
       (.I0(fifo_rst_cnt_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \fifo_rst_cnt[1]_i_1__0 
       (.I0(fifo_rst_cnt_reg[0]),
        .I1(fifo_rst_cnt_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \fifo_rst_cnt[2]_i_1__0 
       (.I0(fifo_rst_cnt_reg[2]),
        .I1(fifo_rst_cnt_reg[1]),
        .I2(fifo_rst_cnt_reg[0]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \fifo_rst_cnt[3]_i_1__0 
       (.I0(fifo_rst_cnt_reg[3]),
        .I1(fifo_rst_cnt_reg[0]),
        .I2(fifo_rst_cnt_reg[1]),
        .I3(fifo_rst_cnt_reg[2]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \fifo_rst_cnt[4]_i_1__0 
       (.I0(fifo_rst_cnt_reg[4]),
        .I1(fifo_rst_cnt_reg[2]),
        .I2(fifo_rst_cnt_reg[1]),
        .I3(fifo_rst_cnt_reg[0]),
        .I4(fifo_rst_cnt_reg[3]),
        .O(p_0_in__0[4]));
  FDRE \fifo_rst_cnt_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(fifo_rst_cnt_reg[0]),
        .R(fifo_rst_cnt));
  FDRE \fifo_rst_cnt_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(fifo_rst_cnt_reg[1]),
        .R(fifo_rst_cnt));
  FDRE \fifo_rst_cnt_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(fifo_rst_cnt_reg[2]),
        .R(fifo_rst_cnt));
  FDRE \fifo_rst_cnt_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(fifo_rst_cnt_reg[3]),
        .R(fifo_rst_cnt));
  FDRE \fifo_rst_cnt_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(fifo_rst_cnt_reg[4]),
        .R(fifo_rst_cnt));
  LUT3 #(
    .INIT(8'hFD)) 
    fifo_rst_i_1__0
       (.I0(\state_cs_reg[0]_1 ),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[1]_0 ),
        .O(fifo_rst_cnt));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    fifo_rst_i_2__0
       (.I0(fifo_rst_cnt_reg[1]),
        .I1(fifo_rst_cnt_reg[0]),
        .I2(fifo_rst_cnt_reg[2]),
        .I3(fifo_rst_cnt_reg[4]),
        .I4(fifo_rst_cnt_reg[3]),
        .O(fifo_rst_i_2__0_n_0));
  FDRE fifo_rst_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(fifo_rst_i_2__0_n_0),
        .Q(rst),
        .R(fifo_rst_cnt));
  FDRE first_rst_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(first_rst_reg_0),
        .Q(first_rst),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1__10
       (.I0(\req_addr_reg[31]_0 [7]),
        .O(i__carry_i_1__10_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    \intr_cnt[0]_i_1__0 
       (.I0(intr_reg__0_0),
        .I1(intr_reg),
        .O(intr_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT2 #(
    .INIT(4'h1)) 
    intr_i_3__0
       (.I0(\state_cs_reg[1]_0 ),
        .I1(\state_cs_reg[0]_1 ),
        .O(intr_i_3__0_n_0));
  FDRE intr_reg__0
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_data_ctrl_n_16),
        .Q(intr_reg__0_0),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \m_axi_awlen[0]_i_1 
       (.I0(fifo_rd_data[0]),
        .O(m_axi_awlen0));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \m_axi_awlen[1]_i_1__0 
       (.I0(fifo_rd_data[0]),
        .I1(fifo_rd_data[1]),
        .O(\m_axi_awlen[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \m_axi_awlen[2]_i_1__0 
       (.I0(fifo_rd_data[1]),
        .I1(fifo_rd_data[0]),
        .I2(fifo_rd_data[2]),
        .O(\m_axi_awlen[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \m_axi_awlen[3]_i_1__0 
       (.I0(fifo_rd_data[2]),
        .I1(fifo_rd_data[0]),
        .I2(fifo_rd_data[1]),
        .I3(fifo_rd_data[3]),
        .O(\m_axi_awlen[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \m_axi_awlen[4]_i_1__0 
       (.I0(fifo_rd_data[3]),
        .I1(fifo_rd_data[1]),
        .I2(fifo_rd_data[0]),
        .I3(fifo_rd_data[2]),
        .I4(fifo_rd_data[4]),
        .O(\m_axi_awlen[4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \m_axi_awlen[5]_i_1__0 
       (.I0(fifo_rd_data[4]),
        .I1(fifo_rd_data[2]),
        .I2(fifo_rd_data[0]),
        .I3(fifo_rd_data[1]),
        .I4(fifo_rd_data[3]),
        .I5(fifo_rd_data[5]),
        .O(\m_axi_awlen[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \m_axi_awlen[6]_i_1__0 
       (.I0(\m_axi_awlen[7]_i_3_n_0 ),
        .I1(fifo_rd_data[6]),
        .O(\m_axi_awlen[6]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \m_axi_awlen[7]_i_1__0 
       (.I0(\state_cs_reg[0]_1 ),
        .I1(\state_cs_reg[1]_0 ),
        .I2(\state_cs_reg[2]_0 ),
        .O(\m_axi_awlen[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \m_axi_awlen[7]_i_2__0 
       (.I0(\m_axi_awlen[7]_i_3_n_0 ),
        .I1(fifo_rd_data[6]),
        .O(\m_axi_awlen[7]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \m_axi_awlen[7]_i_3 
       (.I0(fifo_rd_data[4]),
        .I1(fifo_rd_data[2]),
        .I2(fifo_rd_data[0]),
        .I3(fifo_rd_data[1]),
        .I4(fifo_rd_data[3]),
        .I5(fifo_rd_data[5]),
        .O(\m_axi_awlen[7]_i_3_n_0 ));
  FDRE \m_axi_awlen_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axi_awlen[7]_i_1__0_n_0 ),
        .D(m_axi_awlen0),
        .Q(m_axi_osc2_awlen[0]),
        .R(1'b0));
  FDRE \m_axi_awlen_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axi_awlen[7]_i_1__0_n_0 ),
        .D(\m_axi_awlen[1]_i_1__0_n_0 ),
        .Q(m_axi_osc2_awlen[1]),
        .R(1'b0));
  FDRE \m_axi_awlen_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axi_awlen[7]_i_1__0_n_0 ),
        .D(\m_axi_awlen[2]_i_1__0_n_0 ),
        .Q(m_axi_osc2_awlen[2]),
        .R(1'b0));
  FDRE \m_axi_awlen_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axi_awlen[7]_i_1__0_n_0 ),
        .D(\m_axi_awlen[3]_i_1__0_n_0 ),
        .Q(m_axi_osc2_awlen[3]),
        .R(1'b0));
  FDRE \m_axi_awlen_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axi_awlen[7]_i_1__0_n_0 ),
        .D(\m_axi_awlen[4]_i_1__0_n_0 ),
        .Q(m_axi_osc2_awlen[4]),
        .R(1'b0));
  FDRE \m_axi_awlen_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axi_awlen[7]_i_1__0_n_0 ),
        .D(\m_axi_awlen[5]_i_1__0_n_0 ),
        .Q(m_axi_osc2_awlen[5]),
        .R(1'b0));
  FDRE \m_axi_awlen_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axi_awlen[7]_i_1__0_n_0 ),
        .D(\m_axi_awlen[6]_i_1__0_n_0 ),
        .Q(m_axi_osc2_awlen[6]),
        .R(1'b0));
  FDRE \m_axi_awlen_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(\m_axi_awlen[7]_i_1__0_n_0 ),
        .D(\m_axi_awlen[7]_i_2__0_n_0 ),
        .Q(m_axi_osc2_awlen[7]),
        .R(1'b0));
  FDRE m_axi_awvalid_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(m_axi_awvalid_reg_0),
        .Q(m_axi_osc2_awvalid),
        .R(clear));
  FDRE mode_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(mode_reg_1),
        .Q(mode_reg_0),
        .R(clear));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry
       (.CI(1'b0),
        .CO({next_buf_full1_carry_n_0,next_buf_full1_carry_n_1,next_buf_full1_carry_n_2,next_buf_full1_carry_n_3}),
        .CYINIT(1'b1),
        .DI({next_buf_full1_carry_i_1__0_n_0,next_buf_full1_carry_i_2__0_n_0,next_buf_full1_carry_i_3__0_n_0,next_buf_full1_carry_i_4__0_n_0}),
        .O(NLW_next_buf_full1_carry_O_UNCONNECTED[3:0]),
        .S({next_buf_full1_carry_i_5__0_n_0,next_buf_full1_carry_i_6__0_n_0,next_buf_full1_carry_i_7__0_n_0,next_buf_full1_carry_i_8__0_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__0
       (.CI(next_buf_full1_carry_n_0),
        .CO({next_buf_full1_carry__0_n_0,next_buf_full1_carry__0_n_1,next_buf_full1_carry__0_n_2,next_buf_full1_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({next_buf_full1_carry__0_i_1__0_n_0,next_buf_full1_carry__0_i_2__0_n_0,next_buf_full1_carry__0_i_3__0_n_0,next_buf_full1_carry__0_i_4__0_n_0}),
        .O(NLW_next_buf_full1_carry__0_O_UNCONNECTED[3:0]),
        .S({next_buf_full1_carry__0_i_5__0_n_0,next_buf_full1_carry__0_i_6__0_n_0,next_buf_full1_carry__0_i_7__0_n_0,next_buf_full1_carry__0_i_8__0_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__0_i_10__0
       (.CI(next_buf_full1_carry_i_9__0_n_0),
        .CO({next_buf_full1_carry__0_i_10__0_n_0,next_buf_full1_carry__0_i_10__0_n_1,next_buf_full1_carry__0_i_10__0_n_2,next_buf_full1_carry__0_i_10__0_n_3}),
        .CYINIT(1'b0),
        .DI({\req_buf_addr_reg_n_0_[11] ,\req_buf_addr_reg_n_0_[10] ,\req_buf_addr_reg_n_0_[9] ,\req_buf_addr_reg_n_0_[8] }),
        .O(next_buf_full2[11:8]),
        .S({next_buf_full1_carry__0_i_15__0_n_0,next_buf_full1_carry__0_i_16__0_n_0,next_buf_full1_carry__0_i_17__0_n_0,next_buf_full1_carry__0_i_18__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_11__0
       (.I0(\req_buf_addr_reg_n_0_[15] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[15]),
        .O(next_buf_full1_carry__0_i_11__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_12__0
       (.I0(\req_buf_addr_reg_n_0_[14] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[14]),
        .O(next_buf_full1_carry__0_i_12__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_13__0
       (.I0(\req_buf_addr_reg_n_0_[13] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[13]),
        .O(next_buf_full1_carry__0_i_13__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_14__0
       (.I0(\req_buf_addr_reg_n_0_[12] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[12]),
        .O(next_buf_full1_carry__0_i_14__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_15__0
       (.I0(\req_buf_addr_reg_n_0_[11] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[11]),
        .O(next_buf_full1_carry__0_i_15__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_16__0
       (.I0(\req_buf_addr_reg_n_0_[10] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[10]),
        .O(next_buf_full1_carry__0_i_16__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_17__0
       (.I0(\req_buf_addr_reg_n_0_[9] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[9]),
        .O(next_buf_full1_carry__0_i_17__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_18__0
       (.I0(\req_buf_addr_reg_n_0_[8] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[8]),
        .O(next_buf_full1_carry__0_i_18__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__0_i_1__0
       (.I0(next_buf_full20_in[15]),
        .I1(next_buf_full2[15]),
        .I2(next_buf_full20_in[14]),
        .I3(next_buf_full2[14]),
        .O(next_buf_full1_carry__0_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__0_i_2__0
       (.I0(next_buf_full20_in[13]),
        .I1(next_buf_full2[13]),
        .I2(next_buf_full20_in[12]),
        .I3(next_buf_full2[12]),
        .O(next_buf_full1_carry__0_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__0_i_3__0
       (.I0(next_buf_full20_in[11]),
        .I1(next_buf_full2[11]),
        .I2(next_buf_full20_in[10]),
        .I3(next_buf_full2[10]),
        .O(next_buf_full1_carry__0_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__0_i_4__0
       (.I0(next_buf_full20_in[9]),
        .I1(next_buf_full2[9]),
        .I2(next_buf_full20_in[8]),
        .I3(next_buf_full2[8]),
        .O(next_buf_full1_carry__0_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__0_i_5__0
       (.I0(next_buf_full2[15]),
        .I1(next_buf_full20_in[15]),
        .I2(next_buf_full2[14]),
        .I3(next_buf_full20_in[14]),
        .O(next_buf_full1_carry__0_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__0_i_6__0
       (.I0(next_buf_full2[13]),
        .I1(next_buf_full20_in[13]),
        .I2(next_buf_full2[12]),
        .I3(next_buf_full20_in[12]),
        .O(next_buf_full1_carry__0_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__0_i_7__0
       (.I0(next_buf_full2[11]),
        .I1(next_buf_full20_in[11]),
        .I2(next_buf_full2[10]),
        .I3(next_buf_full20_in[10]),
        .O(next_buf_full1_carry__0_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__0_i_8__0
       (.I0(next_buf_full2[9]),
        .I1(next_buf_full20_in[9]),
        .I2(next_buf_full2[8]),
        .I3(next_buf_full20_in[8]),
        .O(next_buf_full1_carry__0_i_8__0_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__0_i_9__0
       (.CI(next_buf_full1_carry__0_i_10__0_n_0),
        .CO({next_buf_full1_carry__0_i_9__0_n_0,next_buf_full1_carry__0_i_9__0_n_1,next_buf_full1_carry__0_i_9__0_n_2,next_buf_full1_carry__0_i_9__0_n_3}),
        .CYINIT(1'b0),
        .DI({\req_buf_addr_reg_n_0_[15] ,\req_buf_addr_reg_n_0_[14] ,\req_buf_addr_reg_n_0_[13] ,\req_buf_addr_reg_n_0_[12] }),
        .O(next_buf_full2[15:12]),
        .S({next_buf_full1_carry__0_i_11__0_n_0,next_buf_full1_carry__0_i_12__0_n_0,next_buf_full1_carry__0_i_13__0_n_0,next_buf_full1_carry__0_i_14__0_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__1
       (.CI(next_buf_full1_carry__0_n_0),
        .CO({next_buf_full1_carry__1_n_0,next_buf_full1_carry__1_n_1,next_buf_full1_carry__1_n_2,next_buf_full1_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({next_buf_full1_carry__1_i_1__0_n_0,next_buf_full1_carry__1_i_2__0_n_0,next_buf_full1_carry__1_i_3__0_n_0,next_buf_full1_carry__1_i_4__0_n_0}),
        .O(NLW_next_buf_full1_carry__1_O_UNCONNECTED[3:0]),
        .S({next_buf_full1_carry__1_i_5__0_n_0,next_buf_full1_carry__1_i_6__0_n_0,next_buf_full1_carry__1_i_7__0_n_0,next_buf_full1_carry__1_i_8__0_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__1_i_10__0
       (.CI(next_buf_full1_carry__0_i_9__0_n_0),
        .CO({next_buf_full1_carry__1_i_10__0_n_0,next_buf_full1_carry__1_i_10__0_n_1,next_buf_full1_carry__1_i_10__0_n_2,next_buf_full1_carry__1_i_10__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\req_buf_addr_reg_n_0_[16] }),
        .O(next_buf_full2[19:16]),
        .S({\req_buf_addr_reg_n_0_[19] ,\req_buf_addr_reg_n_0_[18] ,\req_buf_addr_reg_n_0_[17] ,next_buf_full1_carry__1_i_11__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__1_i_11__0
       (.I0(\req_buf_addr_reg_n_0_[16] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[16]),
        .O(next_buf_full1_carry__1_i_11__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__1_i_1__0
       (.I0(next_buf_full20_in[23]),
        .I1(next_buf_full2[23]),
        .I2(next_buf_full20_in[22]),
        .I3(next_buf_full2[22]),
        .O(next_buf_full1_carry__1_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__1_i_2__0
       (.I0(next_buf_full20_in[21]),
        .I1(next_buf_full2[21]),
        .I2(next_buf_full20_in[20]),
        .I3(next_buf_full2[20]),
        .O(next_buf_full1_carry__1_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__1_i_3__0
       (.I0(next_buf_full20_in[19]),
        .I1(next_buf_full2[19]),
        .I2(next_buf_full20_in[18]),
        .I3(next_buf_full2[18]),
        .O(next_buf_full1_carry__1_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__1_i_4__0
       (.I0(next_buf_full20_in[17]),
        .I1(next_buf_full2[17]),
        .I2(next_buf_full20_in[16]),
        .I3(next_buf_full2[16]),
        .O(next_buf_full1_carry__1_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__1_i_5__0
       (.I0(next_buf_full2[23]),
        .I1(next_buf_full20_in[23]),
        .I2(next_buf_full2[22]),
        .I3(next_buf_full20_in[22]),
        .O(next_buf_full1_carry__1_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__1_i_6__0
       (.I0(next_buf_full2[21]),
        .I1(next_buf_full20_in[21]),
        .I2(next_buf_full2[20]),
        .I3(next_buf_full20_in[20]),
        .O(next_buf_full1_carry__1_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__1_i_7__0
       (.I0(next_buf_full2[19]),
        .I1(next_buf_full20_in[19]),
        .I2(next_buf_full2[18]),
        .I3(next_buf_full20_in[18]),
        .O(next_buf_full1_carry__1_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__1_i_8__0
       (.I0(next_buf_full2[17]),
        .I1(next_buf_full20_in[17]),
        .I2(next_buf_full2[16]),
        .I3(next_buf_full20_in[16]),
        .O(next_buf_full1_carry__1_i_8__0_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__1_i_9__0
       (.CI(next_buf_full1_carry__1_i_10__0_n_0),
        .CO({next_buf_full1_carry__1_i_9__0_n_0,next_buf_full1_carry__1_i_9__0_n_1,next_buf_full1_carry__1_i_9__0_n_2,next_buf_full1_carry__1_i_9__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full2[23:20]),
        .S({\req_buf_addr_reg_n_0_[23] ,\req_buf_addr_reg_n_0_[22] ,\req_buf_addr_reg_n_0_[21] ,\req_buf_addr_reg_n_0_[20] }));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__2
       (.CI(next_buf_full1_carry__1_n_0),
        .CO({next_buf_full1,next_buf_full1_carry__2_n_1,next_buf_full1_carry__2_n_2,next_buf_full1_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({next_buf_full1_carry__2_i_1__0_n_0,next_buf_full1_carry__2_i_2__0_n_0,next_buf_full1_carry__2_i_3__0_n_0,next_buf_full1_carry__2_i_4__0_n_0}),
        .O(NLW_next_buf_full1_carry__2_O_UNCONNECTED[3:0]),
        .S({next_buf_full1_carry__2_i_5__0_n_0,next_buf_full1_carry__2_i_6__0_n_0,next_buf_full1_carry__2_i_7__0_n_0,next_buf_full1_carry__2_i_8__0_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__2_i_10__0
       (.CI(next_buf_full1_carry__1_i_9__0_n_0),
        .CO({next_buf_full1_carry__2_i_10__0_n_0,next_buf_full1_carry__2_i_10__0_n_1,next_buf_full1_carry__2_i_10__0_n_2,next_buf_full1_carry__2_i_10__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full2[27:24]),
        .S({\req_buf_addr_reg_n_0_[27] ,\req_buf_addr_reg_n_0_[26] ,\req_buf_addr_reg_n_0_[25] ,\req_buf_addr_reg_n_0_[24] }));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__2_i_1__0
       (.I0(next_buf_full20_in[31]),
        .I1(next_buf_full2[31]),
        .I2(next_buf_full20_in[30]),
        .I3(next_buf_full2[30]),
        .O(next_buf_full1_carry__2_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__2_i_2__0
       (.I0(next_buf_full20_in[29]),
        .I1(next_buf_full2[29]),
        .I2(next_buf_full20_in[28]),
        .I3(next_buf_full2[28]),
        .O(next_buf_full1_carry__2_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__2_i_3__0
       (.I0(next_buf_full20_in[27]),
        .I1(next_buf_full2[27]),
        .I2(next_buf_full20_in[26]),
        .I3(next_buf_full2[26]),
        .O(next_buf_full1_carry__2_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__2_i_4__0
       (.I0(next_buf_full20_in[25]),
        .I1(next_buf_full2[25]),
        .I2(next_buf_full20_in[24]),
        .I3(next_buf_full2[24]),
        .O(next_buf_full1_carry__2_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__2_i_5__0
       (.I0(next_buf_full2[31]),
        .I1(next_buf_full20_in[31]),
        .I2(next_buf_full2[30]),
        .I3(next_buf_full20_in[30]),
        .O(next_buf_full1_carry__2_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__2_i_6__0
       (.I0(next_buf_full2[29]),
        .I1(next_buf_full20_in[29]),
        .I2(next_buf_full2[28]),
        .I3(next_buf_full20_in[28]),
        .O(next_buf_full1_carry__2_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__2_i_7__0
       (.I0(next_buf_full2[27]),
        .I1(next_buf_full20_in[27]),
        .I2(next_buf_full2[26]),
        .I3(next_buf_full20_in[26]),
        .O(next_buf_full1_carry__2_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__2_i_8__0
       (.I0(next_buf_full2[25]),
        .I1(next_buf_full20_in[25]),
        .I2(next_buf_full2[24]),
        .I3(next_buf_full20_in[24]),
        .O(next_buf_full1_carry__2_i_8__0_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__2_i_9__0
       (.CI(next_buf_full1_carry__2_i_10__0_n_0),
        .CO({NLW_next_buf_full1_carry__2_i_9__0_CO_UNCONNECTED[3],next_buf_full1_carry__2_i_9__0_n_1,next_buf_full1_carry__2_i_9__0_n_2,next_buf_full1_carry__2_i_9__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full2[31:28]),
        .S({\req_buf_addr_reg_n_0_[31] ,\req_buf_addr_reg_n_0_[30] ,\req_buf_addr_reg_n_0_[29] ,\req_buf_addr_reg_n_0_[28] }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry_i_10__0
       (.CI(1'b0),
        .CO({next_buf_full1_carry_i_10__0_n_0,next_buf_full1_carry_i_10__0_n_1,next_buf_full1_carry_i_10__0_n_2,next_buf_full1_carry_i_10__0_n_3}),
        .CYINIT(1'b0),
        .DI({\req_buf_addr_reg_n_0_[3] ,\req_buf_addr_reg_n_0_[2] ,\req_buf_addr_reg_n_0_[1] ,\req_buf_addr_reg_n_0_[0] }),
        .O(next_buf_full2[3:0]),
        .S({next_buf_full1_carry_i_15__0_n_0,next_buf_full1_carry_i_16__0_n_0,next_buf_full1_carry_i_17__0_n_0,next_buf_full1_carry_i_18__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_11__0
       (.I0(\req_buf_addr_reg_n_0_[7] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[7]),
        .O(next_buf_full1_carry_i_11__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_12__0
       (.I0(\req_buf_addr_reg_n_0_[6] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[6]),
        .O(next_buf_full1_carry_i_12__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_13__0
       (.I0(\req_buf_addr_reg_n_0_[5] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[5]),
        .O(next_buf_full1_carry_i_13__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_14__0
       (.I0(\req_buf_addr_reg_n_0_[4] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[4]),
        .O(next_buf_full1_carry_i_14__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_15__0
       (.I0(\req_buf_addr_reg_n_0_[3] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[3]),
        .O(next_buf_full1_carry_i_15__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_16__0
       (.I0(\req_buf_addr_reg_n_0_[2] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[2]),
        .O(next_buf_full1_carry_i_16__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_17__0
       (.I0(\req_buf_addr_reg_n_0_[1] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[1]),
        .O(next_buf_full1_carry_i_17__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_18__0
       (.I0(\req_buf_addr_reg_n_0_[0] ),
        .I1(next_buf_full1_carry__1_i_10__0_0[0]),
        .O(next_buf_full1_carry_i_18__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry_i_1__0
       (.I0(next_buf_full20_in[7]),
        .I1(next_buf_full2[7]),
        .I2(next_buf_full20_in[6]),
        .I3(next_buf_full2[6]),
        .O(next_buf_full1_carry_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry_i_2__0
       (.I0(\req_addr_reg[31]_0 [5]),
        .I1(next_buf_full2[5]),
        .I2(\req_addr_reg[31]_0 [4]),
        .I3(next_buf_full2[4]),
        .O(next_buf_full1_carry_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry_i_3__0
       (.I0(\req_addr_reg[31]_0 [3]),
        .I1(next_buf_full2[3]),
        .I2(\req_addr_reg[31]_0 [2]),
        .I3(next_buf_full2[2]),
        .O(next_buf_full1_carry_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry_i_4__0
       (.I0(\req_addr_reg[31]_0 [1]),
        .I1(next_buf_full2[1]),
        .I2(\req_addr_reg[31]_0 [0]),
        .I3(next_buf_full2[0]),
        .O(next_buf_full1_carry_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry_i_5__0
       (.I0(next_buf_full2[7]),
        .I1(next_buf_full20_in[7]),
        .I2(next_buf_full2[6]),
        .I3(next_buf_full20_in[6]),
        .O(next_buf_full1_carry_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry_i_6__0
       (.I0(next_buf_full2[5]),
        .I1(\req_addr_reg[31]_0 [5]),
        .I2(next_buf_full2[4]),
        .I3(\req_addr_reg[31]_0 [4]),
        .O(next_buf_full1_carry_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry_i_7__0
       (.I0(next_buf_full2[3]),
        .I1(\req_addr_reg[31]_0 [3]),
        .I2(next_buf_full2[2]),
        .I3(\req_addr_reg[31]_0 [2]),
        .O(next_buf_full1_carry_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry_i_8__0
       (.I0(next_buf_full2[1]),
        .I1(\req_addr_reg[31]_0 [1]),
        .I2(next_buf_full2[0]),
        .I3(\req_addr_reg[31]_0 [0]),
        .O(next_buf_full1_carry_i_8__0_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry_i_9__0
       (.CI(next_buf_full1_carry_i_10__0_n_0),
        .CO({next_buf_full1_carry_i_9__0_n_0,next_buf_full1_carry_i_9__0_n_1,next_buf_full1_carry_i_9__0_n_2,next_buf_full1_carry_i_9__0_n_3}),
        .CYINIT(1'b0),
        .DI({\req_buf_addr_reg_n_0_[7] ,\req_buf_addr_reg_n_0_[6] ,\req_buf_addr_reg_n_0_[5] ,\req_buf_addr_reg_n_0_[4] }),
        .O(next_buf_full2[7:4]),
        .S({next_buf_full1_carry_i_11__0_n_0,next_buf_full1_carry_i_12__0_n_0,next_buf_full1_carry_i_13__0_n_0,next_buf_full1_carry_i_14__0_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \next_buf_full2_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\next_buf_full2_inferred__0/i__carry_n_0 ,\next_buf_full2_inferred__0/i__carry_n_1 ,\next_buf_full2_inferred__0/i__carry_n_2 ,\next_buf_full2_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\req_addr_reg[31]_0 [7],1'b0}),
        .O(next_buf_full20_in[9:6]),
        .S({\req_addr_reg[31]_0 [9:8],i__carry_i_1__10_n_0,\req_addr_reg[31]_0 [6]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \next_buf_full2_inferred__0/i__carry__0 
       (.CI(\next_buf_full2_inferred__0/i__carry_n_0 ),
        .CO({\next_buf_full2_inferred__0/i__carry__0_n_0 ,\next_buf_full2_inferred__0/i__carry__0_n_1 ,\next_buf_full2_inferred__0/i__carry__0_n_2 ,\next_buf_full2_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full20_in[13:10]),
        .S(\req_addr_reg[31]_0 [13:10]));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \next_buf_full2_inferred__0/i__carry__1 
       (.CI(\next_buf_full2_inferred__0/i__carry__0_n_0 ),
        .CO({\next_buf_full2_inferred__0/i__carry__1_n_0 ,\next_buf_full2_inferred__0/i__carry__1_n_1 ,\next_buf_full2_inferred__0/i__carry__1_n_2 ,\next_buf_full2_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full20_in[17:14]),
        .S(\req_addr_reg[31]_0 [17:14]));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \next_buf_full2_inferred__0/i__carry__2 
       (.CI(\next_buf_full2_inferred__0/i__carry__1_n_0 ),
        .CO({\next_buf_full2_inferred__0/i__carry__2_n_0 ,\next_buf_full2_inferred__0/i__carry__2_n_1 ,\next_buf_full2_inferred__0/i__carry__2_n_2 ,\next_buf_full2_inferred__0/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full20_in[21:18]),
        .S(\req_addr_reg[31]_0 [21:18]));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \next_buf_full2_inferred__0/i__carry__3 
       (.CI(\next_buf_full2_inferred__0/i__carry__2_n_0 ),
        .CO({\next_buf_full2_inferred__0/i__carry__3_n_0 ,\next_buf_full2_inferred__0/i__carry__3_n_1 ,\next_buf_full2_inferred__0/i__carry__3_n_2 ,\next_buf_full2_inferred__0/i__carry__3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full20_in[25:22]),
        .S(\req_addr_reg[31]_0 [25:22]));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \next_buf_full2_inferred__0/i__carry__4 
       (.CI(\next_buf_full2_inferred__0/i__carry__3_n_0 ),
        .CO({\next_buf_full2_inferred__0/i__carry__4_n_0 ,\next_buf_full2_inferred__0/i__carry__4_n_1 ,\next_buf_full2_inferred__0/i__carry__4_n_2 ,\next_buf_full2_inferred__0/i__carry__4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full20_in[29:26]),
        .S(\req_addr_reg[31]_0 [29:26]));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \next_buf_full2_inferred__0/i__carry__5 
       (.CI(\next_buf_full2_inferred__0/i__carry__4_n_0 ),
        .CO({\NLW_next_buf_full2_inferred__0/i__carry__5_CO_UNCONNECTED [3:1],\next_buf_full2_inferred__0/i__carry__5_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_next_buf_full2_inferred__0/i__carry__5_O_UNCONNECTED [3:2],next_buf_full20_in[31:30]}),
        .S({1'b0,1'b0,\req_addr_reg[31]_0 [31:30]}));
  LUT6 #(
    .INIT(64'h0000000010101110)) 
    next_buf_full_i_1__0
       (.I0(buf1_full_i_2_n_0),
        .I1(cfg_dma_ctrl_reg[2]),
        .I2(next_buf_full_reg_0),
        .I3(next_buf_full1),
        .I4(\req_buf_addr[31]_i_4__0_n_0 ),
        .I5(cfg_dma_ctrl_reg[3]),
        .O(next_buf_full_i_1__0_n_0));
  FDRE next_buf_full_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(next_buf_full_i_1__0_n_0),
        .Q(next_buf_full_reg_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00000020)) 
    \reg_ctrl[0]_i_1__0 
       (.I0(bram_wrdata_a[0]),
        .I1(\reg_ctrl[9]_i_2__0_n_0 ),
        .I2(\s_axi_reg_araddr[3] ),
        .I3(bram_addr_a[1]),
        .I4(bram_addr_a[7]),
        .O(\reg_ctrl[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h00000020)) 
    \reg_ctrl[1]_i_1__0 
       (.I0(bram_wrdata_a[1]),
        .I1(\reg_ctrl[9]_i_2__0_n_0 ),
        .I2(\s_axi_reg_araddr[3] ),
        .I3(bram_addr_a[1]),
        .I4(bram_addr_a[7]),
        .O(\reg_ctrl[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFEF002000200020)) 
    \reg_ctrl[2]_i_1__0 
       (.I0(bram_wrdata_a[2]),
        .I1(\reg_ctrl[9]_i_2__0_n_0 ),
        .I2(\s_axi_reg_araddr[3] ),
        .I3(\s_axi_reg_araddr[7] ),
        .I4(\reg_ctrl[3]_i_2__0_n_0 ),
        .I5(cfg_dma_ctrl_reg[2]),
        .O(\reg_ctrl[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \reg_ctrl[31]_i_1__0 
       (.I0(\s_axi_reg_araddr[7] ),
        .I1(\s_axi_reg_araddr[3] ),
        .I2(\reg_ctrl[31]_i_3_n_0 ),
        .I3(\reg_ctrl_reg[31]_0 ),
        .I4(bram_addr_a[0]),
        .I5(bram_addr_a[5]),
        .O(reg_ctrl122_out));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \reg_ctrl[31]_i_2__0 
       (.I0(bram_addr_a[7]),
        .I1(bram_addr_a[1]),
        .O(\s_axi_reg_araddr[7] ));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \reg_ctrl[31]_i_3 
       (.I0(bram_addr_a[3]),
        .I1(bram_addr_a[6]),
        .O(\reg_ctrl[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFEF002000200020)) 
    \reg_ctrl[3]_i_1__0 
       (.I0(bram_wrdata_a[3]),
        .I1(\reg_ctrl[9]_i_2__0_n_0 ),
        .I2(\s_axi_reg_araddr[3] ),
        .I3(\s_axi_reg_araddr[7] ),
        .I4(\reg_ctrl[3]_i_2__0_n_0 ),
        .I5(cfg_dma_ctrl_reg[3]),
        .O(\reg_ctrl[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \reg_ctrl[3]_i_2__0 
       (.I0(\state_cs_reg[1]_0 ),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .O(\reg_ctrl[3]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h00000020)) 
    \reg_ctrl[4]_i_1__0 
       (.I0(bram_wrdata_a[4]),
        .I1(\reg_ctrl[9]_i_2__0_n_0 ),
        .I2(\s_axi_reg_araddr[3] ),
        .I3(bram_addr_a[1]),
        .I4(bram_addr_a[7]),
        .O(\reg_ctrl[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h00000020)) 
    \reg_ctrl[8]_i_1__0 
       (.I0(bram_wrdata_a[8]),
        .I1(\reg_ctrl[9]_i_2__0_n_0 ),
        .I2(\s_axi_reg_araddr[3] ),
        .I3(bram_addr_a[1]),
        .I4(bram_addr_a[7]),
        .O(\reg_ctrl[8]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \reg_ctrl[9]_i_1__0 
       (.I0(bram_wrdata_a[9]),
        .I1(\reg_ctrl[9]_i_2__0_n_0 ),
        .I2(\s_axi_reg_araddr[3] ),
        .I3(bram_addr_a[1]),
        .I4(bram_addr_a[7]),
        .O(\reg_ctrl[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEFFFFFFFFFF)) 
    \reg_ctrl[9]_i_2__0 
       (.I0(bram_addr_a[5]),
        .I1(bram_addr_a[0]),
        .I2(bram_addr_a[2]),
        .I3(bram_addr_a[4]),
        .I4(bram_addr_a[3]),
        .I5(bram_addr_a[6]),
        .O(\reg_ctrl[9]_i_2__0_n_0 ));
  FDRE \reg_ctrl_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\reg_ctrl[0]_i_1__0_n_0 ),
        .Q(\reg_ctrl_reg[0]_0 ),
        .R(clear));
  FDRE \reg_ctrl_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[10]),
        .Q(cfg_dma_ctrl_reg[10]),
        .R(clear));
  FDRE \reg_ctrl_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[11]),
        .Q(cfg_dma_ctrl_reg[11]),
        .R(clear));
  FDRE \reg_ctrl_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[12]),
        .Q(cfg_dma_ctrl_reg[12]),
        .R(clear));
  FDRE \reg_ctrl_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[13]),
        .Q(cfg_dma_ctrl_reg[13]),
        .R(clear));
  FDRE \reg_ctrl_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[14]),
        .Q(cfg_dma_ctrl_reg[14]),
        .R(clear));
  FDRE \reg_ctrl_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[15]),
        .Q(cfg_dma_ctrl_reg[15]),
        .R(clear));
  FDRE \reg_ctrl_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[16]),
        .Q(cfg_dma_ctrl_reg[16]),
        .R(clear));
  FDRE \reg_ctrl_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[17]),
        .Q(cfg_dma_ctrl_reg[17]),
        .R(clear));
  FDRE \reg_ctrl_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[18]),
        .Q(cfg_dma_ctrl_reg[18]),
        .R(clear));
  FDRE \reg_ctrl_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[19]),
        .Q(cfg_dma_ctrl_reg[19]),
        .R(clear));
  FDRE \reg_ctrl_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\reg_ctrl[1]_i_1__0_n_0 ),
        .Q(cfg_dma_ctrl_reg[1]),
        .R(clear));
  FDRE \reg_ctrl_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[20]),
        .Q(cfg_dma_ctrl_reg[20]),
        .R(clear));
  FDRE \reg_ctrl_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[21]),
        .Q(cfg_dma_ctrl_reg[21]),
        .R(clear));
  FDRE \reg_ctrl_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[22]),
        .Q(cfg_dma_ctrl_reg[22]),
        .R(clear));
  FDRE \reg_ctrl_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[23]),
        .Q(cfg_dma_ctrl_reg[23]),
        .R(clear));
  FDRE \reg_ctrl_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[24]),
        .Q(cfg_dma_ctrl_reg[24]),
        .R(clear));
  FDRE \reg_ctrl_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[25]),
        .Q(cfg_dma_ctrl_reg[25]),
        .R(clear));
  FDRE \reg_ctrl_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[26]),
        .Q(cfg_dma_ctrl_reg[26]),
        .R(clear));
  FDRE \reg_ctrl_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[27]),
        .Q(cfg_dma_ctrl_reg[27]),
        .R(clear));
  FDRE \reg_ctrl_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[28]),
        .Q(cfg_dma_ctrl_reg[28]),
        .R(clear));
  FDRE \reg_ctrl_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[29]),
        .Q(cfg_dma_ctrl_reg[29]),
        .R(clear));
  FDRE \reg_ctrl_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\reg_ctrl[2]_i_1__0_n_0 ),
        .Q(cfg_dma_ctrl_reg[2]),
        .R(clear));
  FDRE \reg_ctrl_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[30]),
        .Q(cfg_dma_ctrl_reg[30]),
        .R(clear));
  FDRE \reg_ctrl_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[31]),
        .Q(cfg_dma_ctrl_reg[31]),
        .R(clear));
  FDRE \reg_ctrl_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\reg_ctrl[3]_i_1__0_n_0 ),
        .Q(cfg_dma_ctrl_reg[3]),
        .R(clear));
  FDRE \reg_ctrl_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\reg_ctrl[4]_i_1__0_n_0 ),
        .Q(cfg_dma_ctrl_reg[4]),
        .R(clear));
  FDRE \reg_ctrl_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[5]),
        .Q(cfg_dma_ctrl_reg[5]),
        .R(clear));
  FDRE \reg_ctrl_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[6]),
        .Q(cfg_dma_ctrl_reg[6]),
        .R(clear));
  FDRE \reg_ctrl_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(reg_ctrl122_out),
        .D(bram_wrdata_a[7]),
        .Q(cfg_dma_ctrl_reg[7]),
        .R(clear));
  FDRE \reg_ctrl_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\reg_ctrl[8]_i_1__0_n_0 ),
        .Q(\reg_ctrl_reg[9]_0 [0]),
        .R(clear));
  FDRE \reg_ctrl_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\reg_ctrl[9]_i_1__0_n_0 ),
        .Q(\reg_ctrl_reg[9]_0 [1]),
        .R(clear));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[0]_i_10__0 
       (.I0(cfg_dma_sts_reg[0]),
        .I1(\req_buf_addr_reg[31]_1 [0]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(\req_buf_addr_reg[31]_0 [0]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .I5(next_buf_full1_carry__1_i_10__0_0[0]),
        .O(\reg_rd_data[0]_i_10__0_n_0 ));
  LUT4 #(
    .INIT(16'hBABF)) 
    \reg_rd_data[0]_i_11__0 
       (.I0(\reg_rd_data_reg[2]_0 ),
        .I1(\req_addr_reg[31]_0 [0]),
        .I2(\reg_rd_data[0]_i_5__0_0 ),
        .I3(\reg_rd_data[17]_i_5__0_0 [0]),
        .O(\reg_rd_data[0]_i_11__0_n_0 ));
  LUT6 #(
    .INIT(64'h1D1DFF0C1D1D0C0C)) 
    \reg_rd_data[0]_i_1__0 
       (.I0(\reg_rd_data_reg[0]_i_2__0_n_0 ),
        .I1(\reg_rd_data_reg[31] ),
        .I2(\reg_rd_data_reg[0] ),
        .I3(\reg_rd_data_reg[0]_0 ),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data_reg[2]_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[0]_i_5__0 
       (.I0(\reg_rd_data[0]_i_9__0_n_0 ),
        .I1(\reg_rd_data[0]_i_10__0_n_0 ),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(\reg_rd_data[0]_i_11__0_n_0 ),
        .I4(\reg_rd_data_reg[17] ),
        .I5(\reg_rd_data_reg[0]_i_2__0_0 ),
        .O(\reg_rd_data[0]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[0]_i_9__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [0]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [0]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(\reg_rd_data[0]_i_5__0_1 ),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .I5(\reg_ctrl_reg[0]_0 ),
        .O(\reg_rd_data[0]_i_9__0_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[10]_i_12__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [10]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [10]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(cfg_dma_ctrl_reg[10]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .O(\reg_rd_data[10]_i_12__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_17 
       (.I0(buf1_missed_samp_reg[7]),
        .I1(buf1_ms_lvl[7]),
        .O(\reg_rd_data[10]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_18__0 
       (.I0(buf1_missed_samp_reg[6]),
        .I1(buf1_ms_lvl[6]),
        .O(\reg_rd_data[10]_i_18__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_19__0 
       (.I0(buf1_missed_samp_reg[5]),
        .I1(buf1_ms_lvl[5]),
        .O(\reg_rd_data[10]_i_19__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEEFEAAAAEEFE)) 
    \reg_rd_data[10]_i_1__0 
       (.I0(\reg_rd_data_reg[10] ),
        .I1(\reg_rd_data[10]_i_3__0_n_0 ),
        .I2(\reg_rd_data_reg[8] ),
        .I3(\reg_rd_data_reg[10]_0 ),
        .I4(\reg_rd_data_reg[31] ),
        .I5(\reg_rd_data_reg[10]_1 ),
        .O(D[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_20__0 
       (.I0(buf1_missed_samp_reg[4]),
        .I1(buf1_ms_lvl[4]),
        .O(\reg_rd_data[10]_i_20__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_21__0 
       (.I0(buf1_missed_samp_reg[9]),
        .I1(buf1_ms_lvl[9]),
        .O(\reg_rd_data[10]_i_21__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_22__0 
       (.I0(buf1_missed_samp_reg[8]),
        .I1(buf1_ms_lvl[8]),
        .O(\reg_rd_data[10]_i_22__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_23__0 
       (.I0(buf2_missed_samp_reg[7]),
        .I1(buf2_ms_lvl[7]),
        .O(\reg_rd_data[10]_i_23__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_24 
       (.I0(buf2_missed_samp_reg[6]),
        .I1(buf2_ms_lvl[6]),
        .O(\reg_rd_data[10]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_25__0 
       (.I0(buf2_missed_samp_reg[5]),
        .I1(buf2_ms_lvl[5]),
        .O(\reg_rd_data[10]_i_25__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_26__0 
       (.I0(buf2_missed_samp_reg[4]),
        .I1(buf2_ms_lvl[4]),
        .O(\reg_rd_data[10]_i_26__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_27__0 
       (.I0(buf2_missed_samp_reg[9]),
        .I1(buf2_ms_lvl[9]),
        .O(\reg_rd_data[10]_i_27__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_28__0 
       (.I0(buf2_missed_samp_reg[8]),
        .I1(buf2_ms_lvl[8]),
        .O(\reg_rd_data[10]_i_28__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \reg_rd_data[10]_i_3__0 
       (.I0(\reg_rd_data_reg[10]_2 ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data[10]_i_7__0_n_0 ),
        .I3(\reg_rd_data_reg[17]_0 ),
        .I4(\reg_rd_data_reg[10]_i_8__0_n_0 ),
        .I5(\reg_rd_data_reg[4] ),
        .O(\reg_rd_data[10]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[10]_i_7__0 
       (.I0(\reg_rd_data[10]_i_3__0_1 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [10]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data[17]_i_5__0_0 [10]),
        .O(\reg_rd_data[10]_i_7__0_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[11]_i_11__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [11]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [11]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(cfg_dma_ctrl_reg[11]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .O(\reg_rd_data[11]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[11]_i_9__0 
       (.I0(\reg_rd_data_reg[11]_i_5__0_0 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [11]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data[17]_i_5__0_0 [11]),
        .O(\reg_rd_data[11]_i_9__0_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[12]_i_11__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [12]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [12]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(cfg_dma_ctrl_reg[12]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .O(\reg_rd_data[12]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[12]_i_9__0 
       (.I0(\reg_rd_data_reg[12]_i_5__0_0 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [12]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data[17]_i_5__0_0 [12]),
        .O(\reg_rd_data[12]_i_9__0_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[13]_i_11__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [13]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [13]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(cfg_dma_ctrl_reg[13]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .O(\reg_rd_data[13]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[13]_i_9__0 
       (.I0(\reg_rd_data_reg[13]_i_5__0_0 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [13]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data[17]_i_5__0_0 [13]),
        .O(\reg_rd_data[13]_i_9__0_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[14]_i_11__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [14]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [14]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(cfg_dma_ctrl_reg[14]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .O(\reg_rd_data[14]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[14]_i_9__0 
       (.I0(\reg_rd_data_reg[14]_i_5__0_0 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [14]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data[17]_i_5__0_0 [14]),
        .O(\reg_rd_data[14]_i_9__0_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[15]_i_13__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [15]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [15]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(cfg_dma_ctrl_reg[15]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .O(\reg_rd_data[15]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \reg_rd_data[15]_i_4__0 
       (.I0(\reg_rd_data_reg[15] ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data[15]_i_8__0_n_0 ),
        .I3(\reg_rd_data_reg[17]_0 ),
        .I4(\reg_rd_data_reg[15]_i_9__0_n_0 ),
        .I5(\reg_rd_data_reg[4] ),
        .O(\cfg_filt_coeff_bb_reg[15] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[15]_i_8__0 
       (.I0(\reg_rd_data[15]_i_4__0_0 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [15]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data[17]_i_5__0_0 [15]),
        .O(\reg_rd_data[15]_i_8__0_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_rd_data[16]_i_12 
       (.I0(\req_addr_reg[31]_0 [16]),
        .I1(\reg_rd_data[0]_i_5__0_0 ),
        .I2(\reg_rd_data[17]_i_5__0_0 [16]),
        .O(\reg_rd_data[16]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF30AA00AA)) 
    \reg_rd_data[16]_i_1__0 
       (.I0(\reg_rd_data[16]_i_2__0_n_0 ),
        .I1(\reg_rd_data_reg[16] ),
        .I2(\reg_rd_data_reg[16]_0 ),
        .I3(\reg_rd_data_reg[31] ),
        .I4(\reg_rd_data_reg[16]_1 ),
        .I5(\reg_rd_data_reg[16]_2 ),
        .O(D[7]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \reg_rd_data[16]_i_2__0 
       (.I0(\reg_rd_data_reg[16]_3 ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data_reg[4] ),
        .I3(\reg_rd_data[16]_i_7__0_n_0 ),
        .I4(\reg_rd_data_reg[17]_0 ),
        .I5(\reg_rd_data[16]_i_8__0_n_0 ),
        .O(\reg_rd_data[16]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h003033BB00300088)) 
    \reg_rd_data[16]_i_7__0 
       (.I0(cfg_dma_ctrl_reg[16]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\req_buf_addr_reg[31]_1 [16]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[16]_i_2__0_2 ),
        .O(\reg_rd_data[16]_i_7__0_n_0 ));
  LUT5 #(
    .INIT(32'hD1DDD111)) 
    \reg_rd_data[16]_i_8__0 
       (.I0(\reg_rd_data[16]_i_2__0_0 ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data[16]_i_2__0_1 ),
        .I3(\reg_rd_data_reg[2]_0 ),
        .I4(\reg_rd_data[16]_i_12_n_0 ),
        .O(\reg_rd_data[16]_i_8__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[17]_i_5__0 
       (.I0(\reg_rd_data[17]_i_8__0_n_0 ),
        .I1(\reg_rd_data_reg[17]_0 ),
        .I2(\reg_rd_data[17]_i_9__0_n_0 ),
        .I3(\reg_rd_data_reg[17] ),
        .I4(\reg_rd_data_reg[17]_1 ),
        .O(\reg_ctrl_reg[17]_0 ));
  LUT6 #(
    .INIT(64'h003033BB00300088)) 
    \reg_rd_data[17]_i_8__0 
       (.I0(cfg_dma_ctrl_reg[17]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\req_buf_addr_reg[31]_1 [17]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[17]_i_5__0_2 ),
        .O(\reg_rd_data[17]_i_8__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[17]_i_9__0 
       (.I0(\reg_rd_data[17]_i_5__0_1 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [17]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data[17]_i_5__0_0 [17]),
        .O(\reg_rd_data[17]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[18]_i_1__0 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[18]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[0]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[0]),
        .O(D[8]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \reg_rd_data[18]_i_2__0 
       (.I0(\reg_rd_data_reg[18] ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data_reg[4] ),
        .I3(\reg_rd_data[18]_i_4__0_n_0 ),
        .I4(\reg_rd_data_reg[17]_0 ),
        .I5(\reg_rd_data[18]_i_5__0_n_0 ),
        .O(\reg_rd_data[18]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h003033BB00300088)) 
    \reg_rd_data[18]_i_4__0 
       (.I0(cfg_dma_ctrl_reg[18]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\req_buf_addr_reg[31]_1 [18]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[18]_i_2__0_0 ),
        .O(\reg_rd_data[18]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \reg_rd_data[18]_i_5__0 
       (.I0(\reg_rd_data[18]_i_2__0_1 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [18]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[17] ),
        .I5(\reg_rd_data[18]_i_2__0_2 ),
        .O(\reg_rd_data[18]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[19]_i_1__0 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[19]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[1]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[1]),
        .O(D[9]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \reg_rd_data[19]_i_2__0 
       (.I0(\reg_rd_data_reg[19] ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data_reg[4] ),
        .I3(\reg_rd_data[19]_i_4__0_n_0 ),
        .I4(\reg_rd_data_reg[17]_0 ),
        .I5(\reg_rd_data[19]_i_5__0_n_0 ),
        .O(\reg_rd_data[19]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h003033BB00300088)) 
    \reg_rd_data[19]_i_4__0 
       (.I0(cfg_dma_ctrl_reg[19]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\req_buf_addr_reg[31]_1 [19]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[19]_i_2__0_0 ),
        .O(\reg_rd_data[19]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \reg_rd_data[19]_i_5__0 
       (.I0(\reg_rd_data[19]_i_2__0_1 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [19]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[17] ),
        .I5(\reg_rd_data[19]_i_2__0_2 ),
        .O(\reg_rd_data[19]_i_5__0_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \reg_rd_data[1]_i_10__0 
       (.I0(\reg_rd_data[17]_i_5__0_0 [1]),
        .I1(\reg_rd_data_reg[2]_i_13_0 ),
        .I2(\req_addr_reg[31]_0 [1]),
        .I3(\reg_rd_data_reg[2]_0 ),
        .O(\reg_rd_data[1]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[1]_i_5 
       (.I0(\reg_rd_data[1]_i_8__0_n_0 ),
        .I1(\reg_rd_data[1]_i_9__0_n_0 ),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(\reg_rd_data[1]_i_10__0_n_0 ),
        .I4(\reg_rd_data_reg[17] ),
        .I5(\reg_rd_data[1]_i_2__0 ),
        .O(\cfg_calib_offset_reg[1] ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[1]_i_8__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [1]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [1]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(cfg_dma_ctrl_reg[1]),
        .I4(\reg_rd_data_reg[2]_i_13_0 ),
        .O(\reg_rd_data[1]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[1]_i_9__0 
       (.I0(cfg_dma_sts_reg[1]),
        .I1(\req_buf_addr_reg[31]_1 [1]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(\req_buf_addr_reg[31]_0 [1]),
        .I4(\reg_rd_data_reg[2]_i_13_0 ),
        .I5(next_buf_full1_carry__1_i_10__0_0[1]),
        .O(\reg_rd_data[1]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[20]_i_1__0 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[20]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[2]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[2]),
        .O(D[10]));
  LUT6 #(
    .INIT(64'h0000B8B800FFB8B8)) 
    \reg_rd_data[20]_i_2__0 
       (.I0(\reg_rd_data[20]_i_3__0_n_0 ),
        .I1(\reg_rd_data_reg[17]_0 ),
        .I2(\reg_rd_data[20]_i_4__0_n_0 ),
        .I3(\reg_rd_data_reg[20] ),
        .I4(\reg_rd_data_reg[4] ),
        .I5(\reg_rd_data_reg[17] ),
        .O(\reg_rd_data[20]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h03003B3B03000808)) 
    \reg_rd_data[20]_i_3__0 
       (.I0(cfg_dma_ctrl_reg[20]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data_reg[2]_i_13_0 ),
        .I3(\req_buf_addr_reg[31]_1 [20]),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[20]_i_2__0_0 ),
        .O(\reg_rd_data[20]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \reg_rd_data[20]_i_4__0 
       (.I0(\reg_rd_data[20]_i_2__0_1 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [20]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[17] ),
        .I5(\reg_rd_data[20]_i_2__0_2 ),
        .O(\reg_rd_data[20]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[21]_i_1__0 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[21]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[3]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[3]),
        .O(D[11]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \reg_rd_data[21]_i_2__0 
       (.I0(\reg_rd_data_reg[21] ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data_reg[4] ),
        .I3(\reg_rd_data[21]_i_4__0_n_0 ),
        .I4(\reg_rd_data_reg[17]_0 ),
        .I5(\reg_rd_data[21]_i_5__0_n_0 ),
        .O(\reg_rd_data[21]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h003033BB00300088)) 
    \reg_rd_data[21]_i_4__0 
       (.I0(cfg_dma_ctrl_reg[21]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\req_buf_addr_reg[31]_1 [21]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[21]_i_2__0_0 ),
        .O(\reg_rd_data[21]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \reg_rd_data[21]_i_5__0 
       (.I0(\reg_rd_data[21]_i_2__0_1 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [21]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[17] ),
        .I5(\reg_rd_data[21]_i_2__0_2 ),
        .O(\reg_rd_data[21]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[22]_i_1__0 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[22]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[4]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[4]),
        .O(D[12]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \reg_rd_data[22]_i_2__0 
       (.I0(\reg_rd_data_reg[22] ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data_reg[4] ),
        .I3(\reg_rd_data[22]_i_4__0_n_0 ),
        .I4(\reg_rd_data_reg[17]_0 ),
        .I5(\reg_rd_data[22]_i_5__0_n_0 ),
        .O(\reg_rd_data[22]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h003033BB00300088)) 
    \reg_rd_data[22]_i_4__0 
       (.I0(cfg_dma_ctrl_reg[22]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\req_buf_addr_reg[31]_1 [22]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[22]_i_2__0_2 ),
        .O(\reg_rd_data[22]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \reg_rd_data[22]_i_5__0 
       (.I0(\reg_rd_data[22]_i_2__0_0 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [22]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[17] ),
        .I5(\reg_rd_data[22]_i_2__0_1 ),
        .O(\reg_rd_data[22]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[23]_i_1__0 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[23]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[5]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[5]),
        .O(D[13]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \reg_rd_data[23]_i_2__0 
       (.I0(\reg_rd_data_reg[23] ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data_reg[4] ),
        .I3(\reg_rd_data[23]_i_4__0_n_0 ),
        .I4(\reg_rd_data_reg[17]_0 ),
        .I5(\reg_rd_data[23]_i_5__0_n_0 ),
        .O(\reg_rd_data[23]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h03003B3B03000808)) 
    \reg_rd_data[23]_i_4__0 
       (.I0(cfg_dma_ctrl_reg[23]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data_reg[2]_i_13_0 ),
        .I3(\req_buf_addr_reg[31]_1 [23]),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[23]_i_2__0_0 ),
        .O(\reg_rd_data[23]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \reg_rd_data[23]_i_5__0 
       (.I0(\reg_rd_data[23]_i_2__0_1 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [23]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[17] ),
        .I5(\reg_rd_data[23]_i_2__0_2 ),
        .O(\reg_rd_data[23]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[24]_i_1__0 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[24]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[6]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[6]),
        .O(D[14]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \reg_rd_data[24]_i_2__0 
       (.I0(\reg_rd_data_reg[24] ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data_reg[4] ),
        .I3(\reg_rd_data[24]_i_4__0_n_0 ),
        .I4(\reg_rd_data_reg[17]_0 ),
        .I5(\reg_rd_data[24]_i_5__0_n_0 ),
        .O(\reg_rd_data[24]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h003033BB00300088)) 
    \reg_rd_data[24]_i_4__0 
       (.I0(cfg_dma_ctrl_reg[24]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\req_buf_addr_reg[31]_1 [24]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[24]_i_2__0_0 ),
        .O(\reg_rd_data[24]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \reg_rd_data[24]_i_5__0 
       (.I0(\reg_rd_data[24]_i_2__0_1 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [24]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[17] ),
        .I5(\reg_rd_data[24]_i_2__0_2 ),
        .O(\reg_rd_data[24]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[25]_i_1__0 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[25]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[7]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[7]),
        .O(D[15]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \reg_rd_data[25]_i_2__0 
       (.I0(\reg_rd_data_reg[25] ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data_reg[4] ),
        .I3(\reg_rd_data[25]_i_4__0_n_0 ),
        .I4(\reg_rd_data_reg[17]_0 ),
        .I5(\reg_rd_data[25]_i_5__0_n_0 ),
        .O(\reg_rd_data[25]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h003033BB00300088)) 
    \reg_rd_data[25]_i_4__0 
       (.I0(cfg_dma_ctrl_reg[25]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\req_buf_addr_reg[31]_1 [25]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[25]_i_2__0_1 ),
        .O(\reg_rd_data[25]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0C0C0A0A00F00)) 
    \reg_rd_data[25]_i_5__0 
       (.I0(\reg_rd_data[25]_i_2__0_0 ),
        .I1(\req_addr_reg[31]_0 [25]),
        .I2(\reg_rd_data_reg[17] ),
        .I3(intr_cnt_reg[0]),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data_reg[2]_i_13_0 ),
        .O(\reg_rd_data[25]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[26]_i_1__0 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[26]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[8]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[8]),
        .O(D[16]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \reg_rd_data[26]_i_2__0 
       (.I0(\reg_rd_data_reg[26] ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data_reg[4] ),
        .I3(\reg_rd_data[26]_i_4__0_n_0 ),
        .I4(\reg_rd_data_reg[17]_0 ),
        .I5(\reg_rd_data[26]_i_5__0_n_0 ),
        .O(\reg_rd_data[26]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h003033BB00300088)) 
    \reg_rd_data[26]_i_4__0 
       (.I0(cfg_dma_ctrl_reg[26]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\req_buf_addr_reg[31]_1 [26]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[26]_i_2__0_1 ),
        .O(\reg_rd_data[26]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0C0C0A0A00F00)) 
    \reg_rd_data[26]_i_5__0 
       (.I0(\reg_rd_data[26]_i_2__0_0 ),
        .I1(\req_addr_reg[31]_0 [26]),
        .I2(\reg_rd_data_reg[17] ),
        .I3(intr_cnt_reg[1]),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data_reg[2]_i_13_0 ),
        .O(\reg_rd_data[26]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[27]_i_1__0 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[27]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[9]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[9]),
        .O(D[17]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \reg_rd_data[27]_i_2__0 
       (.I0(\reg_rd_data_reg[27] ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data_reg[4] ),
        .I3(\reg_rd_data[27]_i_4__0_n_0 ),
        .I4(\reg_rd_data_reg[17]_0 ),
        .I5(\reg_rd_data[27]_i_5__0_n_0 ),
        .O(\reg_rd_data[27]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h003033BB00300088)) 
    \reg_rd_data[27]_i_4__0 
       (.I0(cfg_dma_ctrl_reg[27]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\req_buf_addr_reg[31]_1 [27]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[27]_i_2__0_1 ),
        .O(\reg_rd_data[27]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0C0C0A0A00F00)) 
    \reg_rd_data[27]_i_5__0 
       (.I0(\reg_rd_data[27]_i_2__0_0 ),
        .I1(\req_addr_reg[31]_0 [27]),
        .I2(\reg_rd_data_reg[17] ),
        .I3(intr_cnt_reg[2]),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data_reg[2]_i_13_0 ),
        .O(\reg_rd_data[27]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[28]_i_1__0 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[28]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[10]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[10]),
        .O(D[18]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \reg_rd_data[28]_i_2__0 
       (.I0(\reg_rd_data_reg[28] ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data_reg[4] ),
        .I3(\reg_rd_data[28]_i_4__0_n_0 ),
        .I4(\reg_rd_data_reg[17]_0 ),
        .I5(\reg_rd_data[28]_i_5__0_n_0 ),
        .O(\reg_rd_data[28]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h003033BB00300088)) 
    \reg_rd_data[28]_i_4__0 
       (.I0(cfg_dma_ctrl_reg[28]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\req_buf_addr_reg[31]_1 [28]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[28]_i_2__0_1 ),
        .O(\reg_rd_data[28]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0C0C0A0A00F00)) 
    \reg_rd_data[28]_i_5__0 
       (.I0(\reg_rd_data[28]_i_2__0_0 ),
        .I1(\req_addr_reg[31]_0 [28]),
        .I2(\reg_rd_data_reg[17] ),
        .I3(intr_cnt_reg[3]),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data_reg[2]_i_13_0 ),
        .O(\reg_rd_data[28]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[29]_i_1__0 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[29]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[11]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[11]),
        .O(D[19]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \reg_rd_data[29]_i_2__0 
       (.I0(\reg_rd_data_reg[29] ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data_reg[4] ),
        .I3(\reg_rd_data[29]_i_4__0_n_0 ),
        .I4(\reg_rd_data_reg[17]_0 ),
        .I5(\reg_rd_data[29]_i_5__0_n_0 ),
        .O(\reg_rd_data[29]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h003033BB00300088)) 
    \reg_rd_data[29]_i_4__0 
       (.I0(cfg_dma_ctrl_reg[29]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\req_buf_addr_reg[31]_1 [29]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[29]_i_2__0_1 ),
        .O(\reg_rd_data[29]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0C0C0A0A00F00)) 
    \reg_rd_data[29]_i_5__0 
       (.I0(\reg_rd_data[29]_i_2__0_0 ),
        .I1(\req_addr_reg[31]_0 [29]),
        .I2(\reg_rd_data_reg[17] ),
        .I3(intr_cnt_reg[4]),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data_reg[2]_i_13_0 ),
        .O(\reg_rd_data[29]_i_5__0_n_0 ));
  LUT5 #(
    .INIT(32'h5F305F3F)) 
    \reg_rd_data[2]_i_11__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [2]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [2]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(cfg_dma_ctrl_reg[2]),
        .O(\reg_rd_data[2]_i_11__0_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[2]_i_12__0 
       (.I0(cfg_dma_sts_reg[2]),
        .I1(\req_buf_addr_reg[31]_1 [2]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(\req_buf_addr_reg[31]_0 [2]),
        .I4(\reg_rd_data_reg[2]_i_13_0 ),
        .I5(next_buf_full1_carry__1_i_10__0_0[2]),
        .O(\reg_rd_data[2]_i_12__0_n_0 ));
  LUT3 #(
    .INIT(8'h47)) 
    \reg_rd_data[2]_i_18 
       (.I0(\req_addr_reg[31]_0 [2]),
        .I1(\reg_rd_data_reg[2]_i_13_0 ),
        .I2(\reg_rd_data[17]_i_5__0_0 [2]),
        .O(\reg_rd_data[2]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h4747FF0047470000)) 
    \reg_rd_data[2]_i_1__0 
       (.I0(\reg_rd_data_reg[2]_1 ),
        .I1(\reg_rd_data_reg[31] ),
        .I2(\reg_rd_data_reg[2]_i_3__0_n_0 ),
        .I3(\reg_rd_data_reg[2]_0 ),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data_reg[2]_2 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[2]_i_7__0 
       (.I0(\reg_rd_data[2]_i_11__0_n_0 ),
        .I1(\reg_rd_data[2]_i_12__0_n_0 ),
        .I2(\reg_rd_data_reg[17]_0 ),
        .I3(\reg_rd_data_reg[2]_i_13_n_0 ),
        .I4(\reg_rd_data_reg[17] ),
        .I5(\reg_rd_data_reg[2]_i_3__0_0 ),
        .O(\reg_rd_data[2]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[30]_i_1__0 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[30]_i_2__0_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[12]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[12]),
        .O(D[20]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \reg_rd_data[30]_i_2__0 
       (.I0(\reg_rd_data_reg[30] ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data_reg[4] ),
        .I3(\reg_rd_data[30]_i_4__0_n_0 ),
        .I4(\reg_rd_data_reg[17]_0 ),
        .I5(\reg_rd_data[30]_i_5__0_n_0 ),
        .O(\reg_rd_data[30]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h003033BB00300088)) 
    \reg_rd_data[30]_i_4__0 
       (.I0(cfg_dma_ctrl_reg[30]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\req_buf_addr_reg[31]_1 [30]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[30]_i_2__0_1 ),
        .O(\reg_rd_data[30]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0C0C0A0A00F00)) 
    \reg_rd_data[30]_i_5__0 
       (.I0(\reg_rd_data[30]_i_2__0_0 ),
        .I1(\req_addr_reg[31]_0 [30]),
        .I2(\reg_rd_data_reg[17] ),
        .I3(intr_cnt_reg[5]),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data_reg[2]_i_13_0 ),
        .O(\reg_rd_data[30]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0C0C0A0A00F00)) 
    \reg_rd_data[31]_i_10__0 
       (.I0(\reg_rd_data[31]_i_3__0_0 ),
        .I1(\req_addr_reg[31]_0 [31]),
        .I2(\reg_rd_data_reg[17] ),
        .I3(intr_cnt_reg[6]),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data_reg[2]_i_13_0 ),
        .O(\reg_rd_data[31]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[31]_i_1__0 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[31]_i_3__0_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[13]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[13]),
        .O(D[21]));
  LUT6 #(
    .INIT(64'h4F404F4F4F404040)) 
    \reg_rd_data[31]_i_3__0 
       (.I0(\reg_rd_data_reg[17] ),
        .I1(\reg_rd_data_reg[31]_2 ),
        .I2(\reg_rd_data_reg[4] ),
        .I3(\reg_rd_data[31]_i_9__0_n_0 ),
        .I4(\reg_rd_data_reg[17]_0 ),
        .I5(\reg_rd_data[31]_i_10__0_n_0 ),
        .O(\reg_rd_data[31]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h003033BB00300088)) 
    \reg_rd_data[31]_i_9__0 
       (.I0(cfg_dma_ctrl_reg[31]),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\req_buf_addr_reg[31]_1 [31]),
        .I3(\reg_rd_data_reg[2]_i_13_0 ),
        .I4(\reg_rd_data_reg[2]_0 ),
        .I5(\reg_rd_data[31]_i_3__0_1 ),
        .O(\reg_rd_data[31]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[3]_i_15__0 
       (.I0(cfg_dma_sts_reg[3]),
        .I1(\req_buf_addr_reg[31]_1 [3]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(\req_buf_addr_reg[31]_0 [3]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .I5(next_buf_full1_carry__1_i_10__0_0[3]),
        .O(\reg_rd_data[3]_i_15__0_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[3]_i_16__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [3]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [3]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(cfg_dma_ctrl_reg[3]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .O(\reg_rd_data[3]_i_16__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[3]_i_19 
       (.I0(buf1_missed_samp_reg[3]),
        .I1(buf1_ms_lvl[3]),
        .O(\reg_rd_data[3]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFD000D00)) 
    \reg_rd_data[3]_i_1__0 
       (.I0(\reg_rd_data[3]_i_2__0_n_0 ),
        .I1(\reg_rd_data_reg[3]_0 ),
        .I2(\reg_rd_data_reg[31] ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\reg_rd_data_reg[3]_1 ),
        .I5(\reg_rd_data_reg[3]_2 ),
        .O(D[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[3]_i_20 
       (.I0(buf1_missed_samp_reg[2]),
        .I1(buf1_ms_lvl[2]),
        .O(\reg_rd_data[3]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[3]_i_21 
       (.I0(buf1_missed_samp_reg[1]),
        .I1(buf1_ms_lvl[1]),
        .O(\reg_rd_data[3]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[3]_i_22 
       (.I0(buf1_missed_samp_reg[0]),
        .I1(buf1_ms_lvl[0]),
        .O(\reg_rd_data[3]_i_22_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[3]_i_23 
       (.I0(buf2_missed_samp_reg[3]),
        .I1(buf2_ms_lvl[3]),
        .O(\reg_rd_data[3]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[3]_i_24 
       (.I0(buf2_missed_samp_reg[2]),
        .I1(buf2_ms_lvl[2]),
        .O(\reg_rd_data[3]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[3]_i_25 
       (.I0(buf2_missed_samp_reg[1]),
        .I1(buf2_ms_lvl[1]),
        .O(\reg_rd_data[3]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[3]_i_26 
       (.I0(buf2_missed_samp_reg[0]),
        .I1(buf2_ms_lvl[0]),
        .O(\reg_rd_data[3]_i_26_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAABFBFFFFABFB)) 
    \reg_rd_data[3]_i_2__0 
       (.I0(\reg_rd_data_reg[4] ),
        .I1(\reg_rd_data_reg[3] ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data[3]_i_8_n_0 ),
        .I4(\reg_rd_data_reg[17]_0 ),
        .I5(\reg_rd_data_reg[3]_i_9__0_n_0 ),
        .O(\reg_rd_data[3]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[3]_i_8 
       (.I0(\reg_rd_data[3]_i_2__0_0 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [3]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data[17]_i_5__0_0 [3]),
        .O(\reg_rd_data[3]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[4]_i_11__0 
       (.I0(\reg_rd_data_reg[4]_i_6__0_0 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [4]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data[17]_i_5__0_0 [4]),
        .O(\reg_rd_data[4]_i_11__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[4]_i_12__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(\req_buf_addr_reg[31]_1 [4]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(\req_buf_addr_reg[31]_0 [4]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .I5(next_buf_full1_carry__1_i_10__0_0[4]),
        .O(\reg_rd_data[4]_i_12__0_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[4]_i_13__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [4]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [4]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(cfg_dma_ctrl_reg[4]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .O(\reg_rd_data[4]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE200E2)) 
    \reg_rd_data[4]_i_1__0 
       (.I0(\reg_rd_data_reg[4]_i_2__0_n_0 ),
        .I1(\reg_rd_data_reg[4] ),
        .I2(\reg_rd_data_reg[4]_0 ),
        .I3(\reg_rd_data_reg[31] ),
        .I4(\reg_rd_data_reg[4]_1 ),
        .I5(\reg_rd_data_reg[4]_2 ),
        .O(D[3]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[5]_i_11__0 
       (.I0(\reg_rd_data_reg[5]_i_6__0_0 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [5]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data[17]_i_5__0_0 [5]),
        .O(\reg_rd_data[5]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[5]_i_13__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [5]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [5]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(cfg_dma_ctrl_reg[5]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .O(\reg_rd_data[5]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE200E2)) 
    \reg_rd_data[5]_i_1__0 
       (.I0(\reg_rd_data_reg[5]_i_2__0_n_0 ),
        .I1(\reg_rd_data_reg[4] ),
        .I2(\reg_rd_data_reg[5] ),
        .I3(\reg_rd_data_reg[31] ),
        .I4(\reg_rd_data_reg[5]_0 ),
        .I5(\reg_rd_data_reg[5]_1 ),
        .O(D[4]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[6]_i_11__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [6]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [6]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(cfg_dma_ctrl_reg[6]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .O(\reg_rd_data[6]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[6]_i_9__0 
       (.I0(\reg_rd_data_reg[6]_i_5__0_0 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [6]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data[17]_i_5__0_0 [6]),
        .O(\reg_rd_data[6]_i_9__0_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[7]_i_11__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [7]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [7]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(cfg_dma_ctrl_reg[7]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .O(\reg_rd_data[7]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[7]_i_9__0 
       (.I0(\reg_rd_data_reg[7]_i_5__0_0 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [7]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data[17]_i_5__0_0 [7]),
        .O(\reg_rd_data[7]_i_9__0_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[8]_i_12__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [8]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [8]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(\reg_ctrl_reg[9]_0 [0]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .O(\reg_rd_data[8]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEEFEAAAAEEFE)) 
    \reg_rd_data[8]_i_1__0 
       (.I0(\reg_rd_data_reg[8]_0 ),
        .I1(\reg_rd_data[8]_i_3__0_n_0 ),
        .I2(\reg_rd_data_reg[8] ),
        .I3(\reg_rd_data_reg[8]_1 ),
        .I4(\reg_rd_data_reg[31] ),
        .I5(\reg_rd_data_reg[8]_2 ),
        .O(D[5]));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \reg_rd_data[8]_i_3__0 
       (.I0(\reg_rd_data_reg[8]_3 ),
        .I1(\reg_rd_data_reg[17] ),
        .I2(\reg_rd_data[8]_i_7__0_n_0 ),
        .I3(\reg_rd_data_reg[17]_0 ),
        .I4(\reg_rd_data_reg[8]_i_8__0_n_0 ),
        .I5(\reg_rd_data_reg[4] ),
        .O(\reg_rd_data[8]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[8]_i_7__0 
       (.I0(\reg_rd_data[8]_i_3__0_1 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [8]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data[17]_i_5__0_0 [8]),
        .O(\reg_rd_data[8]_i_7__0_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[9]_i_11__0 
       (.I0(\reg_rd_data_reg[15]_i_9__0_0 [9]),
        .I1(\reg_rd_data_reg[15]_i_9__0_1 [9]),
        .I2(\reg_rd_data_reg[2]_0 ),
        .I3(\reg_ctrl_reg[9]_0 [1]),
        .I4(\reg_rd_data[0]_i_5__0_0 ),
        .O(\reg_rd_data[9]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[9]_i_9__0 
       (.I0(\reg_rd_data_reg[9]_i_5__0_0 ),
        .I1(\reg_rd_data_reg[2]_0 ),
        .I2(\req_addr_reg[31]_0 [9]),
        .I3(\reg_rd_data[0]_i_5__0_0 ),
        .I4(\reg_rd_data[17]_i_5__0_0 [9]),
        .O(\reg_rd_data[9]_i_9__0_n_0 ));
  MUXF7 \reg_rd_data_reg[0]_i_2__0 
       (.I0(\reg_rd_data[0]_i_5__0_n_0 ),
        .I1(\reg_rd_data_reg[0]_1 ),
        .O(\reg_rd_data_reg[0]_i_2__0_n_0 ),
        .S(\reg_rd_data_reg[4] ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[10]_i_13__0 
       (.CI(\reg_rd_data_reg[3]_i_17_n_0 ),
        .CO({\reg_rd_data_reg[10]_i_13__0_n_0 ,\reg_rd_data_reg[10]_i_13__0_n_1 ,\reg_rd_data_reg[10]_i_13__0_n_2 ,\reg_rd_data_reg[10]_i_13__0_n_3 }),
        .CYINIT(1'b0),
        .DI(buf1_missed_samp_reg[7:4]),
        .O(missed_samps_ch1[7:4]),
        .S({\reg_rd_data[10]_i_17_n_0 ,\reg_rd_data[10]_i_18__0_n_0 ,\reg_rd_data[10]_i_19__0_n_0 ,\reg_rd_data[10]_i_20__0_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[10]_i_14__0 
       (.CI(\reg_rd_data_reg[10]_i_13__0_n_0 ),
        .CO({\reg_rd_data_reg[10]_i_14__0_n_0 ,\reg_rd_data_reg[10]_i_14__0_n_1 ,\reg_rd_data_reg[10]_i_14__0_n_2 ,\reg_rd_data_reg[10]_i_14__0_n_3 }),
        .CYINIT(1'b0),
        .DI(buf1_missed_samp_reg[11:8]),
        .O(missed_samps_ch1[11:8]),
        .S({buf1_missed_samp_reg[11:10],\reg_rd_data[10]_i_21__0_n_0 ,\reg_rd_data[10]_i_22__0_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[10]_i_15__0 
       (.CI(\reg_rd_data_reg[3]_i_18_n_0 ),
        .CO({\reg_rd_data_reg[10]_i_15__0_n_0 ,\reg_rd_data_reg[10]_i_15__0_n_1 ,\reg_rd_data_reg[10]_i_15__0_n_2 ,\reg_rd_data_reg[10]_i_15__0_n_3 }),
        .CYINIT(1'b0),
        .DI(buf2_missed_samp_reg[7:4]),
        .O(missed_samps_ch2[7:4]),
        .S({\reg_rd_data[10]_i_23__0_n_0 ,\reg_rd_data[10]_i_24_n_0 ,\reg_rd_data[10]_i_25__0_n_0 ,\reg_rd_data[10]_i_26__0_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[10]_i_16__0 
       (.CI(\reg_rd_data_reg[10]_i_15__0_n_0 ),
        .CO({\reg_rd_data_reg[10]_i_16__0_n_0 ,\reg_rd_data_reg[10]_i_16__0_n_1 ,\reg_rd_data_reg[10]_i_16__0_n_2 ,\reg_rd_data_reg[10]_i_16__0_n_3 }),
        .CYINIT(1'b0),
        .DI(buf2_missed_samp_reg[11:8]),
        .O(missed_samps_ch2[11:8]),
        .S({buf2_missed_samp_reg[11:10],\reg_rd_data[10]_i_27__0_n_0 ,\reg_rd_data[10]_i_28__0_n_0 }));
  MUXF7 \reg_rd_data_reg[10]_i_8__0 
       (.I0(\reg_rd_data[10]_i_3__0_0 ),
        .I1(\reg_rd_data[10]_i_12__0_n_0 ),
        .O(\reg_rd_data_reg[10]_i_8__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF8 \reg_rd_data_reg[11]_i_3__0 
       (.I0(\reg_rd_data_reg[11]_i_5__0_n_0 ),
        .I1(\reg_rd_data_reg[11]_i_6__0_n_0 ),
        .O(\reg_rd_data_reg[11]_i_6__0_0 ),
        .S(\reg_rd_data_reg[17]_0 ));
  MUXF7 \reg_rd_data_reg[11]_i_5__0 
       (.I0(\reg_rd_data_reg[11]_i_3__0_0 ),
        .I1(\reg_rd_data[11]_i_9__0_n_0 ),
        .O(\reg_rd_data_reg[11]_i_5__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF7 \reg_rd_data_reg[11]_i_6__0 
       (.I0(\reg_rd_data_reg[11]_i_3__0_1 ),
        .I1(\reg_rd_data[11]_i_11__0_n_0 ),
        .O(\reg_rd_data_reg[11]_i_6__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF8 \reg_rd_data_reg[12]_i_3__0 
       (.I0(\reg_rd_data_reg[12]_i_5__0_n_0 ),
        .I1(\reg_rd_data_reg[12]_i_6__0_n_0 ),
        .O(\reg_rd_data_reg[12]_i_6__0_0 ),
        .S(\reg_rd_data_reg[17]_0 ));
  MUXF7 \reg_rd_data_reg[12]_i_5__0 
       (.I0(\reg_rd_data_reg[12]_i_3__0_1 ),
        .I1(\reg_rd_data[12]_i_9__0_n_0 ),
        .O(\reg_rd_data_reg[12]_i_5__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF7 \reg_rd_data_reg[12]_i_6__0 
       (.I0(\reg_rd_data_reg[12]_i_3__0_0 ),
        .I1(\reg_rd_data[12]_i_11__0_n_0 ),
        .O(\reg_rd_data_reg[12]_i_6__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF8 \reg_rd_data_reg[13]_i_3__0 
       (.I0(\reg_rd_data_reg[13]_i_5__0_n_0 ),
        .I1(\reg_rd_data_reg[13]_i_6__0_n_0 ),
        .O(\reg_rd_data_reg[13]_i_6__0_0 ),
        .S(\reg_rd_data_reg[17]_0 ));
  MUXF7 \reg_rd_data_reg[13]_i_5__0 
       (.I0(\reg_rd_data_reg[13]_i_3__0_1 ),
        .I1(\reg_rd_data[13]_i_9__0_n_0 ),
        .O(\reg_rd_data_reg[13]_i_5__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF7 \reg_rd_data_reg[13]_i_6__0 
       (.I0(\reg_rd_data_reg[13]_i_3__0_0 ),
        .I1(\reg_rd_data[13]_i_11__0_n_0 ),
        .O(\reg_rd_data_reg[13]_i_6__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF8 \reg_rd_data_reg[14]_i_3__0 
       (.I0(\reg_rd_data_reg[14]_i_5__0_n_0 ),
        .I1(\reg_rd_data_reg[14]_i_6__0_n_0 ),
        .O(\reg_rd_data_reg[14]_i_6__0_0 ),
        .S(\reg_rd_data_reg[17]_0 ));
  MUXF7 \reg_rd_data_reg[14]_i_5__0 
       (.I0(\reg_rd_data_reg[14]_i_3__0_1 ),
        .I1(\reg_rd_data[14]_i_9__0_n_0 ),
        .O(\reg_rd_data_reg[14]_i_5__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF7 \reg_rd_data_reg[14]_i_6__0 
       (.I0(\reg_rd_data_reg[14]_i_3__0_0 ),
        .I1(\reg_rd_data[14]_i_11__0_n_0 ),
        .O(\reg_rd_data_reg[14]_i_6__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF7 \reg_rd_data_reg[15]_i_9__0 
       (.I0(\reg_rd_data[15]_i_4__0_1 ),
        .I1(\reg_rd_data[15]_i_13__0_n_0 ),
        .O(\reg_rd_data_reg[15]_i_9__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[18]_i_10__0 
       (.CI(\reg_rd_data_reg[10]_i_16__0_n_0 ),
        .CO({\reg_rd_data_reg[18]_i_10__0_n_0 ,\reg_rd_data_reg[18]_i_10__0_n_1 ,\reg_rd_data_reg[18]_i_10__0_n_2 ,\reg_rd_data_reg[18]_i_10__0_n_3 }),
        .CYINIT(1'b0),
        .DI(buf2_missed_samp_reg[15:12]),
        .O(missed_samps_ch2[15:12]),
        .S(buf2_missed_samp_reg[15:12]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[18]_i_9__0 
       (.CI(\reg_rd_data_reg[10]_i_14__0_n_0 ),
        .CO({\reg_rd_data_reg[18]_i_9__0_n_0 ,\reg_rd_data_reg[18]_i_9__0_n_1 ,\reg_rd_data_reg[18]_i_9__0_n_2 ,\reg_rd_data_reg[18]_i_9__0_n_3 }),
        .CYINIT(1'b0),
        .DI(buf1_missed_samp_reg[15:12]),
        .O(missed_samps_ch1[15:12]),
        .S(buf1_missed_samp_reg[15:12]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[22]_i_10__0 
       (.CI(\reg_rd_data_reg[18]_i_10__0_n_0 ),
        .CO({\reg_rd_data_reg[22]_i_10__0_n_0 ,\reg_rd_data_reg[22]_i_10__0_n_1 ,\reg_rd_data_reg[22]_i_10__0_n_2 ,\reg_rd_data_reg[22]_i_10__0_n_3 }),
        .CYINIT(1'b0),
        .DI(buf2_missed_samp_reg[19:16]),
        .O(missed_samps_ch2[19:16]),
        .S(buf2_missed_samp_reg[19:16]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[22]_i_9__0 
       (.CI(\reg_rd_data_reg[18]_i_9__0_n_0 ),
        .CO({\reg_rd_data_reg[22]_i_9__0_n_0 ,\reg_rd_data_reg[22]_i_9__0_n_1 ,\reg_rd_data_reg[22]_i_9__0_n_2 ,\reg_rd_data_reg[22]_i_9__0_n_3 }),
        .CYINIT(1'b0),
        .DI(buf1_missed_samp_reg[19:16]),
        .O(missed_samps_ch1[19:16]),
        .S(buf1_missed_samp_reg[19:16]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[26]_i_8__0 
       (.CI(\reg_rd_data_reg[22]_i_9__0_n_0 ),
        .CO({\reg_rd_data_reg[26]_i_8__0_n_0 ,\reg_rd_data_reg[26]_i_8__0_n_1 ,\reg_rd_data_reg[26]_i_8__0_n_2 ,\reg_rd_data_reg[26]_i_8__0_n_3 }),
        .CYINIT(1'b0),
        .DI(buf1_missed_samp_reg[23:20]),
        .O(missed_samps_ch1[23:20]),
        .S(buf1_missed_samp_reg[23:20]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[26]_i_9__0 
       (.CI(\reg_rd_data_reg[22]_i_10__0_n_0 ),
        .CO({\reg_rd_data_reg[26]_i_9__0_n_0 ,\reg_rd_data_reg[26]_i_9__0_n_1 ,\reg_rd_data_reg[26]_i_9__0_n_2 ,\reg_rd_data_reg[26]_i_9__0_n_3 }),
        .CYINIT(1'b0),
        .DI(buf2_missed_samp_reg[23:20]),
        .O(missed_samps_ch2[23:20]),
        .S(buf2_missed_samp_reg[23:20]));
  MUXF7 \reg_rd_data_reg[2]_i_13 
       (.I0(\reg_rd_data[2]_i_18_n_0 ),
        .I1(\reg_rd_data[2]_i_7__0_0 ),
        .O(\reg_rd_data_reg[2]_i_13_n_0 ),
        .S(\reg_rd_data_reg[2]_0 ));
  MUXF7 \reg_rd_data_reg[2]_i_3__0 
       (.I0(\reg_rd_data[2]_i_7__0_n_0 ),
        .I1(\reg_rd_data_reg[2]_3 ),
        .O(\reg_rd_data_reg[2]_i_3__0_n_0 ),
        .S(\reg_rd_data_reg[4] ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[30]_i_8__0 
       (.CI(\reg_rd_data_reg[26]_i_8__0_n_0 ),
        .CO({\reg_rd_data_reg[30]_i_8__0_n_0 ,\reg_rd_data_reg[30]_i_8__0_n_1 ,\reg_rd_data_reg[30]_i_8__0_n_2 ,\reg_rd_data_reg[30]_i_8__0_n_3 }),
        .CYINIT(1'b0),
        .DI(buf1_missed_samp_reg[27:24]),
        .O(missed_samps_ch1[27:24]),
        .S(buf1_missed_samp_reg[27:24]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[30]_i_9__0 
       (.CI(\reg_rd_data_reg[26]_i_9__0_n_0 ),
        .CO({\reg_rd_data_reg[30]_i_9__0_n_0 ,\reg_rd_data_reg[30]_i_9__0_n_1 ,\reg_rd_data_reg[30]_i_9__0_n_2 ,\reg_rd_data_reg[30]_i_9__0_n_3 }),
        .CYINIT(1'b0),
        .DI(buf2_missed_samp_reg[27:24]),
        .O(missed_samps_ch2[27:24]),
        .S(buf2_missed_samp_reg[27:24]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[31]_i_17__0 
       (.CI(\reg_rd_data_reg[30]_i_8__0_n_0 ),
        .CO({\NLW_reg_rd_data_reg[31]_i_17__0_CO_UNCONNECTED [3:1],\reg_rd_data_reg[31]_i_17__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,buf1_missed_samp_reg[28]}),
        .O({\NLW_reg_rd_data_reg[31]_i_17__0_O_UNCONNECTED [3:2],missed_samps_ch1[29:28]}),
        .S({1'b0,1'b0,buf1_missed_samp_reg[29:28]}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[31]_i_18 
       (.CI(\reg_rd_data_reg[30]_i_9__0_n_0 ),
        .CO({\NLW_reg_rd_data_reg[31]_i_18_CO_UNCONNECTED [3:1],\reg_rd_data_reg[31]_i_18_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,buf2_missed_samp_reg[28]}),
        .O({\NLW_reg_rd_data_reg[31]_i_18_O_UNCONNECTED [3:2],missed_samps_ch2[29:28]}),
        .S({1'b0,1'b0,buf2_missed_samp_reg[29:28]}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[3]_i_17 
       (.CI(1'b0),
        .CO({\reg_rd_data_reg[3]_i_17_n_0 ,\reg_rd_data_reg[3]_i_17_n_1 ,\reg_rd_data_reg[3]_i_17_n_2 ,\reg_rd_data_reg[3]_i_17_n_3 }),
        .CYINIT(1'b0),
        .DI(buf1_missed_samp_reg[3:0]),
        .O(missed_samps_ch1[3:0]),
        .S({\reg_rd_data[3]_i_19_n_0 ,\reg_rd_data[3]_i_20_n_0 ,\reg_rd_data[3]_i_21_n_0 ,\reg_rd_data[3]_i_22_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[3]_i_18 
       (.CI(1'b0),
        .CO({\reg_rd_data_reg[3]_i_18_n_0 ,\reg_rd_data_reg[3]_i_18_n_1 ,\reg_rd_data_reg[3]_i_18_n_2 ,\reg_rd_data_reg[3]_i_18_n_3 }),
        .CYINIT(1'b0),
        .DI(buf2_missed_samp_reg[3:0]),
        .O(missed_samps_ch2[3:0]),
        .S({\reg_rd_data[3]_i_23_n_0 ,\reg_rd_data[3]_i_24_n_0 ,\reg_rd_data[3]_i_25_n_0 ,\reg_rd_data[3]_i_26_n_0 }));
  MUXF7 \reg_rd_data_reg[3]_i_9__0 
       (.I0(\reg_rd_data[3]_i_15__0_n_0 ),
        .I1(\reg_rd_data[3]_i_16__0_n_0 ),
        .O(\reg_rd_data_reg[3]_i_9__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF8 \reg_rd_data_reg[4]_i_2__0 
       (.I0(\reg_rd_data_reg[4]_i_6__0_n_0 ),
        .I1(\reg_rd_data_reg[4]_i_7__0_n_0 ),
        .O(\reg_rd_data_reg[4]_i_2__0_n_0 ),
        .S(\reg_rd_data_reg[17]_0 ));
  MUXF7 \reg_rd_data_reg[4]_i_6__0 
       (.I0(\reg_rd_data_reg[4]_i_2__0_0 ),
        .I1(\reg_rd_data[4]_i_11__0_n_0 ),
        .O(\reg_rd_data_reg[4]_i_6__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF7 \reg_rd_data_reg[4]_i_7__0 
       (.I0(\reg_rd_data[4]_i_12__0_n_0 ),
        .I1(\reg_rd_data[4]_i_13__0_n_0 ),
        .O(\reg_rd_data_reg[4]_i_7__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF8 \reg_rd_data_reg[5]_i_2__0 
       (.I0(\reg_rd_data_reg[5]_i_6__0_n_0 ),
        .I1(\reg_rd_data_reg[5]_i_7__0_n_0 ),
        .O(\reg_rd_data_reg[5]_i_2__0_n_0 ),
        .S(\reg_rd_data_reg[17]_0 ));
  MUXF7 \reg_rd_data_reg[5]_i_6__0 
       (.I0(\reg_rd_data_reg[5]_i_2__0_0 ),
        .I1(\reg_rd_data[5]_i_11__0_n_0 ),
        .O(\reg_rd_data_reg[5]_i_6__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF7 \reg_rd_data_reg[5]_i_7__0 
       (.I0(\reg_rd_data_reg[5]_i_2__0_1 ),
        .I1(\reg_rd_data[5]_i_13__0_n_0 ),
        .O(\reg_rd_data_reg[5]_i_7__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF8 \reg_rd_data_reg[6]_i_3__0 
       (.I0(\reg_rd_data_reg[6]_i_5__0_n_0 ),
        .I1(\reg_rd_data_reg[6]_i_6__0_n_0 ),
        .O(\reg_rd_data_reg[6]_i_6__0_0 ),
        .S(\reg_rd_data_reg[17]_0 ));
  MUXF7 \reg_rd_data_reg[6]_i_5__0 
       (.I0(\reg_rd_data_reg[6]_i_3__0_1 ),
        .I1(\reg_rd_data[6]_i_9__0_n_0 ),
        .O(\reg_rd_data_reg[6]_i_5__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF7 \reg_rd_data_reg[6]_i_6__0 
       (.I0(\reg_rd_data_reg[6]_i_3__0_0 ),
        .I1(\reg_rd_data[6]_i_11__0_n_0 ),
        .O(\reg_rd_data_reg[6]_i_6__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF8 \reg_rd_data_reg[7]_i_3__0 
       (.I0(\reg_rd_data_reg[7]_i_5__0_n_0 ),
        .I1(\reg_rd_data_reg[7]_i_6__0_n_0 ),
        .O(\reg_rd_data_reg[7]_i_6__0_0 ),
        .S(\reg_rd_data_reg[17]_0 ));
  MUXF7 \reg_rd_data_reg[7]_i_5__0 
       (.I0(\reg_rd_data_reg[7]_i_3__0_1 ),
        .I1(\reg_rd_data[7]_i_9__0_n_0 ),
        .O(\reg_rd_data_reg[7]_i_5__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF7 \reg_rd_data_reg[7]_i_6__0 
       (.I0(\reg_rd_data_reg[7]_i_3__0_0 ),
        .I1(\reg_rd_data[7]_i_11__0_n_0 ),
        .O(\reg_rd_data_reg[7]_i_6__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF7 \reg_rd_data_reg[8]_i_8__0 
       (.I0(\reg_rd_data[8]_i_3__0_0 ),
        .I1(\reg_rd_data[8]_i_12__0_n_0 ),
        .O(\reg_rd_data_reg[8]_i_8__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF8 \reg_rd_data_reg[9]_i_3__0 
       (.I0(\reg_rd_data_reg[9]_i_5__0_n_0 ),
        .I1(\reg_rd_data_reg[9]_i_6__0_n_0 ),
        .O(\reg_rd_data_reg[9]_i_6__0_0 ),
        .S(\reg_rd_data_reg[17]_0 ));
  MUXF7 \reg_rd_data_reg[9]_i_5__0 
       (.I0(\reg_rd_data_reg[9]_i_3__0_1 ),
        .I1(\reg_rd_data[9]_i_9__0_n_0 ),
        .O(\reg_rd_data_reg[9]_i_5__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  MUXF7 \reg_rd_data_reg[9]_i_6__0 
       (.I0(\reg_rd_data_reg[9]_i_3__0_0 ),
        .I1(\reg_rd_data[9]_i_11__0_n_0 ),
        .O(\reg_rd_data_reg[9]_i_6__0_n_0 ),
        .S(\reg_rd_data_reg[17] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF2020FFE0)) 
    \req_addr[0]_i_1__0 
       (.I0(\req_addr_reg[31]_0 [0]),
        .I1(next_buf_full1),
        .I2(\state_cs_reg[1]_0 ),
        .I3(\state_cs_reg[2]_0 ),
        .I4(\req_addr[0]_i_2__0_n_0 ),
        .I5(\req_addr[0]_i_3__0_n_0 ),
        .O(\req_addr[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT4 #(
    .INIT(16'h04F7)) 
    \req_addr[0]_i_2__0 
       (.I0(\req_buf_addr_reg[31]_1 [0]),
        .I1(cfg_dma_sts_reg[4]),
        .I2(cfg_dma_sts_reg[0]),
        .I3(\req_buf_addr_reg[31]_0 [0]),
        .O(\req_addr[0]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \req_addr[0]_i_3__0 
       (.I0(\req_buf_addr_reg[31]_1 [0]),
        .I1(\state_cs_reg[0]_1 ),
        .O(\req_addr[0]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[10]_i_1__0 
       (.I0(\req_addr[10]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [10]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [10]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[10]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[10]_i_2__0 
       (.I0(next_buf_full20_in[10]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [10]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [10]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[10]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[11]_i_1__0 
       (.I0(\req_addr[11]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [11]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [11]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[11]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[11]_i_2__0 
       (.I0(next_buf_full20_in[11]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [11]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [11]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[11]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[12]_i_1__0 
       (.I0(\req_addr[12]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [12]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [12]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[12]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[12]_i_2__0 
       (.I0(next_buf_full20_in[12]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [12]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [12]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[12]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[13]_i_1__0 
       (.I0(\req_addr[13]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [13]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [13]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[13]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[13]_i_2__0 
       (.I0(next_buf_full20_in[13]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [13]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [13]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[13]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[14]_i_1__0 
       (.I0(\req_addr[14]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [14]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [14]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[14]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[14]_i_2__0 
       (.I0(next_buf_full20_in[14]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [14]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [14]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[14]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[15]_i_1__0 
       (.I0(\req_addr[15]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [15]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [15]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[15]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[15]_i_2__0 
       (.I0(next_buf_full20_in[15]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [15]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [15]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[15]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[16]_i_1__0 
       (.I0(\req_addr[16]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [16]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [16]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[16]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[16]_i_2__0 
       (.I0(next_buf_full20_in[16]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [16]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [16]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[16]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[17]_i_1__0 
       (.I0(\req_addr[17]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [17]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [17]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[17]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[17]_i_2__0 
       (.I0(next_buf_full20_in[17]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [17]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [17]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[17]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[18]_i_1__0 
       (.I0(\req_addr[18]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [18]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [18]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[18]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[18]_i_2__0 
       (.I0(next_buf_full20_in[18]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [18]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [18]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[18]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[19]_i_1__0 
       (.I0(\req_addr[19]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [19]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [19]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[19]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[19]_i_2__0 
       (.I0(next_buf_full20_in[19]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [19]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [19]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[19]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[1]_i_1__0 
       (.I0(\req_addr[1]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [1]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [1]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[1]_i_2__0 
       (.I0(\req_addr_reg[31]_0 [1]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [1]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [1]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[20]_i_1__0 
       (.I0(\req_addr[20]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [20]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [20]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[20]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[20]_i_2__0 
       (.I0(next_buf_full20_in[20]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [20]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [20]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[20]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[21]_i_1__0 
       (.I0(\req_addr[21]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [21]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [21]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[21]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[21]_i_2__0 
       (.I0(next_buf_full20_in[21]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [21]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [21]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[21]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[22]_i_1__0 
       (.I0(\req_addr[22]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [22]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [22]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[22]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[22]_i_2__0 
       (.I0(next_buf_full20_in[22]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [22]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [22]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[22]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[23]_i_1__0 
       (.I0(\req_addr[23]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [23]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [23]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[23]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[23]_i_2__0 
       (.I0(next_buf_full20_in[23]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [23]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [23]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[23]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[24]_i_1__0 
       (.I0(\req_addr[24]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [24]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [24]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[24]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[24]_i_2__0 
       (.I0(next_buf_full20_in[24]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [24]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [24]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[24]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[25]_i_1__0 
       (.I0(\req_addr[25]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [25]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [25]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[25]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[25]_i_2__0 
       (.I0(next_buf_full20_in[25]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [25]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [25]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[25]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[26]_i_1__0 
       (.I0(\req_addr[26]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [26]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [26]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[26]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[26]_i_2__0 
       (.I0(next_buf_full20_in[26]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [26]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [26]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[26]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[27]_i_1__0 
       (.I0(\req_addr[27]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [27]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [27]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[27]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[27]_i_2__0 
       (.I0(next_buf_full20_in[27]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [27]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [27]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[27]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[28]_i_1__0 
       (.I0(\req_addr[28]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [28]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [28]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[28]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[28]_i_2__0 
       (.I0(next_buf_full20_in[28]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [28]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [28]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[28]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[29]_i_1__0 
       (.I0(\req_addr[29]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [29]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [29]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[29]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[29]_i_2__0 
       (.I0(next_buf_full20_in[29]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [29]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [29]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[29]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF4040FFE0)) 
    \req_addr[2]_i_1__0 
       (.I0(next_buf_full1),
        .I1(\req_addr_reg[31]_0 [2]),
        .I2(\state_cs_reg[1]_0 ),
        .I3(\state_cs_reg[2]_0 ),
        .I4(\req_addr[2]_i_2__0_n_0 ),
        .I5(\req_addr[2]_i_3__0_n_0 ),
        .O(\req_addr[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT4 #(
    .INIT(16'h04F7)) 
    \req_addr[2]_i_2__0 
       (.I0(\req_buf_addr_reg[31]_1 [2]),
        .I1(cfg_dma_sts_reg[4]),
        .I2(cfg_dma_sts_reg[0]),
        .I3(\req_buf_addr_reg[31]_0 [2]),
        .O(\req_addr[2]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \req_addr[2]_i_3__0 
       (.I0(\req_buf_addr_reg[31]_1 [2]),
        .I1(\state_cs_reg[0]_1 ),
        .O(\req_addr[2]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[30]_i_1__0 
       (.I0(\req_addr[30]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [30]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [30]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[30]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[30]_i_2__0 
       (.I0(next_buf_full20_in[30]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [30]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [30]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[30]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAA00EA00AA00AAFF)) 
    \req_addr[31]_i_1__0 
       (.I0(\req_addr[31]_i_3__0_n_0 ),
        .I1(transf_end),
        .I2(\req_addr[31]_i_4__0_n_0 ),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[31]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[31]_i_2__0 
       (.I0(\req_addr[31]_i_5__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [31]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [31]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[31]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000001B0000)) 
    \req_addr[31]_i_3__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[1]),
        .I2(cfg_dma_sts_reg[0]),
        .I3(\state_cs_reg[1]_0 ),
        .I4(\state_cs_reg[2]_0 ),
        .I5(next_buf_full_reg_0),
        .O(\req_addr[31]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT4 #(
    .INIT(16'h1BFF)) 
    \req_addr[31]_i_4__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[1]),
        .I2(cfg_dma_sts_reg[0]),
        .I3(next_buf_full1),
        .O(\req_addr[31]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[31]_i_5__0 
       (.I0(next_buf_full20_in[31]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [31]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [31]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[31]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \req_addr[31]_i_6__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .O(\req_addr[31]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[3]_i_1__0 
       (.I0(\req_addr[3]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [3]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [3]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[3]_i_2__0 
       (.I0(\req_addr_reg[31]_0 [3]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [3]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [3]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[3]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[4]_i_1__0 
       (.I0(\req_addr[4]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [4]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [4]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[4]_i_2__0 
       (.I0(\req_addr_reg[31]_0 [4]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [4]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [4]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[4]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[5]_i_1__0 
       (.I0(\req_addr[5]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [5]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [5]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[5]_i_2__0 
       (.I0(\req_addr_reg[31]_0 [5]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [5]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [5]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[5]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[6]_i_1__0 
       (.I0(\req_addr[6]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [6]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [6]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[6]_i_2__0 
       (.I0(next_buf_full20_in[6]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [6]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [6]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[6]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[7]_i_1__0 
       (.I0(\req_addr[7]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [7]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [7]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[7]_i_2__0 
       (.I0(next_buf_full20_in[7]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [7]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [7]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[7]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[8]_i_1__0 
       (.I0(\req_addr[8]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [8]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [8]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[8]_i_2__0 
       (.I0(next_buf_full20_in[8]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [8]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [8]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[8]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[9]_i_1__0 
       (.I0(\req_addr[9]_i_2__0_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [9]),
        .I2(\req_addr[31]_i_6__0_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [9]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[9]_i_2__0 
       (.I0(next_buf_full20_in[9]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [9]),
        .I3(\req_addr[31]_i_6__0_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [9]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[9]_i_2__0_n_0 ));
  FDRE \req_addr_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[0]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [0]),
        .R(1'b0));
  FDRE \req_addr_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[10]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [10]),
        .R(1'b0));
  FDRE \req_addr_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[11]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [11]),
        .R(1'b0));
  FDRE \req_addr_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[12]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [12]),
        .R(1'b0));
  FDRE \req_addr_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[13]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [13]),
        .R(1'b0));
  FDRE \req_addr_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[14]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [14]),
        .R(1'b0));
  FDRE \req_addr_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[15]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [15]),
        .R(1'b0));
  FDRE \req_addr_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[16]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [16]),
        .R(1'b0));
  FDRE \req_addr_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[17]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [17]),
        .R(1'b0));
  FDRE \req_addr_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[18]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [18]),
        .R(1'b0));
  FDRE \req_addr_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[19]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [19]),
        .R(1'b0));
  FDRE \req_addr_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[1]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [1]),
        .R(1'b0));
  FDRE \req_addr_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[20]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [20]),
        .R(1'b0));
  FDRE \req_addr_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[21]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [21]),
        .R(1'b0));
  FDRE \req_addr_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[22]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [22]),
        .R(1'b0));
  FDRE \req_addr_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[23]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [23]),
        .R(1'b0));
  FDRE \req_addr_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[24]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [24]),
        .R(1'b0));
  FDRE \req_addr_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[25]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [25]),
        .R(1'b0));
  FDRE \req_addr_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[26]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [26]),
        .R(1'b0));
  FDRE \req_addr_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[27]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [27]),
        .R(1'b0));
  FDRE \req_addr_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[28]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [28]),
        .R(1'b0));
  FDRE \req_addr_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[29]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [29]),
        .R(1'b0));
  FDRE \req_addr_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[2]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [2]),
        .R(1'b0));
  FDRE \req_addr_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[30]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [30]),
        .R(1'b0));
  FDRE \req_addr_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[31]_i_2__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [31]),
        .R(1'b0));
  FDRE \req_addr_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[3]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [3]),
        .R(1'b0));
  FDRE \req_addr_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[4]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [4]),
        .R(1'b0));
  FDRE \req_addr_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[5]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [5]),
        .R(1'b0));
  FDRE \req_addr_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[6]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [6]),
        .R(1'b0));
  FDRE \req_addr_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[7]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [7]),
        .R(1'b0));
  FDRE \req_addr_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[8]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [8]),
        .R(1'b0));
  FDRE \req_addr_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_addr[31]_i_1__0_n_0 ),
        .D(\req_addr[9]_i_1__0_n_0 ),
        .Q(\req_addr_reg[31]_0 [9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT5 #(
    .INIT(32'hFB08AAAA)) 
    \req_buf_addr[0]_i_1__0 
       (.I0(\req_buf_addr_reg[31]_1 [0]),
        .I1(cfg_dma_sts_reg[4]),
        .I2(cfg_dma_sts_reg[0]),
        .I3(\req_buf_addr_reg[31]_0 [0]),
        .I4(\state_cs_reg[0]_1 ),
        .O(\req_buf_addr[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[10]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [10]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [10]),
        .O(\req_buf_addr[10]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[11]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [11]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [11]),
        .O(\req_buf_addr[11]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[12]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [12]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [12]),
        .O(\req_buf_addr[12]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[13]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [13]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [13]),
        .O(\req_buf_addr[13]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[14]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [14]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [14]),
        .O(\req_buf_addr[14]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[15]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [15]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [15]),
        .O(\req_buf_addr[15]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[16]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [16]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [16]),
        .O(\req_buf_addr[16]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[17]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [17]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [17]),
        .O(\req_buf_addr[17]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[18]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [18]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [18]),
        .O(\req_buf_addr[18]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[19]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [19]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [19]),
        .O(\req_buf_addr[19]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[1]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [1]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [1]),
        .O(\req_buf_addr[1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[20]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [20]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [20]),
        .O(\req_buf_addr[20]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[21]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [21]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [21]),
        .O(\req_buf_addr[21]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[22]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [22]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [22]),
        .O(\req_buf_addr[22]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[23]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [23]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [23]),
        .O(\req_buf_addr[23]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[24]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [24]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [24]),
        .O(\req_buf_addr[24]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[25]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [25]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [25]),
        .O(\req_buf_addr[25]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[26]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [26]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [26]),
        .O(\req_buf_addr[26]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[27]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [27]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [27]),
        .O(\req_buf_addr[27]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[28]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [28]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [28]),
        .O(\req_buf_addr[28]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[29]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [29]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [29]),
        .O(\req_buf_addr[29]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT5 #(
    .INIT(32'hFB08AAAA)) 
    \req_buf_addr[2]_i_1__0 
       (.I0(\req_buf_addr_reg[31]_1 [2]),
        .I1(cfg_dma_sts_reg[4]),
        .I2(cfg_dma_sts_reg[0]),
        .I3(\req_buf_addr_reg[31]_0 [2]),
        .I4(\state_cs_reg[0]_1 ),
        .O(\req_buf_addr[2]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[30]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [30]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [30]),
        .O(\req_buf_addr[30]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000A000300000FF)) 
    \req_buf_addr[31]_i_1__0 
       (.I0(\req_buf_addr[31]_i_3__0_n_0 ),
        .I1(next_buf_full_reg_0),
        .I2(\req_buf_addr[31]_i_4__0_n_0 ),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_buf_addr[31]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[31]_i_2__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [31]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [31]),
        .O(\req_buf_addr[31]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \req_buf_addr[31]_i_3__0 
       (.I0(transf_end),
        .I1(next_buf_full1),
        .O(\req_buf_addr[31]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'h53)) 
    \req_buf_addr[31]_i_4__0 
       (.I0(cfg_dma_sts_reg[0]),
        .I1(cfg_dma_sts_reg[1]),
        .I2(cfg_dma_sts_reg[4]),
        .O(\req_buf_addr[31]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[3]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [3]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [3]),
        .O(\req_buf_addr[3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[4]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [4]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [4]),
        .O(\req_buf_addr[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[5]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [5]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [5]),
        .O(\req_buf_addr[5]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[6]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [6]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [6]),
        .O(\req_buf_addr[6]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[7]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [7]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [7]),
        .O(\req_buf_addr[7]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[8]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [8]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [8]),
        .O(\req_buf_addr[8]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[9]_i_1__0 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [9]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [9]),
        .O(\req_buf_addr[9]_i_1__0_n_0 ));
  FDRE \req_buf_addr_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[0]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[10] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[10]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[11] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[11]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[12] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[12]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[13] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[13]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[14] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[14]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[15] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[15]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[16] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[16]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[17] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[17]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[18] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[18]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[19] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[19]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[19] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[1]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[20] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[20]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[21] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[21]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[21] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[22] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[22]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[23] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[23]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[23] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[24] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[24]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[24] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[25] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[25]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[25] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[26] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[26]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[26] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[27] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[27]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[27] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[28] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[28]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[28] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[29] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[29]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[29] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[2]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[30] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[30]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[30] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[31] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[31]_i_2__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[31] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[3]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[4]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[5]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[6]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[7]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[8] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[8]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[9] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_buf_addr[31]_i_1__0_n_0 ),
        .D(\req_buf_addr[9]_i_1__0_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[9] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h99899989AAAAAA00)) 
    req_buf_addr_sel_i_1__0
       (.I0(cfg_dma_sts_reg[4]),
        .I1(req_buf_addr_sel_i_2__0_n_0),
        .I2(cfg_dma_sts_reg[1]),
        .I3(\state_cs_reg[2]_0 ),
        .I4(\state_cs_reg[1]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(req_buf_addr_sel_i_1__0_n_0));
  LUT6 #(
    .INIT(64'hFFFF7FFFFF007FFF)) 
    req_buf_addr_sel_i_2__0
       (.I0(next_buf_full1),
        .I1(transf_end),
        .I2(\req_buf_addr[31]_i_4__0_n_0 ),
        .I3(\state_cs_reg[1]_0 ),
        .I4(\state_cs_reg[2]_0 ),
        .I5(next_buf_full_reg_0),
        .O(req_buf_addr_sel_i_2__0_n_0));
  FDRE req_buf_addr_sel_p1_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(cfg_dma_sts_reg[4]),
        .Q(req_buf_addr_sel_p1_reg_0),
        .R(1'b0));
  FDRE req_buf_addr_sel_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(req_buf_addr_sel_i_1__0_n_0),
        .Q(cfg_dma_sts_reg[4]),
        .R(1'b0));
  FDRE req_xfer_last_reg
       (.C(m_axi_osc2_aclk),
        .CE(\m_axi_awlen[7]_i_1__0_n_0 ),
        .D(fifo_rd_data[7]),
        .Q(req_xfer_last),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \state_cs[0]_i_1__0 
       (.I0(state_ns),
        .I1(U_dma_s2mm_data_ctrl_n_14),
        .I2(\state_cs_reg[0]_1 ),
        .O(\state_cs[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT4 #(
    .INIT(16'h1F10)) 
    \state_cs[1]_i_1__0 
       (.I0(cfg_dma_ctrl_reg[4]),
        .I1(U_dma_s2mm_data_ctrl_n_13),
        .I2(U_dma_s2mm_data_ctrl_n_14),
        .I3(\state_cs_reg[1]_0 ),
        .O(\state_cs[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \state_cs[2]_i_10__0 
       (.I0(fifo_rst_cnt_reg[3]),
        .I1(fifo_rst_cnt_reg[0]),
        .I2(fifo_rst_cnt_reg[1]),
        .I3(fifo_rst_cnt_reg[2]),
        .O(\state_cs[2]_i_10__0_n_0 ));
  LUT4 #(
    .INIT(16'h1F10)) 
    \state_cs[2]_i_1__0 
       (.I0(cfg_dma_ctrl_reg[4]),
        .I1(U_dma_s2mm_data_ctrl_n_17),
        .I2(U_dma_s2mm_data_ctrl_n_14),
        .I3(\state_cs_reg[2]_0 ),
        .O(\state_cs[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \state_cs[2]_i_4__0 
       (.I0(rd_data_count[7]),
        .I1(rd_data_count[5]),
        .I2(rd_data_count[6]),
        .I3(rd_data_count[9]),
        .I4(rd_data_count[8]),
        .I5(rd_data_count[4]),
        .O(\state_cs[2]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFF3FFFFFFF3FF)) 
    \state_cs[2]_i_6__0 
       (.I0(rd_data_count[4]),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .I3(\state_cs_reg[1]_0 ),
        .I4(\state_cs[2]_i_8__0_n_0 ),
        .I5(\state_cs[2]_i_9__0_n_0 ),
        .O(\state_cs[2]_i_6__0_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \state_cs[2]_i_8__0 
       (.I0(rd_data_count[8]),
        .I1(rd_data_count[9]),
        .I2(rd_data_count[6]),
        .I3(rd_data_count[5]),
        .I4(rd_data_count[7]),
        .O(\state_cs[2]_i_8__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \state_cs[2]_i_9__0 
       (.I0(rd_data_count[2]),
        .I1(rd_data_count[3]),
        .I2(rd_data_count[1]),
        .I3(rd_data_count[0]),
        .O(\state_cs[2]_i_9__0_n_0 ));
  FDRE \state_cs_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\state_cs[0]_i_1__0_n_0 ),
        .Q(\state_cs_reg[0]_1 ),
        .R(clear));
  FDRE \state_cs_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\state_cs[1]_i_1__0_n_0 ),
        .Q(\state_cs_reg[1]_0 ),
        .R(clear));
  FDRE \state_cs_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\state_cs[2]_i_1__0_n_0 ),
        .Q(\state_cs_reg[2]_0 ),
        .R(clear));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    sts_acquire_i_10__0
       (.I0(sts_acquire_reg_0[2]),
        .I1(sts_acquire_reg_0[4]),
        .I2(sts_acquire_reg_0[5]),
        .I3(sts_acquire_reg_0[3]),
        .I4(sts_acquire_reg_0[1]),
        .I5(mode_reg_0),
        .O(sts_acquire_i_10__0_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    sts_acquire_i_4__0
       (.I0(sts_acquire_reg),
        .I1(sts_acquire_reg_0[6]),
        .I2(sts_acquire_reg_0[0]),
        .I3(sts_acquire_reg_0[7]),
        .I4(sts_acquire_reg_1),
        .I5(sts_acquire_i_10__0_n_0),
        .O(\cfg_trig_pre_samp_reg[29] ));
  FDRE transf_end_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(full_immed0),
        .Q(transf_end),
        .R(clear));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    trig_out_INST_0_i_2
       (.I0(\trig_cnt_reg[31] [1]),
        .I1(\trig_cnt_reg[31] [3]),
        .I2(\trig_cnt_reg[31] [0]),
        .I3(\trig_cnt_reg[31] [2]),
        .I4(\trig_cnt_reg[31] [4]),
        .I5(trig_out_INST_0_i_4_n_0),
        .O(\cfg_trig_mask_reg[1] ));
  LUT2 #(
    .INIT(4'h8)) 
    trig_out_INST_0_i_4
       (.I0(trig_ip),
        .I1(\trig_cnt_reg[31] [5]),
        .O(trig_out_INST_0_i_4_n_0));
  LUT5 #(
    .INIT(32'h1FFFFF1F)) 
    \xfer_cnt[6]_i_1__0 
       (.I0(\xfer_cnt[6]_i_3__0_n_0 ),
        .I1(ctl_start_r),
        .I2(m_axi_osc2_aresetn),
        .I3(\xfer_cnt_reg[6] ),
        .I4(use_8bit_r),
        .O(ctl_start_r_reg));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \xfer_cnt[6]_i_3__0 
       (.I0(bit_start_reg_0),
        .I1(\cfg_trig_mask_reg[1] ),
        .I2(\reg_ctrl_reg[0]_0 ),
        .O(\xfer_cnt[6]_i_3__0_n_0 ));
endmodule

(* ORIG_REF_NAME = "rp_dma_s2mm_ctrl" *) 
module system_rp_oscilloscope_0_rp_dma_s2mm_ctrl__xdcDup__1
   (empty,
    rst,
    empty_fwft_i_reg,
    fifo_dis_reg_0,
    full_immed0,
    req_buf_addr_sel_p1_reg_0,
    m_axi_wlast_reg,
    \state_cs_reg[0]_0 ,
    m_axi_wvalid_reg,
    busy_reg,
    m_axi_osc1_awvalid,
    fifo_dis_reg_1,
    intr_reg__0_0,
    next_buf_full_reg_0,
    mode_reg_0,
    first_rst,
    \req_addr_reg[31]_0 ,
    trig_out,
    \cfg_trig_mask_reg[1] ,
    \state_cs_reg[1]_0 ,
    \state_cs_reg[0]_1 ,
    \state_cs_reg[2]_0 ,
    \s_axi_reg_araddr[6] ,
    intr,
    \s_axi_reg_araddr[2] ,
    D,
    rd_en,
    \req_xfer_cnt_reg[0] ,
    ctl_start_r_reg,
    trig_out1,
    intr_cnt0,
    \cfg_trig_pre_samp_reg[29] ,
    \s_axi_reg_araddr[7] ,
    \s_axi_reg_araddr[3] ,
    \goreg_dm.dout_i_reg[1] ,
    \reg_rd_data_reg[7]_i_6_0 ,
    \reg_rd_data_reg[9]_i_6_0 ,
    \reg_rd_data_reg[11]_i_6_0 ,
    \cfg_dma_dst_addr1_reg[16] ,
    \cfg_dma_dst_addr1_reg[17] ,
    \reg_rd_data_reg[6]_i_6_0 ,
    \reg_ctrl_reg[9]_0 ,
    \reg_rd_data_reg[12]_i_6_0 ,
    \reg_rd_data_reg[13]_i_6_0 ,
    \reg_rd_data_reg[14]_i_6_0 ,
    \req_addr_reg[15]_0 ,
    missed_samps_ch1,
    missed_samps_ch2,
    m_axi_osc1_awlen,
    m_axi_osc1_aclk,
    Q,
    wr_en,
    clear,
    \state_cs_reg[0]_2 ,
    m_axi_wvalid_reg_0,
    m_axi_wlast_reg_0,
    busy_reg_0,
    m_axi_awvalid_reg_0,
    fifo_dis_reg_2,
    mode_reg_1,
    first_rst_reg_0,
    m_axi_osc1_awready,
    cfg_dma_ctrl_reg,
    external_trig_val,
    bit_start,
    rd_data_count,
    \req_buf_addr_reg[31]_0 ,
    \req_buf_addr_reg[31]_1 ,
    bram_addr_a,
    osc2_dma_intr,
    \reg_rd_data_reg[31] ,
    \reg_rd_data_reg[0] ,
    \reg_rd_data_reg[0]_0 ,
    \reg_rd_data_reg[1] ,
    \reg_rd_data_reg[2] ,
    \reg_rd_data_reg[3] ,
    \reg_rd_data_reg[0]_1 ,
    \reg_rd_data_reg[31]_0 ,
    trig_cnt_reg,
    \reg_rd_data_reg[31]_1 ,
    clk_cnt_reg,
    \reg_rd_data_reg[30] ,
    \reg_rd_data_reg[15] ,
    \reg_rd_data_reg[15]_0 ,
    \reg_rd_data_reg[29] ,
    \reg_rd_data_reg[28] ,
    \reg_rd_data_reg[27] ,
    \reg_rd_data_reg[26] ,
    \reg_rd_data_reg[25] ,
    \reg_rd_data_reg[24] ,
    \reg_rd_data_reg[23] ,
    \reg_rd_data_reg[22] ,
    \reg_rd_data_reg[21] ,
    \reg_rd_data_reg[20] ,
    \reg_rd_data_reg[19] ,
    \reg_rd_data_reg[18] ,
    \reg_rd_data_reg[10] ,
    \reg_rd_data_reg[8] ,
    \reg_rd_data_reg[10]_0 ,
    \reg_rd_data_reg[10]_1 ,
    \reg_rd_data_reg[8]_0 ,
    \reg_rd_data_reg[8]_1 ,
    \reg_rd_data_reg[8]_2 ,
    \reg_rd_data_reg[5] ,
    \reg_rd_data_reg[5]_0 ,
    \reg_rd_data_reg[5]_1 ,
    \reg_rd_data_reg[4] ,
    \reg_rd_data_reg[4]_0 ,
    \reg_rd_data_reg[4]_1 ,
    \reg_rd_data_reg[3]_0 ,
    \reg_rd_data_reg[3]_1 ,
    \reg_rd_data_reg[3]_2 ,
    \reg_rd_data_reg[2]_0 ,
    \reg_rd_data_reg[2]_1 ,
    \reg_rd_data_reg[2]_2 ,
    \reg_rd_data_reg[1]_0 ,
    \reg_rd_data_reg[1]_1 ,
    \reg_rd_data_reg[1]_2 ,
    m_axi_osc1_wready,
    ctl_start_r,
    m_axi_osc1_aresetn,
    \xfer_cnt_reg[6] ,
    use_8bit_r,
    \trig_cnt_reg[0] ,
    trig_ip,
    E,
    intr_reg,
    sts_acquire_reg,
    sts_acquire_reg_0,
    sts_acquire_reg_1,
    osc1_reg_wr_we,
    buf_sel_ch2,
    \reg_rd_data_reg[2]_i_3_0 ,
    \reg_rd_data[2]_i_8_0 ,
    next_buf_full1_carry__1_i_10_0,
    \reg_rd_data[2]_i_8_1 ,
    \reg_rd_data[17]_i_5_0 ,
    \reg_rd_data_reg[0]_i_2_0 ,
    \reg_rd_data_reg[15]_i_9_0 ,
    \reg_rd_data_reg[15]_i_9_1 ,
    \reg_rd_data[0]_i_5_0 ,
    \reg_rd_data_reg[1]_3 ,
    \reg_rd_data_reg[3]_i_3_0 ,
    \reg_rd_data_reg[3]_i_8_0 ,
    \reg_rd_data_reg[4]_i_2_0 ,
    \reg_rd_data_reg[4]_i_6_0 ,
    \reg_rd_data_reg[5]_i_2_0 ,
    \reg_rd_data_reg[5]_i_6_0 ,
    \reg_rd_data_reg[7]_i_3_0 ,
    \reg_rd_data_reg[7]_i_5_0 ,
    \reg_rd_data_reg[9]_i_3_0 ,
    \reg_rd_data_reg[9]_i_5_0 ,
    \reg_rd_data_reg[11]_i_3_0 ,
    \reg_rd_data_reg[11]_i_5_0 ,
    \reg_rd_data_reg[16] ,
    \reg_rd_data[16]_i_3_0 ,
    \reg_rd_data_reg[17] ,
    \reg_rd_data[18]_i_2_0 ,
    \reg_rd_data[18]_i_2_1 ,
    \reg_rd_data[18]_i_2_2 ,
    \reg_rd_data[19]_i_2_0 ,
    \reg_rd_data[19]_i_2_1 ,
    \reg_rd_data[20]_i_2_0 ,
    \reg_rd_data[20]_i_2_1 ,
    \reg_rd_data[21]_i_2_0 ,
    \reg_rd_data[21]_i_2_1 ,
    \reg_rd_data[22]_i_2_0 ,
    \reg_rd_data[22]_i_2_1 ,
    \reg_rd_data[23]_i_2_0 ,
    \reg_rd_data[23]_i_2_1 ,
    \reg_rd_data[24]_i_2_0 ,
    \reg_rd_data[24]_i_2_1 ,
    intr_cnt_reg,
    \reg_rd_data[25]_i_2_0 ,
    \reg_rd_data[26]_i_2_0 ,
    \reg_rd_data[27]_i_2_0 ,
    \reg_rd_data[28]_i_2_0 ,
    \reg_rd_data[29]_i_2_0 ,
    \reg_rd_data[30]_i_2_0 ,
    \reg_rd_data_reg[31]_2 ,
    \reg_rd_data[31]_i_3_0 ,
    \reg_rd_data[31]_i_3_1 ,
    \reg_rd_data_reg[5]_i_2_1 ,
    \reg_rd_data_reg[6]_i_3_0 ,
    \reg_rd_data_reg[6]_i_3_1 ,
    \reg_rd_data_reg[6]_i_5_0 ,
    \reg_rd_data_reg[7]_i_3_1 ,
    \reg_rd_data_reg[8]_3 ,
    \reg_rd_data[8]_i_3_0 ,
    \reg_rd_data[8]_i_3_1 ,
    \reg_rd_data_reg[9]_i_3_1 ,
    \reg_rd_data_reg[10]_2 ,
    \reg_rd_data[10]_i_3_0 ,
    \reg_rd_data[10]_i_3_1 ,
    \reg_rd_data_reg[11]_i_3_1 ,
    \reg_rd_data_reg[12]_i_3_0 ,
    \reg_rd_data_reg[12]_i_3_1 ,
    \reg_rd_data_reg[12]_i_5_0 ,
    \reg_rd_data_reg[13]_i_3_0 ,
    \reg_rd_data_reg[13]_i_5_0 ,
    \reg_rd_data_reg[13]_i_3_1 ,
    \reg_rd_data_reg[14]_i_3_0 ,
    \reg_rd_data_reg[14]_i_5_0 ,
    \reg_rd_data_reg[14]_i_3_1 ,
    \reg_rd_data_reg[15]_1 ,
    \reg_rd_data[15]_i_4_0 ,
    \reg_rd_data[15]_i_4_1 ,
    \reg_rd_data[16]_i_3_1 ,
    \reg_rd_data[17]_i_5_1 ,
    \reg_rd_data[17]_i_5_2 ,
    \reg_rd_data[19]_i_2_2 ,
    \reg_rd_data[20]_i_2_2 ,
    \reg_rd_data[21]_i_2_2 ,
    \reg_rd_data[22]_i_2_2 ,
    \reg_rd_data[23]_i_2_2 ,
    \reg_rd_data[24]_i_2_2 ,
    \reg_rd_data[25]_i_2_1 ,
    \reg_rd_data[26]_i_2_1 ,
    \reg_rd_data[27]_i_2_1 ,
    \reg_rd_data[28]_i_2_1 ,
    \reg_rd_data[29]_i_2_1 ,
    \reg_rd_data[30]_i_2_1 ,
    \reg_ctrl_reg[31]_0 );
  output empty;
  output rst;
  output empty_fwft_i_reg;
  output fifo_dis_reg_0;
  output full_immed0;
  output req_buf_addr_sel_p1_reg_0;
  output m_axi_wlast_reg;
  output \state_cs_reg[0]_0 ;
  output m_axi_wvalid_reg;
  output busy_reg;
  output m_axi_osc1_awvalid;
  output fifo_dis_reg_1;
  output intr_reg__0_0;
  output next_buf_full_reg_0;
  output mode_reg_0;
  output first_rst;
  output [31:0]\req_addr_reg[31]_0 ;
  output trig_out;
  output \cfg_trig_mask_reg[1] ;
  output \state_cs_reg[1]_0 ;
  output \state_cs_reg[0]_1 ;
  output \state_cs_reg[2]_0 ;
  output \s_axi_reg_araddr[6] ;
  output intr;
  output \s_axi_reg_araddr[2] ;
  output [21:0]D;
  output rd_en;
  output \req_xfer_cnt_reg[0] ;
  output ctl_start_r_reg;
  output trig_out1;
  output intr_cnt0;
  output \cfg_trig_pre_samp_reg[29] ;
  output \s_axi_reg_araddr[7] ;
  output \s_axi_reg_araddr[3] ;
  output \goreg_dm.dout_i_reg[1] ;
  output \reg_rd_data_reg[7]_i_6_0 ;
  output \reg_rd_data_reg[9]_i_6_0 ;
  output \reg_rd_data_reg[11]_i_6_0 ;
  output \cfg_dma_dst_addr1_reg[16] ;
  output \cfg_dma_dst_addr1_reg[17] ;
  output \reg_rd_data_reg[6]_i_6_0 ;
  output [1:0]\reg_ctrl_reg[9]_0 ;
  output \reg_rd_data_reg[12]_i_6_0 ;
  output \reg_rd_data_reg[13]_i_6_0 ;
  output \reg_rd_data_reg[14]_i_6_0 ;
  output \req_addr_reg[15]_0 ;
  output [29:0]missed_samps_ch1;
  output [29:0]missed_samps_ch2;
  output [7:0]m_axi_osc1_awlen;
  input m_axi_osc1_aclk;
  input [7:0]Q;
  input wr_en;
  input clear;
  input \state_cs_reg[0]_2 ;
  input m_axi_wvalid_reg_0;
  input m_axi_wlast_reg_0;
  input busy_reg_0;
  input m_axi_awvalid_reg_0;
  input fifo_dis_reg_2;
  input mode_reg_1;
  input first_rst_reg_0;
  input m_axi_osc1_awready;
  input [0:0]cfg_dma_ctrl_reg;
  input external_trig_val;
  input bit_start;
  input [9:0]rd_data_count;
  input [31:0]\req_buf_addr_reg[31]_0 ;
  input [31:0]\req_buf_addr_reg[31]_1 ;
  input [7:0]bram_addr_a;
  input osc2_dma_intr;
  input \reg_rd_data_reg[31] ;
  input \reg_rd_data_reg[0] ;
  input \reg_rd_data_reg[0]_0 ;
  input \reg_rd_data_reg[1] ;
  input \reg_rd_data_reg[2] ;
  input \reg_rd_data_reg[3] ;
  input \reg_rd_data_reg[0]_1 ;
  input \reg_rd_data_reg[31]_0 ;
  input [13:0]trig_cnt_reg;
  input \reg_rd_data_reg[31]_1 ;
  input [13:0]clk_cnt_reg;
  input \reg_rd_data_reg[30] ;
  input \reg_rd_data_reg[15] ;
  input \reg_rd_data_reg[15]_0 ;
  input \reg_rd_data_reg[29] ;
  input \reg_rd_data_reg[28] ;
  input \reg_rd_data_reg[27] ;
  input \reg_rd_data_reg[26] ;
  input \reg_rd_data_reg[25] ;
  input \reg_rd_data_reg[24] ;
  input \reg_rd_data_reg[23] ;
  input \reg_rd_data_reg[22] ;
  input \reg_rd_data_reg[21] ;
  input \reg_rd_data_reg[20] ;
  input \reg_rd_data_reg[19] ;
  input \reg_rd_data_reg[18] ;
  input \reg_rd_data_reg[10] ;
  input \reg_rd_data_reg[8] ;
  input \reg_rd_data_reg[10]_0 ;
  input \reg_rd_data_reg[10]_1 ;
  input \reg_rd_data_reg[8]_0 ;
  input \reg_rd_data_reg[8]_1 ;
  input \reg_rd_data_reg[8]_2 ;
  input \reg_rd_data_reg[5] ;
  input \reg_rd_data_reg[5]_0 ;
  input \reg_rd_data_reg[5]_1 ;
  input \reg_rd_data_reg[4] ;
  input \reg_rd_data_reg[4]_0 ;
  input \reg_rd_data_reg[4]_1 ;
  input \reg_rd_data_reg[3]_0 ;
  input \reg_rd_data_reg[3]_1 ;
  input \reg_rd_data_reg[3]_2 ;
  input \reg_rd_data_reg[2]_0 ;
  input \reg_rd_data_reg[2]_1 ;
  input \reg_rd_data_reg[2]_2 ;
  input \reg_rd_data_reg[1]_0 ;
  input \reg_rd_data_reg[1]_1 ;
  input \reg_rd_data_reg[1]_2 ;
  input m_axi_osc1_wready;
  input ctl_start_r;
  input m_axi_osc1_aresetn;
  input \xfer_cnt_reg[6] ;
  input use_8bit_r;
  input [5:0]\trig_cnt_reg[0] ;
  input [0:0]trig_ip;
  input [0:0]E;
  input intr_reg;
  input sts_acquire_reg;
  input [7:0]sts_acquire_reg_0;
  input sts_acquire_reg_1;
  input osc1_reg_wr_we;
  input buf_sel_ch2;
  input \reg_rd_data_reg[2]_i_3_0 ;
  input \reg_rd_data[2]_i_8_0 ;
  input [16:0]next_buf_full1_carry__1_i_10_0;
  input \reg_rd_data[2]_i_8_1 ;
  input [17:0]\reg_rd_data[17]_i_5_0 ;
  input \reg_rd_data_reg[0]_i_2_0 ;
  input [15:0]\reg_rd_data_reg[15]_i_9_0 ;
  input [15:0]\reg_rd_data_reg[15]_i_9_1 ;
  input \reg_rd_data[0]_i_5_0 ;
  input \reg_rd_data_reg[1]_3 ;
  input \reg_rd_data_reg[3]_i_3_0 ;
  input \reg_rd_data_reg[3]_i_8_0 ;
  input \reg_rd_data_reg[4]_i_2_0 ;
  input \reg_rd_data_reg[4]_i_6_0 ;
  input \reg_rd_data_reg[5]_i_2_0 ;
  input \reg_rd_data_reg[5]_i_6_0 ;
  input \reg_rd_data_reg[7]_i_3_0 ;
  input \reg_rd_data_reg[7]_i_5_0 ;
  input \reg_rd_data_reg[9]_i_3_0 ;
  input \reg_rd_data_reg[9]_i_5_0 ;
  input \reg_rd_data_reg[11]_i_3_0 ;
  input \reg_rd_data_reg[11]_i_5_0 ;
  input \reg_rd_data_reg[16] ;
  input \reg_rd_data[16]_i_3_0 ;
  input \reg_rd_data_reg[17] ;
  input \reg_rd_data[18]_i_2_0 ;
  input \reg_rd_data[18]_i_2_1 ;
  input \reg_rd_data[18]_i_2_2 ;
  input \reg_rd_data[19]_i_2_0 ;
  input \reg_rd_data[19]_i_2_1 ;
  input \reg_rd_data[20]_i_2_0 ;
  input \reg_rd_data[20]_i_2_1 ;
  input \reg_rd_data[21]_i_2_0 ;
  input \reg_rd_data[21]_i_2_1 ;
  input \reg_rd_data[22]_i_2_0 ;
  input \reg_rd_data[22]_i_2_1 ;
  input \reg_rd_data[23]_i_2_0 ;
  input \reg_rd_data[23]_i_2_1 ;
  input \reg_rd_data[24]_i_2_0 ;
  input \reg_rd_data[24]_i_2_1 ;
  input [6:0]intr_cnt_reg;
  input \reg_rd_data[25]_i_2_0 ;
  input \reg_rd_data[26]_i_2_0 ;
  input \reg_rd_data[27]_i_2_0 ;
  input \reg_rd_data[28]_i_2_0 ;
  input \reg_rd_data[29]_i_2_0 ;
  input \reg_rd_data[30]_i_2_0 ;
  input \reg_rd_data_reg[31]_2 ;
  input \reg_rd_data[31]_i_3_0 ;
  input \reg_rd_data[31]_i_3_1 ;
  input \reg_rd_data_reg[5]_i_2_1 ;
  input \reg_rd_data_reg[6]_i_3_0 ;
  input \reg_rd_data_reg[6]_i_3_1 ;
  input \reg_rd_data_reg[6]_i_5_0 ;
  input \reg_rd_data_reg[7]_i_3_1 ;
  input \reg_rd_data_reg[8]_3 ;
  input \reg_rd_data[8]_i_3_0 ;
  input \reg_rd_data[8]_i_3_1 ;
  input \reg_rd_data_reg[9]_i_3_1 ;
  input \reg_rd_data_reg[10]_2 ;
  input \reg_rd_data[10]_i_3_0 ;
  input \reg_rd_data[10]_i_3_1 ;
  input \reg_rd_data_reg[11]_i_3_1 ;
  input \reg_rd_data_reg[12]_i_3_0 ;
  input \reg_rd_data_reg[12]_i_3_1 ;
  input \reg_rd_data_reg[12]_i_5_0 ;
  input \reg_rd_data_reg[13]_i_3_0 ;
  input \reg_rd_data_reg[13]_i_5_0 ;
  input \reg_rd_data_reg[13]_i_3_1 ;
  input \reg_rd_data_reg[14]_i_3_0 ;
  input \reg_rd_data_reg[14]_i_5_0 ;
  input \reg_rd_data_reg[14]_i_3_1 ;
  input \reg_rd_data_reg[15]_1 ;
  input \reg_rd_data[15]_i_4_0 ;
  input \reg_rd_data[15]_i_4_1 ;
  input \reg_rd_data[16]_i_3_1 ;
  input \reg_rd_data[17]_i_5_1 ;
  input \reg_rd_data[17]_i_5_2 ;
  input \reg_rd_data[19]_i_2_2 ;
  input \reg_rd_data[20]_i_2_2 ;
  input \reg_rd_data[21]_i_2_2 ;
  input \reg_rd_data[22]_i_2_2 ;
  input \reg_rd_data[23]_i_2_2 ;
  input \reg_rd_data[24]_i_2_2 ;
  input \reg_rd_data[25]_i_2_1 ;
  input \reg_rd_data[26]_i_2_1 ;
  input \reg_rd_data[27]_i_2_1 ;
  input \reg_rd_data[28]_i_2_1 ;
  input \reg_rd_data[29]_i_2_1 ;
  input \reg_rd_data[30]_i_2_1 ;
  input [31:0]\reg_ctrl_reg[31]_0 ;

  wire [21:0]D;
  wire [0:0]E;
  wire [7:0]Q;
  wire U_dma_s2mm_data_ctrl_n_10;
  wire U_dma_s2mm_data_ctrl_n_13;
  wire U_dma_s2mm_data_ctrl_n_14;
  wire U_dma_s2mm_data_ctrl_n_15;
  wire U_dma_s2mm_data_ctrl_n_17;
  wire U_dma_s2mm_data_ctrl_n_8;
  wire U_fifo_axi_req_i_11_n_0;
  wire axi_last_r;
  wire axi_last_r2;
  wire bit_start;
  wire bit_start_0;
  wire [7:0]bram_addr_a;
  wire buf1_full_i_1_n_0;
  wire buf1_full_i_2__0_n_0;
  wire buf1_missed_samp0;
  wire \buf1_missed_samp[0]_i_10_n_0 ;
  wire \buf1_missed_samp[0]_i_11_n_0 ;
  wire \buf1_missed_samp[0]_i_12_n_0 ;
  wire \buf1_missed_samp[0]_i_13_n_0 ;
  wire \buf1_missed_samp[0]_i_4_n_0 ;
  wire \buf1_missed_samp[0]_i_5_n_0 ;
  wire \buf1_missed_samp[0]_i_6_n_0 ;
  wire \buf1_missed_samp[0]_i_7_n_0 ;
  wire \buf1_missed_samp[0]_i_8_n_0 ;
  wire \buf1_missed_samp[0]_i_9_n_0 ;
  wire [31:0]buf1_missed_samp_reg;
  wire \buf1_missed_samp_reg[0]_i_3_n_0 ;
  wire \buf1_missed_samp_reg[0]_i_3_n_1 ;
  wire \buf1_missed_samp_reg[0]_i_3_n_2 ;
  wire \buf1_missed_samp_reg[0]_i_3_n_3 ;
  wire \buf1_missed_samp_reg[0]_i_3_n_4 ;
  wire \buf1_missed_samp_reg[0]_i_3_n_5 ;
  wire \buf1_missed_samp_reg[0]_i_3_n_6 ;
  wire \buf1_missed_samp_reg[0]_i_3_n_7 ;
  wire \buf1_missed_samp_reg[12]_i_1_n_0 ;
  wire \buf1_missed_samp_reg[12]_i_1_n_1 ;
  wire \buf1_missed_samp_reg[12]_i_1_n_2 ;
  wire \buf1_missed_samp_reg[12]_i_1_n_3 ;
  wire \buf1_missed_samp_reg[12]_i_1_n_4 ;
  wire \buf1_missed_samp_reg[12]_i_1_n_5 ;
  wire \buf1_missed_samp_reg[12]_i_1_n_6 ;
  wire \buf1_missed_samp_reg[12]_i_1_n_7 ;
  wire \buf1_missed_samp_reg[16]_i_1_n_0 ;
  wire \buf1_missed_samp_reg[16]_i_1_n_1 ;
  wire \buf1_missed_samp_reg[16]_i_1_n_2 ;
  wire \buf1_missed_samp_reg[16]_i_1_n_3 ;
  wire \buf1_missed_samp_reg[16]_i_1_n_4 ;
  wire \buf1_missed_samp_reg[16]_i_1_n_5 ;
  wire \buf1_missed_samp_reg[16]_i_1_n_6 ;
  wire \buf1_missed_samp_reg[16]_i_1_n_7 ;
  wire \buf1_missed_samp_reg[20]_i_1_n_0 ;
  wire \buf1_missed_samp_reg[20]_i_1_n_1 ;
  wire \buf1_missed_samp_reg[20]_i_1_n_2 ;
  wire \buf1_missed_samp_reg[20]_i_1_n_3 ;
  wire \buf1_missed_samp_reg[20]_i_1_n_4 ;
  wire \buf1_missed_samp_reg[20]_i_1_n_5 ;
  wire \buf1_missed_samp_reg[20]_i_1_n_6 ;
  wire \buf1_missed_samp_reg[20]_i_1_n_7 ;
  wire \buf1_missed_samp_reg[24]_i_1_n_0 ;
  wire \buf1_missed_samp_reg[24]_i_1_n_1 ;
  wire \buf1_missed_samp_reg[24]_i_1_n_2 ;
  wire \buf1_missed_samp_reg[24]_i_1_n_3 ;
  wire \buf1_missed_samp_reg[24]_i_1_n_4 ;
  wire \buf1_missed_samp_reg[24]_i_1_n_5 ;
  wire \buf1_missed_samp_reg[24]_i_1_n_6 ;
  wire \buf1_missed_samp_reg[24]_i_1_n_7 ;
  wire \buf1_missed_samp_reg[28]_i_1_n_1 ;
  wire \buf1_missed_samp_reg[28]_i_1_n_2 ;
  wire \buf1_missed_samp_reg[28]_i_1_n_3 ;
  wire \buf1_missed_samp_reg[28]_i_1_n_4 ;
  wire \buf1_missed_samp_reg[28]_i_1_n_5 ;
  wire \buf1_missed_samp_reg[28]_i_1_n_6 ;
  wire \buf1_missed_samp_reg[28]_i_1_n_7 ;
  wire \buf1_missed_samp_reg[4]_i_1_n_0 ;
  wire \buf1_missed_samp_reg[4]_i_1_n_1 ;
  wire \buf1_missed_samp_reg[4]_i_1_n_2 ;
  wire \buf1_missed_samp_reg[4]_i_1_n_3 ;
  wire \buf1_missed_samp_reg[4]_i_1_n_4 ;
  wire \buf1_missed_samp_reg[4]_i_1_n_5 ;
  wire \buf1_missed_samp_reg[4]_i_1_n_6 ;
  wire \buf1_missed_samp_reg[4]_i_1_n_7 ;
  wire \buf1_missed_samp_reg[8]_i_1_n_0 ;
  wire \buf1_missed_samp_reg[8]_i_1_n_1 ;
  wire \buf1_missed_samp_reg[8]_i_1_n_2 ;
  wire \buf1_missed_samp_reg[8]_i_1_n_3 ;
  wire \buf1_missed_samp_reg[8]_i_1_n_4 ;
  wire \buf1_missed_samp_reg[8]_i_1_n_5 ;
  wire \buf1_missed_samp_reg[8]_i_1_n_6 ;
  wire \buf1_missed_samp_reg[8]_i_1_n_7 ;
  wire [9:0]buf1_ms_lvl;
  wire \buf1_ms_lvl[0]_i_1_n_0 ;
  wire \buf1_ms_lvl[1]_i_1_n_0 ;
  wire \buf1_ms_lvl[2]_i_1_n_0 ;
  wire \buf1_ms_lvl[3]_i_1_n_0 ;
  wire \buf1_ms_lvl[4]_i_1_n_0 ;
  wire \buf1_ms_lvl[5]_i_1_n_0 ;
  wire \buf1_ms_lvl[6]_i_1_n_0 ;
  wire \buf1_ms_lvl[7]_i_1_n_0 ;
  wire \buf1_ms_lvl[8]_i_1_n_0 ;
  wire \buf1_ms_lvl[9]_i_1_n_0 ;
  wire \buf1_ms_lvl[9]_i_2_n_0 ;
  wire \buf1_ms_lvl[9]_i_3_n_0 ;
  wire buf1_ovr_i_1_n_0;
  wire buf2_full_i_1_n_0;
  wire buf2_missed_samp0;
  wire \buf2_missed_samp[0]_i_10_n_0 ;
  wire \buf2_missed_samp[0]_i_11_n_0 ;
  wire \buf2_missed_samp[0]_i_12_n_0 ;
  wire \buf2_missed_samp[0]_i_4_n_0 ;
  wire \buf2_missed_samp[0]_i_5_n_0 ;
  wire \buf2_missed_samp[0]_i_6_n_0 ;
  wire \buf2_missed_samp[0]_i_7_n_0 ;
  wire \buf2_missed_samp[0]_i_8_n_0 ;
  wire \buf2_missed_samp[0]_i_9_n_0 ;
  wire [31:0]buf2_missed_samp_reg;
  wire \buf2_missed_samp_reg[0]_i_3_n_0 ;
  wire \buf2_missed_samp_reg[0]_i_3_n_1 ;
  wire \buf2_missed_samp_reg[0]_i_3_n_2 ;
  wire \buf2_missed_samp_reg[0]_i_3_n_3 ;
  wire \buf2_missed_samp_reg[0]_i_3_n_4 ;
  wire \buf2_missed_samp_reg[0]_i_3_n_5 ;
  wire \buf2_missed_samp_reg[0]_i_3_n_6 ;
  wire \buf2_missed_samp_reg[0]_i_3_n_7 ;
  wire \buf2_missed_samp_reg[12]_i_1_n_0 ;
  wire \buf2_missed_samp_reg[12]_i_1_n_1 ;
  wire \buf2_missed_samp_reg[12]_i_1_n_2 ;
  wire \buf2_missed_samp_reg[12]_i_1_n_3 ;
  wire \buf2_missed_samp_reg[12]_i_1_n_4 ;
  wire \buf2_missed_samp_reg[12]_i_1_n_5 ;
  wire \buf2_missed_samp_reg[12]_i_1_n_6 ;
  wire \buf2_missed_samp_reg[12]_i_1_n_7 ;
  wire \buf2_missed_samp_reg[16]_i_1_n_0 ;
  wire \buf2_missed_samp_reg[16]_i_1_n_1 ;
  wire \buf2_missed_samp_reg[16]_i_1_n_2 ;
  wire \buf2_missed_samp_reg[16]_i_1_n_3 ;
  wire \buf2_missed_samp_reg[16]_i_1_n_4 ;
  wire \buf2_missed_samp_reg[16]_i_1_n_5 ;
  wire \buf2_missed_samp_reg[16]_i_1_n_6 ;
  wire \buf2_missed_samp_reg[16]_i_1_n_7 ;
  wire \buf2_missed_samp_reg[20]_i_1_n_0 ;
  wire \buf2_missed_samp_reg[20]_i_1_n_1 ;
  wire \buf2_missed_samp_reg[20]_i_1_n_2 ;
  wire \buf2_missed_samp_reg[20]_i_1_n_3 ;
  wire \buf2_missed_samp_reg[20]_i_1_n_4 ;
  wire \buf2_missed_samp_reg[20]_i_1_n_5 ;
  wire \buf2_missed_samp_reg[20]_i_1_n_6 ;
  wire \buf2_missed_samp_reg[20]_i_1_n_7 ;
  wire \buf2_missed_samp_reg[24]_i_1_n_0 ;
  wire \buf2_missed_samp_reg[24]_i_1_n_1 ;
  wire \buf2_missed_samp_reg[24]_i_1_n_2 ;
  wire \buf2_missed_samp_reg[24]_i_1_n_3 ;
  wire \buf2_missed_samp_reg[24]_i_1_n_4 ;
  wire \buf2_missed_samp_reg[24]_i_1_n_5 ;
  wire \buf2_missed_samp_reg[24]_i_1_n_6 ;
  wire \buf2_missed_samp_reg[24]_i_1_n_7 ;
  wire \buf2_missed_samp_reg[28]_i_1_n_1 ;
  wire \buf2_missed_samp_reg[28]_i_1_n_2 ;
  wire \buf2_missed_samp_reg[28]_i_1_n_3 ;
  wire \buf2_missed_samp_reg[28]_i_1_n_4 ;
  wire \buf2_missed_samp_reg[28]_i_1_n_5 ;
  wire \buf2_missed_samp_reg[28]_i_1_n_6 ;
  wire \buf2_missed_samp_reg[28]_i_1_n_7 ;
  wire \buf2_missed_samp_reg[4]_i_1_n_0 ;
  wire \buf2_missed_samp_reg[4]_i_1_n_1 ;
  wire \buf2_missed_samp_reg[4]_i_1_n_2 ;
  wire \buf2_missed_samp_reg[4]_i_1_n_3 ;
  wire \buf2_missed_samp_reg[4]_i_1_n_4 ;
  wire \buf2_missed_samp_reg[4]_i_1_n_5 ;
  wire \buf2_missed_samp_reg[4]_i_1_n_6 ;
  wire \buf2_missed_samp_reg[4]_i_1_n_7 ;
  wire \buf2_missed_samp_reg[8]_i_1_n_0 ;
  wire \buf2_missed_samp_reg[8]_i_1_n_1 ;
  wire \buf2_missed_samp_reg[8]_i_1_n_2 ;
  wire \buf2_missed_samp_reg[8]_i_1_n_3 ;
  wire \buf2_missed_samp_reg[8]_i_1_n_4 ;
  wire \buf2_missed_samp_reg[8]_i_1_n_5 ;
  wire \buf2_missed_samp_reg[8]_i_1_n_6 ;
  wire \buf2_missed_samp_reg[8]_i_1_n_7 ;
  wire [9:0]buf2_ms_lvl;
  wire \buf2_ms_lvl[9]_i_1_n_0 ;
  wire \buf2_ms_lvl[9]_i_2_n_0 ;
  wire buf2_ovr_i_1_n_0;
  wire buf_sel_ch2;
  wire busy_reg;
  wire busy_reg_0;
  wire [0:0]cfg_dma_ctrl_reg;
  wire [31:0]cfg_dma_ctrl_reg_0;
  wire \cfg_dma_dst_addr1_reg[16] ;
  wire \cfg_dma_dst_addr1_reg[17] ;
  wire [4:0]cfg_dma_sts_reg;
  wire \cfg_trig_mask_reg[1] ;
  wire \cfg_trig_pre_samp_reg[29] ;
  wire clear;
  wire [13:0]clk_cnt_reg;
  wire ctl_start_r;
  wire ctl_start_r_reg;
  wire [7:0]dat_ctrl_req_data;
  wire empty;
  wire empty_fwft_i_reg;
  wire external_trig_val;
  wire fifo_dis_reg_0;
  wire fifo_dis_reg_1;
  wire fifo_dis_reg_2;
  wire [7:0]fifo_rd_data;
  wire fifo_rd_re;
  wire fifo_rst_cnt;
  wire [4:0]fifo_rst_cnt_reg;
  wire fifo_rst_i_2_n_0;
  wire first_rst;
  wire first_rst_reg_0;
  wire full_immed0;
  wire \goreg_dm.dout_i_reg[1] ;
  wire i__carry_i_1__3_n_0;
  wire intr;
  wire intr_cnt0;
  wire [6:0]intr_cnt_reg;
  wire intr_i_3_n_0;
  wire intr_reg;
  wire intr_reg__0_0;
  wire [0:0]m_axi_awlen0;
  wire \m_axi_awlen[1]_i_1_n_0 ;
  wire \m_axi_awlen[2]_i_1_n_0 ;
  wire \m_axi_awlen[3]_i_1_n_0 ;
  wire \m_axi_awlen[4]_i_1_n_0 ;
  wire \m_axi_awlen[5]_i_1_n_0 ;
  wire \m_axi_awlen[6]_i_1_n_0 ;
  wire \m_axi_awlen[7]_i_1_n_0 ;
  wire \m_axi_awlen[7]_i_2_n_0 ;
  wire \m_axi_awlen[7]_i_3_n_0 ;
  wire m_axi_awvalid_reg_0;
  wire m_axi_osc1_aclk;
  wire m_axi_osc1_aresetn;
  wire [7:0]m_axi_osc1_awlen;
  wire m_axi_osc1_awready;
  wire m_axi_osc1_awvalid;
  wire m_axi_osc1_wready;
  wire m_axi_wlast_reg;
  wire m_axi_wlast_reg_0;
  wire m_axi_wvalid_reg;
  wire m_axi_wvalid_reg_0;
  wire [29:0]missed_samps_ch1;
  wire [29:0]missed_samps_ch2;
  wire mode_reg_0;
  wire mode_reg_1;
  wire next_buf_full1;
  wire next_buf_full1_carry__0_i_10_n_0;
  wire next_buf_full1_carry__0_i_10_n_1;
  wire next_buf_full1_carry__0_i_10_n_2;
  wire next_buf_full1_carry__0_i_10_n_3;
  wire next_buf_full1_carry__0_i_11_n_0;
  wire next_buf_full1_carry__0_i_12_n_0;
  wire next_buf_full1_carry__0_i_13_n_0;
  wire next_buf_full1_carry__0_i_14_n_0;
  wire next_buf_full1_carry__0_i_15_n_0;
  wire next_buf_full1_carry__0_i_16_n_0;
  wire next_buf_full1_carry__0_i_17_n_0;
  wire next_buf_full1_carry__0_i_18_n_0;
  wire next_buf_full1_carry__0_i_1_n_0;
  wire next_buf_full1_carry__0_i_2_n_0;
  wire next_buf_full1_carry__0_i_3_n_0;
  wire next_buf_full1_carry__0_i_4_n_0;
  wire next_buf_full1_carry__0_i_5_n_0;
  wire next_buf_full1_carry__0_i_6_n_0;
  wire next_buf_full1_carry__0_i_7_n_0;
  wire next_buf_full1_carry__0_i_8_n_0;
  wire next_buf_full1_carry__0_i_9_n_0;
  wire next_buf_full1_carry__0_i_9_n_1;
  wire next_buf_full1_carry__0_i_9_n_2;
  wire next_buf_full1_carry__0_i_9_n_3;
  wire next_buf_full1_carry__0_n_0;
  wire next_buf_full1_carry__0_n_1;
  wire next_buf_full1_carry__0_n_2;
  wire next_buf_full1_carry__0_n_3;
  wire [16:0]next_buf_full1_carry__1_i_10_0;
  wire next_buf_full1_carry__1_i_10_n_0;
  wire next_buf_full1_carry__1_i_10_n_1;
  wire next_buf_full1_carry__1_i_10_n_2;
  wire next_buf_full1_carry__1_i_10_n_3;
  wire next_buf_full1_carry__1_i_11_n_0;
  wire next_buf_full1_carry__1_i_1_n_0;
  wire next_buf_full1_carry__1_i_2_n_0;
  wire next_buf_full1_carry__1_i_3_n_0;
  wire next_buf_full1_carry__1_i_4_n_0;
  wire next_buf_full1_carry__1_i_5_n_0;
  wire next_buf_full1_carry__1_i_6_n_0;
  wire next_buf_full1_carry__1_i_7_n_0;
  wire next_buf_full1_carry__1_i_8_n_0;
  wire next_buf_full1_carry__1_i_9_n_0;
  wire next_buf_full1_carry__1_i_9_n_1;
  wire next_buf_full1_carry__1_i_9_n_2;
  wire next_buf_full1_carry__1_i_9_n_3;
  wire next_buf_full1_carry__1_n_0;
  wire next_buf_full1_carry__1_n_1;
  wire next_buf_full1_carry__1_n_2;
  wire next_buf_full1_carry__1_n_3;
  wire next_buf_full1_carry__2_i_10_n_0;
  wire next_buf_full1_carry__2_i_10_n_1;
  wire next_buf_full1_carry__2_i_10_n_2;
  wire next_buf_full1_carry__2_i_10_n_3;
  wire next_buf_full1_carry__2_i_1_n_0;
  wire next_buf_full1_carry__2_i_2_n_0;
  wire next_buf_full1_carry__2_i_3_n_0;
  wire next_buf_full1_carry__2_i_4_n_0;
  wire next_buf_full1_carry__2_i_5_n_0;
  wire next_buf_full1_carry__2_i_6_n_0;
  wire next_buf_full1_carry__2_i_7_n_0;
  wire next_buf_full1_carry__2_i_8_n_0;
  wire next_buf_full1_carry__2_i_9_n_1;
  wire next_buf_full1_carry__2_i_9_n_2;
  wire next_buf_full1_carry__2_i_9_n_3;
  wire next_buf_full1_carry__2_n_1;
  wire next_buf_full1_carry__2_n_2;
  wire next_buf_full1_carry__2_n_3;
  wire next_buf_full1_carry_i_10_n_0;
  wire next_buf_full1_carry_i_10_n_1;
  wire next_buf_full1_carry_i_10_n_2;
  wire next_buf_full1_carry_i_10_n_3;
  wire next_buf_full1_carry_i_11_n_0;
  wire next_buf_full1_carry_i_12_n_0;
  wire next_buf_full1_carry_i_13_n_0;
  wire next_buf_full1_carry_i_14_n_0;
  wire next_buf_full1_carry_i_15_n_0;
  wire next_buf_full1_carry_i_16_n_0;
  wire next_buf_full1_carry_i_17_n_0;
  wire next_buf_full1_carry_i_18_n_0;
  wire next_buf_full1_carry_i_1_n_0;
  wire next_buf_full1_carry_i_2_n_0;
  wire next_buf_full1_carry_i_3_n_0;
  wire next_buf_full1_carry_i_4_n_0;
  wire next_buf_full1_carry_i_5_n_0;
  wire next_buf_full1_carry_i_6_n_0;
  wire next_buf_full1_carry_i_7_n_0;
  wire next_buf_full1_carry_i_8_n_0;
  wire next_buf_full1_carry_i_9_n_0;
  wire next_buf_full1_carry_i_9_n_1;
  wire next_buf_full1_carry_i_9_n_2;
  wire next_buf_full1_carry_i_9_n_3;
  wire next_buf_full1_carry_n_0;
  wire next_buf_full1_carry_n_1;
  wire next_buf_full1_carry_n_2;
  wire next_buf_full1_carry_n_3;
  wire [31:0]next_buf_full2;
  wire [31:6]next_buf_full20_in;
  wire \next_buf_full2_inferred__0/i__carry__0_n_0 ;
  wire \next_buf_full2_inferred__0/i__carry__0_n_1 ;
  wire \next_buf_full2_inferred__0/i__carry__0_n_2 ;
  wire \next_buf_full2_inferred__0/i__carry__0_n_3 ;
  wire \next_buf_full2_inferred__0/i__carry__1_n_0 ;
  wire \next_buf_full2_inferred__0/i__carry__1_n_1 ;
  wire \next_buf_full2_inferred__0/i__carry__1_n_2 ;
  wire \next_buf_full2_inferred__0/i__carry__1_n_3 ;
  wire \next_buf_full2_inferred__0/i__carry__2_n_0 ;
  wire \next_buf_full2_inferred__0/i__carry__2_n_1 ;
  wire \next_buf_full2_inferred__0/i__carry__2_n_2 ;
  wire \next_buf_full2_inferred__0/i__carry__2_n_3 ;
  wire \next_buf_full2_inferred__0/i__carry__3_n_0 ;
  wire \next_buf_full2_inferred__0/i__carry__3_n_1 ;
  wire \next_buf_full2_inferred__0/i__carry__3_n_2 ;
  wire \next_buf_full2_inferred__0/i__carry__3_n_3 ;
  wire \next_buf_full2_inferred__0/i__carry__4_n_0 ;
  wire \next_buf_full2_inferred__0/i__carry__4_n_1 ;
  wire \next_buf_full2_inferred__0/i__carry__4_n_2 ;
  wire \next_buf_full2_inferred__0/i__carry__4_n_3 ;
  wire \next_buf_full2_inferred__0/i__carry__5_n_3 ;
  wire \next_buf_full2_inferred__0/i__carry_n_0 ;
  wire \next_buf_full2_inferred__0/i__carry_n_1 ;
  wire \next_buf_full2_inferred__0/i__carry_n_2 ;
  wire \next_buf_full2_inferred__0/i__carry_n_3 ;
  wire next_buf_full_i_1_n_0;
  wire next_buf_full_reg_0;
  wire osc1_reg_wr_we;
  wire osc2_dma_intr;
  wire [4:0]p_0_in__0;
  wire p_3_in;
  wire [9:0]rd_data_count;
  wire rd_en;
  wire reg_ctrl122_out;
  wire \reg_ctrl[0]_i_1_n_0 ;
  wire \reg_ctrl[1]_i_1_n_0 ;
  wire \reg_ctrl[2]_i_1_n_0 ;
  wire \reg_ctrl[3]_i_1_n_0 ;
  wire \reg_ctrl[3]_i_2_n_0 ;
  wire \reg_ctrl[3]_i_3_n_0 ;
  wire \reg_ctrl[4]_i_1_n_0 ;
  wire \reg_ctrl[8]_i_1_n_0 ;
  wire \reg_ctrl[9]_i_1_n_0 ;
  wire [31:0]\reg_ctrl_reg[31]_0 ;
  wire [1:0]\reg_ctrl_reg[9]_0 ;
  wire \reg_rd_data[0]_i_10_n_0 ;
  wire \reg_rd_data[0]_i_12_n_0 ;
  wire \reg_rd_data[0]_i_5_0 ;
  wire \reg_rd_data[0]_i_5_n_0 ;
  wire \reg_rd_data[0]_i_9_n_0 ;
  wire \reg_rd_data[10]_i_11_n_0 ;
  wire \reg_rd_data[10]_i_18_n_0 ;
  wire \reg_rd_data[10]_i_19_n_0 ;
  wire \reg_rd_data[10]_i_20_n_0 ;
  wire \reg_rd_data[10]_i_21_n_0 ;
  wire \reg_rd_data[10]_i_22_n_0 ;
  wire \reg_rd_data[10]_i_23_n_0 ;
  wire \reg_rd_data[10]_i_25_n_0 ;
  wire \reg_rd_data[10]_i_26_n_0 ;
  wire \reg_rd_data[10]_i_27_n_0 ;
  wire \reg_rd_data[10]_i_28_n_0 ;
  wire \reg_rd_data[10]_i_29_n_0 ;
  wire \reg_rd_data[10]_i_30_n_0 ;
  wire \reg_rd_data[10]_i_31_n_0 ;
  wire \reg_rd_data[10]_i_32_n_0 ;
  wire \reg_rd_data[10]_i_33_n_0 ;
  wire \reg_rd_data[10]_i_34_n_0 ;
  wire \reg_rd_data[10]_i_35_n_0 ;
  wire \reg_rd_data[10]_i_36_n_0 ;
  wire \reg_rd_data[10]_i_37_n_0 ;
  wire \reg_rd_data[10]_i_38_n_0 ;
  wire \reg_rd_data[10]_i_3_0 ;
  wire \reg_rd_data[10]_i_3_1 ;
  wire \reg_rd_data[10]_i_3_n_0 ;
  wire \reg_rd_data[10]_i_6_n_0 ;
  wire \reg_rd_data[11]_i_10_n_0 ;
  wire \reg_rd_data[11]_i_8_n_0 ;
  wire \reg_rd_data[12]_i_10_n_0 ;
  wire \reg_rd_data[12]_i_8_n_0 ;
  wire \reg_rd_data[13]_i_10_n_0 ;
  wire \reg_rd_data[13]_i_8_n_0 ;
  wire \reg_rd_data[14]_i_10_n_0 ;
  wire \reg_rd_data[14]_i_8_n_0 ;
  wire \reg_rd_data[15]_i_12_n_0 ;
  wire \reg_rd_data[15]_i_4_0 ;
  wire \reg_rd_data[15]_i_4_1 ;
  wire \reg_rd_data[15]_i_7_n_0 ;
  wire \reg_rd_data[16]_i_3_0 ;
  wire \reg_rd_data[16]_i_3_1 ;
  wire \reg_rd_data[16]_i_5_n_0 ;
  wire \reg_rd_data[16]_i_7_n_0 ;
  wire \reg_rd_data[17]_i_10_n_0 ;
  wire [17:0]\reg_rd_data[17]_i_5_0 ;
  wire \reg_rd_data[17]_i_5_1 ;
  wire \reg_rd_data[17]_i_5_2 ;
  wire \reg_rd_data[17]_i_8_n_0 ;
  wire \reg_rd_data[18]_i_2_0 ;
  wire \reg_rd_data[18]_i_2_1 ;
  wire \reg_rd_data[18]_i_2_2 ;
  wire \reg_rd_data[18]_i_2_n_0 ;
  wire \reg_rd_data[18]_i_4_n_0 ;
  wire \reg_rd_data[18]_i_5_n_0 ;
  wire \reg_rd_data[19]_i_2_0 ;
  wire \reg_rd_data[19]_i_2_1 ;
  wire \reg_rd_data[19]_i_2_2 ;
  wire \reg_rd_data[19]_i_2_n_0 ;
  wire \reg_rd_data[19]_i_4_n_0 ;
  wire \reg_rd_data[19]_i_5_n_0 ;
  wire \reg_rd_data[1]_i_12_n_0 ;
  wire \reg_rd_data[1]_i_13_n_0 ;
  wire \reg_rd_data[1]_i_3_n_0 ;
  wire \reg_rd_data[1]_i_9_n_0 ;
  wire \reg_rd_data[20]_i_2_0 ;
  wire \reg_rd_data[20]_i_2_1 ;
  wire \reg_rd_data[20]_i_2_2 ;
  wire \reg_rd_data[20]_i_2_n_0 ;
  wire \reg_rd_data[20]_i_3_n_0 ;
  wire \reg_rd_data[20]_i_4_n_0 ;
  wire \reg_rd_data[21]_i_2_0 ;
  wire \reg_rd_data[21]_i_2_1 ;
  wire \reg_rd_data[21]_i_2_2 ;
  wire \reg_rd_data[21]_i_2_n_0 ;
  wire \reg_rd_data[21]_i_4_n_0 ;
  wire \reg_rd_data[21]_i_5_n_0 ;
  wire \reg_rd_data[22]_i_2_0 ;
  wire \reg_rd_data[22]_i_2_1 ;
  wire \reg_rd_data[22]_i_2_2 ;
  wire \reg_rd_data[22]_i_2_n_0 ;
  wire \reg_rd_data[22]_i_4_n_0 ;
  wire \reg_rd_data[22]_i_5_n_0 ;
  wire \reg_rd_data[23]_i_2_0 ;
  wire \reg_rd_data[23]_i_2_1 ;
  wire \reg_rd_data[23]_i_2_2 ;
  wire \reg_rd_data[23]_i_2_n_0 ;
  wire \reg_rd_data[23]_i_4_n_0 ;
  wire \reg_rd_data[23]_i_5_n_0 ;
  wire \reg_rd_data[24]_i_2_0 ;
  wire \reg_rd_data[24]_i_2_1 ;
  wire \reg_rd_data[24]_i_2_2 ;
  wire \reg_rd_data[24]_i_2_n_0 ;
  wire \reg_rd_data[24]_i_4_n_0 ;
  wire \reg_rd_data[24]_i_5_n_0 ;
  wire \reg_rd_data[25]_i_2_0 ;
  wire \reg_rd_data[25]_i_2_1 ;
  wire \reg_rd_data[25]_i_2_n_0 ;
  wire \reg_rd_data[25]_i_4_n_0 ;
  wire \reg_rd_data[25]_i_5_n_0 ;
  wire \reg_rd_data[26]_i_2_0 ;
  wire \reg_rd_data[26]_i_2_1 ;
  wire \reg_rd_data[26]_i_2_n_0 ;
  wire \reg_rd_data[26]_i_4_n_0 ;
  wire \reg_rd_data[26]_i_5_n_0 ;
  wire \reg_rd_data[27]_i_2_0 ;
  wire \reg_rd_data[27]_i_2_1 ;
  wire \reg_rd_data[27]_i_2_n_0 ;
  wire \reg_rd_data[27]_i_4_n_0 ;
  wire \reg_rd_data[27]_i_5_n_0 ;
  wire \reg_rd_data[28]_i_2_0 ;
  wire \reg_rd_data[28]_i_2_1 ;
  wire \reg_rd_data[28]_i_2_n_0 ;
  wire \reg_rd_data[28]_i_4_n_0 ;
  wire \reg_rd_data[28]_i_5_n_0 ;
  wire \reg_rd_data[29]_i_2_0 ;
  wire \reg_rd_data[29]_i_2_1 ;
  wire \reg_rd_data[29]_i_2_n_0 ;
  wire \reg_rd_data[29]_i_4_n_0 ;
  wire \reg_rd_data[29]_i_5_n_0 ;
  wire \reg_rd_data[2]_i_15_n_0 ;
  wire \reg_rd_data[2]_i_16_n_0 ;
  wire \reg_rd_data[2]_i_21_n_0 ;
  wire \reg_rd_data[2]_i_8_0 ;
  wire \reg_rd_data[2]_i_8_1 ;
  wire \reg_rd_data[2]_i_8_n_0 ;
  wire \reg_rd_data[30]_i_2_0 ;
  wire \reg_rd_data[30]_i_2_1 ;
  wire \reg_rd_data[30]_i_2_n_0 ;
  wire \reg_rd_data[30]_i_4_n_0 ;
  wire \reg_rd_data[30]_i_5_n_0 ;
  wire \reg_rd_data[31]_i_10_n_0 ;
  wire \reg_rd_data[31]_i_3_0 ;
  wire \reg_rd_data[31]_i_3_1 ;
  wire \reg_rd_data[31]_i_3_n_0 ;
  wire \reg_rd_data[31]_i_9_n_0 ;
  wire \reg_rd_data[3]_i_12_n_0 ;
  wire \reg_rd_data[3]_i_14_n_0 ;
  wire \reg_rd_data[3]_i_15_n_0 ;
  wire \reg_rd_data[4]_i_10_n_0 ;
  wire \reg_rd_data[4]_i_12_n_0 ;
  wire \reg_rd_data[4]_i_13_n_0 ;
  wire \reg_rd_data[5]_i_10_n_0 ;
  wire \reg_rd_data[5]_i_12_n_0 ;
  wire \reg_rd_data[6]_i_10_n_0 ;
  wire \reg_rd_data[6]_i_8_n_0 ;
  wire \reg_rd_data[7]_i_10_n_0 ;
  wire \reg_rd_data[7]_i_8_n_0 ;
  wire \reg_rd_data[8]_i_11_n_0 ;
  wire \reg_rd_data[8]_i_3_0 ;
  wire \reg_rd_data[8]_i_3_1 ;
  wire \reg_rd_data[8]_i_3_n_0 ;
  wire \reg_rd_data[8]_i_6_n_0 ;
  wire \reg_rd_data[9]_i_10_n_0 ;
  wire \reg_rd_data[9]_i_8_n_0 ;
  wire \reg_rd_data_reg[0] ;
  wire \reg_rd_data_reg[0]_0 ;
  wire \reg_rd_data_reg[0]_1 ;
  wire \reg_rd_data_reg[0]_i_2_0 ;
  wire \reg_rd_data_reg[0]_i_2_n_0 ;
  wire \reg_rd_data_reg[10] ;
  wire \reg_rd_data_reg[10]_0 ;
  wire \reg_rd_data_reg[10]_1 ;
  wire \reg_rd_data_reg[10]_2 ;
  wire \reg_rd_data_reg[10]_i_13_n_0 ;
  wire \reg_rd_data_reg[10]_i_13_n_1 ;
  wire \reg_rd_data_reg[10]_i_13_n_2 ;
  wire \reg_rd_data_reg[10]_i_13_n_3 ;
  wire \reg_rd_data_reg[10]_i_14_n_0 ;
  wire \reg_rd_data_reg[10]_i_14_n_1 ;
  wire \reg_rd_data_reg[10]_i_14_n_2 ;
  wire \reg_rd_data_reg[10]_i_14_n_3 ;
  wire \reg_rd_data_reg[10]_i_15_n_0 ;
  wire \reg_rd_data_reg[10]_i_15_n_1 ;
  wire \reg_rd_data_reg[10]_i_15_n_2 ;
  wire \reg_rd_data_reg[10]_i_15_n_3 ;
  wire \reg_rd_data_reg[10]_i_16_n_0 ;
  wire \reg_rd_data_reg[10]_i_16_n_1 ;
  wire \reg_rd_data_reg[10]_i_16_n_2 ;
  wire \reg_rd_data_reg[10]_i_16_n_3 ;
  wire \reg_rd_data_reg[10]_i_17_n_0 ;
  wire \reg_rd_data_reg[10]_i_17_n_1 ;
  wire \reg_rd_data_reg[10]_i_17_n_2 ;
  wire \reg_rd_data_reg[10]_i_17_n_3 ;
  wire \reg_rd_data_reg[10]_i_24_n_0 ;
  wire \reg_rd_data_reg[10]_i_24_n_1 ;
  wire \reg_rd_data_reg[10]_i_24_n_2 ;
  wire \reg_rd_data_reg[10]_i_24_n_3 ;
  wire \reg_rd_data_reg[10]_i_8_n_0 ;
  wire \reg_rd_data_reg[11]_i_3_0 ;
  wire \reg_rd_data_reg[11]_i_3_1 ;
  wire \reg_rd_data_reg[11]_i_5_0 ;
  wire \reg_rd_data_reg[11]_i_5_n_0 ;
  wire \reg_rd_data_reg[11]_i_6_0 ;
  wire \reg_rd_data_reg[11]_i_6_n_0 ;
  wire \reg_rd_data_reg[12]_i_3_0 ;
  wire \reg_rd_data_reg[12]_i_3_1 ;
  wire \reg_rd_data_reg[12]_i_5_0 ;
  wire \reg_rd_data_reg[12]_i_5_n_0 ;
  wire \reg_rd_data_reg[12]_i_6_0 ;
  wire \reg_rd_data_reg[12]_i_6_n_0 ;
  wire \reg_rd_data_reg[13]_i_3_0 ;
  wire \reg_rd_data_reg[13]_i_3_1 ;
  wire \reg_rd_data_reg[13]_i_5_0 ;
  wire \reg_rd_data_reg[13]_i_5_n_0 ;
  wire \reg_rd_data_reg[13]_i_6_0 ;
  wire \reg_rd_data_reg[13]_i_6_n_0 ;
  wire \reg_rd_data_reg[14]_i_3_0 ;
  wire \reg_rd_data_reg[14]_i_3_1 ;
  wire \reg_rd_data_reg[14]_i_5_0 ;
  wire \reg_rd_data_reg[14]_i_5_n_0 ;
  wire \reg_rd_data_reg[14]_i_6_0 ;
  wire \reg_rd_data_reg[14]_i_6_n_0 ;
  wire \reg_rd_data_reg[15] ;
  wire \reg_rd_data_reg[15]_0 ;
  wire \reg_rd_data_reg[15]_1 ;
  wire [15:0]\reg_rd_data_reg[15]_i_9_0 ;
  wire [15:0]\reg_rd_data_reg[15]_i_9_1 ;
  wire \reg_rd_data_reg[15]_i_9_n_0 ;
  wire \reg_rd_data_reg[16] ;
  wire \reg_rd_data_reg[17] ;
  wire \reg_rd_data_reg[18] ;
  wire \reg_rd_data_reg[18]_i_10_n_0 ;
  wire \reg_rd_data_reg[18]_i_10_n_1 ;
  wire \reg_rd_data_reg[18]_i_10_n_2 ;
  wire \reg_rd_data_reg[18]_i_10_n_3 ;
  wire \reg_rd_data_reg[18]_i_9_n_0 ;
  wire \reg_rd_data_reg[18]_i_9_n_1 ;
  wire \reg_rd_data_reg[18]_i_9_n_2 ;
  wire \reg_rd_data_reg[18]_i_9_n_3 ;
  wire \reg_rd_data_reg[19] ;
  wire \reg_rd_data_reg[1] ;
  wire \reg_rd_data_reg[1]_0 ;
  wire \reg_rd_data_reg[1]_1 ;
  wire \reg_rd_data_reg[1]_2 ;
  wire \reg_rd_data_reg[1]_3 ;
  wire \reg_rd_data_reg[1]_i_7_n_0 ;
  wire \reg_rd_data_reg[20] ;
  wire \reg_rd_data_reg[21] ;
  wire \reg_rd_data_reg[22] ;
  wire \reg_rd_data_reg[22]_i_10_n_0 ;
  wire \reg_rd_data_reg[22]_i_10_n_1 ;
  wire \reg_rd_data_reg[22]_i_10_n_2 ;
  wire \reg_rd_data_reg[22]_i_10_n_3 ;
  wire \reg_rd_data_reg[22]_i_9_n_0 ;
  wire \reg_rd_data_reg[22]_i_9_n_1 ;
  wire \reg_rd_data_reg[22]_i_9_n_2 ;
  wire \reg_rd_data_reg[22]_i_9_n_3 ;
  wire \reg_rd_data_reg[23] ;
  wire \reg_rd_data_reg[24] ;
  wire \reg_rd_data_reg[25] ;
  wire \reg_rd_data_reg[26] ;
  wire \reg_rd_data_reg[26]_i_8_n_0 ;
  wire \reg_rd_data_reg[26]_i_8_n_1 ;
  wire \reg_rd_data_reg[26]_i_8_n_2 ;
  wire \reg_rd_data_reg[26]_i_8_n_3 ;
  wire \reg_rd_data_reg[26]_i_9_n_0 ;
  wire \reg_rd_data_reg[26]_i_9_n_1 ;
  wire \reg_rd_data_reg[26]_i_9_n_2 ;
  wire \reg_rd_data_reg[26]_i_9_n_3 ;
  wire \reg_rd_data_reg[27] ;
  wire \reg_rd_data_reg[28] ;
  wire \reg_rd_data_reg[29] ;
  wire \reg_rd_data_reg[2] ;
  wire \reg_rd_data_reg[2]_0 ;
  wire \reg_rd_data_reg[2]_1 ;
  wire \reg_rd_data_reg[2]_2 ;
  wire \reg_rd_data_reg[2]_i_18_n_0 ;
  wire \reg_rd_data_reg[2]_i_3_0 ;
  wire \reg_rd_data_reg[2]_i_3_n_0 ;
  wire \reg_rd_data_reg[30] ;
  wire \reg_rd_data_reg[30]_i_8_n_0 ;
  wire \reg_rd_data_reg[30]_i_8_n_1 ;
  wire \reg_rd_data_reg[30]_i_8_n_2 ;
  wire \reg_rd_data_reg[30]_i_8_n_3 ;
  wire \reg_rd_data_reg[30]_i_9_n_0 ;
  wire \reg_rd_data_reg[30]_i_9_n_1 ;
  wire \reg_rd_data_reg[30]_i_9_n_2 ;
  wire \reg_rd_data_reg[30]_i_9_n_3 ;
  wire \reg_rd_data_reg[31] ;
  wire \reg_rd_data_reg[31]_0 ;
  wire \reg_rd_data_reg[31]_1 ;
  wire \reg_rd_data_reg[31]_2 ;
  wire \reg_rd_data_reg[31]_i_16_n_3 ;
  wire \reg_rd_data_reg[31]_i_17_n_3 ;
  wire \reg_rd_data_reg[3] ;
  wire \reg_rd_data_reg[3]_0 ;
  wire \reg_rd_data_reg[3]_1 ;
  wire \reg_rd_data_reg[3]_2 ;
  wire \reg_rd_data_reg[3]_i_3_0 ;
  wire \reg_rd_data_reg[3]_i_3_n_0 ;
  wire \reg_rd_data_reg[3]_i_8_0 ;
  wire \reg_rd_data_reg[3]_i_8_n_0 ;
  wire \reg_rd_data_reg[3]_i_9_n_0 ;
  wire \reg_rd_data_reg[4] ;
  wire \reg_rd_data_reg[4]_0 ;
  wire \reg_rd_data_reg[4]_1 ;
  wire \reg_rd_data_reg[4]_i_2_0 ;
  wire \reg_rd_data_reg[4]_i_2_n_0 ;
  wire \reg_rd_data_reg[4]_i_6_0 ;
  wire \reg_rd_data_reg[4]_i_6_n_0 ;
  wire \reg_rd_data_reg[4]_i_7_n_0 ;
  wire \reg_rd_data_reg[5] ;
  wire \reg_rd_data_reg[5]_0 ;
  wire \reg_rd_data_reg[5]_1 ;
  wire \reg_rd_data_reg[5]_i_2_0 ;
  wire \reg_rd_data_reg[5]_i_2_1 ;
  wire \reg_rd_data_reg[5]_i_2_n_0 ;
  wire \reg_rd_data_reg[5]_i_6_0 ;
  wire \reg_rd_data_reg[5]_i_6_n_0 ;
  wire \reg_rd_data_reg[5]_i_7_n_0 ;
  wire \reg_rd_data_reg[6]_i_3_0 ;
  wire \reg_rd_data_reg[6]_i_3_1 ;
  wire \reg_rd_data_reg[6]_i_5_0 ;
  wire \reg_rd_data_reg[6]_i_5_n_0 ;
  wire \reg_rd_data_reg[6]_i_6_0 ;
  wire \reg_rd_data_reg[6]_i_6_n_0 ;
  wire \reg_rd_data_reg[7]_i_3_0 ;
  wire \reg_rd_data_reg[7]_i_3_1 ;
  wire \reg_rd_data_reg[7]_i_5_0 ;
  wire \reg_rd_data_reg[7]_i_5_n_0 ;
  wire \reg_rd_data_reg[7]_i_6_0 ;
  wire \reg_rd_data_reg[7]_i_6_n_0 ;
  wire \reg_rd_data_reg[8] ;
  wire \reg_rd_data_reg[8]_0 ;
  wire \reg_rd_data_reg[8]_1 ;
  wire \reg_rd_data_reg[8]_2 ;
  wire \reg_rd_data_reg[8]_3 ;
  wire \reg_rd_data_reg[8]_i_8_n_0 ;
  wire \reg_rd_data_reg[9]_i_3_0 ;
  wire \reg_rd_data_reg[9]_i_3_1 ;
  wire \reg_rd_data_reg[9]_i_5_0 ;
  wire \reg_rd_data_reg[9]_i_5_n_0 ;
  wire \reg_rd_data_reg[9]_i_6_0 ;
  wire \reg_rd_data_reg[9]_i_6_n_0 ;
  wire \req_addr[0]_i_1_n_0 ;
  wire \req_addr[0]_i_2_n_0 ;
  wire \req_addr[0]_i_3_n_0 ;
  wire \req_addr[10]_i_1_n_0 ;
  wire \req_addr[10]_i_2_n_0 ;
  wire \req_addr[11]_i_1_n_0 ;
  wire \req_addr[11]_i_2_n_0 ;
  wire \req_addr[12]_i_1_n_0 ;
  wire \req_addr[12]_i_2_n_0 ;
  wire \req_addr[13]_i_1_n_0 ;
  wire \req_addr[13]_i_2_n_0 ;
  wire \req_addr[14]_i_1_n_0 ;
  wire \req_addr[14]_i_2_n_0 ;
  wire \req_addr[15]_i_1_n_0 ;
  wire \req_addr[15]_i_2_n_0 ;
  wire \req_addr[16]_i_1_n_0 ;
  wire \req_addr[16]_i_2_n_0 ;
  wire \req_addr[17]_i_1_n_0 ;
  wire \req_addr[17]_i_2_n_0 ;
  wire \req_addr[18]_i_1_n_0 ;
  wire \req_addr[18]_i_2_n_0 ;
  wire \req_addr[19]_i_1_n_0 ;
  wire \req_addr[19]_i_2_n_0 ;
  wire \req_addr[1]_i_1_n_0 ;
  wire \req_addr[1]_i_2_n_0 ;
  wire \req_addr[20]_i_1_n_0 ;
  wire \req_addr[20]_i_2_n_0 ;
  wire \req_addr[21]_i_1_n_0 ;
  wire \req_addr[21]_i_2_n_0 ;
  wire \req_addr[22]_i_1_n_0 ;
  wire \req_addr[22]_i_2_n_0 ;
  wire \req_addr[23]_i_1_n_0 ;
  wire \req_addr[23]_i_2_n_0 ;
  wire \req_addr[24]_i_1_n_0 ;
  wire \req_addr[24]_i_2_n_0 ;
  wire \req_addr[25]_i_1_n_0 ;
  wire \req_addr[25]_i_2_n_0 ;
  wire \req_addr[26]_i_1_n_0 ;
  wire \req_addr[26]_i_2_n_0 ;
  wire \req_addr[27]_i_1_n_0 ;
  wire \req_addr[27]_i_2_n_0 ;
  wire \req_addr[28]_i_1_n_0 ;
  wire \req_addr[28]_i_2_n_0 ;
  wire \req_addr[29]_i_1_n_0 ;
  wire \req_addr[29]_i_2_n_0 ;
  wire \req_addr[2]_i_1_n_0 ;
  wire \req_addr[2]_i_2_n_0 ;
  wire \req_addr[2]_i_3_n_0 ;
  wire \req_addr[30]_i_1_n_0 ;
  wire \req_addr[30]_i_2_n_0 ;
  wire \req_addr[31]_i_1_n_0 ;
  wire \req_addr[31]_i_2_n_0 ;
  wire \req_addr[31]_i_3_n_0 ;
  wire \req_addr[31]_i_4_n_0 ;
  wire \req_addr[31]_i_5_n_0 ;
  wire \req_addr[31]_i_6_n_0 ;
  wire \req_addr[3]_i_1_n_0 ;
  wire \req_addr[3]_i_2_n_0 ;
  wire \req_addr[4]_i_1_n_0 ;
  wire \req_addr[4]_i_2_n_0 ;
  wire \req_addr[5]_i_1_n_0 ;
  wire \req_addr[5]_i_2_n_0 ;
  wire \req_addr[6]_i_1_n_0 ;
  wire \req_addr[6]_i_2_n_0 ;
  wire \req_addr[7]_i_1_n_0 ;
  wire \req_addr[7]_i_2_n_0 ;
  wire \req_addr[8]_i_1_n_0 ;
  wire \req_addr[8]_i_2_n_0 ;
  wire \req_addr[9]_i_1_n_0 ;
  wire \req_addr[9]_i_2_n_0 ;
  wire \req_addr_reg[15]_0 ;
  wire [31:0]\req_addr_reg[31]_0 ;
  wire \req_buf_addr[0]_i_1_n_0 ;
  wire \req_buf_addr[10]_i_1_n_0 ;
  wire \req_buf_addr[11]_i_1_n_0 ;
  wire \req_buf_addr[12]_i_1_n_0 ;
  wire \req_buf_addr[13]_i_1_n_0 ;
  wire \req_buf_addr[14]_i_1_n_0 ;
  wire \req_buf_addr[15]_i_1_n_0 ;
  wire \req_buf_addr[16]_i_1_n_0 ;
  wire \req_buf_addr[17]_i_1_n_0 ;
  wire \req_buf_addr[18]_i_1_n_0 ;
  wire \req_buf_addr[19]_i_1_n_0 ;
  wire \req_buf_addr[1]_i_1_n_0 ;
  wire \req_buf_addr[20]_i_1_n_0 ;
  wire \req_buf_addr[21]_i_1_n_0 ;
  wire \req_buf_addr[22]_i_1_n_0 ;
  wire \req_buf_addr[23]_i_1_n_0 ;
  wire \req_buf_addr[24]_i_1_n_0 ;
  wire \req_buf_addr[25]_i_1_n_0 ;
  wire \req_buf_addr[26]_i_1_n_0 ;
  wire \req_buf_addr[27]_i_1_n_0 ;
  wire \req_buf_addr[28]_i_1_n_0 ;
  wire \req_buf_addr[29]_i_1_n_0 ;
  wire \req_buf_addr[2]_i_1_n_0 ;
  wire \req_buf_addr[30]_i_1_n_0 ;
  wire \req_buf_addr[31]_i_1_n_0 ;
  wire \req_buf_addr[31]_i_2_n_0 ;
  wire \req_buf_addr[31]_i_3_n_0 ;
  wire \req_buf_addr[31]_i_4_n_0 ;
  wire \req_buf_addr[3]_i_1_n_0 ;
  wire \req_buf_addr[4]_i_1_n_0 ;
  wire \req_buf_addr[5]_i_1_n_0 ;
  wire \req_buf_addr[6]_i_1_n_0 ;
  wire \req_buf_addr[7]_i_1_n_0 ;
  wire \req_buf_addr[8]_i_1_n_0 ;
  wire \req_buf_addr[9]_i_1_n_0 ;
  wire [31:0]\req_buf_addr_reg[31]_0 ;
  wire [31:0]\req_buf_addr_reg[31]_1 ;
  wire \req_buf_addr_reg_n_0_[0] ;
  wire \req_buf_addr_reg_n_0_[10] ;
  wire \req_buf_addr_reg_n_0_[11] ;
  wire \req_buf_addr_reg_n_0_[12] ;
  wire \req_buf_addr_reg_n_0_[13] ;
  wire \req_buf_addr_reg_n_0_[14] ;
  wire \req_buf_addr_reg_n_0_[15] ;
  wire \req_buf_addr_reg_n_0_[16] ;
  wire \req_buf_addr_reg_n_0_[17] ;
  wire \req_buf_addr_reg_n_0_[18] ;
  wire \req_buf_addr_reg_n_0_[19] ;
  wire \req_buf_addr_reg_n_0_[1] ;
  wire \req_buf_addr_reg_n_0_[20] ;
  wire \req_buf_addr_reg_n_0_[21] ;
  wire \req_buf_addr_reg_n_0_[22] ;
  wire \req_buf_addr_reg_n_0_[23] ;
  wire \req_buf_addr_reg_n_0_[24] ;
  wire \req_buf_addr_reg_n_0_[25] ;
  wire \req_buf_addr_reg_n_0_[26] ;
  wire \req_buf_addr_reg_n_0_[27] ;
  wire \req_buf_addr_reg_n_0_[28] ;
  wire \req_buf_addr_reg_n_0_[29] ;
  wire \req_buf_addr_reg_n_0_[2] ;
  wire \req_buf_addr_reg_n_0_[30] ;
  wire \req_buf_addr_reg_n_0_[31] ;
  wire \req_buf_addr_reg_n_0_[3] ;
  wire \req_buf_addr_reg_n_0_[4] ;
  wire \req_buf_addr_reg_n_0_[5] ;
  wire \req_buf_addr_reg_n_0_[6] ;
  wire \req_buf_addr_reg_n_0_[7] ;
  wire \req_buf_addr_reg_n_0_[8] ;
  wire \req_buf_addr_reg_n_0_[9] ;
  wire req_buf_addr_sel_i_1_n_0;
  wire req_buf_addr_sel_i_2_n_0;
  wire req_buf_addr_sel_p1_reg_0;
  wire \req_xfer_cnt_reg[0] ;
  wire req_xfer_last;
  wire rst;
  wire \s_axi_reg_araddr[2] ;
  wire \s_axi_reg_araddr[3] ;
  wire \s_axi_reg_araddr[6] ;
  wire \s_axi_reg_araddr[7] ;
  wire \state_cs[0]_i_1_n_0 ;
  wire \state_cs[1]_i_1_n_0 ;
  wire \state_cs[2]_i_10_n_0 ;
  wire \state_cs[2]_i_12_n_0 ;
  wire \state_cs[2]_i_1_n_0 ;
  wire \state_cs[2]_i_4_n_0 ;
  wire \state_cs[2]_i_6_n_0 ;
  wire \state_cs[2]_i_8_n_0 ;
  wire \state_cs[2]_i_9_n_0 ;
  wire \state_cs_reg[0]_0 ;
  wire \state_cs_reg[0]_1 ;
  wire \state_cs_reg[0]_2 ;
  wire \state_cs_reg[1]_0 ;
  wire \state_cs_reg[2]_0 ;
  wire [0:0]state_ns;
  wire sts_acquire_i_10_n_0;
  wire sts_acquire_reg;
  wire [7:0]sts_acquire_reg_0;
  wire sts_acquire_reg_1;
  wire transf_end;
  wire [13:0]trig_cnt_reg;
  wire [5:0]\trig_cnt_reg[0] ;
  wire [0:0]trig_ip;
  wire trig_out;
  wire trig_out1;
  wire trig_out_INST_0_i_3_n_0;
  wire use_8bit_r;
  wire wr_en;
  wire \xfer_cnt[6]_i_3_n_0 ;
  wire \xfer_cnt_reg[6] ;
  wire NLW_U_fifo_axi_req_full_UNCONNECTED;
  wire [3:3]\NLW_buf1_missed_samp_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_buf2_missed_samp_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:0]NLW_next_buf_full1_carry_O_UNCONNECTED;
  wire [3:0]NLW_next_buf_full1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_next_buf_full1_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_next_buf_full1_carry__2_O_UNCONNECTED;
  wire [3:3]NLW_next_buf_full1_carry__2_i_9_CO_UNCONNECTED;
  wire [3:1]\NLW_next_buf_full2_inferred__0/i__carry__5_CO_UNCONNECTED ;
  wire [3:2]\NLW_next_buf_full2_inferred__0/i__carry__5_O_UNCONNECTED ;
  wire [3:1]\NLW_reg_rd_data_reg[31]_i_16_CO_UNCONNECTED ;
  wire [3:2]\NLW_reg_rd_data_reg[31]_i_16_O_UNCONNECTED ;
  wire [3:1]\NLW_reg_rd_data_reg[31]_i_17_CO_UNCONNECTED ;
  wire [3:2]\NLW_reg_rd_data_reg[31]_i_17_O_UNCONNECTED ;

  system_rp_oscilloscope_0_rp_dma_s2mm_data_ctrl__xdcDup__1 U_dma_s2mm_data_ctrl
       (.E(\m_axi_awlen[7]_i_1_n_0 ),
        .Q(fifo_rst_cnt_reg[4]),
        .bit_start_0(bit_start_0),
        .bit_start_reg(U_dma_s2mm_data_ctrl_n_14),
        .buf1_missed_samp0(buf1_missed_samp0),
        .\buf1_missed_samp_reg[0] (\buf1_missed_samp[0]_i_4_n_0 ),
        .\buf1_missed_samp_reg[0]_0 (\buf1_missed_samp[0]_i_5_n_0 ),
        .buf2_missed_samp0(buf2_missed_samp0),
        .\buf2_missed_samp_reg[0] (fifo_dis_reg_1),
        .\buf2_missed_samp_reg[0]_0 (\state_cs_reg[1]_0 ),
        .\buf2_missed_samp_reg[0]_1 (\state_cs_reg[0]_1 ),
        .\buf2_missed_samp_reg[0]_2 (\state_cs_reg[2]_0 ),
        .\buf2_missed_samp_reg[0]_3 (req_buf_addr_sel_p1_reg_0),
        .\buf2_missed_samp_reg[0]_4 (next_buf_full_reg_0),
        .\buf2_missed_samp_reg[0]_5 (\buf2_missed_samp[0]_i_4_n_0 ),
        .\buf2_missed_samp_reg[0]_6 (\buf2_missed_samp[0]_i_5_n_0 ),
        .buf_sel_ch2(buf_sel_ch2),
        .busy_reg_0(busy_reg),
        .busy_reg_1(U_dma_s2mm_data_ctrl_n_13),
        .busy_reg_2(busy_reg_0),
        .cfg_dma_ctrl_reg_0({cfg_dma_ctrl_reg_0[4],cfg_dma_ctrl_reg_0[1]}),
        .cfg_dma_sts_reg(cfg_dma_sts_reg[4]),
        .clear(clear),
        .din(dat_ctrl_req_data),
        .empty(empty),
        .empty_fwft_i_reg(empty_fwft_i_reg),
        .fifo_dis_reg(fifo_dis_reg_0),
        .full_immed0(full_immed0),
        .\goreg_dm.dout_i_reg[1] (\goreg_dm.dout_i_reg[1] ),
        .intr_reg__0(intr_reg__0_0),
        .intr_reg__0_0(buf1_full_i_2__0_n_0),
        .intr_reg__0_1(intr_i_3_n_0),
        .m_axi_osc1_aclk(m_axi_osc1_aclk),
        .m_axi_osc1_aresetn(m_axi_osc1_aresetn),
        .m_axi_osc1_aresetn_0(U_dma_s2mm_data_ctrl_n_15),
        .m_axi_osc1_awready(m_axi_osc1_awready),
        .m_axi_osc1_awvalid(m_axi_osc1_awvalid),
        .m_axi_osc1_wready(m_axi_osc1_wready),
        .m_axi_wlast_reg_0(m_axi_wlast_reg),
        .m_axi_wlast_reg_1(m_axi_wlast_reg_0),
        .m_axi_wvalid_reg_0(m_axi_wvalid_reg),
        .m_axi_wvalid_reg_1(m_axi_wvalid_reg_0),
        .rd_en(rd_en),
        .req_buf_addr_sel_p1_reg(U_dma_s2mm_data_ctrl_n_10),
        .\req_xfer_cnt_reg[0]_0 (\req_xfer_cnt_reg[0] ),
        .req_xfer_last(req_xfer_last),
        .req_xfer_last_reg(U_dma_s2mm_data_ctrl_n_17),
        .rst(rst),
        .\state_cs[2]_i_3_0 (\reg_ctrl[3]_i_3_n_0 ),
        .\state_cs[2]_i_3_1 (\state_cs[2]_i_10_n_0 ),
        .\state_cs[2]_i_7_0 (\state_cs[2]_i_12_n_0 ),
        .\state_cs_reg[0]_0 (\state_cs_reg[0]_0 ),
        .\state_cs_reg[0]_1 (\state_cs_reg[0]_2 ),
        .\state_cs_reg[0]_2 (\state_cs[2]_i_6_n_0 ),
        .\state_cs_reg[1] (U_dma_s2mm_data_ctrl_n_8),
        .\state_cs_reg[2] (\state_cs[2]_i_4_n_0 ),
        .state_ns(state_ns));
  (* CHECK_LICENSE_TYPE = "fifo_axi_req,fifo_generator_v13_2_5,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2020.1" *) 
  system_rp_oscilloscope_0_fifo_axi_req__xdcDup__1 U_fifo_axi_req
       (.din(Q),
        .dout(fifo_rd_data),
        .empty(empty),
        .full(NLW_U_fifo_axi_req_full_UNCONNECTED),
        .rd_clk(m_axi_osc1_aclk),
        .rd_en(fifo_rd_re),
        .rst(rst),
        .wr_clk(m_axi_osc1_aclk),
        .wr_en(wr_en));
  LUT3 #(
    .INIT(8'h78)) 
    U_fifo_axi_req_i_1
       (.I0(U_fifo_axi_req_i_11_n_0),
        .I1(m_axi_osc1_awlen[6]),
        .I2(m_axi_osc1_awlen[7]),
        .O(dat_ctrl_req_data[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    U_fifo_axi_req_i_11
       (.I0(m_axi_osc1_awlen[5]),
        .I1(m_axi_osc1_awlen[3]),
        .I2(m_axi_osc1_awlen[1]),
        .I3(m_axi_osc1_awlen[0]),
        .I4(m_axi_osc1_awlen[2]),
        .I5(m_axi_osc1_awlen[4]),
        .O(U_fifo_axi_req_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    U_fifo_axi_req_i_2
       (.I0(\state_cs_reg[2]_0 ),
        .I1(\state_cs_reg[1]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .I3(empty),
        .O(fifo_rd_re));
  LUT2 #(
    .INIT(4'h6)) 
    U_fifo_axi_req_i_2__0
       (.I0(U_fifo_axi_req_i_11_n_0),
        .I1(m_axi_osc1_awlen[6]),
        .O(dat_ctrl_req_data[6]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    U_fifo_axi_req_i_3
       (.I0(m_axi_osc1_awlen[3]),
        .I1(m_axi_osc1_awlen[1]),
        .I2(m_axi_osc1_awlen[0]),
        .I3(m_axi_osc1_awlen[2]),
        .I4(m_axi_osc1_awlen[4]),
        .I5(m_axi_osc1_awlen[5]),
        .O(dat_ctrl_req_data[5]));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    U_fifo_axi_req_i_4
       (.I0(m_axi_osc1_awlen[2]),
        .I1(m_axi_osc1_awlen[0]),
        .I2(m_axi_osc1_awlen[1]),
        .I3(m_axi_osc1_awlen[3]),
        .I4(m_axi_osc1_awlen[4]),
        .O(dat_ctrl_req_data[4]));
  LUT4 #(
    .INIT(16'h7F80)) 
    U_fifo_axi_req_i_5
       (.I0(m_axi_osc1_awlen[1]),
        .I1(m_axi_osc1_awlen[0]),
        .I2(m_axi_osc1_awlen[2]),
        .I3(m_axi_osc1_awlen[3]),
        .O(dat_ctrl_req_data[3]));
  LUT3 #(
    .INIT(8'h78)) 
    U_fifo_axi_req_i_6
       (.I0(m_axi_osc1_awlen[0]),
        .I1(m_axi_osc1_awlen[1]),
        .I2(m_axi_osc1_awlen[2]),
        .O(dat_ctrl_req_data[2]));
  LUT2 #(
    .INIT(4'h6)) 
    U_fifo_axi_req_i_7
       (.I0(m_axi_osc1_awlen[0]),
        .I1(m_axi_osc1_awlen[1]),
        .O(dat_ctrl_req_data[1]));
  LUT1 #(
    .INIT(2'h1)) 
    U_fifo_axi_req_i_8
       (.I0(m_axi_osc1_awlen[0]),
        .O(dat_ctrl_req_data[0]));
  FDRE axi_last_r2_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(axi_last_r),
        .Q(axi_last_r2),
        .R(1'b0));
  FDRE axi_last_r_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(m_axi_wlast_reg),
        .Q(axi_last_r),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    bit_start_i_1
       (.I0(cfg_dma_ctrl_reg_0[0]),
        .I1(\cfg_trig_mask_reg[1] ),
        .O(p_3_in));
  FDRE bit_start_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_3_in),
        .Q(bit_start_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000000000000AAEA)) 
    buf1_full_i_1
       (.I0(cfg_dma_sts_reg[0]),
        .I1(next_buf_full1),
        .I2(transf_end),
        .I3(cfg_dma_sts_reg[4]),
        .I4(cfg_dma_ctrl_reg_0[2]),
        .I5(buf1_full_i_2__0_n_0),
        .O(buf1_full_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'h01)) 
    buf1_full_i_2__0
       (.I0(\state_cs_reg[2]_0 ),
        .I1(\state_cs_reg[0]_1 ),
        .I2(\state_cs_reg[1]_0 ),
        .O(buf1_full_i_2__0_n_0));
  FDRE buf1_full_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(buf1_full_i_1_n_0),
        .Q(cfg_dma_sts_reg[0]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \buf1_missed_samp[0]_i_10 
       (.I0(buf1_missed_samp_reg[27]),
        .I1(buf1_missed_samp_reg[0]),
        .I2(buf1_missed_samp_reg[1]),
        .I3(buf1_missed_samp_reg[24]),
        .O(\buf1_missed_samp[0]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \buf1_missed_samp[0]_i_11 
       (.I0(buf1_missed_samp_reg[4]),
        .I1(buf1_missed_samp_reg[16]),
        .I2(buf1_missed_samp_reg[19]),
        .I3(buf1_missed_samp_reg[21]),
        .O(\buf1_missed_samp[0]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \buf1_missed_samp[0]_i_12 
       (.I0(buf1_missed_samp_reg[26]),
        .I1(buf1_missed_samp_reg[22]),
        .I2(buf1_missed_samp_reg[20]),
        .I3(buf1_missed_samp_reg[15]),
        .I4(\buf1_missed_samp[0]_i_13_n_0 ),
        .O(\buf1_missed_samp[0]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \buf1_missed_samp[0]_i_13 
       (.I0(buf1_missed_samp_reg[7]),
        .I1(buf1_missed_samp_reg[25]),
        .I2(buf1_missed_samp_reg[6]),
        .I3(buf1_missed_samp_reg[10]),
        .O(\buf1_missed_samp[0]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFFFFFFF)) 
    \buf1_missed_samp[0]_i_4 
       (.I0(\buf1_missed_samp[0]_i_7_n_0 ),
        .I1(buf1_missed_samp_reg[12]),
        .I2(buf1_missed_samp_reg[18]),
        .I3(buf1_missed_samp_reg[14]),
        .I4(buf1_missed_samp_reg[17]),
        .I5(\buf1_missed_samp[0]_i_8_n_0 ),
        .O(\buf1_missed_samp[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    \buf1_missed_samp[0]_i_5 
       (.I0(buf1_missed_samp_reg[30]),
        .I1(buf1_missed_samp_reg[28]),
        .I2(buf1_missed_samp_reg[29]),
        .I3(\buf1_missed_samp[0]_i_9_n_0 ),
        .I4(buf1_missed_samp_reg[31]),
        .I5(cfg_dma_sts_reg[4]),
        .O(\buf1_missed_samp[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \buf1_missed_samp[0]_i_6 
       (.I0(buf1_missed_samp_reg[0]),
        .O(\buf1_missed_samp[0]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \buf1_missed_samp[0]_i_7 
       (.I0(buf1_missed_samp_reg[23]),
        .I1(buf1_missed_samp_reg[11]),
        .I2(buf1_missed_samp_reg[13]),
        .I3(buf1_missed_samp_reg[8]),
        .I4(\buf1_missed_samp[0]_i_10_n_0 ),
        .O(\buf1_missed_samp[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFFFFFFF)) 
    \buf1_missed_samp[0]_i_8 
       (.I0(\buf1_missed_samp[0]_i_11_n_0 ),
        .I1(buf1_missed_samp_reg[2]),
        .I2(buf1_missed_samp_reg[9]),
        .I3(buf1_missed_samp_reg[3]),
        .I4(buf1_missed_samp_reg[5]),
        .I5(\buf1_missed_samp[0]_i_12_n_0 ),
        .O(\buf1_missed_samp[0]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \buf1_missed_samp[0]_i_9 
       (.I0(first_rst),
        .I1(E),
        .O(\buf1_missed_samp[0]_i_9_n_0 ));
  FDRE \buf1_missed_samp_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[0]_i_3_n_7 ),
        .Q(buf1_missed_samp_reg[0]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\buf1_missed_samp_reg[0]_i_3_n_0 ,\buf1_missed_samp_reg[0]_i_3_n_1 ,\buf1_missed_samp_reg[0]_i_3_n_2 ,\buf1_missed_samp_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\buf1_missed_samp_reg[0]_i_3_n_4 ,\buf1_missed_samp_reg[0]_i_3_n_5 ,\buf1_missed_samp_reg[0]_i_3_n_6 ,\buf1_missed_samp_reg[0]_i_3_n_7 }),
        .S({buf1_missed_samp_reg[3:1],\buf1_missed_samp[0]_i_6_n_0 }));
  FDRE \buf1_missed_samp_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[8]_i_1_n_5 ),
        .Q(buf1_missed_samp_reg[10]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[8]_i_1_n_4 ),
        .Q(buf1_missed_samp_reg[11]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[12]_i_1_n_7 ),
        .Q(buf1_missed_samp_reg[12]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[12]_i_1 
       (.CI(\buf1_missed_samp_reg[8]_i_1_n_0 ),
        .CO({\buf1_missed_samp_reg[12]_i_1_n_0 ,\buf1_missed_samp_reg[12]_i_1_n_1 ,\buf1_missed_samp_reg[12]_i_1_n_2 ,\buf1_missed_samp_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf1_missed_samp_reg[12]_i_1_n_4 ,\buf1_missed_samp_reg[12]_i_1_n_5 ,\buf1_missed_samp_reg[12]_i_1_n_6 ,\buf1_missed_samp_reg[12]_i_1_n_7 }),
        .S(buf1_missed_samp_reg[15:12]));
  FDRE \buf1_missed_samp_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[12]_i_1_n_6 ),
        .Q(buf1_missed_samp_reg[13]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[12]_i_1_n_5 ),
        .Q(buf1_missed_samp_reg[14]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[12]_i_1_n_4 ),
        .Q(buf1_missed_samp_reg[15]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[16]_i_1_n_7 ),
        .Q(buf1_missed_samp_reg[16]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[16]_i_1 
       (.CI(\buf1_missed_samp_reg[12]_i_1_n_0 ),
        .CO({\buf1_missed_samp_reg[16]_i_1_n_0 ,\buf1_missed_samp_reg[16]_i_1_n_1 ,\buf1_missed_samp_reg[16]_i_1_n_2 ,\buf1_missed_samp_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf1_missed_samp_reg[16]_i_1_n_4 ,\buf1_missed_samp_reg[16]_i_1_n_5 ,\buf1_missed_samp_reg[16]_i_1_n_6 ,\buf1_missed_samp_reg[16]_i_1_n_7 }),
        .S(buf1_missed_samp_reg[19:16]));
  FDRE \buf1_missed_samp_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[16]_i_1_n_6 ),
        .Q(buf1_missed_samp_reg[17]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[16]_i_1_n_5 ),
        .Q(buf1_missed_samp_reg[18]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[16]_i_1_n_4 ),
        .Q(buf1_missed_samp_reg[19]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[0]_i_3_n_6 ),
        .Q(buf1_missed_samp_reg[1]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[20]_i_1_n_7 ),
        .Q(buf1_missed_samp_reg[20]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[20]_i_1 
       (.CI(\buf1_missed_samp_reg[16]_i_1_n_0 ),
        .CO({\buf1_missed_samp_reg[20]_i_1_n_0 ,\buf1_missed_samp_reg[20]_i_1_n_1 ,\buf1_missed_samp_reg[20]_i_1_n_2 ,\buf1_missed_samp_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf1_missed_samp_reg[20]_i_1_n_4 ,\buf1_missed_samp_reg[20]_i_1_n_5 ,\buf1_missed_samp_reg[20]_i_1_n_6 ,\buf1_missed_samp_reg[20]_i_1_n_7 }),
        .S(buf1_missed_samp_reg[23:20]));
  FDRE \buf1_missed_samp_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[20]_i_1_n_6 ),
        .Q(buf1_missed_samp_reg[21]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[20]_i_1_n_5 ),
        .Q(buf1_missed_samp_reg[22]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[20]_i_1_n_4 ),
        .Q(buf1_missed_samp_reg[23]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[24]_i_1_n_7 ),
        .Q(buf1_missed_samp_reg[24]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[24]_i_1 
       (.CI(\buf1_missed_samp_reg[20]_i_1_n_0 ),
        .CO({\buf1_missed_samp_reg[24]_i_1_n_0 ,\buf1_missed_samp_reg[24]_i_1_n_1 ,\buf1_missed_samp_reg[24]_i_1_n_2 ,\buf1_missed_samp_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf1_missed_samp_reg[24]_i_1_n_4 ,\buf1_missed_samp_reg[24]_i_1_n_5 ,\buf1_missed_samp_reg[24]_i_1_n_6 ,\buf1_missed_samp_reg[24]_i_1_n_7 }),
        .S(buf1_missed_samp_reg[27:24]));
  FDRE \buf1_missed_samp_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[24]_i_1_n_6 ),
        .Q(buf1_missed_samp_reg[25]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[24]_i_1_n_5 ),
        .Q(buf1_missed_samp_reg[26]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[24]_i_1_n_4 ),
        .Q(buf1_missed_samp_reg[27]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[28]_i_1_n_7 ),
        .Q(buf1_missed_samp_reg[28]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[28]_i_1 
       (.CI(\buf1_missed_samp_reg[24]_i_1_n_0 ),
        .CO({\NLW_buf1_missed_samp_reg[28]_i_1_CO_UNCONNECTED [3],\buf1_missed_samp_reg[28]_i_1_n_1 ,\buf1_missed_samp_reg[28]_i_1_n_2 ,\buf1_missed_samp_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf1_missed_samp_reg[28]_i_1_n_4 ,\buf1_missed_samp_reg[28]_i_1_n_5 ,\buf1_missed_samp_reg[28]_i_1_n_6 ,\buf1_missed_samp_reg[28]_i_1_n_7 }),
        .S(buf1_missed_samp_reg[31:28]));
  FDRE \buf1_missed_samp_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[28]_i_1_n_6 ),
        .Q(buf1_missed_samp_reg[29]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[0]_i_3_n_5 ),
        .Q(buf1_missed_samp_reg[2]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[28]_i_1_n_5 ),
        .Q(buf1_missed_samp_reg[30]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[28]_i_1_n_4 ),
        .Q(buf1_missed_samp_reg[31]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[0]_i_3_n_4 ),
        .Q(buf1_missed_samp_reg[3]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[4]_i_1_n_7 ),
        .Q(buf1_missed_samp_reg[4]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[4]_i_1 
       (.CI(\buf1_missed_samp_reg[0]_i_3_n_0 ),
        .CO({\buf1_missed_samp_reg[4]_i_1_n_0 ,\buf1_missed_samp_reg[4]_i_1_n_1 ,\buf1_missed_samp_reg[4]_i_1_n_2 ,\buf1_missed_samp_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf1_missed_samp_reg[4]_i_1_n_4 ,\buf1_missed_samp_reg[4]_i_1_n_5 ,\buf1_missed_samp_reg[4]_i_1_n_6 ,\buf1_missed_samp_reg[4]_i_1_n_7 }),
        .S(buf1_missed_samp_reg[7:4]));
  FDRE \buf1_missed_samp_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[4]_i_1_n_6 ),
        .Q(buf1_missed_samp_reg[5]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[4]_i_1_n_5 ),
        .Q(buf1_missed_samp_reg[6]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[4]_i_1_n_4 ),
        .Q(buf1_missed_samp_reg[7]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  FDRE \buf1_missed_samp_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[8]_i_1_n_7 ),
        .Q(buf1_missed_samp_reg[8]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf1_missed_samp_reg[8]_i_1 
       (.CI(\buf1_missed_samp_reg[4]_i_1_n_0 ),
        .CO({\buf1_missed_samp_reg[8]_i_1_n_0 ,\buf1_missed_samp_reg[8]_i_1_n_1 ,\buf1_missed_samp_reg[8]_i_1_n_2 ,\buf1_missed_samp_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf1_missed_samp_reg[8]_i_1_n_4 ,\buf1_missed_samp_reg[8]_i_1_n_5 ,\buf1_missed_samp_reg[8]_i_1_n_6 ,\buf1_missed_samp_reg[8]_i_1_n_7 }),
        .S(buf1_missed_samp_reg[11:8]));
  FDRE \buf1_missed_samp_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(buf1_missed_samp0),
        .D(\buf1_missed_samp_reg[8]_i_1_n_6 ),
        .Q(buf1_missed_samp_reg[9]),
        .R(U_dma_s2mm_data_ctrl_n_8));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[0]_i_1 
       (.I0(rd_data_count[0]),
        .I1(\state_cs_reg[1]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .I3(\state_cs_reg[2]_0 ),
        .O(\buf1_ms_lvl[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[1]_i_1 
       (.I0(rd_data_count[1]),
        .I1(\state_cs_reg[1]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .I3(\state_cs_reg[2]_0 ),
        .O(\buf1_ms_lvl[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[2]_i_1 
       (.I0(rd_data_count[2]),
        .I1(\state_cs_reg[1]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .I3(\state_cs_reg[2]_0 ),
        .O(\buf1_ms_lvl[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[3]_i_1 
       (.I0(rd_data_count[3]),
        .I1(\state_cs_reg[1]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .I3(\state_cs_reg[2]_0 ),
        .O(\buf1_ms_lvl[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[4]_i_1 
       (.I0(rd_data_count[4]),
        .I1(\state_cs_reg[1]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .I3(\state_cs_reg[2]_0 ),
        .O(\buf1_ms_lvl[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[5]_i_1 
       (.I0(rd_data_count[5]),
        .I1(\state_cs_reg[1]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .I3(\state_cs_reg[2]_0 ),
        .O(\buf1_ms_lvl[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[6]_i_1 
       (.I0(rd_data_count[6]),
        .I1(\state_cs_reg[1]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .I3(\state_cs_reg[2]_0 ),
        .O(\buf1_ms_lvl[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[7]_i_1 
       (.I0(rd_data_count[7]),
        .I1(\state_cs_reg[1]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .I3(\state_cs_reg[2]_0 ),
        .O(\buf1_ms_lvl[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[8]_i_1 
       (.I0(rd_data_count[8]),
        .I1(\state_cs_reg[1]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .I3(\state_cs_reg[2]_0 ),
        .O(\buf1_ms_lvl[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0BBBAAAA)) 
    \buf1_ms_lvl[9]_i_1 
       (.I0(buf1_full_i_2__0_n_0),
        .I1(req_buf_addr_sel_p1_reg_0),
        .I2(next_buf_full_reg_0),
        .I3(axi_last_r2),
        .I4(cfg_dma_sts_reg[4]),
        .O(\buf1_ms_lvl[9]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF80F0)) 
    \buf1_ms_lvl[9]_i_2 
       (.I0(next_buf_full_reg_0),
        .I1(axi_last_r2),
        .I2(cfg_dma_sts_reg[4]),
        .I3(req_buf_addr_sel_p1_reg_0),
        .I4(buf1_full_i_2__0_n_0),
        .O(\buf1_ms_lvl[9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \buf1_ms_lvl[9]_i_3 
       (.I0(rd_data_count[9]),
        .I1(\state_cs_reg[1]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .I3(\state_cs_reg[2]_0 ),
        .O(\buf1_ms_lvl[9]_i_3_n_0 ));
  FDRE \buf1_ms_lvl_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf1_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[0]_i_1_n_0 ),
        .Q(buf1_ms_lvl[0]),
        .R(\buf1_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf1_ms_lvl_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf1_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[1]_i_1_n_0 ),
        .Q(buf1_ms_lvl[1]),
        .R(\buf1_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf1_ms_lvl_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf1_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[2]_i_1_n_0 ),
        .Q(buf1_ms_lvl[2]),
        .R(\buf1_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf1_ms_lvl_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf1_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[3]_i_1_n_0 ),
        .Q(buf1_ms_lvl[3]),
        .R(\buf1_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf1_ms_lvl_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf1_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[4]_i_1_n_0 ),
        .Q(buf1_ms_lvl[4]),
        .R(\buf1_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf1_ms_lvl_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf1_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[5]_i_1_n_0 ),
        .Q(buf1_ms_lvl[5]),
        .R(\buf1_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf1_ms_lvl_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf1_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[6]_i_1_n_0 ),
        .Q(buf1_ms_lvl[6]),
        .R(\buf1_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf1_ms_lvl_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf1_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[7]_i_1_n_0 ),
        .Q(buf1_ms_lvl[7]),
        .R(\buf1_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf1_ms_lvl_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf1_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[8]_i_1_n_0 ),
        .Q(buf1_ms_lvl[8]),
        .R(\buf1_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf1_ms_lvl_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf1_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[9]_i_3_n_0 ),
        .Q(buf1_ms_lvl[9]),
        .R(\buf1_ms_lvl[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000EAAA)) 
    buf1_ovr_i_1
       (.I0(cfg_dma_sts_reg[2]),
        .I1(next_buf_full1),
        .I2(cfg_dma_sts_reg[0]),
        .I3(cfg_dma_sts_reg[4]),
        .I4(cfg_dma_ctrl_reg_0[2]),
        .I5(buf1_full_i_2__0_n_0),
        .O(buf1_ovr_i_1_n_0));
  FDRE buf1_ovr_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(buf1_ovr_i_1_n_0),
        .Q(cfg_dma_sts_reg[2]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000000000000EAAA)) 
    buf2_full_i_1
       (.I0(cfg_dma_sts_reg[1]),
        .I1(next_buf_full1),
        .I2(transf_end),
        .I3(cfg_dma_sts_reg[4]),
        .I4(buf1_full_i_2__0_n_0),
        .I5(cfg_dma_ctrl_reg_0[3]),
        .O(buf2_full_i_1_n_0));
  FDRE buf2_full_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(buf2_full_i_1_n_0),
        .Q(cfg_dma_sts_reg[1]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \buf2_missed_samp[0]_i_10 
       (.I0(buf2_missed_samp_reg[4]),
        .I1(buf2_missed_samp_reg[16]),
        .I2(buf2_missed_samp_reg[19]),
        .I3(buf2_missed_samp_reg[21]),
        .O(\buf2_missed_samp[0]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \buf2_missed_samp[0]_i_11 
       (.I0(buf2_missed_samp_reg[26]),
        .I1(buf2_missed_samp_reg[22]),
        .I2(buf2_missed_samp_reg[20]),
        .I3(buf2_missed_samp_reg[15]),
        .I4(\buf2_missed_samp[0]_i_12_n_0 ),
        .O(\buf2_missed_samp[0]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \buf2_missed_samp[0]_i_12 
       (.I0(buf2_missed_samp_reg[7]),
        .I1(buf2_missed_samp_reg[25]),
        .I2(buf2_missed_samp_reg[6]),
        .I3(buf2_missed_samp_reg[10]),
        .O(\buf2_missed_samp[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFFFFFFF)) 
    \buf2_missed_samp[0]_i_4 
       (.I0(\buf2_missed_samp[0]_i_7_n_0 ),
        .I1(buf2_missed_samp_reg[12]),
        .I2(buf2_missed_samp_reg[18]),
        .I3(buf2_missed_samp_reg[14]),
        .I4(buf2_missed_samp_reg[17]),
        .I5(\buf2_missed_samp[0]_i_8_n_0 ),
        .O(\buf2_missed_samp[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \buf2_missed_samp[0]_i_5 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(buf2_missed_samp_reg[28]),
        .I2(buf2_missed_samp_reg[29]),
        .I3(buf2_missed_samp_reg[31]),
        .I4(buf2_missed_samp_reg[30]),
        .I5(\buf1_missed_samp[0]_i_9_n_0 ),
        .O(\buf2_missed_samp[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \buf2_missed_samp[0]_i_6 
       (.I0(buf2_missed_samp_reg[0]),
        .O(\buf2_missed_samp[0]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \buf2_missed_samp[0]_i_7 
       (.I0(buf2_missed_samp_reg[23]),
        .I1(buf2_missed_samp_reg[11]),
        .I2(buf2_missed_samp_reg[13]),
        .I3(buf2_missed_samp_reg[8]),
        .I4(\buf2_missed_samp[0]_i_9_n_0 ),
        .O(\buf2_missed_samp[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFFFFFFF)) 
    \buf2_missed_samp[0]_i_8 
       (.I0(\buf2_missed_samp[0]_i_10_n_0 ),
        .I1(buf2_missed_samp_reg[2]),
        .I2(buf2_missed_samp_reg[9]),
        .I3(buf2_missed_samp_reg[3]),
        .I4(buf2_missed_samp_reg[5]),
        .I5(\buf2_missed_samp[0]_i_11_n_0 ),
        .O(\buf2_missed_samp[0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \buf2_missed_samp[0]_i_9 
       (.I0(buf2_missed_samp_reg[27]),
        .I1(buf2_missed_samp_reg[0]),
        .I2(buf2_missed_samp_reg[1]),
        .I3(buf2_missed_samp_reg[24]),
        .O(\buf2_missed_samp[0]_i_9_n_0 ));
  FDRE \buf2_missed_samp_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[0]_i_3_n_7 ),
        .Q(buf2_missed_samp_reg[0]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\buf2_missed_samp_reg[0]_i_3_n_0 ,\buf2_missed_samp_reg[0]_i_3_n_1 ,\buf2_missed_samp_reg[0]_i_3_n_2 ,\buf2_missed_samp_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\buf2_missed_samp_reg[0]_i_3_n_4 ,\buf2_missed_samp_reg[0]_i_3_n_5 ,\buf2_missed_samp_reg[0]_i_3_n_6 ,\buf2_missed_samp_reg[0]_i_3_n_7 }),
        .S({buf2_missed_samp_reg[3:1],\buf2_missed_samp[0]_i_6_n_0 }));
  FDRE \buf2_missed_samp_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[8]_i_1_n_5 ),
        .Q(buf2_missed_samp_reg[10]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[8]_i_1_n_4 ),
        .Q(buf2_missed_samp_reg[11]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[12]_i_1_n_7 ),
        .Q(buf2_missed_samp_reg[12]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[12]_i_1 
       (.CI(\buf2_missed_samp_reg[8]_i_1_n_0 ),
        .CO({\buf2_missed_samp_reg[12]_i_1_n_0 ,\buf2_missed_samp_reg[12]_i_1_n_1 ,\buf2_missed_samp_reg[12]_i_1_n_2 ,\buf2_missed_samp_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf2_missed_samp_reg[12]_i_1_n_4 ,\buf2_missed_samp_reg[12]_i_1_n_5 ,\buf2_missed_samp_reg[12]_i_1_n_6 ,\buf2_missed_samp_reg[12]_i_1_n_7 }),
        .S(buf2_missed_samp_reg[15:12]));
  FDRE \buf2_missed_samp_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[12]_i_1_n_6 ),
        .Q(buf2_missed_samp_reg[13]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[12]_i_1_n_5 ),
        .Q(buf2_missed_samp_reg[14]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[12]_i_1_n_4 ),
        .Q(buf2_missed_samp_reg[15]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[16]_i_1_n_7 ),
        .Q(buf2_missed_samp_reg[16]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[16]_i_1 
       (.CI(\buf2_missed_samp_reg[12]_i_1_n_0 ),
        .CO({\buf2_missed_samp_reg[16]_i_1_n_0 ,\buf2_missed_samp_reg[16]_i_1_n_1 ,\buf2_missed_samp_reg[16]_i_1_n_2 ,\buf2_missed_samp_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf2_missed_samp_reg[16]_i_1_n_4 ,\buf2_missed_samp_reg[16]_i_1_n_5 ,\buf2_missed_samp_reg[16]_i_1_n_6 ,\buf2_missed_samp_reg[16]_i_1_n_7 }),
        .S(buf2_missed_samp_reg[19:16]));
  FDRE \buf2_missed_samp_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[16]_i_1_n_6 ),
        .Q(buf2_missed_samp_reg[17]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[16]_i_1_n_5 ),
        .Q(buf2_missed_samp_reg[18]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[16]_i_1_n_4 ),
        .Q(buf2_missed_samp_reg[19]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[0]_i_3_n_6 ),
        .Q(buf2_missed_samp_reg[1]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[20]_i_1_n_7 ),
        .Q(buf2_missed_samp_reg[20]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[20]_i_1 
       (.CI(\buf2_missed_samp_reg[16]_i_1_n_0 ),
        .CO({\buf2_missed_samp_reg[20]_i_1_n_0 ,\buf2_missed_samp_reg[20]_i_1_n_1 ,\buf2_missed_samp_reg[20]_i_1_n_2 ,\buf2_missed_samp_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf2_missed_samp_reg[20]_i_1_n_4 ,\buf2_missed_samp_reg[20]_i_1_n_5 ,\buf2_missed_samp_reg[20]_i_1_n_6 ,\buf2_missed_samp_reg[20]_i_1_n_7 }),
        .S(buf2_missed_samp_reg[23:20]));
  FDRE \buf2_missed_samp_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[20]_i_1_n_6 ),
        .Q(buf2_missed_samp_reg[21]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[20]_i_1_n_5 ),
        .Q(buf2_missed_samp_reg[22]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[20]_i_1_n_4 ),
        .Q(buf2_missed_samp_reg[23]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[24]_i_1_n_7 ),
        .Q(buf2_missed_samp_reg[24]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[24]_i_1 
       (.CI(\buf2_missed_samp_reg[20]_i_1_n_0 ),
        .CO({\buf2_missed_samp_reg[24]_i_1_n_0 ,\buf2_missed_samp_reg[24]_i_1_n_1 ,\buf2_missed_samp_reg[24]_i_1_n_2 ,\buf2_missed_samp_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf2_missed_samp_reg[24]_i_1_n_4 ,\buf2_missed_samp_reg[24]_i_1_n_5 ,\buf2_missed_samp_reg[24]_i_1_n_6 ,\buf2_missed_samp_reg[24]_i_1_n_7 }),
        .S(buf2_missed_samp_reg[27:24]));
  FDRE \buf2_missed_samp_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[24]_i_1_n_6 ),
        .Q(buf2_missed_samp_reg[25]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[24]_i_1_n_5 ),
        .Q(buf2_missed_samp_reg[26]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[24]_i_1_n_4 ),
        .Q(buf2_missed_samp_reg[27]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[28]_i_1_n_7 ),
        .Q(buf2_missed_samp_reg[28]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[28]_i_1 
       (.CI(\buf2_missed_samp_reg[24]_i_1_n_0 ),
        .CO({\NLW_buf2_missed_samp_reg[28]_i_1_CO_UNCONNECTED [3],\buf2_missed_samp_reg[28]_i_1_n_1 ,\buf2_missed_samp_reg[28]_i_1_n_2 ,\buf2_missed_samp_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf2_missed_samp_reg[28]_i_1_n_4 ,\buf2_missed_samp_reg[28]_i_1_n_5 ,\buf2_missed_samp_reg[28]_i_1_n_6 ,\buf2_missed_samp_reg[28]_i_1_n_7 }),
        .S(buf2_missed_samp_reg[31:28]));
  FDRE \buf2_missed_samp_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[28]_i_1_n_6 ),
        .Q(buf2_missed_samp_reg[29]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[0]_i_3_n_5 ),
        .Q(buf2_missed_samp_reg[2]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[28]_i_1_n_5 ),
        .Q(buf2_missed_samp_reg[30]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[28]_i_1_n_4 ),
        .Q(buf2_missed_samp_reg[31]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[0]_i_3_n_4 ),
        .Q(buf2_missed_samp_reg[3]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[4]_i_1_n_7 ),
        .Q(buf2_missed_samp_reg[4]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[4]_i_1 
       (.CI(\buf2_missed_samp_reg[0]_i_3_n_0 ),
        .CO({\buf2_missed_samp_reg[4]_i_1_n_0 ,\buf2_missed_samp_reg[4]_i_1_n_1 ,\buf2_missed_samp_reg[4]_i_1_n_2 ,\buf2_missed_samp_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf2_missed_samp_reg[4]_i_1_n_4 ,\buf2_missed_samp_reg[4]_i_1_n_5 ,\buf2_missed_samp_reg[4]_i_1_n_6 ,\buf2_missed_samp_reg[4]_i_1_n_7 }),
        .S(buf2_missed_samp_reg[7:4]));
  FDRE \buf2_missed_samp_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[4]_i_1_n_6 ),
        .Q(buf2_missed_samp_reg[5]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[4]_i_1_n_5 ),
        .Q(buf2_missed_samp_reg[6]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[4]_i_1_n_4 ),
        .Q(buf2_missed_samp_reg[7]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  FDRE \buf2_missed_samp_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[8]_i_1_n_7 ),
        .Q(buf2_missed_samp_reg[8]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \buf2_missed_samp_reg[8]_i_1 
       (.CI(\buf2_missed_samp_reg[4]_i_1_n_0 ),
        .CO({\buf2_missed_samp_reg[8]_i_1_n_0 ,\buf2_missed_samp_reg[8]_i_1_n_1 ,\buf2_missed_samp_reg[8]_i_1_n_2 ,\buf2_missed_samp_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\buf2_missed_samp_reg[8]_i_1_n_4 ,\buf2_missed_samp_reg[8]_i_1_n_5 ,\buf2_missed_samp_reg[8]_i_1_n_6 ,\buf2_missed_samp_reg[8]_i_1_n_7 }),
        .S(buf2_missed_samp_reg[11:8]));
  FDRE \buf2_missed_samp_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(buf2_missed_samp0),
        .D(\buf2_missed_samp_reg[8]_i_1_n_6 ),
        .Q(buf2_missed_samp_reg[9]),
        .R(U_dma_s2mm_data_ctrl_n_10));
  LUT5 #(
    .INIT(32'hAAAA0EEE)) 
    \buf2_ms_lvl[9]_i_1 
       (.I0(buf1_full_i_2__0_n_0),
        .I1(req_buf_addr_sel_p1_reg_0),
        .I2(next_buf_full_reg_0),
        .I3(axi_last_r2),
        .I4(cfg_dma_sts_reg[4]),
        .O(\buf2_ms_lvl[9]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF00F8)) 
    \buf2_ms_lvl[9]_i_2 
       (.I0(next_buf_full_reg_0),
        .I1(axi_last_r2),
        .I2(req_buf_addr_sel_p1_reg_0),
        .I3(cfg_dma_sts_reg[4]),
        .I4(buf1_full_i_2__0_n_0),
        .O(\buf2_ms_lvl[9]_i_2_n_0 ));
  FDRE \buf2_ms_lvl_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf2_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[0]_i_1_n_0 ),
        .Q(buf2_ms_lvl[0]),
        .R(\buf2_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf2_ms_lvl_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf2_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[1]_i_1_n_0 ),
        .Q(buf2_ms_lvl[1]),
        .R(\buf2_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf2_ms_lvl_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf2_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[2]_i_1_n_0 ),
        .Q(buf2_ms_lvl[2]),
        .R(\buf2_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf2_ms_lvl_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf2_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[3]_i_1_n_0 ),
        .Q(buf2_ms_lvl[3]),
        .R(\buf2_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf2_ms_lvl_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf2_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[4]_i_1_n_0 ),
        .Q(buf2_ms_lvl[4]),
        .R(\buf2_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf2_ms_lvl_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf2_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[5]_i_1_n_0 ),
        .Q(buf2_ms_lvl[5]),
        .R(\buf2_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf2_ms_lvl_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf2_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[6]_i_1_n_0 ),
        .Q(buf2_ms_lvl[6]),
        .R(\buf2_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf2_ms_lvl_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf2_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[7]_i_1_n_0 ),
        .Q(buf2_ms_lvl[7]),
        .R(\buf2_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf2_ms_lvl_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf2_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[8]_i_1_n_0 ),
        .Q(buf2_ms_lvl[8]),
        .R(\buf2_ms_lvl[9]_i_1_n_0 ));
  FDRE \buf2_ms_lvl_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(\buf2_ms_lvl[9]_i_2_n_0 ),
        .D(\buf1_ms_lvl[9]_i_3_n_0 ),
        .Q(buf2_ms_lvl[9]),
        .R(\buf2_ms_lvl[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000AAEA)) 
    buf2_ovr_i_1
       (.I0(cfg_dma_sts_reg[3]),
        .I1(next_buf_full1),
        .I2(cfg_dma_sts_reg[1]),
        .I3(cfg_dma_sts_reg[4]),
        .I4(buf1_full_i_2__0_n_0),
        .I5(cfg_dma_ctrl_reg_0[3]),
        .O(buf2_ovr_i_1_n_0));
  FDRE buf2_ovr_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(buf2_ovr_i_1_n_0),
        .Q(cfg_dma_sts_reg[3]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    ctl_start_r_i_1
       (.I0(cfg_dma_ctrl_reg_0[0]),
        .I1(\cfg_trig_mask_reg[1] ),
        .I2(bit_start_0),
        .O(trig_out1));
  FDRE fifo_dis_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(fifo_dis_reg_2),
        .Q(fifo_dis_reg_1),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \fifo_rst_cnt[0]_i_1 
       (.I0(fifo_rst_cnt_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \fifo_rst_cnt[1]_i_1 
       (.I0(fifo_rst_cnt_reg[0]),
        .I1(fifo_rst_cnt_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \fifo_rst_cnt[2]_i_1 
       (.I0(fifo_rst_cnt_reg[2]),
        .I1(fifo_rst_cnt_reg[1]),
        .I2(fifo_rst_cnt_reg[0]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \fifo_rst_cnt[3]_i_1 
       (.I0(fifo_rst_cnt_reg[3]),
        .I1(fifo_rst_cnt_reg[0]),
        .I2(fifo_rst_cnt_reg[1]),
        .I3(fifo_rst_cnt_reg[2]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \fifo_rst_cnt[4]_i_1 
       (.I0(fifo_rst_cnt_reg[4]),
        .I1(fifo_rst_cnt_reg[2]),
        .I2(fifo_rst_cnt_reg[1]),
        .I3(fifo_rst_cnt_reg[0]),
        .I4(fifo_rst_cnt_reg[3]),
        .O(p_0_in__0[4]));
  FDRE \fifo_rst_cnt_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(fifo_rst_cnt_reg[0]),
        .R(fifo_rst_cnt));
  FDRE \fifo_rst_cnt_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(fifo_rst_cnt_reg[1]),
        .R(fifo_rst_cnt));
  FDRE \fifo_rst_cnt_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(fifo_rst_cnt_reg[2]),
        .R(fifo_rst_cnt));
  FDRE \fifo_rst_cnt_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(fifo_rst_cnt_reg[3]),
        .R(fifo_rst_cnt));
  FDRE \fifo_rst_cnt_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(fifo_rst_cnt_reg[4]),
        .R(fifo_rst_cnt));
  LUT3 #(
    .INIT(8'hFD)) 
    fifo_rst_i_1
       (.I0(\state_cs_reg[0]_1 ),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[1]_0 ),
        .O(fifo_rst_cnt));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    fifo_rst_i_2
       (.I0(fifo_rst_cnt_reg[1]),
        .I1(fifo_rst_cnt_reg[0]),
        .I2(fifo_rst_cnt_reg[2]),
        .I3(fifo_rst_cnt_reg[4]),
        .I4(fifo_rst_cnt_reg[3]),
        .O(fifo_rst_i_2_n_0));
  FDRE fifo_rst_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(fifo_rst_i_2_n_0),
        .Q(rst),
        .R(fifo_rst_cnt));
  FDRE first_rst_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(first_rst_reg_0),
        .Q(first_rst),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1__3
       (.I0(\req_addr_reg[31]_0 [7]),
        .O(i__carry_i_1__3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'hE)) 
    intr_INST_0
       (.I0(intr_reg__0_0),
        .I1(osc2_dma_intr),
        .O(intr));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \intr_cnt[0]_i_1 
       (.I0(intr_reg__0_0),
        .I1(intr_reg),
        .O(intr_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h2)) 
    intr_i_3
       (.I0(\state_cs_reg[2]_0 ),
        .I1(\state_cs_reg[1]_0 ),
        .O(intr_i_3_n_0));
  FDRE intr_reg__0
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(U_dma_s2mm_data_ctrl_n_15),
        .Q(intr_reg__0_0),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \m_axi_awlen[0]_i_1 
       (.I0(fifo_rd_data[0]),
        .O(m_axi_awlen0));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \m_axi_awlen[1]_i_1 
       (.I0(fifo_rd_data[0]),
        .I1(fifo_rd_data[1]),
        .O(\m_axi_awlen[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \m_axi_awlen[2]_i_1 
       (.I0(fifo_rd_data[1]),
        .I1(fifo_rd_data[0]),
        .I2(fifo_rd_data[2]),
        .O(\m_axi_awlen[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \m_axi_awlen[3]_i_1 
       (.I0(fifo_rd_data[2]),
        .I1(fifo_rd_data[0]),
        .I2(fifo_rd_data[1]),
        .I3(fifo_rd_data[3]),
        .O(\m_axi_awlen[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \m_axi_awlen[4]_i_1 
       (.I0(fifo_rd_data[3]),
        .I1(fifo_rd_data[1]),
        .I2(fifo_rd_data[0]),
        .I3(fifo_rd_data[2]),
        .I4(fifo_rd_data[4]),
        .O(\m_axi_awlen[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \m_axi_awlen[5]_i_1 
       (.I0(fifo_rd_data[4]),
        .I1(fifo_rd_data[2]),
        .I2(fifo_rd_data[0]),
        .I3(fifo_rd_data[1]),
        .I4(fifo_rd_data[3]),
        .I5(fifo_rd_data[5]),
        .O(\m_axi_awlen[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \m_axi_awlen[6]_i_1 
       (.I0(\m_axi_awlen[7]_i_3_n_0 ),
        .I1(fifo_rd_data[6]),
        .O(\m_axi_awlen[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \m_axi_awlen[7]_i_1 
       (.I0(\state_cs_reg[0]_1 ),
        .I1(\state_cs_reg[1]_0 ),
        .I2(\state_cs_reg[2]_0 ),
        .O(\m_axi_awlen[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \m_axi_awlen[7]_i_2 
       (.I0(\m_axi_awlen[7]_i_3_n_0 ),
        .I1(fifo_rd_data[6]),
        .O(\m_axi_awlen[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \m_axi_awlen[7]_i_3 
       (.I0(fifo_rd_data[4]),
        .I1(fifo_rd_data[2]),
        .I2(fifo_rd_data[0]),
        .I3(fifo_rd_data[1]),
        .I4(fifo_rd_data[3]),
        .I5(fifo_rd_data[5]),
        .O(\m_axi_awlen[7]_i_3_n_0 ));
  FDRE \m_axi_awlen_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axi_awlen[7]_i_1_n_0 ),
        .D(m_axi_awlen0),
        .Q(m_axi_osc1_awlen[0]),
        .R(1'b0));
  FDRE \m_axi_awlen_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axi_awlen[7]_i_1_n_0 ),
        .D(\m_axi_awlen[1]_i_1_n_0 ),
        .Q(m_axi_osc1_awlen[1]),
        .R(1'b0));
  FDRE \m_axi_awlen_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axi_awlen[7]_i_1_n_0 ),
        .D(\m_axi_awlen[2]_i_1_n_0 ),
        .Q(m_axi_osc1_awlen[2]),
        .R(1'b0));
  FDRE \m_axi_awlen_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axi_awlen[7]_i_1_n_0 ),
        .D(\m_axi_awlen[3]_i_1_n_0 ),
        .Q(m_axi_osc1_awlen[3]),
        .R(1'b0));
  FDRE \m_axi_awlen_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axi_awlen[7]_i_1_n_0 ),
        .D(\m_axi_awlen[4]_i_1_n_0 ),
        .Q(m_axi_osc1_awlen[4]),
        .R(1'b0));
  FDRE \m_axi_awlen_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axi_awlen[7]_i_1_n_0 ),
        .D(\m_axi_awlen[5]_i_1_n_0 ),
        .Q(m_axi_osc1_awlen[5]),
        .R(1'b0));
  FDRE \m_axi_awlen_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axi_awlen[7]_i_1_n_0 ),
        .D(\m_axi_awlen[6]_i_1_n_0 ),
        .Q(m_axi_osc1_awlen[6]),
        .R(1'b0));
  FDRE \m_axi_awlen_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(\m_axi_awlen[7]_i_1_n_0 ),
        .D(\m_axi_awlen[7]_i_2_n_0 ),
        .Q(m_axi_osc1_awlen[7]),
        .R(1'b0));
  FDRE m_axi_awvalid_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(m_axi_awvalid_reg_0),
        .Q(m_axi_osc1_awvalid),
        .R(clear));
  FDRE mode_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(mode_reg_1),
        .Q(mode_reg_0),
        .R(clear));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry
       (.CI(1'b0),
        .CO({next_buf_full1_carry_n_0,next_buf_full1_carry_n_1,next_buf_full1_carry_n_2,next_buf_full1_carry_n_3}),
        .CYINIT(1'b1),
        .DI({next_buf_full1_carry_i_1_n_0,next_buf_full1_carry_i_2_n_0,next_buf_full1_carry_i_3_n_0,next_buf_full1_carry_i_4_n_0}),
        .O(NLW_next_buf_full1_carry_O_UNCONNECTED[3:0]),
        .S({next_buf_full1_carry_i_5_n_0,next_buf_full1_carry_i_6_n_0,next_buf_full1_carry_i_7_n_0,next_buf_full1_carry_i_8_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__0
       (.CI(next_buf_full1_carry_n_0),
        .CO({next_buf_full1_carry__0_n_0,next_buf_full1_carry__0_n_1,next_buf_full1_carry__0_n_2,next_buf_full1_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({next_buf_full1_carry__0_i_1_n_0,next_buf_full1_carry__0_i_2_n_0,next_buf_full1_carry__0_i_3_n_0,next_buf_full1_carry__0_i_4_n_0}),
        .O(NLW_next_buf_full1_carry__0_O_UNCONNECTED[3:0]),
        .S({next_buf_full1_carry__0_i_5_n_0,next_buf_full1_carry__0_i_6_n_0,next_buf_full1_carry__0_i_7_n_0,next_buf_full1_carry__0_i_8_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__0_i_1
       (.I0(next_buf_full20_in[15]),
        .I1(next_buf_full2[15]),
        .I2(next_buf_full20_in[14]),
        .I3(next_buf_full2[14]),
        .O(next_buf_full1_carry__0_i_1_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__0_i_10
       (.CI(next_buf_full1_carry_i_9_n_0),
        .CO({next_buf_full1_carry__0_i_10_n_0,next_buf_full1_carry__0_i_10_n_1,next_buf_full1_carry__0_i_10_n_2,next_buf_full1_carry__0_i_10_n_3}),
        .CYINIT(1'b0),
        .DI({\req_buf_addr_reg_n_0_[11] ,\req_buf_addr_reg_n_0_[10] ,\req_buf_addr_reg_n_0_[9] ,\req_buf_addr_reg_n_0_[8] }),
        .O(next_buf_full2[11:8]),
        .S({next_buf_full1_carry__0_i_15_n_0,next_buf_full1_carry__0_i_16_n_0,next_buf_full1_carry__0_i_17_n_0,next_buf_full1_carry__0_i_18_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_11
       (.I0(\req_buf_addr_reg_n_0_[15] ),
        .I1(next_buf_full1_carry__1_i_10_0[15]),
        .O(next_buf_full1_carry__0_i_11_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_12
       (.I0(\req_buf_addr_reg_n_0_[14] ),
        .I1(next_buf_full1_carry__1_i_10_0[14]),
        .O(next_buf_full1_carry__0_i_12_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_13
       (.I0(\req_buf_addr_reg_n_0_[13] ),
        .I1(next_buf_full1_carry__1_i_10_0[13]),
        .O(next_buf_full1_carry__0_i_13_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_14
       (.I0(\req_buf_addr_reg_n_0_[12] ),
        .I1(next_buf_full1_carry__1_i_10_0[12]),
        .O(next_buf_full1_carry__0_i_14_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_15
       (.I0(\req_buf_addr_reg_n_0_[11] ),
        .I1(next_buf_full1_carry__1_i_10_0[11]),
        .O(next_buf_full1_carry__0_i_15_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_16
       (.I0(\req_buf_addr_reg_n_0_[10] ),
        .I1(next_buf_full1_carry__1_i_10_0[10]),
        .O(next_buf_full1_carry__0_i_16_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_17
       (.I0(\req_buf_addr_reg_n_0_[9] ),
        .I1(next_buf_full1_carry__1_i_10_0[9]),
        .O(next_buf_full1_carry__0_i_17_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__0_i_18
       (.I0(\req_buf_addr_reg_n_0_[8] ),
        .I1(next_buf_full1_carry__1_i_10_0[8]),
        .O(next_buf_full1_carry__0_i_18_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__0_i_2
       (.I0(next_buf_full20_in[13]),
        .I1(next_buf_full2[13]),
        .I2(next_buf_full20_in[12]),
        .I3(next_buf_full2[12]),
        .O(next_buf_full1_carry__0_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__0_i_3
       (.I0(next_buf_full20_in[11]),
        .I1(next_buf_full2[11]),
        .I2(next_buf_full20_in[10]),
        .I3(next_buf_full2[10]),
        .O(next_buf_full1_carry__0_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__0_i_4
       (.I0(next_buf_full20_in[9]),
        .I1(next_buf_full2[9]),
        .I2(next_buf_full20_in[8]),
        .I3(next_buf_full2[8]),
        .O(next_buf_full1_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__0_i_5
       (.I0(next_buf_full2[15]),
        .I1(next_buf_full20_in[15]),
        .I2(next_buf_full2[14]),
        .I3(next_buf_full20_in[14]),
        .O(next_buf_full1_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__0_i_6
       (.I0(next_buf_full2[13]),
        .I1(next_buf_full20_in[13]),
        .I2(next_buf_full2[12]),
        .I3(next_buf_full20_in[12]),
        .O(next_buf_full1_carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__0_i_7
       (.I0(next_buf_full2[11]),
        .I1(next_buf_full20_in[11]),
        .I2(next_buf_full2[10]),
        .I3(next_buf_full20_in[10]),
        .O(next_buf_full1_carry__0_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__0_i_8
       (.I0(next_buf_full2[9]),
        .I1(next_buf_full20_in[9]),
        .I2(next_buf_full2[8]),
        .I3(next_buf_full20_in[8]),
        .O(next_buf_full1_carry__0_i_8_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__0_i_9
       (.CI(next_buf_full1_carry__0_i_10_n_0),
        .CO({next_buf_full1_carry__0_i_9_n_0,next_buf_full1_carry__0_i_9_n_1,next_buf_full1_carry__0_i_9_n_2,next_buf_full1_carry__0_i_9_n_3}),
        .CYINIT(1'b0),
        .DI({\req_buf_addr_reg_n_0_[15] ,\req_buf_addr_reg_n_0_[14] ,\req_buf_addr_reg_n_0_[13] ,\req_buf_addr_reg_n_0_[12] }),
        .O(next_buf_full2[15:12]),
        .S({next_buf_full1_carry__0_i_11_n_0,next_buf_full1_carry__0_i_12_n_0,next_buf_full1_carry__0_i_13_n_0,next_buf_full1_carry__0_i_14_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__1
       (.CI(next_buf_full1_carry__0_n_0),
        .CO({next_buf_full1_carry__1_n_0,next_buf_full1_carry__1_n_1,next_buf_full1_carry__1_n_2,next_buf_full1_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({next_buf_full1_carry__1_i_1_n_0,next_buf_full1_carry__1_i_2_n_0,next_buf_full1_carry__1_i_3_n_0,next_buf_full1_carry__1_i_4_n_0}),
        .O(NLW_next_buf_full1_carry__1_O_UNCONNECTED[3:0]),
        .S({next_buf_full1_carry__1_i_5_n_0,next_buf_full1_carry__1_i_6_n_0,next_buf_full1_carry__1_i_7_n_0,next_buf_full1_carry__1_i_8_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__1_i_1
       (.I0(next_buf_full20_in[23]),
        .I1(next_buf_full2[23]),
        .I2(next_buf_full20_in[22]),
        .I3(next_buf_full2[22]),
        .O(next_buf_full1_carry__1_i_1_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__1_i_10
       (.CI(next_buf_full1_carry__0_i_9_n_0),
        .CO({next_buf_full1_carry__1_i_10_n_0,next_buf_full1_carry__1_i_10_n_1,next_buf_full1_carry__1_i_10_n_2,next_buf_full1_carry__1_i_10_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\req_buf_addr_reg_n_0_[16] }),
        .O(next_buf_full2[19:16]),
        .S({\req_buf_addr_reg_n_0_[19] ,\req_buf_addr_reg_n_0_[18] ,\req_buf_addr_reg_n_0_[17] ,next_buf_full1_carry__1_i_11_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry__1_i_11
       (.I0(\req_buf_addr_reg_n_0_[16] ),
        .I1(next_buf_full1_carry__1_i_10_0[16]),
        .O(next_buf_full1_carry__1_i_11_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__1_i_2
       (.I0(next_buf_full20_in[21]),
        .I1(next_buf_full2[21]),
        .I2(next_buf_full20_in[20]),
        .I3(next_buf_full2[20]),
        .O(next_buf_full1_carry__1_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__1_i_3
       (.I0(next_buf_full20_in[19]),
        .I1(next_buf_full2[19]),
        .I2(next_buf_full20_in[18]),
        .I3(next_buf_full2[18]),
        .O(next_buf_full1_carry__1_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__1_i_4
       (.I0(next_buf_full20_in[17]),
        .I1(next_buf_full2[17]),
        .I2(next_buf_full20_in[16]),
        .I3(next_buf_full2[16]),
        .O(next_buf_full1_carry__1_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__1_i_5
       (.I0(next_buf_full2[23]),
        .I1(next_buf_full20_in[23]),
        .I2(next_buf_full2[22]),
        .I3(next_buf_full20_in[22]),
        .O(next_buf_full1_carry__1_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__1_i_6
       (.I0(next_buf_full2[21]),
        .I1(next_buf_full20_in[21]),
        .I2(next_buf_full2[20]),
        .I3(next_buf_full20_in[20]),
        .O(next_buf_full1_carry__1_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__1_i_7
       (.I0(next_buf_full2[19]),
        .I1(next_buf_full20_in[19]),
        .I2(next_buf_full2[18]),
        .I3(next_buf_full20_in[18]),
        .O(next_buf_full1_carry__1_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__1_i_8
       (.I0(next_buf_full2[17]),
        .I1(next_buf_full20_in[17]),
        .I2(next_buf_full2[16]),
        .I3(next_buf_full20_in[16]),
        .O(next_buf_full1_carry__1_i_8_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__1_i_9
       (.CI(next_buf_full1_carry__1_i_10_n_0),
        .CO({next_buf_full1_carry__1_i_9_n_0,next_buf_full1_carry__1_i_9_n_1,next_buf_full1_carry__1_i_9_n_2,next_buf_full1_carry__1_i_9_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full2[23:20]),
        .S({\req_buf_addr_reg_n_0_[23] ,\req_buf_addr_reg_n_0_[22] ,\req_buf_addr_reg_n_0_[21] ,\req_buf_addr_reg_n_0_[20] }));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__2
       (.CI(next_buf_full1_carry__1_n_0),
        .CO({next_buf_full1,next_buf_full1_carry__2_n_1,next_buf_full1_carry__2_n_2,next_buf_full1_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({next_buf_full1_carry__2_i_1_n_0,next_buf_full1_carry__2_i_2_n_0,next_buf_full1_carry__2_i_3_n_0,next_buf_full1_carry__2_i_4_n_0}),
        .O(NLW_next_buf_full1_carry__2_O_UNCONNECTED[3:0]),
        .S({next_buf_full1_carry__2_i_5_n_0,next_buf_full1_carry__2_i_6_n_0,next_buf_full1_carry__2_i_7_n_0,next_buf_full1_carry__2_i_8_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__2_i_1
       (.I0(next_buf_full20_in[31]),
        .I1(next_buf_full2[31]),
        .I2(next_buf_full20_in[30]),
        .I3(next_buf_full2[30]),
        .O(next_buf_full1_carry__2_i_1_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__2_i_10
       (.CI(next_buf_full1_carry__1_i_9_n_0),
        .CO({next_buf_full1_carry__2_i_10_n_0,next_buf_full1_carry__2_i_10_n_1,next_buf_full1_carry__2_i_10_n_2,next_buf_full1_carry__2_i_10_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full2[27:24]),
        .S({\req_buf_addr_reg_n_0_[27] ,\req_buf_addr_reg_n_0_[26] ,\req_buf_addr_reg_n_0_[25] ,\req_buf_addr_reg_n_0_[24] }));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__2_i_2
       (.I0(next_buf_full20_in[29]),
        .I1(next_buf_full2[29]),
        .I2(next_buf_full20_in[28]),
        .I3(next_buf_full2[28]),
        .O(next_buf_full1_carry__2_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__2_i_3
       (.I0(next_buf_full20_in[27]),
        .I1(next_buf_full2[27]),
        .I2(next_buf_full20_in[26]),
        .I3(next_buf_full2[26]),
        .O(next_buf_full1_carry__2_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry__2_i_4
       (.I0(next_buf_full20_in[25]),
        .I1(next_buf_full2[25]),
        .I2(next_buf_full20_in[24]),
        .I3(next_buf_full2[24]),
        .O(next_buf_full1_carry__2_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__2_i_5
       (.I0(next_buf_full2[31]),
        .I1(next_buf_full20_in[31]),
        .I2(next_buf_full2[30]),
        .I3(next_buf_full20_in[30]),
        .O(next_buf_full1_carry__2_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__2_i_6
       (.I0(next_buf_full2[29]),
        .I1(next_buf_full20_in[29]),
        .I2(next_buf_full2[28]),
        .I3(next_buf_full20_in[28]),
        .O(next_buf_full1_carry__2_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__2_i_7
       (.I0(next_buf_full2[27]),
        .I1(next_buf_full20_in[27]),
        .I2(next_buf_full2[26]),
        .I3(next_buf_full20_in[26]),
        .O(next_buf_full1_carry__2_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry__2_i_8
       (.I0(next_buf_full2[25]),
        .I1(next_buf_full20_in[25]),
        .I2(next_buf_full2[24]),
        .I3(next_buf_full20_in[24]),
        .O(next_buf_full1_carry__2_i_8_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry__2_i_9
       (.CI(next_buf_full1_carry__2_i_10_n_0),
        .CO({NLW_next_buf_full1_carry__2_i_9_CO_UNCONNECTED[3],next_buf_full1_carry__2_i_9_n_1,next_buf_full1_carry__2_i_9_n_2,next_buf_full1_carry__2_i_9_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full2[31:28]),
        .S({\req_buf_addr_reg_n_0_[31] ,\req_buf_addr_reg_n_0_[30] ,\req_buf_addr_reg_n_0_[29] ,\req_buf_addr_reg_n_0_[28] }));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry_i_1
       (.I0(next_buf_full20_in[7]),
        .I1(next_buf_full2[7]),
        .I2(next_buf_full20_in[6]),
        .I3(next_buf_full2[6]),
        .O(next_buf_full1_carry_i_1_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry_i_10
       (.CI(1'b0),
        .CO({next_buf_full1_carry_i_10_n_0,next_buf_full1_carry_i_10_n_1,next_buf_full1_carry_i_10_n_2,next_buf_full1_carry_i_10_n_3}),
        .CYINIT(1'b0),
        .DI({\req_buf_addr_reg_n_0_[3] ,\req_buf_addr_reg_n_0_[2] ,\req_buf_addr_reg_n_0_[1] ,\req_buf_addr_reg_n_0_[0] }),
        .O(next_buf_full2[3:0]),
        .S({next_buf_full1_carry_i_15_n_0,next_buf_full1_carry_i_16_n_0,next_buf_full1_carry_i_17_n_0,next_buf_full1_carry_i_18_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_11
       (.I0(\req_buf_addr_reg_n_0_[7] ),
        .I1(next_buf_full1_carry__1_i_10_0[7]),
        .O(next_buf_full1_carry_i_11_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_12
       (.I0(\req_buf_addr_reg_n_0_[6] ),
        .I1(next_buf_full1_carry__1_i_10_0[6]),
        .O(next_buf_full1_carry_i_12_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_13
       (.I0(\req_buf_addr_reg_n_0_[5] ),
        .I1(next_buf_full1_carry__1_i_10_0[5]),
        .O(next_buf_full1_carry_i_13_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_14
       (.I0(\req_buf_addr_reg_n_0_[4] ),
        .I1(next_buf_full1_carry__1_i_10_0[4]),
        .O(next_buf_full1_carry_i_14_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_15
       (.I0(\req_buf_addr_reg_n_0_[3] ),
        .I1(next_buf_full1_carry__1_i_10_0[3]),
        .O(next_buf_full1_carry_i_15_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_16
       (.I0(\req_buf_addr_reg_n_0_[2] ),
        .I1(next_buf_full1_carry__1_i_10_0[2]),
        .O(next_buf_full1_carry_i_16_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_17
       (.I0(\req_buf_addr_reg_n_0_[1] ),
        .I1(next_buf_full1_carry__1_i_10_0[1]),
        .O(next_buf_full1_carry_i_17_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    next_buf_full1_carry_i_18
       (.I0(\req_buf_addr_reg_n_0_[0] ),
        .I1(next_buf_full1_carry__1_i_10_0[0]),
        .O(next_buf_full1_carry_i_18_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry_i_2
       (.I0(\req_addr_reg[31]_0 [5]),
        .I1(next_buf_full2[5]),
        .I2(\req_addr_reg[31]_0 [4]),
        .I3(next_buf_full2[4]),
        .O(next_buf_full1_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry_i_3
       (.I0(\req_addr_reg[31]_0 [3]),
        .I1(next_buf_full2[3]),
        .I2(\req_addr_reg[31]_0 [2]),
        .I3(next_buf_full2[2]),
        .O(next_buf_full1_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_buf_full1_carry_i_4
       (.I0(\req_addr_reg[31]_0 [1]),
        .I1(next_buf_full2[1]),
        .I2(\req_addr_reg[31]_0 [0]),
        .I3(next_buf_full2[0]),
        .O(next_buf_full1_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry_i_5
       (.I0(next_buf_full2[7]),
        .I1(next_buf_full20_in[7]),
        .I2(next_buf_full2[6]),
        .I3(next_buf_full20_in[6]),
        .O(next_buf_full1_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry_i_6
       (.I0(next_buf_full2[5]),
        .I1(\req_addr_reg[31]_0 [5]),
        .I2(next_buf_full2[4]),
        .I3(\req_addr_reg[31]_0 [4]),
        .O(next_buf_full1_carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry_i_7
       (.I0(next_buf_full2[3]),
        .I1(\req_addr_reg[31]_0 [3]),
        .I2(next_buf_full2[2]),
        .I3(\req_addr_reg[31]_0 [2]),
        .O(next_buf_full1_carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_buf_full1_carry_i_8
       (.I0(next_buf_full2[1]),
        .I1(\req_addr_reg[31]_0 [1]),
        .I2(next_buf_full2[0]),
        .I3(\req_addr_reg[31]_0 [0]),
        .O(next_buf_full1_carry_i_8_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 next_buf_full1_carry_i_9
       (.CI(next_buf_full1_carry_i_10_n_0),
        .CO({next_buf_full1_carry_i_9_n_0,next_buf_full1_carry_i_9_n_1,next_buf_full1_carry_i_9_n_2,next_buf_full1_carry_i_9_n_3}),
        .CYINIT(1'b0),
        .DI({\req_buf_addr_reg_n_0_[7] ,\req_buf_addr_reg_n_0_[6] ,\req_buf_addr_reg_n_0_[5] ,\req_buf_addr_reg_n_0_[4] }),
        .O(next_buf_full2[7:4]),
        .S({next_buf_full1_carry_i_11_n_0,next_buf_full1_carry_i_12_n_0,next_buf_full1_carry_i_13_n_0,next_buf_full1_carry_i_14_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \next_buf_full2_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\next_buf_full2_inferred__0/i__carry_n_0 ,\next_buf_full2_inferred__0/i__carry_n_1 ,\next_buf_full2_inferred__0/i__carry_n_2 ,\next_buf_full2_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\req_addr_reg[31]_0 [7],1'b0}),
        .O(next_buf_full20_in[9:6]),
        .S({\req_addr_reg[31]_0 [9:8],i__carry_i_1__3_n_0,\req_addr_reg[31]_0 [6]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \next_buf_full2_inferred__0/i__carry__0 
       (.CI(\next_buf_full2_inferred__0/i__carry_n_0 ),
        .CO({\next_buf_full2_inferred__0/i__carry__0_n_0 ,\next_buf_full2_inferred__0/i__carry__0_n_1 ,\next_buf_full2_inferred__0/i__carry__0_n_2 ,\next_buf_full2_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full20_in[13:10]),
        .S(\req_addr_reg[31]_0 [13:10]));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \next_buf_full2_inferred__0/i__carry__1 
       (.CI(\next_buf_full2_inferred__0/i__carry__0_n_0 ),
        .CO({\next_buf_full2_inferred__0/i__carry__1_n_0 ,\next_buf_full2_inferred__0/i__carry__1_n_1 ,\next_buf_full2_inferred__0/i__carry__1_n_2 ,\next_buf_full2_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full20_in[17:14]),
        .S(\req_addr_reg[31]_0 [17:14]));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \next_buf_full2_inferred__0/i__carry__2 
       (.CI(\next_buf_full2_inferred__0/i__carry__1_n_0 ),
        .CO({\next_buf_full2_inferred__0/i__carry__2_n_0 ,\next_buf_full2_inferred__0/i__carry__2_n_1 ,\next_buf_full2_inferred__0/i__carry__2_n_2 ,\next_buf_full2_inferred__0/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full20_in[21:18]),
        .S(\req_addr_reg[31]_0 [21:18]));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \next_buf_full2_inferred__0/i__carry__3 
       (.CI(\next_buf_full2_inferred__0/i__carry__2_n_0 ),
        .CO({\next_buf_full2_inferred__0/i__carry__3_n_0 ,\next_buf_full2_inferred__0/i__carry__3_n_1 ,\next_buf_full2_inferred__0/i__carry__3_n_2 ,\next_buf_full2_inferred__0/i__carry__3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full20_in[25:22]),
        .S(\req_addr_reg[31]_0 [25:22]));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \next_buf_full2_inferred__0/i__carry__4 
       (.CI(\next_buf_full2_inferred__0/i__carry__3_n_0 ),
        .CO({\next_buf_full2_inferred__0/i__carry__4_n_0 ,\next_buf_full2_inferred__0/i__carry__4_n_1 ,\next_buf_full2_inferred__0/i__carry__4_n_2 ,\next_buf_full2_inferred__0/i__carry__4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(next_buf_full20_in[29:26]),
        .S(\req_addr_reg[31]_0 [29:26]));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \next_buf_full2_inferred__0/i__carry__5 
       (.CI(\next_buf_full2_inferred__0/i__carry__4_n_0 ),
        .CO({\NLW_next_buf_full2_inferred__0/i__carry__5_CO_UNCONNECTED [3:1],\next_buf_full2_inferred__0/i__carry__5_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_next_buf_full2_inferred__0/i__carry__5_O_UNCONNECTED [3:2],next_buf_full20_in[31:30]}),
        .S({1'b0,1'b0,\req_addr_reg[31]_0 [31:30]}));
  LUT6 #(
    .INIT(64'h0000000010101110)) 
    next_buf_full_i_1
       (.I0(buf1_full_i_2__0_n_0),
        .I1(cfg_dma_ctrl_reg_0[2]),
        .I2(next_buf_full_reg_0),
        .I3(next_buf_full1),
        .I4(\req_buf_addr[31]_i_4_n_0 ),
        .I5(cfg_dma_ctrl_reg_0[3]),
        .O(next_buf_full_i_1_n_0));
  FDRE next_buf_full_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(next_buf_full_i_1_n_0),
        .Q(next_buf_full_reg_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00200000)) 
    \reg_ctrl[0]_i_1 
       (.I0(\reg_ctrl_reg[31]_0 [0]),
        .I1(\s_axi_reg_araddr[3] ),
        .I2(\s_axi_reg_araddr[6] ),
        .I3(\s_axi_reg_araddr[2] ),
        .I4(\s_axi_reg_araddr[7] ),
        .O(\reg_ctrl[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00200000)) 
    \reg_ctrl[1]_i_1 
       (.I0(\reg_ctrl_reg[31]_0 [1]),
        .I1(\s_axi_reg_araddr[3] ),
        .I2(\s_axi_reg_araddr[6] ),
        .I3(\s_axi_reg_araddr[2] ),
        .I4(\s_axi_reg_araddr[7] ),
        .O(\reg_ctrl[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hEF202020)) 
    \reg_ctrl[2]_i_1 
       (.I0(\reg_ctrl_reg[31]_0 [2]),
        .I1(\reg_ctrl[3]_i_2_n_0 ),
        .I2(\s_axi_reg_araddr[7] ),
        .I3(\reg_ctrl[3]_i_3_n_0 ),
        .I4(cfg_dma_ctrl_reg_0[2]),
        .O(\reg_ctrl[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \reg_ctrl[31]_i_1 
       (.I0(\s_axi_reg_araddr[7] ),
        .I1(\s_axi_reg_araddr[2] ),
        .I2(bram_addr_a[6]),
        .I3(bram_addr_a[5]),
        .I4(bram_addr_a[0]),
        .I5(bram_addr_a[3]),
        .O(reg_ctrl122_out));
  LUT3 #(
    .INIT(8'h02)) 
    \reg_ctrl[31]_i_2 
       (.I0(osc1_reg_wr_we),
        .I1(bram_addr_a[7]),
        .I2(bram_addr_a[1]),
        .O(\s_axi_reg_araddr[7] ));
  LUT2 #(
    .INIT(4'hB)) 
    \reg_ctrl[31]_i_3__0 
       (.I0(bram_addr_a[2]),
        .I1(bram_addr_a[4]),
        .O(\s_axi_reg_araddr[2] ));
  LUT5 #(
    .INIT(32'hEF202020)) 
    \reg_ctrl[3]_i_1 
       (.I0(\reg_ctrl_reg[31]_0 [3]),
        .I1(\reg_ctrl[3]_i_2_n_0 ),
        .I2(\s_axi_reg_araddr[7] ),
        .I3(\reg_ctrl[3]_i_3_n_0 ),
        .I4(cfg_dma_ctrl_reg_0[3]),
        .O(\reg_ctrl[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEFFFFFFFFFF)) 
    \reg_ctrl[3]_i_2 
       (.I0(bram_addr_a[3]),
        .I1(bram_addr_a[0]),
        .I2(bram_addr_a[5]),
        .I3(bram_addr_a[6]),
        .I4(bram_addr_a[2]),
        .I5(bram_addr_a[4]),
        .O(\reg_ctrl[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \reg_ctrl[3]_i_3 
       (.I0(\state_cs_reg[1]_0 ),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .O(\reg_ctrl[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00200000)) 
    \reg_ctrl[4]_i_1 
       (.I0(\reg_ctrl_reg[31]_0 [4]),
        .I1(\s_axi_reg_araddr[3] ),
        .I2(\s_axi_reg_araddr[6] ),
        .I3(\s_axi_reg_araddr[2] ),
        .I4(\s_axi_reg_araddr[7] ),
        .O(\reg_ctrl[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00200000)) 
    \reg_ctrl[8]_i_1 
       (.I0(\reg_ctrl_reg[31]_0 [8]),
        .I1(\s_axi_reg_araddr[3] ),
        .I2(\s_axi_reg_araddr[6] ),
        .I3(\s_axi_reg_araddr[2] ),
        .I4(\s_axi_reg_araddr[7] ),
        .O(\reg_ctrl[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00200000)) 
    \reg_ctrl[9]_i_1 
       (.I0(\reg_ctrl_reg[31]_0 [9]),
        .I1(\s_axi_reg_araddr[3] ),
        .I2(\s_axi_reg_araddr[6] ),
        .I3(\s_axi_reg_araddr[2] ),
        .I4(\s_axi_reg_araddr[7] ),
        .O(\reg_ctrl[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \reg_ctrl[9]_i_2 
       (.I0(bram_addr_a[0]),
        .I1(bram_addr_a[3]),
        .O(\s_axi_reg_araddr[3] ));
  LUT2 #(
    .INIT(4'h2)) 
    \reg_ctrl[9]_i_3 
       (.I0(bram_addr_a[6]),
        .I1(bram_addr_a[5]),
        .O(\s_axi_reg_araddr[6] ));
  FDRE \reg_ctrl_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\reg_ctrl[0]_i_1_n_0 ),
        .Q(cfg_dma_ctrl_reg_0[0]),
        .R(clear));
  FDRE \reg_ctrl_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [10]),
        .Q(cfg_dma_ctrl_reg_0[10]),
        .R(clear));
  FDRE \reg_ctrl_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [11]),
        .Q(cfg_dma_ctrl_reg_0[11]),
        .R(clear));
  FDRE \reg_ctrl_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [12]),
        .Q(cfg_dma_ctrl_reg_0[12]),
        .R(clear));
  FDRE \reg_ctrl_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [13]),
        .Q(cfg_dma_ctrl_reg_0[13]),
        .R(clear));
  FDRE \reg_ctrl_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [14]),
        .Q(cfg_dma_ctrl_reg_0[14]),
        .R(clear));
  FDRE \reg_ctrl_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [15]),
        .Q(cfg_dma_ctrl_reg_0[15]),
        .R(clear));
  FDRE \reg_ctrl_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [16]),
        .Q(cfg_dma_ctrl_reg_0[16]),
        .R(clear));
  FDRE \reg_ctrl_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [17]),
        .Q(cfg_dma_ctrl_reg_0[17]),
        .R(clear));
  FDRE \reg_ctrl_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [18]),
        .Q(cfg_dma_ctrl_reg_0[18]),
        .R(clear));
  FDRE \reg_ctrl_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [19]),
        .Q(cfg_dma_ctrl_reg_0[19]),
        .R(clear));
  FDRE \reg_ctrl_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\reg_ctrl[1]_i_1_n_0 ),
        .Q(cfg_dma_ctrl_reg_0[1]),
        .R(clear));
  FDRE \reg_ctrl_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [20]),
        .Q(cfg_dma_ctrl_reg_0[20]),
        .R(clear));
  FDRE \reg_ctrl_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [21]),
        .Q(cfg_dma_ctrl_reg_0[21]),
        .R(clear));
  FDRE \reg_ctrl_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [22]),
        .Q(cfg_dma_ctrl_reg_0[22]),
        .R(clear));
  FDRE \reg_ctrl_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [23]),
        .Q(cfg_dma_ctrl_reg_0[23]),
        .R(clear));
  FDRE \reg_ctrl_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [24]),
        .Q(cfg_dma_ctrl_reg_0[24]),
        .R(clear));
  FDRE \reg_ctrl_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [25]),
        .Q(cfg_dma_ctrl_reg_0[25]),
        .R(clear));
  FDRE \reg_ctrl_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [26]),
        .Q(cfg_dma_ctrl_reg_0[26]),
        .R(clear));
  FDRE \reg_ctrl_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [27]),
        .Q(cfg_dma_ctrl_reg_0[27]),
        .R(clear));
  FDRE \reg_ctrl_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [28]),
        .Q(cfg_dma_ctrl_reg_0[28]),
        .R(clear));
  FDRE \reg_ctrl_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [29]),
        .Q(cfg_dma_ctrl_reg_0[29]),
        .R(clear));
  FDRE \reg_ctrl_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\reg_ctrl[2]_i_1_n_0 ),
        .Q(cfg_dma_ctrl_reg_0[2]),
        .R(clear));
  FDRE \reg_ctrl_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [30]),
        .Q(cfg_dma_ctrl_reg_0[30]),
        .R(clear));
  FDRE \reg_ctrl_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [31]),
        .Q(cfg_dma_ctrl_reg_0[31]),
        .R(clear));
  FDRE \reg_ctrl_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\reg_ctrl[3]_i_1_n_0 ),
        .Q(cfg_dma_ctrl_reg_0[3]),
        .R(clear));
  FDRE \reg_ctrl_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\reg_ctrl[4]_i_1_n_0 ),
        .Q(cfg_dma_ctrl_reg_0[4]),
        .R(clear));
  FDRE \reg_ctrl_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [5]),
        .Q(cfg_dma_ctrl_reg_0[5]),
        .R(clear));
  FDRE \reg_ctrl_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [6]),
        .Q(cfg_dma_ctrl_reg_0[6]),
        .R(clear));
  FDRE \reg_ctrl_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(reg_ctrl122_out),
        .D(\reg_ctrl_reg[31]_0 [7]),
        .Q(cfg_dma_ctrl_reg_0[7]),
        .R(clear));
  FDRE \reg_ctrl_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\reg_ctrl[8]_i_1_n_0 ),
        .Q(\reg_ctrl_reg[9]_0 [0]),
        .R(clear));
  FDRE \reg_ctrl_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\reg_ctrl[9]_i_1_n_0 ),
        .Q(\reg_ctrl_reg[9]_0 [1]),
        .R(clear));
  LUT6 #(
    .INIT(64'h1D1DFF0C1D1D0C0C)) 
    \reg_rd_data[0]_i_1 
       (.I0(\reg_rd_data_reg[0]_i_2_n_0 ),
        .I1(\reg_rd_data_reg[31] ),
        .I2(\reg_rd_data_reg[0] ),
        .I3(\reg_rd_data_reg[0]_0 ),
        .I4(\reg_rd_data_reg[1] ),
        .I5(\reg_rd_data_reg[2] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[0]_i_10 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [0]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [0]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(\reg_rd_data[0]_i_5_0 ),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .I5(cfg_dma_ctrl_reg_0[0]),
        .O(\reg_rd_data[0]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hBABF)) 
    \reg_rd_data[0]_i_12 
       (.I0(\reg_rd_data_reg[2] ),
        .I1(\req_addr_reg[31]_0 [0]),
        .I2(\reg_rd_data[2]_i_8_0 ),
        .I3(\reg_rd_data[17]_i_5_0 [0]),
        .O(\reg_rd_data[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[0]_i_5 
       (.I0(\reg_rd_data[0]_i_9_n_0 ),
        .I1(\reg_rd_data[0]_i_10_n_0 ),
        .I2(\reg_rd_data_reg[15]_0 ),
        .I3(\reg_rd_data_reg[0]_i_2_0 ),
        .I4(\reg_rd_data_reg[15] ),
        .I5(\reg_rd_data[0]_i_12_n_0 ),
        .O(\reg_rd_data[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[0]_i_9 
       (.I0(cfg_dma_sts_reg[0]),
        .I1(\req_buf_addr_reg[31]_1 [0]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(\req_buf_addr_reg[31]_0 [0]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .I5(next_buf_full1_carry__1_i_10_0[0]),
        .O(\reg_rd_data[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEEFEAAAAEEFE)) 
    \reg_rd_data[10]_i_1 
       (.I0(\reg_rd_data_reg[10] ),
        .I1(\reg_rd_data[10]_i_3_n_0 ),
        .I2(\reg_rd_data_reg[8] ),
        .I3(\reg_rd_data_reg[10]_0 ),
        .I4(\reg_rd_data_reg[31] ),
        .I5(\reg_rd_data_reg[10]_1 ),
        .O(D[7]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[10]_i_11 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [10]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [10]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(cfg_dma_ctrl_reg_0[10]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[10]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_18 
       (.I0(buf1_missed_samp_reg[7]),
        .I1(buf1_ms_lvl[7]),
        .O(\reg_rd_data[10]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_19 
       (.I0(buf1_missed_samp_reg[6]),
        .I1(buf1_ms_lvl[6]),
        .O(\reg_rd_data[10]_i_19_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_20 
       (.I0(buf1_missed_samp_reg[5]),
        .I1(buf1_ms_lvl[5]),
        .O(\reg_rd_data[10]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_21 
       (.I0(buf1_missed_samp_reg[4]),
        .I1(buf1_ms_lvl[4]),
        .O(\reg_rd_data[10]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_22 
       (.I0(buf1_missed_samp_reg[9]),
        .I1(buf1_ms_lvl[9]),
        .O(\reg_rd_data[10]_i_22_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_23 
       (.I0(buf1_missed_samp_reg[8]),
        .I1(buf1_ms_lvl[8]),
        .O(\reg_rd_data[10]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_25 
       (.I0(buf2_missed_samp_reg[7]),
        .I1(buf2_ms_lvl[7]),
        .O(\reg_rd_data[10]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_26 
       (.I0(buf2_missed_samp_reg[6]),
        .I1(buf2_ms_lvl[6]),
        .O(\reg_rd_data[10]_i_26_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_27 
       (.I0(buf2_missed_samp_reg[5]),
        .I1(buf2_ms_lvl[5]),
        .O(\reg_rd_data[10]_i_27_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_28 
       (.I0(buf2_missed_samp_reg[4]),
        .I1(buf2_ms_lvl[4]),
        .O(\reg_rd_data[10]_i_28_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_29 
       (.I0(buf2_missed_samp_reg[9]),
        .I1(buf2_ms_lvl[9]),
        .O(\reg_rd_data[10]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \reg_rd_data[10]_i_3 
       (.I0(\reg_rd_data[10]_i_6_n_0 ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[10]_2 ),
        .I3(\reg_rd_data_reg[15]_0 ),
        .I4(\reg_rd_data_reg[10]_i_8_n_0 ),
        .I5(\reg_rd_data_reg[3] ),
        .O(\reg_rd_data[10]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_30 
       (.I0(buf2_missed_samp_reg[8]),
        .I1(buf2_ms_lvl[8]),
        .O(\reg_rd_data[10]_i_30_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_31 
       (.I0(buf1_missed_samp_reg[3]),
        .I1(buf1_ms_lvl[3]),
        .O(\reg_rd_data[10]_i_31_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_32 
       (.I0(buf1_missed_samp_reg[2]),
        .I1(buf1_ms_lvl[2]),
        .O(\reg_rd_data[10]_i_32_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_33 
       (.I0(buf1_missed_samp_reg[1]),
        .I1(buf1_ms_lvl[1]),
        .O(\reg_rd_data[10]_i_33_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_34 
       (.I0(buf1_missed_samp_reg[0]),
        .I1(buf1_ms_lvl[0]),
        .O(\reg_rd_data[10]_i_34_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_35 
       (.I0(buf2_missed_samp_reg[3]),
        .I1(buf2_ms_lvl[3]),
        .O(\reg_rd_data[10]_i_35_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_36 
       (.I0(buf2_missed_samp_reg[2]),
        .I1(buf2_ms_lvl[2]),
        .O(\reg_rd_data[10]_i_36_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_37 
       (.I0(buf2_missed_samp_reg[1]),
        .I1(buf2_ms_lvl[1]),
        .O(\reg_rd_data[10]_i_37_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_rd_data[10]_i_38 
       (.I0(buf2_missed_samp_reg[0]),
        .I1(buf2_ms_lvl[0]),
        .O(\reg_rd_data[10]_i_38_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[10]_i_6 
       (.I0(\reg_rd_data[10]_i_3_1 ),
        .I1(\reg_rd_data_reg[2] ),
        .I2(\req_addr_reg[31]_0 [10]),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(\reg_rd_data[17]_i_5_0 [10]),
        .O(\reg_rd_data[10]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[11]_i_10 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [11]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [11]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(cfg_dma_ctrl_reg_0[11]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[11]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[11]_i_8 
       (.I0(\reg_rd_data_reg[11]_i_5_0 ),
        .I1(\reg_rd_data_reg[2] ),
        .I2(\req_addr_reg[31]_0 [11]),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(\reg_rd_data[17]_i_5_0 [11]),
        .O(\reg_rd_data[11]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[12]_i_10 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [12]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [12]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(cfg_dma_ctrl_reg_0[12]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[12]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[12]_i_8 
       (.I0(\reg_rd_data_reg[12]_i_5_0 ),
        .I1(\reg_rd_data_reg[2] ),
        .I2(\req_addr_reg[31]_0 [12]),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(\reg_rd_data[17]_i_5_0 [12]),
        .O(\reg_rd_data[12]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[13]_i_10 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [13]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [13]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(cfg_dma_ctrl_reg_0[13]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[13]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[13]_i_8 
       (.I0(\reg_rd_data_reg[13]_i_5_0 ),
        .I1(\reg_rd_data_reg[2] ),
        .I2(\req_addr_reg[31]_0 [13]),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(\reg_rd_data[17]_i_5_0 [13]),
        .O(\reg_rd_data[13]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[14]_i_10 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [14]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [14]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(cfg_dma_ctrl_reg_0[14]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[14]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[14]_i_8 
       (.I0(\reg_rd_data_reg[14]_i_5_0 ),
        .I1(\reg_rd_data_reg[2] ),
        .I2(\req_addr_reg[31]_0 [14]),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(\reg_rd_data[17]_i_5_0 [14]),
        .O(\reg_rd_data[14]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[15]_i_12 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [15]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [15]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(cfg_dma_ctrl_reg_0[15]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[15]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \reg_rd_data[15]_i_4 
       (.I0(\reg_rd_data[15]_i_7_n_0 ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[15]_1 ),
        .I3(\reg_rd_data_reg[15]_0 ),
        .I4(\reg_rd_data_reg[15]_i_9_n_0 ),
        .I5(\reg_rd_data_reg[3] ),
        .O(\req_addr_reg[15]_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[15]_i_7 
       (.I0(\reg_rd_data[15]_i_4_0 ),
        .I1(\reg_rd_data_reg[2] ),
        .I2(\req_addr_reg[31]_0 [15]),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(\reg_rd_data[17]_i_5_0 [15]),
        .O(\reg_rd_data[15]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[16]_i_3 
       (.I0(\reg_rd_data[16]_i_5_n_0 ),
        .I1(\reg_rd_data_reg[15]_0 ),
        .I2(\reg_rd_data_reg[16] ),
        .I3(\reg_rd_data_reg[15] ),
        .I4(\reg_rd_data[16]_i_7_n_0 ),
        .O(\cfg_dma_dst_addr1_reg[16] ));
  LUT6 #(
    .INIT(64'h0000C0C0A0A0CFC0)) 
    \reg_rd_data[16]_i_5 
       (.I0(\req_buf_addr_reg[31]_1 [16]),
        .I1(\reg_rd_data[16]_i_3_1 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(cfg_dma_ctrl_reg_0[16]),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[16]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[16]_i_7 
       (.I0(\reg_rd_data[16]_i_3_0 ),
        .I1(\reg_rd_data_reg[2] ),
        .I2(\req_addr_reg[31]_0 [16]),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(\reg_rd_data[17]_i_5_0 [16]),
        .O(\reg_rd_data[16]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[17]_i_10 
       (.I0(\reg_rd_data[17]_i_5_1 ),
        .I1(\reg_rd_data_reg[2] ),
        .I2(\req_addr_reg[31]_0 [17]),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(\reg_rd_data[17]_i_5_0 [17]),
        .O(\reg_rd_data[17]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h8BBB8B88)) 
    \reg_rd_data[17]_i_5 
       (.I0(\reg_rd_data[17]_i_8_n_0 ),
        .I1(\reg_rd_data_reg[15]_0 ),
        .I2(\reg_rd_data_reg[17] ),
        .I3(\reg_rd_data_reg[15] ),
        .I4(\reg_rd_data[17]_i_10_n_0 ),
        .O(\cfg_dma_dst_addr1_reg[17] ));
  LUT6 #(
    .INIT(64'h0000C0C0A0A0CFC0)) 
    \reg_rd_data[17]_i_8 
       (.I0(\req_buf_addr_reg[31]_1 [17]),
        .I1(\reg_rd_data[17]_i_5_2 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(cfg_dma_ctrl_reg_0[17]),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[17]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[18]_i_1 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[18]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[0]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[0]),
        .O(D[8]));
  LUT6 #(
    .INIT(64'h4F404F4F4F404040)) 
    \reg_rd_data[18]_i_2 
       (.I0(\reg_rd_data_reg[18] ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[3] ),
        .I3(\reg_rd_data[18]_i_4_n_0 ),
        .I4(\reg_rd_data_reg[15]_0 ),
        .I5(\reg_rd_data[18]_i_5_n_0 ),
        .O(\reg_rd_data[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00C000C0A0CFA0C0)) 
    \reg_rd_data[18]_i_4 
       (.I0(\req_buf_addr_reg[31]_1 [18]),
        .I1(\reg_rd_data[18]_i_2_0 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(cfg_dma_ctrl_reg_0[18]),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[18]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \reg_rd_data[18]_i_5 
       (.I0(\reg_rd_data[18]_i_2_1 ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data[18]_i_2_2 ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\req_addr_reg[31]_0 [18]),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[18]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[19]_i_1 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[19]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[1]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[1]),
        .O(D[9]));
  LUT6 #(
    .INIT(64'h4F404F4F4F404040)) 
    \reg_rd_data[19]_i_2 
       (.I0(\reg_rd_data_reg[19] ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[3] ),
        .I3(\reg_rd_data[19]_i_4_n_0 ),
        .I4(\reg_rd_data_reg[15]_0 ),
        .I5(\reg_rd_data[19]_i_5_n_0 ),
        .O(\reg_rd_data[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0C0A0A0CFC0)) 
    \reg_rd_data[19]_i_4 
       (.I0(\req_buf_addr_reg[31]_1 [19]),
        .I1(\reg_rd_data[19]_i_2_2 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(cfg_dma_ctrl_reg_0[19]),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[19]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \reg_rd_data[19]_i_5 
       (.I0(\reg_rd_data[19]_i_2_0 ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data[19]_i_2_1 ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\req_addr_reg[31]_0 [19]),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[19]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFB0B0B080)) 
    \reg_rd_data[1]_i_1 
       (.I0(\reg_rd_data_reg[1]_0 ),
        .I1(\reg_rd_data_reg[31] ),
        .I2(\reg_rd_data_reg[1] ),
        .I3(\reg_rd_data[1]_i_3_n_0 ),
        .I4(\reg_rd_data_reg[1]_1 ),
        .I5(\reg_rd_data_reg[1]_2 ),
        .O(D[1]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[1]_i_12 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [1]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [1]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(cfg_dma_ctrl_reg_0[1]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[1]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[1]_i_13 
       (.I0(cfg_dma_sts_reg[1]),
        .I1(\req_buf_addr_reg[31]_1 [1]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(\req_buf_addr_reg[31]_0 [1]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .I5(next_buf_full1_carry__1_i_10_0[1]),
        .O(\reg_rd_data[1]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAFF0C)) 
    \reg_rd_data[1]_i_3 
       (.I0(\reg_rd_data_reg[1]_i_7_n_0 ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[1]_3 ),
        .I3(\reg_rd_data[1]_i_9_n_0 ),
        .I4(\reg_rd_data_reg[15]_0 ),
        .I5(\reg_rd_data_reg[3] ),
        .O(\reg_rd_data[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h000000E2)) 
    \reg_rd_data[1]_i_9 
       (.I0(\reg_rd_data[17]_i_5_0 [1]),
        .I1(\reg_rd_data[2]_i_8_0 ),
        .I2(\req_addr_reg[31]_0 [1]),
        .I3(\reg_rd_data_reg[15] ),
        .I4(\reg_rd_data_reg[2] ),
        .O(\reg_rd_data[1]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[20]_i_1 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[20]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[2]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[2]),
        .O(D[10]));
  LUT6 #(
    .INIT(64'h00FFB8B80000B8B8)) 
    \reg_rd_data[20]_i_2 
       (.I0(\reg_rd_data[20]_i_3_n_0 ),
        .I1(\reg_rd_data_reg[15]_0 ),
        .I2(\reg_rd_data[20]_i_4_n_0 ),
        .I3(\reg_rd_data_reg[20] ),
        .I4(\reg_rd_data_reg[3] ),
        .I5(\reg_rd_data_reg[15] ),
        .O(\reg_rd_data[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0C0A0A0CFC0)) 
    \reg_rd_data[20]_i_3 
       (.I0(\req_buf_addr_reg[31]_1 [20]),
        .I1(\reg_rd_data[20]_i_2_2 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(cfg_dma_ctrl_reg_0[20]),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[20]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \reg_rd_data[20]_i_4 
       (.I0(\reg_rd_data[20]_i_2_0 ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data[20]_i_2_1 ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\req_addr_reg[31]_0 [20]),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[20]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[21]_i_1 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[21]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[3]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[3]),
        .O(D[11]));
  LUT6 #(
    .INIT(64'h4F404F4F4F404040)) 
    \reg_rd_data[21]_i_2 
       (.I0(\reg_rd_data_reg[21] ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[3] ),
        .I3(\reg_rd_data[21]_i_4_n_0 ),
        .I4(\reg_rd_data_reg[15]_0 ),
        .I5(\reg_rd_data[21]_i_5_n_0 ),
        .O(\reg_rd_data[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0C0A0A0CFC0)) 
    \reg_rd_data[21]_i_4 
       (.I0(\req_buf_addr_reg[31]_1 [21]),
        .I1(\reg_rd_data[21]_i_2_2 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(cfg_dma_ctrl_reg_0[21]),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \reg_rd_data[21]_i_5 
       (.I0(\reg_rd_data[21]_i_2_0 ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data[21]_i_2_1 ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\req_addr_reg[31]_0 [21]),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[21]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[22]_i_1 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[22]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[4]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[4]),
        .O(D[12]));
  LUT6 #(
    .INIT(64'h4F404F4F4F404040)) 
    \reg_rd_data[22]_i_2 
       (.I0(\reg_rd_data_reg[22] ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[3] ),
        .I3(\reg_rd_data[22]_i_4_n_0 ),
        .I4(\reg_rd_data_reg[15]_0 ),
        .I5(\reg_rd_data[22]_i_5_n_0 ),
        .O(\reg_rd_data[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0C0A0A0CFC0)) 
    \reg_rd_data[22]_i_4 
       (.I0(\req_buf_addr_reg[31]_1 [22]),
        .I1(\reg_rd_data[22]_i_2_2 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(cfg_dma_ctrl_reg_0[22]),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[22]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \reg_rd_data[22]_i_5 
       (.I0(\reg_rd_data[22]_i_2_0 ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data[22]_i_2_1 ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\req_addr_reg[31]_0 [22]),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[22]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[23]_i_1 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[23]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[5]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[5]),
        .O(D[13]));
  LUT6 #(
    .INIT(64'h4F404F4F4F404040)) 
    \reg_rd_data[23]_i_2 
       (.I0(\reg_rd_data_reg[23] ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[3] ),
        .I3(\reg_rd_data[23]_i_4_n_0 ),
        .I4(\reg_rd_data_reg[15]_0 ),
        .I5(\reg_rd_data[23]_i_5_n_0 ),
        .O(\reg_rd_data[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0C0A0A0CFC0)) 
    \reg_rd_data[23]_i_4 
       (.I0(\req_buf_addr_reg[31]_1 [23]),
        .I1(\reg_rd_data[23]_i_2_2 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(cfg_dma_ctrl_reg_0[23]),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[23]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \reg_rd_data[23]_i_5 
       (.I0(\reg_rd_data[23]_i_2_0 ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data[23]_i_2_1 ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\req_addr_reg[31]_0 [23]),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[23]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[24]_i_1 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[24]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[6]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[6]),
        .O(D[14]));
  LUT6 #(
    .INIT(64'h4F404F4F4F404040)) 
    \reg_rd_data[24]_i_2 
       (.I0(\reg_rd_data_reg[24] ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[3] ),
        .I3(\reg_rd_data[24]_i_4_n_0 ),
        .I4(\reg_rd_data_reg[15]_0 ),
        .I5(\reg_rd_data[24]_i_5_n_0 ),
        .O(\reg_rd_data[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0C0A0A0CFC0)) 
    \reg_rd_data[24]_i_4 
       (.I0(\req_buf_addr_reg[31]_1 [24]),
        .I1(\reg_rd_data[24]_i_2_2 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(cfg_dma_ctrl_reg_0[24]),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[24]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \reg_rd_data[24]_i_5 
       (.I0(\reg_rd_data[24]_i_2_0 ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data[24]_i_2_1 ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\req_addr_reg[31]_0 [24]),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[24]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[25]_i_1 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[25]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[7]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[7]),
        .O(D[15]));
  LUT6 #(
    .INIT(64'h4F404F4F4F404040)) 
    \reg_rd_data[25]_i_2 
       (.I0(\reg_rd_data_reg[25] ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[3] ),
        .I3(\reg_rd_data[25]_i_4_n_0 ),
        .I4(\reg_rd_data_reg[15]_0 ),
        .I5(\reg_rd_data[25]_i_5_n_0 ),
        .O(\reg_rd_data[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0C0A0A0CFC0)) 
    \reg_rd_data[25]_i_4 
       (.I0(\req_buf_addr_reg[31]_1 [25]),
        .I1(\reg_rd_data[25]_i_2_1 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(cfg_dma_ctrl_reg_0[25]),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3033300030883088)) 
    \reg_rd_data[25]_i_5 
       (.I0(intr_cnt_reg[0]),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data[25]_i_2_0 ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\req_addr_reg[31]_0 [25]),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[25]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[26]_i_1 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[26]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[8]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[8]),
        .O(D[16]));
  LUT6 #(
    .INIT(64'h4F404F4F4F404040)) 
    \reg_rd_data[26]_i_2 
       (.I0(\reg_rd_data_reg[26] ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[3] ),
        .I3(\reg_rd_data[26]_i_4_n_0 ),
        .I4(\reg_rd_data_reg[15]_0 ),
        .I5(\reg_rd_data[26]_i_5_n_0 ),
        .O(\reg_rd_data[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0C0A0A0CFC0)) 
    \reg_rd_data[26]_i_4 
       (.I0(\req_buf_addr_reg[31]_1 [26]),
        .I1(\reg_rd_data[26]_i_2_1 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(cfg_dma_ctrl_reg_0[26]),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[26]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3033300030883088)) 
    \reg_rd_data[26]_i_5 
       (.I0(intr_cnt_reg[1]),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data[26]_i_2_0 ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\req_addr_reg[31]_0 [26]),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[26]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[27]_i_1 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[27]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[9]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[9]),
        .O(D[17]));
  LUT6 #(
    .INIT(64'h4F404F4F4F404040)) 
    \reg_rd_data[27]_i_2 
       (.I0(\reg_rd_data_reg[27] ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[3] ),
        .I3(\reg_rd_data[27]_i_4_n_0 ),
        .I4(\reg_rd_data_reg[15]_0 ),
        .I5(\reg_rd_data[27]_i_5_n_0 ),
        .O(\reg_rd_data[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0C0A0A0CFC0)) 
    \reg_rd_data[27]_i_4 
       (.I0(\req_buf_addr_reg[31]_1 [27]),
        .I1(\reg_rd_data[27]_i_2_1 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(cfg_dma_ctrl_reg_0[27]),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[27]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3033300030883088)) 
    \reg_rd_data[27]_i_5 
       (.I0(intr_cnt_reg[2]),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data[27]_i_2_0 ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\req_addr_reg[31]_0 [27]),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[27]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[28]_i_1 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[28]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[10]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[10]),
        .O(D[18]));
  LUT6 #(
    .INIT(64'h4F404F4F4F404040)) 
    \reg_rd_data[28]_i_2 
       (.I0(\reg_rd_data_reg[28] ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[3] ),
        .I3(\reg_rd_data[28]_i_4_n_0 ),
        .I4(\reg_rd_data_reg[15]_0 ),
        .I5(\reg_rd_data[28]_i_5_n_0 ),
        .O(\reg_rd_data[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0C0A0A0CFC0)) 
    \reg_rd_data[28]_i_4 
       (.I0(\req_buf_addr_reg[31]_1 [28]),
        .I1(\reg_rd_data[28]_i_2_1 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(cfg_dma_ctrl_reg_0[28]),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3033300030883088)) 
    \reg_rd_data[28]_i_5 
       (.I0(intr_cnt_reg[3]),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data[28]_i_2_0 ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\req_addr_reg[31]_0 [28]),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[28]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[29]_i_1 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[29]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[11]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[11]),
        .O(D[19]));
  LUT6 #(
    .INIT(64'h4F404F4F4F404040)) 
    \reg_rd_data[29]_i_2 
       (.I0(\reg_rd_data_reg[29] ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[3] ),
        .I3(\reg_rd_data[29]_i_4_n_0 ),
        .I4(\reg_rd_data_reg[15]_0 ),
        .I5(\reg_rd_data[29]_i_5_n_0 ),
        .O(\reg_rd_data[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0C0A0A0CFC0)) 
    \reg_rd_data[29]_i_4 
       (.I0(\req_buf_addr_reg[31]_1 [29]),
        .I1(\reg_rd_data[29]_i_2_1 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(cfg_dma_ctrl_reg_0[29]),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3033300030883088)) 
    \reg_rd_data[29]_i_5 
       (.I0(intr_cnt_reg[4]),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data[29]_i_2_0 ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\req_addr_reg[31]_0 [29]),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[29]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h4747FF0047470000)) 
    \reg_rd_data[2]_i_1 
       (.I0(\reg_rd_data_reg[2]_0 ),
        .I1(\reg_rd_data_reg[31] ),
        .I2(\reg_rd_data_reg[2]_i_3_n_0 ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\reg_rd_data_reg[1] ),
        .I5(\reg_rd_data_reg[2]_1 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \reg_rd_data[2]_i_15 
       (.I0(cfg_dma_sts_reg[2]),
        .I1(\req_buf_addr_reg[31]_1 [2]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(\req_buf_addr_reg[31]_0 [2]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .I5(next_buf_full1_carry__1_i_10_0[2]),
        .O(\reg_rd_data[2]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h5F305F3F)) 
    \reg_rd_data[2]_i_16 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [2]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [2]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(cfg_dma_ctrl_reg_0[2]),
        .O(\reg_rd_data[2]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h47)) 
    \reg_rd_data[2]_i_21 
       (.I0(\req_addr_reg[31]_0 [2]),
        .I1(\reg_rd_data[2]_i_8_0 ),
        .I2(\reg_rd_data[17]_i_5_0 [2]),
        .O(\reg_rd_data[2]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[2]_i_8 
       (.I0(\reg_rd_data[2]_i_15_n_0 ),
        .I1(\reg_rd_data[2]_i_16_n_0 ),
        .I2(\reg_rd_data_reg[15]_0 ),
        .I3(\reg_rd_data_reg[2]_i_3_0 ),
        .I4(\reg_rd_data_reg[15] ),
        .I5(\reg_rd_data_reg[2]_i_18_n_0 ),
        .O(\reg_rd_data[2]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[30]_i_1 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[30]_i_2_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[12]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[12]),
        .O(D[20]));
  LUT6 #(
    .INIT(64'h4F404F4F4F404040)) 
    \reg_rd_data[30]_i_2 
       (.I0(\reg_rd_data_reg[30] ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[3] ),
        .I3(\reg_rd_data[30]_i_4_n_0 ),
        .I4(\reg_rd_data_reg[15]_0 ),
        .I5(\reg_rd_data[30]_i_5_n_0 ),
        .O(\reg_rd_data[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0C0A0A0CFC0)) 
    \reg_rd_data[30]_i_4 
       (.I0(\req_buf_addr_reg[31]_1 [30]),
        .I1(\reg_rd_data[30]_i_2_1 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(cfg_dma_ctrl_reg_0[30]),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[30]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3033300030883088)) 
    \reg_rd_data[30]_i_5 
       (.I0(intr_cnt_reg[5]),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data[30]_i_2_0 ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\req_addr_reg[31]_0 [30]),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[30]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \reg_rd_data[31]_i_1 
       (.I0(\reg_rd_data_reg[31] ),
        .I1(\reg_rd_data[31]_i_3_n_0 ),
        .I2(\reg_rd_data_reg[31]_0 ),
        .I3(trig_cnt_reg[13]),
        .I4(\reg_rd_data_reg[31]_1 ),
        .I5(clk_cnt_reg[13]),
        .O(D[21]));
  LUT6 #(
    .INIT(64'h3033300030883088)) 
    \reg_rd_data[31]_i_10 
       (.I0(intr_cnt_reg[6]),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data[31]_i_3_0 ),
        .I3(\reg_rd_data_reg[2] ),
        .I4(\req_addr_reg[31]_0 [31]),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[31]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \reg_rd_data[31]_i_3 
       (.I0(\reg_rd_data_reg[15] ),
        .I1(\reg_rd_data_reg[31]_2 ),
        .I2(\reg_rd_data_reg[3] ),
        .I3(\reg_rd_data[31]_i_9_n_0 ),
        .I4(\reg_rd_data_reg[15]_0 ),
        .I5(\reg_rd_data[31]_i_10_n_0 ),
        .O(\reg_rd_data[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0C0A0A0CFC0)) 
    \reg_rd_data[31]_i_9 
       (.I0(\req_buf_addr_reg[31]_1 [31]),
        .I1(\reg_rd_data[31]_i_3_1 ),
        .I2(\reg_rd_data_reg[15] ),
        .I3(cfg_dma_ctrl_reg_0[31]),
        .I4(\reg_rd_data_reg[2] ),
        .I5(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[31]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF55555510)) 
    \reg_rd_data[3]_i_1 
       (.I0(\reg_rd_data_reg[3]_0 ),
        .I1(\reg_rd_data_reg[3] ),
        .I2(\reg_rd_data_reg[3]_i_3_n_0 ),
        .I3(\reg_rd_data_reg[3]_1 ),
        .I4(\reg_rd_data_reg[31] ),
        .I5(\reg_rd_data_reg[3]_2 ),
        .O(D[3]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[3]_i_12 
       (.I0(\reg_rd_data_reg[3]_i_8_0 ),
        .I1(\reg_rd_data_reg[2] ),
        .I2(\req_addr_reg[31]_0 [3]),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(\reg_rd_data[17]_i_5_0 [3]),
        .O(\reg_rd_data[3]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[3]_i_14 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [3]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [3]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(cfg_dma_ctrl_reg_0[3]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[3]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[3]_i_15 
       (.I0(cfg_dma_sts_reg[3]),
        .I1(\req_buf_addr_reg[31]_1 [3]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(\req_buf_addr_reg[31]_0 [3]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .I5(next_buf_full1_carry__1_i_10_0[3]),
        .O(\reg_rd_data[3]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE200E2)) 
    \reg_rd_data[4]_i_1 
       (.I0(\reg_rd_data_reg[4]_i_2_n_0 ),
        .I1(\reg_rd_data_reg[3] ),
        .I2(\reg_rd_data_reg[4] ),
        .I3(\reg_rd_data_reg[31] ),
        .I4(\reg_rd_data_reg[4]_0 ),
        .I5(\reg_rd_data_reg[4]_1 ),
        .O(D[4]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[4]_i_10 
       (.I0(\reg_rd_data_reg[4]_i_6_0 ),
        .I1(\reg_rd_data_reg[2] ),
        .I2(\req_addr_reg[31]_0 [4]),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(\reg_rd_data[17]_i_5_0 [4]),
        .O(\reg_rd_data[4]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[4]_i_12 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [4]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [4]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(cfg_dma_ctrl_reg_0[4]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[4]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \reg_rd_data[4]_i_13 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(\req_buf_addr_reg[31]_1 [4]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(\req_buf_addr_reg[31]_0 [4]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .I5(next_buf_full1_carry__1_i_10_0[4]),
        .O(\reg_rd_data[4]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE200E2)) 
    \reg_rd_data[5]_i_1 
       (.I0(\reg_rd_data_reg[5]_i_2_n_0 ),
        .I1(\reg_rd_data_reg[3] ),
        .I2(\reg_rd_data_reg[5] ),
        .I3(\reg_rd_data_reg[31] ),
        .I4(\reg_rd_data_reg[5]_0 ),
        .I5(\reg_rd_data_reg[5]_1 ),
        .O(D[5]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[5]_i_10 
       (.I0(\reg_rd_data_reg[5]_i_6_0 ),
        .I1(\reg_rd_data_reg[2] ),
        .I2(\req_addr_reg[31]_0 [5]),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(\reg_rd_data[17]_i_5_0 [5]),
        .O(\reg_rd_data[5]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[5]_i_12 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [5]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [5]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(cfg_dma_ctrl_reg_0[5]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[5]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[6]_i_10 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [6]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [6]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(cfg_dma_ctrl_reg_0[6]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[6]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[6]_i_8 
       (.I0(\reg_rd_data_reg[6]_i_5_0 ),
        .I1(\reg_rd_data_reg[2] ),
        .I2(\req_addr_reg[31]_0 [6]),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(\reg_rd_data[17]_i_5_0 [6]),
        .O(\reg_rd_data[6]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[7]_i_10 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [7]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [7]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(cfg_dma_ctrl_reg_0[7]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[7]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[7]_i_8 
       (.I0(\reg_rd_data_reg[7]_i_5_0 ),
        .I1(\reg_rd_data_reg[2] ),
        .I2(\req_addr_reg[31]_0 [7]),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(\reg_rd_data[17]_i_5_0 [7]),
        .O(\reg_rd_data[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEEFEAAAAEEFE)) 
    \reg_rd_data[8]_i_1 
       (.I0(\reg_rd_data_reg[8]_0 ),
        .I1(\reg_rd_data[8]_i_3_n_0 ),
        .I2(\reg_rd_data_reg[8] ),
        .I3(\reg_rd_data_reg[8]_1 ),
        .I4(\reg_rd_data_reg[31] ),
        .I5(\reg_rd_data_reg[8]_2 ),
        .O(D[6]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[8]_i_11 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [8]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [8]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(\reg_ctrl_reg[9]_0 [0]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[8]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \reg_rd_data[8]_i_3 
       (.I0(\reg_rd_data[8]_i_6_n_0 ),
        .I1(\reg_rd_data_reg[15] ),
        .I2(\reg_rd_data_reg[8]_3 ),
        .I3(\reg_rd_data_reg[15]_0 ),
        .I4(\reg_rd_data_reg[8]_i_8_n_0 ),
        .I5(\reg_rd_data_reg[3] ),
        .O(\reg_rd_data[8]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[8]_i_6 
       (.I0(\reg_rd_data[8]_i_3_1 ),
        .I1(\reg_rd_data_reg[2] ),
        .I2(\req_addr_reg[31]_0 [8]),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(\reg_rd_data[17]_i_5_0 [8]),
        .O(\reg_rd_data[8]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \reg_rd_data[9]_i_10 
       (.I0(\reg_rd_data_reg[15]_i_9_0 [9]),
        .I1(\reg_rd_data_reg[15]_i_9_1 [9]),
        .I2(\reg_rd_data_reg[2] ),
        .I3(\reg_ctrl_reg[9]_0 [1]),
        .I4(\reg_rd_data[2]_i_8_0 ),
        .O(\reg_rd_data[9]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_rd_data[9]_i_8 
       (.I0(\reg_rd_data_reg[9]_i_5_0 ),
        .I1(\reg_rd_data_reg[2] ),
        .I2(\req_addr_reg[31]_0 [9]),
        .I3(\reg_rd_data[2]_i_8_0 ),
        .I4(\reg_rd_data[17]_i_5_0 [9]),
        .O(\reg_rd_data[9]_i_8_n_0 ));
  MUXF7 \reg_rd_data_reg[0]_i_2 
       (.I0(\reg_rd_data[0]_i_5_n_0 ),
        .I1(\reg_rd_data_reg[0]_1 ),
        .O(\reg_rd_data_reg[0]_i_2_n_0 ),
        .S(\reg_rd_data_reg[3] ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[10]_i_13 
       (.CI(\reg_rd_data_reg[10]_i_17_n_0 ),
        .CO({\reg_rd_data_reg[10]_i_13_n_0 ,\reg_rd_data_reg[10]_i_13_n_1 ,\reg_rd_data_reg[10]_i_13_n_2 ,\reg_rd_data_reg[10]_i_13_n_3 }),
        .CYINIT(1'b0),
        .DI(buf1_missed_samp_reg[7:4]),
        .O(missed_samps_ch1[7:4]),
        .S({\reg_rd_data[10]_i_18_n_0 ,\reg_rd_data[10]_i_19_n_0 ,\reg_rd_data[10]_i_20_n_0 ,\reg_rd_data[10]_i_21_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[10]_i_14 
       (.CI(\reg_rd_data_reg[10]_i_13_n_0 ),
        .CO({\reg_rd_data_reg[10]_i_14_n_0 ,\reg_rd_data_reg[10]_i_14_n_1 ,\reg_rd_data_reg[10]_i_14_n_2 ,\reg_rd_data_reg[10]_i_14_n_3 }),
        .CYINIT(1'b0),
        .DI(buf1_missed_samp_reg[11:8]),
        .O(missed_samps_ch1[11:8]),
        .S({buf1_missed_samp_reg[11:10],\reg_rd_data[10]_i_22_n_0 ,\reg_rd_data[10]_i_23_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[10]_i_15 
       (.CI(\reg_rd_data_reg[10]_i_24_n_0 ),
        .CO({\reg_rd_data_reg[10]_i_15_n_0 ,\reg_rd_data_reg[10]_i_15_n_1 ,\reg_rd_data_reg[10]_i_15_n_2 ,\reg_rd_data_reg[10]_i_15_n_3 }),
        .CYINIT(1'b0),
        .DI(buf2_missed_samp_reg[7:4]),
        .O(missed_samps_ch2[7:4]),
        .S({\reg_rd_data[10]_i_25_n_0 ,\reg_rd_data[10]_i_26_n_0 ,\reg_rd_data[10]_i_27_n_0 ,\reg_rd_data[10]_i_28_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[10]_i_16 
       (.CI(\reg_rd_data_reg[10]_i_15_n_0 ),
        .CO({\reg_rd_data_reg[10]_i_16_n_0 ,\reg_rd_data_reg[10]_i_16_n_1 ,\reg_rd_data_reg[10]_i_16_n_2 ,\reg_rd_data_reg[10]_i_16_n_3 }),
        .CYINIT(1'b0),
        .DI(buf2_missed_samp_reg[11:8]),
        .O(missed_samps_ch2[11:8]),
        .S({buf2_missed_samp_reg[11:10],\reg_rd_data[10]_i_29_n_0 ,\reg_rd_data[10]_i_30_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[10]_i_17 
       (.CI(1'b0),
        .CO({\reg_rd_data_reg[10]_i_17_n_0 ,\reg_rd_data_reg[10]_i_17_n_1 ,\reg_rd_data_reg[10]_i_17_n_2 ,\reg_rd_data_reg[10]_i_17_n_3 }),
        .CYINIT(1'b0),
        .DI(buf1_missed_samp_reg[3:0]),
        .O(missed_samps_ch1[3:0]),
        .S({\reg_rd_data[10]_i_31_n_0 ,\reg_rd_data[10]_i_32_n_0 ,\reg_rd_data[10]_i_33_n_0 ,\reg_rd_data[10]_i_34_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[10]_i_24 
       (.CI(1'b0),
        .CO({\reg_rd_data_reg[10]_i_24_n_0 ,\reg_rd_data_reg[10]_i_24_n_1 ,\reg_rd_data_reg[10]_i_24_n_2 ,\reg_rd_data_reg[10]_i_24_n_3 }),
        .CYINIT(1'b0),
        .DI(buf2_missed_samp_reg[3:0]),
        .O(missed_samps_ch2[3:0]),
        .S({\reg_rd_data[10]_i_35_n_0 ,\reg_rd_data[10]_i_36_n_0 ,\reg_rd_data[10]_i_37_n_0 ,\reg_rd_data[10]_i_38_n_0 }));
  MUXF7 \reg_rd_data_reg[10]_i_8 
       (.I0(\reg_rd_data[10]_i_11_n_0 ),
        .I1(\reg_rd_data[10]_i_3_0 ),
        .O(\reg_rd_data_reg[10]_i_8_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF8 \reg_rd_data_reg[11]_i_3 
       (.I0(\reg_rd_data_reg[11]_i_5_n_0 ),
        .I1(\reg_rd_data_reg[11]_i_6_n_0 ),
        .O(\reg_rd_data_reg[11]_i_6_0 ),
        .S(\reg_rd_data_reg[15]_0 ));
  MUXF7 \reg_rd_data_reg[11]_i_5 
       (.I0(\reg_rd_data[11]_i_8_n_0 ),
        .I1(\reg_rd_data_reg[11]_i_3_0 ),
        .O(\reg_rd_data_reg[11]_i_5_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF7 \reg_rd_data_reg[11]_i_6 
       (.I0(\reg_rd_data[11]_i_10_n_0 ),
        .I1(\reg_rd_data_reg[11]_i_3_1 ),
        .O(\reg_rd_data_reg[11]_i_6_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF8 \reg_rd_data_reg[12]_i_3 
       (.I0(\reg_rd_data_reg[12]_i_5_n_0 ),
        .I1(\reg_rd_data_reg[12]_i_6_n_0 ),
        .O(\reg_rd_data_reg[12]_i_6_0 ),
        .S(\reg_rd_data_reg[15]_0 ));
  MUXF7 \reg_rd_data_reg[12]_i_5 
       (.I0(\reg_rd_data[12]_i_8_n_0 ),
        .I1(\reg_rd_data_reg[12]_i_3_1 ),
        .O(\reg_rd_data_reg[12]_i_5_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF7 \reg_rd_data_reg[12]_i_6 
       (.I0(\reg_rd_data[12]_i_10_n_0 ),
        .I1(\reg_rd_data_reg[12]_i_3_0 ),
        .O(\reg_rd_data_reg[12]_i_6_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF8 \reg_rd_data_reg[13]_i_3 
       (.I0(\reg_rd_data_reg[13]_i_5_n_0 ),
        .I1(\reg_rd_data_reg[13]_i_6_n_0 ),
        .O(\reg_rd_data_reg[13]_i_6_0 ),
        .S(\reg_rd_data_reg[15]_0 ));
  MUXF7 \reg_rd_data_reg[13]_i_5 
       (.I0(\reg_rd_data[13]_i_8_n_0 ),
        .I1(\reg_rd_data_reg[13]_i_3_0 ),
        .O(\reg_rd_data_reg[13]_i_5_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF7 \reg_rd_data_reg[13]_i_6 
       (.I0(\reg_rd_data[13]_i_10_n_0 ),
        .I1(\reg_rd_data_reg[13]_i_3_1 ),
        .O(\reg_rd_data_reg[13]_i_6_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF8 \reg_rd_data_reg[14]_i_3 
       (.I0(\reg_rd_data_reg[14]_i_5_n_0 ),
        .I1(\reg_rd_data_reg[14]_i_6_n_0 ),
        .O(\reg_rd_data_reg[14]_i_6_0 ),
        .S(\reg_rd_data_reg[15]_0 ));
  MUXF7 \reg_rd_data_reg[14]_i_5 
       (.I0(\reg_rd_data[14]_i_8_n_0 ),
        .I1(\reg_rd_data_reg[14]_i_3_0 ),
        .O(\reg_rd_data_reg[14]_i_5_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF7 \reg_rd_data_reg[14]_i_6 
       (.I0(\reg_rd_data[14]_i_10_n_0 ),
        .I1(\reg_rd_data_reg[14]_i_3_1 ),
        .O(\reg_rd_data_reg[14]_i_6_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF7 \reg_rd_data_reg[15]_i_9 
       (.I0(\reg_rd_data[15]_i_12_n_0 ),
        .I1(\reg_rd_data[15]_i_4_1 ),
        .O(\reg_rd_data_reg[15]_i_9_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[18]_i_10 
       (.CI(\reg_rd_data_reg[10]_i_16_n_0 ),
        .CO({\reg_rd_data_reg[18]_i_10_n_0 ,\reg_rd_data_reg[18]_i_10_n_1 ,\reg_rd_data_reg[18]_i_10_n_2 ,\reg_rd_data_reg[18]_i_10_n_3 }),
        .CYINIT(1'b0),
        .DI(buf2_missed_samp_reg[15:12]),
        .O(missed_samps_ch2[15:12]),
        .S(buf2_missed_samp_reg[15:12]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[18]_i_9 
       (.CI(\reg_rd_data_reg[10]_i_14_n_0 ),
        .CO({\reg_rd_data_reg[18]_i_9_n_0 ,\reg_rd_data_reg[18]_i_9_n_1 ,\reg_rd_data_reg[18]_i_9_n_2 ,\reg_rd_data_reg[18]_i_9_n_3 }),
        .CYINIT(1'b0),
        .DI(buf1_missed_samp_reg[15:12]),
        .O(missed_samps_ch1[15:12]),
        .S(buf1_missed_samp_reg[15:12]));
  MUXF7 \reg_rd_data_reg[1]_i_7 
       (.I0(\reg_rd_data[1]_i_12_n_0 ),
        .I1(\reg_rd_data[1]_i_13_n_0 ),
        .O(\reg_rd_data_reg[1]_i_7_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[22]_i_10 
       (.CI(\reg_rd_data_reg[18]_i_10_n_0 ),
        .CO({\reg_rd_data_reg[22]_i_10_n_0 ,\reg_rd_data_reg[22]_i_10_n_1 ,\reg_rd_data_reg[22]_i_10_n_2 ,\reg_rd_data_reg[22]_i_10_n_3 }),
        .CYINIT(1'b0),
        .DI(buf2_missed_samp_reg[19:16]),
        .O(missed_samps_ch2[19:16]),
        .S(buf2_missed_samp_reg[19:16]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[22]_i_9 
       (.CI(\reg_rd_data_reg[18]_i_9_n_0 ),
        .CO({\reg_rd_data_reg[22]_i_9_n_0 ,\reg_rd_data_reg[22]_i_9_n_1 ,\reg_rd_data_reg[22]_i_9_n_2 ,\reg_rd_data_reg[22]_i_9_n_3 }),
        .CYINIT(1'b0),
        .DI(buf1_missed_samp_reg[19:16]),
        .O(missed_samps_ch1[19:16]),
        .S(buf1_missed_samp_reg[19:16]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[26]_i_8 
       (.CI(\reg_rd_data_reg[22]_i_9_n_0 ),
        .CO({\reg_rd_data_reg[26]_i_8_n_0 ,\reg_rd_data_reg[26]_i_8_n_1 ,\reg_rd_data_reg[26]_i_8_n_2 ,\reg_rd_data_reg[26]_i_8_n_3 }),
        .CYINIT(1'b0),
        .DI(buf1_missed_samp_reg[23:20]),
        .O(missed_samps_ch1[23:20]),
        .S(buf1_missed_samp_reg[23:20]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[26]_i_9 
       (.CI(\reg_rd_data_reg[22]_i_10_n_0 ),
        .CO({\reg_rd_data_reg[26]_i_9_n_0 ,\reg_rd_data_reg[26]_i_9_n_1 ,\reg_rd_data_reg[26]_i_9_n_2 ,\reg_rd_data_reg[26]_i_9_n_3 }),
        .CYINIT(1'b0),
        .DI(buf2_missed_samp_reg[23:20]),
        .O(missed_samps_ch2[23:20]),
        .S(buf2_missed_samp_reg[23:20]));
  MUXF7 \reg_rd_data_reg[2]_i_18 
       (.I0(\reg_rd_data[2]_i_21_n_0 ),
        .I1(\reg_rd_data[2]_i_8_1 ),
        .O(\reg_rd_data_reg[2]_i_18_n_0 ),
        .S(\reg_rd_data_reg[2] ));
  MUXF7 \reg_rd_data_reg[2]_i_3 
       (.I0(\reg_rd_data[2]_i_8_n_0 ),
        .I1(\reg_rd_data_reg[2]_2 ),
        .O(\reg_rd_data_reg[2]_i_3_n_0 ),
        .S(\reg_rd_data_reg[3] ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[30]_i_8 
       (.CI(\reg_rd_data_reg[26]_i_8_n_0 ),
        .CO({\reg_rd_data_reg[30]_i_8_n_0 ,\reg_rd_data_reg[30]_i_8_n_1 ,\reg_rd_data_reg[30]_i_8_n_2 ,\reg_rd_data_reg[30]_i_8_n_3 }),
        .CYINIT(1'b0),
        .DI(buf1_missed_samp_reg[27:24]),
        .O(missed_samps_ch1[27:24]),
        .S(buf1_missed_samp_reg[27:24]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[30]_i_9 
       (.CI(\reg_rd_data_reg[26]_i_9_n_0 ),
        .CO({\reg_rd_data_reg[30]_i_9_n_0 ,\reg_rd_data_reg[30]_i_9_n_1 ,\reg_rd_data_reg[30]_i_9_n_2 ,\reg_rd_data_reg[30]_i_9_n_3 }),
        .CYINIT(1'b0),
        .DI(buf2_missed_samp_reg[27:24]),
        .O(missed_samps_ch2[27:24]),
        .S(buf2_missed_samp_reg[27:24]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[31]_i_16 
       (.CI(\reg_rd_data_reg[30]_i_8_n_0 ),
        .CO({\NLW_reg_rd_data_reg[31]_i_16_CO_UNCONNECTED [3:1],\reg_rd_data_reg[31]_i_16_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,buf1_missed_samp_reg[28]}),
        .O({\NLW_reg_rd_data_reg[31]_i_16_O_UNCONNECTED [3:2],missed_samps_ch1[29:28]}),
        .S({1'b0,1'b0,buf1_missed_samp_reg[29:28]}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \reg_rd_data_reg[31]_i_17 
       (.CI(\reg_rd_data_reg[30]_i_9_n_0 ),
        .CO({\NLW_reg_rd_data_reg[31]_i_17_CO_UNCONNECTED [3:1],\reg_rd_data_reg[31]_i_17_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,buf2_missed_samp_reg[28]}),
        .O({\NLW_reg_rd_data_reg[31]_i_17_O_UNCONNECTED [3:2],missed_samps_ch2[29:28]}),
        .S({1'b0,1'b0,buf2_missed_samp_reg[29:28]}));
  MUXF8 \reg_rd_data_reg[3]_i_3 
       (.I0(\reg_rd_data_reg[3]_i_8_n_0 ),
        .I1(\reg_rd_data_reg[3]_i_9_n_0 ),
        .O(\reg_rd_data_reg[3]_i_3_n_0 ),
        .S(\reg_rd_data_reg[15]_0 ));
  MUXF7 \reg_rd_data_reg[3]_i_8 
       (.I0(\reg_rd_data[3]_i_12_n_0 ),
        .I1(\reg_rd_data_reg[3]_i_3_0 ),
        .O(\reg_rd_data_reg[3]_i_8_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF7 \reg_rd_data_reg[3]_i_9 
       (.I0(\reg_rd_data[3]_i_14_n_0 ),
        .I1(\reg_rd_data[3]_i_15_n_0 ),
        .O(\reg_rd_data_reg[3]_i_9_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF8 \reg_rd_data_reg[4]_i_2 
       (.I0(\reg_rd_data_reg[4]_i_6_n_0 ),
        .I1(\reg_rd_data_reg[4]_i_7_n_0 ),
        .O(\reg_rd_data_reg[4]_i_2_n_0 ),
        .S(\reg_rd_data_reg[15]_0 ));
  MUXF7 \reg_rd_data_reg[4]_i_6 
       (.I0(\reg_rd_data[4]_i_10_n_0 ),
        .I1(\reg_rd_data_reg[4]_i_2_0 ),
        .O(\reg_rd_data_reg[4]_i_6_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF7 \reg_rd_data_reg[4]_i_7 
       (.I0(\reg_rd_data[4]_i_12_n_0 ),
        .I1(\reg_rd_data[4]_i_13_n_0 ),
        .O(\reg_rd_data_reg[4]_i_7_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF8 \reg_rd_data_reg[5]_i_2 
       (.I0(\reg_rd_data_reg[5]_i_6_n_0 ),
        .I1(\reg_rd_data_reg[5]_i_7_n_0 ),
        .O(\reg_rd_data_reg[5]_i_2_n_0 ),
        .S(\reg_rd_data_reg[15]_0 ));
  MUXF7 \reg_rd_data_reg[5]_i_6 
       (.I0(\reg_rd_data[5]_i_10_n_0 ),
        .I1(\reg_rd_data_reg[5]_i_2_0 ),
        .O(\reg_rd_data_reg[5]_i_6_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF7 \reg_rd_data_reg[5]_i_7 
       (.I0(\reg_rd_data[5]_i_12_n_0 ),
        .I1(\reg_rd_data_reg[5]_i_2_1 ),
        .O(\reg_rd_data_reg[5]_i_7_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF8 \reg_rd_data_reg[6]_i_3 
       (.I0(\reg_rd_data_reg[6]_i_5_n_0 ),
        .I1(\reg_rd_data_reg[6]_i_6_n_0 ),
        .O(\reg_rd_data_reg[6]_i_6_0 ),
        .S(\reg_rd_data_reg[15]_0 ));
  MUXF7 \reg_rd_data_reg[6]_i_5 
       (.I0(\reg_rd_data[6]_i_8_n_0 ),
        .I1(\reg_rd_data_reg[6]_i_3_1 ),
        .O(\reg_rd_data_reg[6]_i_5_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF7 \reg_rd_data_reg[6]_i_6 
       (.I0(\reg_rd_data[6]_i_10_n_0 ),
        .I1(\reg_rd_data_reg[6]_i_3_0 ),
        .O(\reg_rd_data_reg[6]_i_6_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF8 \reg_rd_data_reg[7]_i_3 
       (.I0(\reg_rd_data_reg[7]_i_5_n_0 ),
        .I1(\reg_rd_data_reg[7]_i_6_n_0 ),
        .O(\reg_rd_data_reg[7]_i_6_0 ),
        .S(\reg_rd_data_reg[15]_0 ));
  MUXF7 \reg_rd_data_reg[7]_i_5 
       (.I0(\reg_rd_data[7]_i_8_n_0 ),
        .I1(\reg_rd_data_reg[7]_i_3_0 ),
        .O(\reg_rd_data_reg[7]_i_5_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF7 \reg_rd_data_reg[7]_i_6 
       (.I0(\reg_rd_data[7]_i_10_n_0 ),
        .I1(\reg_rd_data_reg[7]_i_3_1 ),
        .O(\reg_rd_data_reg[7]_i_6_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF7 \reg_rd_data_reg[8]_i_8 
       (.I0(\reg_rd_data[8]_i_11_n_0 ),
        .I1(\reg_rd_data[8]_i_3_0 ),
        .O(\reg_rd_data_reg[8]_i_8_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF8 \reg_rd_data_reg[9]_i_3 
       (.I0(\reg_rd_data_reg[9]_i_5_n_0 ),
        .I1(\reg_rd_data_reg[9]_i_6_n_0 ),
        .O(\reg_rd_data_reg[9]_i_6_0 ),
        .S(\reg_rd_data_reg[15]_0 ));
  MUXF7 \reg_rd_data_reg[9]_i_5 
       (.I0(\reg_rd_data[9]_i_8_n_0 ),
        .I1(\reg_rd_data_reg[9]_i_3_0 ),
        .O(\reg_rd_data_reg[9]_i_5_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  MUXF7 \reg_rd_data_reg[9]_i_6 
       (.I0(\reg_rd_data[9]_i_10_n_0 ),
        .I1(\reg_rd_data_reg[9]_i_3_1 ),
        .O(\reg_rd_data_reg[9]_i_6_n_0 ),
        .S(\reg_rd_data_reg[15] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF2020FFE0)) 
    \req_addr[0]_i_1 
       (.I0(\req_addr_reg[31]_0 [0]),
        .I1(next_buf_full1),
        .I2(\state_cs_reg[1]_0 ),
        .I3(\state_cs_reg[2]_0 ),
        .I4(\req_addr[0]_i_2_n_0 ),
        .I5(\req_addr[0]_i_3_n_0 ),
        .O(\req_addr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h04F7)) 
    \req_addr[0]_i_2 
       (.I0(\req_buf_addr_reg[31]_1 [0]),
        .I1(cfg_dma_sts_reg[4]),
        .I2(cfg_dma_sts_reg[0]),
        .I3(\req_buf_addr_reg[31]_0 [0]),
        .O(\req_addr[0]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \req_addr[0]_i_3 
       (.I0(\req_buf_addr_reg[31]_1 [0]),
        .I1(\state_cs_reg[0]_1 ),
        .O(\req_addr[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[10]_i_1 
       (.I0(\req_addr[10]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [10]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [10]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[10]_i_2 
       (.I0(next_buf_full20_in[10]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [10]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [10]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[11]_i_1 
       (.I0(\req_addr[11]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [11]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [11]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[11]_i_2 
       (.I0(next_buf_full20_in[11]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [11]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [11]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[12]_i_1 
       (.I0(\req_addr[12]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [12]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [12]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[12]_i_2 
       (.I0(next_buf_full20_in[12]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [12]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [12]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[13]_i_1 
       (.I0(\req_addr[13]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [13]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [13]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[13]_i_2 
       (.I0(next_buf_full20_in[13]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [13]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [13]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[14]_i_1 
       (.I0(\req_addr[14]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [14]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [14]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[14]_i_2 
       (.I0(next_buf_full20_in[14]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [14]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [14]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[15]_i_1 
       (.I0(\req_addr[15]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [15]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [15]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[15]_i_2 
       (.I0(next_buf_full20_in[15]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [15]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [15]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[16]_i_1 
       (.I0(\req_addr[16]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [16]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [16]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[16]_i_2 
       (.I0(next_buf_full20_in[16]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [16]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [16]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[17]_i_1 
       (.I0(\req_addr[17]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [17]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [17]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[17]_i_2 
       (.I0(next_buf_full20_in[17]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [17]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [17]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[18]_i_1 
       (.I0(\req_addr[18]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [18]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [18]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[18]_i_2 
       (.I0(next_buf_full20_in[18]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [18]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [18]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[19]_i_1 
       (.I0(\req_addr[19]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [19]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [19]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[19]_i_2 
       (.I0(next_buf_full20_in[19]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [19]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [19]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[1]_i_1 
       (.I0(\req_addr[1]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [1]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [1]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[1]_i_2 
       (.I0(\req_addr_reg[31]_0 [1]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [1]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [1]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[20]_i_1 
       (.I0(\req_addr[20]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [20]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [20]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[20]_i_2 
       (.I0(next_buf_full20_in[20]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [20]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [20]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[21]_i_1 
       (.I0(\req_addr[21]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [21]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [21]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[21]_i_2 
       (.I0(next_buf_full20_in[21]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [21]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [21]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[22]_i_1 
       (.I0(\req_addr[22]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [22]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [22]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[22]_i_2 
       (.I0(next_buf_full20_in[22]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [22]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [22]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[23]_i_1 
       (.I0(\req_addr[23]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [23]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [23]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[23]_i_2 
       (.I0(next_buf_full20_in[23]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [23]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [23]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[24]_i_1 
       (.I0(\req_addr[24]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [24]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [24]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[24]_i_2 
       (.I0(next_buf_full20_in[24]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [24]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [24]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[25]_i_1 
       (.I0(\req_addr[25]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [25]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [25]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[25]_i_2 
       (.I0(next_buf_full20_in[25]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [25]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [25]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[26]_i_1 
       (.I0(\req_addr[26]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [26]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [26]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[26]_i_2 
       (.I0(next_buf_full20_in[26]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [26]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [26]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[27]_i_1 
       (.I0(\req_addr[27]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [27]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [27]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[27]_i_2 
       (.I0(next_buf_full20_in[27]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [27]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [27]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[28]_i_1 
       (.I0(\req_addr[28]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [28]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [28]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[28]_i_2 
       (.I0(next_buf_full20_in[28]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [28]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [28]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[29]_i_1 
       (.I0(\req_addr[29]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [29]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [29]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[29]_i_2 
       (.I0(next_buf_full20_in[29]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [29]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [29]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF4040FFE0)) 
    \req_addr[2]_i_1 
       (.I0(next_buf_full1),
        .I1(\req_addr_reg[31]_0 [2]),
        .I2(\state_cs_reg[1]_0 ),
        .I3(\state_cs_reg[2]_0 ),
        .I4(\req_addr[2]_i_2_n_0 ),
        .I5(\req_addr[2]_i_3_n_0 ),
        .O(\req_addr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'h04F7)) 
    \req_addr[2]_i_2 
       (.I0(\req_buf_addr_reg[31]_1 [2]),
        .I1(cfg_dma_sts_reg[4]),
        .I2(cfg_dma_sts_reg[0]),
        .I3(\req_buf_addr_reg[31]_0 [2]),
        .O(\req_addr[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \req_addr[2]_i_3 
       (.I0(\req_buf_addr_reg[31]_1 [2]),
        .I1(\state_cs_reg[0]_1 ),
        .O(\req_addr[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[30]_i_1 
       (.I0(\req_addr[30]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [30]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [30]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[30]_i_2 
       (.I0(next_buf_full20_in[30]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [30]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [30]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAA00EA00AA00AAFF)) 
    \req_addr[31]_i_1 
       (.I0(\req_addr[31]_i_3_n_0 ),
        .I1(transf_end),
        .I2(\req_addr[31]_i_4_n_0 ),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[31]_i_2 
       (.I0(\req_addr[31]_i_5_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [31]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [31]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000001B0000)) 
    \req_addr[31]_i_3 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[1]),
        .I2(cfg_dma_sts_reg[0]),
        .I3(next_buf_full_reg_0),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[31]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'h1BFF)) 
    \req_addr[31]_i_4 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[1]),
        .I2(cfg_dma_sts_reg[0]),
        .I3(next_buf_full1),
        .O(\req_addr[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[31]_i_5 
       (.I0(next_buf_full20_in[31]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [31]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [31]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[31]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \req_addr[31]_i_6 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .O(\req_addr[31]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[3]_i_1 
       (.I0(\req_addr[3]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [3]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [3]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[3]_i_2 
       (.I0(\req_addr_reg[31]_0 [3]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [3]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [3]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[4]_i_1 
       (.I0(\req_addr[4]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [4]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [4]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[4]_i_2 
       (.I0(\req_addr_reg[31]_0 [4]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [4]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [4]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[5]_i_1 
       (.I0(\req_addr[5]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [5]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [5]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[5]_i_2 
       (.I0(\req_addr_reg[31]_0 [5]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [5]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [5]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[6]_i_1 
       (.I0(\req_addr[6]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [6]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [6]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[6]_i_2 
       (.I0(next_buf_full20_in[6]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [6]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [6]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[7]_i_1 
       (.I0(\req_addr[7]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [7]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [7]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[7]_i_2 
       (.I0(next_buf_full20_in[7]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [7]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [7]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[8]_i_1 
       (.I0(\req_addr[8]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [8]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [8]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[8]_i_2 
       (.I0(next_buf_full20_in[8]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [8]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [8]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAEAAAAFFAEFFAA)) 
    \req_addr[9]_i_1 
       (.I0(\req_addr[9]_i_2_n_0 ),
        .I1(\req_buf_addr_reg[31]_0 [9]),
        .I2(\req_addr[31]_i_6_n_0 ),
        .I3(\req_buf_addr_reg[31]_1 [9]),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[0]_1 ),
        .O(\req_addr[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E200000000)) 
    \req_addr[9]_i_2 
       (.I0(next_buf_full20_in[9]),
        .I1(next_buf_full1),
        .I2(\req_buf_addr_reg[31]_0 [9]),
        .I3(\req_addr[31]_i_6_n_0 ),
        .I4(\req_buf_addr_reg[31]_1 [9]),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_addr[9]_i_2_n_0 ));
  FDRE \req_addr_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[0]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [0]),
        .R(1'b0));
  FDRE \req_addr_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[10]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [10]),
        .R(1'b0));
  FDRE \req_addr_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[11]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [11]),
        .R(1'b0));
  FDRE \req_addr_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[12]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [12]),
        .R(1'b0));
  FDRE \req_addr_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[13]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [13]),
        .R(1'b0));
  FDRE \req_addr_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[14]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [14]),
        .R(1'b0));
  FDRE \req_addr_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[15]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [15]),
        .R(1'b0));
  FDRE \req_addr_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[16]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [16]),
        .R(1'b0));
  FDRE \req_addr_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[17]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [17]),
        .R(1'b0));
  FDRE \req_addr_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[18]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [18]),
        .R(1'b0));
  FDRE \req_addr_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[19]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [19]),
        .R(1'b0));
  FDRE \req_addr_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[1]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [1]),
        .R(1'b0));
  FDRE \req_addr_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[20]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [20]),
        .R(1'b0));
  FDRE \req_addr_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[21]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [21]),
        .R(1'b0));
  FDRE \req_addr_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[22]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [22]),
        .R(1'b0));
  FDRE \req_addr_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[23]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [23]),
        .R(1'b0));
  FDRE \req_addr_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[24]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [24]),
        .R(1'b0));
  FDRE \req_addr_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[25]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [25]),
        .R(1'b0));
  FDRE \req_addr_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[26]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [26]),
        .R(1'b0));
  FDRE \req_addr_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[27]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [27]),
        .R(1'b0));
  FDRE \req_addr_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[28]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [28]),
        .R(1'b0));
  FDRE \req_addr_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[29]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [29]),
        .R(1'b0));
  FDRE \req_addr_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[2]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [2]),
        .R(1'b0));
  FDRE \req_addr_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[30]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [30]),
        .R(1'b0));
  FDRE \req_addr_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[31]_i_2_n_0 ),
        .Q(\req_addr_reg[31]_0 [31]),
        .R(1'b0));
  FDRE \req_addr_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[3]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [3]),
        .R(1'b0));
  FDRE \req_addr_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[4]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [4]),
        .R(1'b0));
  FDRE \req_addr_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[5]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [5]),
        .R(1'b0));
  FDRE \req_addr_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[6]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [6]),
        .R(1'b0));
  FDRE \req_addr_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[7]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [7]),
        .R(1'b0));
  FDRE \req_addr_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[8]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [8]),
        .R(1'b0));
  FDRE \req_addr_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_addr[31]_i_1_n_0 ),
        .D(\req_addr[9]_i_1_n_0 ),
        .Q(\req_addr_reg[31]_0 [9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'hFB08AAAA)) 
    \req_buf_addr[0]_i_1 
       (.I0(\req_buf_addr_reg[31]_1 [0]),
        .I1(cfg_dma_sts_reg[4]),
        .I2(cfg_dma_sts_reg[0]),
        .I3(\req_buf_addr_reg[31]_0 [0]),
        .I4(\state_cs_reg[0]_1 ),
        .O(\req_buf_addr[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[10]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [10]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [10]),
        .O(\req_buf_addr[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[11]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [11]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [11]),
        .O(\req_buf_addr[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[12]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [12]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [12]),
        .O(\req_buf_addr[12]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[13]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [13]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [13]),
        .O(\req_buf_addr[13]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[14]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [14]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [14]),
        .O(\req_buf_addr[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[15]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [15]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [15]),
        .O(\req_buf_addr[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[16]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [16]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [16]),
        .O(\req_buf_addr[16]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[17]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [17]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [17]),
        .O(\req_buf_addr[17]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[18]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [18]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [18]),
        .O(\req_buf_addr[18]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[19]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [19]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [19]),
        .O(\req_buf_addr[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[1]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [1]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [1]),
        .O(\req_buf_addr[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[20]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [20]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [20]),
        .O(\req_buf_addr[20]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[21]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [21]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [21]),
        .O(\req_buf_addr[21]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[22]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [22]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [22]),
        .O(\req_buf_addr[22]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[23]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [23]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [23]),
        .O(\req_buf_addr[23]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[24]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [24]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [24]),
        .O(\req_buf_addr[24]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[25]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [25]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [25]),
        .O(\req_buf_addr[25]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[26]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [26]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [26]),
        .O(\req_buf_addr[26]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[27]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [27]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [27]),
        .O(\req_buf_addr[27]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[28]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [28]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [28]),
        .O(\req_buf_addr[28]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[29]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [29]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [29]),
        .O(\req_buf_addr[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT5 #(
    .INIT(32'hFB08AAAA)) 
    \req_buf_addr[2]_i_1 
       (.I0(\req_buf_addr_reg[31]_1 [2]),
        .I1(cfg_dma_sts_reg[4]),
        .I2(cfg_dma_sts_reg[0]),
        .I3(\req_buf_addr_reg[31]_0 [2]),
        .I4(\state_cs_reg[0]_1 ),
        .O(\req_buf_addr[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[30]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [30]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [30]),
        .O(\req_buf_addr[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000A000300000FF)) 
    \req_buf_addr[31]_i_1 
       (.I0(\req_buf_addr[31]_i_3_n_0 ),
        .I1(next_buf_full_reg_0),
        .I2(\req_buf_addr[31]_i_4_n_0 ),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[1]_0 ),
        .O(\req_buf_addr[31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[31]_i_2 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [31]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [31]),
        .O(\req_buf_addr[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \req_buf_addr[31]_i_3 
       (.I0(transf_end),
        .I1(next_buf_full1),
        .O(\req_buf_addr[31]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h53)) 
    \req_buf_addr[31]_i_4 
       (.I0(cfg_dma_sts_reg[0]),
        .I1(cfg_dma_sts_reg[1]),
        .I2(cfg_dma_sts_reg[4]),
        .O(\req_buf_addr[31]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[3]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [3]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [3]),
        .O(\req_buf_addr[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[4]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [4]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [4]),
        .O(\req_buf_addr[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[5]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [5]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [5]),
        .O(\req_buf_addr[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[6]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [6]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [6]),
        .O(\req_buf_addr[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[7]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [7]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [7]),
        .O(\req_buf_addr[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[8]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [8]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [8]),
        .O(\req_buf_addr[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2FFD000)) 
    \req_buf_addr[9]_i_1 
       (.I0(cfg_dma_sts_reg[4]),
        .I1(cfg_dma_sts_reg[0]),
        .I2(\req_buf_addr_reg[31]_0 [9]),
        .I3(\state_cs_reg[0]_1 ),
        .I4(\req_buf_addr_reg[31]_1 [9]),
        .O(\req_buf_addr[9]_i_1_n_0 ));
  FDRE \req_buf_addr_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[0]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[10] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[10]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[11] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[11]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[12] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[12]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[13] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[13]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[14] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[14]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[15] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[15]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[16] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[16]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[17] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[17]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[18] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[18]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[19] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[19]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[19] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[1]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[20] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[20]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[21] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[21]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[21] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[22] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[22]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[23] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[23]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[23] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[24] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[24]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[24] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[25] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[25]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[25] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[26] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[26]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[26] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[27] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[27]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[27] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[28] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[28]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[28] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[29] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[29]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[29] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[2]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[30] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[30]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[30] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[31] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[31]_i_2_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[31] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[3]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[4]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[5]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[6]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[7]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[8] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[8]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \req_buf_addr_reg[9] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_buf_addr[31]_i_1_n_0 ),
        .D(\req_buf_addr[9]_i_1_n_0 ),
        .Q(\req_buf_addr_reg_n_0_[9] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h9999AAAA8989AA00)) 
    req_buf_addr_sel_i_1
       (.I0(cfg_dma_sts_reg[4]),
        .I1(req_buf_addr_sel_i_2_n_0),
        .I2(cfg_dma_sts_reg[1]),
        .I3(\state_cs_reg[1]_0 ),
        .I4(\state_cs_reg[0]_1 ),
        .I5(\state_cs_reg[2]_0 ),
        .O(req_buf_addr_sel_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFF7F7FFF00FFFF)) 
    req_buf_addr_sel_i_2
       (.I0(next_buf_full1),
        .I1(transf_end),
        .I2(\req_buf_addr[31]_i_4_n_0 ),
        .I3(next_buf_full_reg_0),
        .I4(\state_cs_reg[2]_0 ),
        .I5(\state_cs_reg[1]_0 ),
        .O(req_buf_addr_sel_i_2_n_0));
  FDRE req_buf_addr_sel_p1_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(cfg_dma_sts_reg[4]),
        .Q(req_buf_addr_sel_p1_reg_0),
        .R(1'b0));
  FDRE req_buf_addr_sel_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(req_buf_addr_sel_i_1_n_0),
        .Q(cfg_dma_sts_reg[4]),
        .R(1'b0));
  FDRE req_xfer_last_reg
       (.C(m_axi_osc1_aclk),
        .CE(\m_axi_awlen[7]_i_1_n_0 ),
        .D(fifo_rd_data[7]),
        .Q(req_xfer_last),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \state_cs[0]_i_1 
       (.I0(state_ns),
        .I1(U_dma_s2mm_data_ctrl_n_14),
        .I2(\state_cs_reg[0]_1 ),
        .O(\state_cs[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h1F10)) 
    \state_cs[1]_i_1 
       (.I0(cfg_dma_ctrl_reg_0[4]),
        .I1(U_dma_s2mm_data_ctrl_n_13),
        .I2(U_dma_s2mm_data_ctrl_n_14),
        .I3(\state_cs_reg[1]_0 ),
        .O(\state_cs[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h1F10)) 
    \state_cs[2]_i_1 
       (.I0(cfg_dma_ctrl_reg_0[4]),
        .I1(U_dma_s2mm_data_ctrl_n_17),
        .I2(U_dma_s2mm_data_ctrl_n_14),
        .I3(\state_cs_reg[2]_0 ),
        .O(\state_cs[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \state_cs[2]_i_10 
       (.I0(fifo_rst_cnt_reg[3]),
        .I1(fifo_rst_cnt_reg[0]),
        .I2(fifo_rst_cnt_reg[1]),
        .I3(fifo_rst_cnt_reg[2]),
        .O(\state_cs[2]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'hAAAAEAAA)) 
    \state_cs[2]_i_12 
       (.I0(cfg_dma_ctrl_reg_0[4]),
        .I1(transf_end),
        .I2(\state_cs_reg[0]_1 ),
        .I3(\state_cs_reg[1]_0 ),
        .I4(\state_cs_reg[2]_0 ),
        .O(\state_cs[2]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \state_cs[2]_i_4 
       (.I0(rd_data_count[7]),
        .I1(rd_data_count[5]),
        .I2(rd_data_count[6]),
        .I3(rd_data_count[9]),
        .I4(rd_data_count[8]),
        .I5(rd_data_count[4]),
        .O(\state_cs[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFF3FFFFFFF3FF)) 
    \state_cs[2]_i_6 
       (.I0(rd_data_count[4]),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\state_cs_reg[0]_1 ),
        .I3(\state_cs_reg[1]_0 ),
        .I4(\state_cs[2]_i_8_n_0 ),
        .I5(\state_cs[2]_i_9_n_0 ),
        .O(\state_cs[2]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \state_cs[2]_i_8 
       (.I0(rd_data_count[8]),
        .I1(rd_data_count[9]),
        .I2(rd_data_count[6]),
        .I3(rd_data_count[5]),
        .I4(rd_data_count[7]),
        .O(\state_cs[2]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \state_cs[2]_i_9 
       (.I0(rd_data_count[2]),
        .I1(rd_data_count[3]),
        .I2(rd_data_count[1]),
        .I3(rd_data_count[0]),
        .O(\state_cs[2]_i_9_n_0 ));
  FDRE \state_cs_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\state_cs[0]_i_1_n_0 ),
        .Q(\state_cs_reg[0]_1 ),
        .R(clear));
  FDRE \state_cs_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\state_cs[1]_i_1_n_0 ),
        .Q(\state_cs_reg[1]_0 ),
        .R(clear));
  FDRE \state_cs_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\state_cs[2]_i_1_n_0 ),
        .Q(\state_cs_reg[2]_0 ),
        .R(clear));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    sts_acquire_i_10
       (.I0(sts_acquire_reg_0[2]),
        .I1(sts_acquire_reg_0[4]),
        .I2(sts_acquire_reg_0[5]),
        .I3(sts_acquire_reg_0[3]),
        .I4(sts_acquire_reg_0[1]),
        .I5(mode_reg_0),
        .O(sts_acquire_i_10_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    sts_acquire_i_4
       (.I0(sts_acquire_reg),
        .I1(sts_acquire_reg_0[6]),
        .I2(sts_acquire_reg_0[0]),
        .I3(sts_acquire_reg_0[7]),
        .I4(sts_acquire_reg_1),
        .I5(sts_acquire_i_10_n_0),
        .O(\cfg_trig_pre_samp_reg[29] ));
  FDRE transf_end_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(full_immed0),
        .Q(transf_end),
        .R(clear));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    trig_out_INST_0
       (.I0(cfg_dma_ctrl_reg_0[0]),
        .I1(\cfg_trig_mask_reg[1] ),
        .I2(bit_start_0),
        .I3(cfg_dma_ctrl_reg),
        .I4(external_trig_val),
        .I5(bit_start),
        .O(trig_out));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    trig_out_INST_0_i_1
       (.I0(\trig_cnt_reg[0] [1]),
        .I1(\trig_cnt_reg[0] [3]),
        .I2(\trig_cnt_reg[0] [0]),
        .I3(\trig_cnt_reg[0] [2]),
        .I4(\trig_cnt_reg[0] [4]),
        .I5(trig_out_INST_0_i_3_n_0),
        .O(\cfg_trig_mask_reg[1] ));
  LUT2 #(
    .INIT(4'h8)) 
    trig_out_INST_0_i_3
       (.I0(trig_ip),
        .I1(\trig_cnt_reg[0] [5]),
        .O(trig_out_INST_0_i_3_n_0));
  LUT5 #(
    .INIT(32'h1FFFFF1F)) 
    \xfer_cnt[6]_i_1 
       (.I0(\xfer_cnt[6]_i_3_n_0 ),
        .I1(ctl_start_r),
        .I2(m_axi_osc1_aresetn),
        .I3(\xfer_cnt_reg[6] ),
        .I4(use_8bit_r),
        .O(ctl_start_r_reg));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \xfer_cnt[6]_i_3 
       (.I0(bit_start_0),
        .I1(\cfg_trig_mask_reg[1] ),
        .I2(cfg_dma_ctrl_reg_0[0]),
        .O(\xfer_cnt[6]_i_3_n_0 ));
endmodule

(* ORIG_REF_NAME = "rp_dma_s2mm_data_ctrl" *) 
module system_rp_oscilloscope_0_rp_dma_s2mm_data_ctrl
   (empty_fwft_i_reg,
    fifo_dis_reg,
    \state_cs_reg[0]_0 ,
    m_axi_wvalid_reg_0,
    m_axi_wlast_reg_0,
    busy_reg_0,
    rd_en,
    \req_xfer_cnt_reg[6]_0 ,
    \state_cs_reg[2] ,
    buf1_missed_samp0,
    req_buf_addr_sel_p1_reg,
    buf2_missed_samp0,
    full_immed0,
    busy_reg_1,
    bit_start_reg,
    state_ns,
    m_axi_osc2_aresetn_0,
    req_xfer_last_reg,
    \goreg_dm.dout_i_reg[1] ,
    rst,
    m_axi_osc2_aclk,
    din,
    clear,
    \state_cs_reg[0]_1 ,
    m_axi_wvalid_reg_1,
    m_axi_wlast_reg_1,
    busy_reg_2,
    \buf2_missed_samp_reg[0] ,
    m_axi_osc2_awready,
    m_axi_osc2_awvalid,
    m_axi_osc2_wready,
    \buf2_missed_samp_reg[0]_0 ,
    \buf2_missed_samp_reg[0]_1 ,
    \buf2_missed_samp_reg[0]_2 ,
    cfg_dma_sts_reg,
    \buf2_missed_samp_reg[0]_3 ,
    \buf1_missed_samp_reg[0] ,
    \buf1_missed_samp_reg[0]_0 ,
    \buf2_missed_samp_reg[0]_4 ,
    \buf2_missed_samp_reg[0]_5 ,
    \buf2_missed_samp_reg[0]_6 ,
    req_xfer_last,
    \state_cs_reg[0]_2 ,
    \state_cs_reg[0]_3 ,
    Q,
    \state_cs[2]_i_3__0_0 ,
    empty,
    cfg_dma_ctrl_reg,
    m_axi_osc2_aresetn,
    intr_reg__0,
    intr_reg__0_0,
    intr_reg__0_1,
    buf_sel_ch1,
    transf_end,
    \state_cs_reg[2]_0 );
  output empty_fwft_i_reg;
  output fifo_dis_reg;
  output \state_cs_reg[0]_0 ;
  output m_axi_wvalid_reg_0;
  output m_axi_wlast_reg_0;
  output busy_reg_0;
  output rd_en;
  output \req_xfer_cnt_reg[6]_0 ;
  output \state_cs_reg[2] ;
  output buf1_missed_samp0;
  output req_buf_addr_sel_p1_reg;
  output buf2_missed_samp0;
  output full_immed0;
  output busy_reg_1;
  output bit_start_reg;
  output [0:0]state_ns;
  output m_axi_osc2_aresetn_0;
  output req_xfer_last_reg;
  output \goreg_dm.dout_i_reg[1] ;
  input rst;
  input m_axi_osc2_aclk;
  input [7:0]din;
  input clear;
  input \state_cs_reg[0]_1 ;
  input m_axi_wvalid_reg_1;
  input m_axi_wlast_reg_1;
  input busy_reg_2;
  input \buf2_missed_samp_reg[0] ;
  input m_axi_osc2_awready;
  input m_axi_osc2_awvalid;
  input m_axi_osc2_wready;
  input \buf2_missed_samp_reg[0]_0 ;
  input \buf2_missed_samp_reg[0]_1 ;
  input \buf2_missed_samp_reg[0]_2 ;
  input [0:0]cfg_dma_sts_reg;
  input \buf2_missed_samp_reg[0]_3 ;
  input \buf1_missed_samp_reg[0] ;
  input \buf1_missed_samp_reg[0]_0 ;
  input \buf2_missed_samp_reg[0]_4 ;
  input \buf2_missed_samp_reg[0]_5 ;
  input \buf2_missed_samp_reg[0]_6 ;
  input req_xfer_last;
  input \state_cs_reg[0]_2 ;
  input \state_cs_reg[0]_3 ;
  input [0:0]Q;
  input \state_cs[2]_i_3__0_0 ;
  input empty;
  input [1:0]cfg_dma_ctrl_reg;
  input m_axi_osc2_aresetn;
  input intr_reg__0;
  input intr_reg__0_0;
  input intr_reg__0_1;
  input buf_sel_ch1;
  input transf_end;
  input \state_cs_reg[2]_0 ;

  wire [0:0]Q;
  wire bit_start_reg;
  wire buf1_missed_samp0;
  wire \buf1_missed_samp_reg[0] ;
  wire \buf1_missed_samp_reg[0]_0 ;
  wire buf2_missed_samp0;
  wire \buf2_missed_samp_reg[0] ;
  wire \buf2_missed_samp_reg[0]_0 ;
  wire \buf2_missed_samp_reg[0]_1 ;
  wire \buf2_missed_samp_reg[0]_2 ;
  wire \buf2_missed_samp_reg[0]_3 ;
  wire \buf2_missed_samp_reg[0]_4 ;
  wire \buf2_missed_samp_reg[0]_5 ;
  wire \buf2_missed_samp_reg[0]_6 ;
  wire buf_sel_ch1;
  wire busy_reg_0;
  wire busy_reg_1;
  wire busy_reg_2;
  wire [1:0]cfg_dma_ctrl_reg;
  wire [0:0]cfg_dma_sts_reg;
  wire clear;
  wire [7:0]din;
  wire empty;
  wire empty_fwft_i_reg;
  wire fifo_dis_reg;
  wire [7:0]fifo_rd_data;
  wire fifo_rd_re;
  wire full_immed0;
  wire \goreg_dm.dout_i_reg[1] ;
  wire intr0;
  wire intr_reg__0;
  wire intr_reg__0_0;
  wire intr_reg__0_1;
  wire m_axi_osc2_aclk;
  wire m_axi_osc2_aresetn;
  wire m_axi_osc2_aresetn_0;
  wire m_axi_osc2_awready;
  wire m_axi_osc2_awvalid;
  wire m_axi_osc2_wready;
  wire m_axi_wlast_i_4__0_n_0;
  wire m_axi_wlast_i_5__0_n_0;
  wire m_axi_wlast_reg_0;
  wire m_axi_wlast_reg_1;
  wire m_axi_wvalid_reg_0;
  wire m_axi_wvalid_reg_1;
  wire [7:0]p_1_in;
  wire rd_en;
  wire req_buf_addr_sel_p1_reg;
  wire \req_xfer_cnt[3]_i_2__0_n_0 ;
  wire \req_xfer_cnt[4]_i_2__0_n_0 ;
  wire \req_xfer_cnt[5]_i_2__0_n_0 ;
  wire \req_xfer_cnt[7]_i_1__0_n_0 ;
  wire \req_xfer_cnt[7]_i_3__0_n_0 ;
  wire \req_xfer_cnt_reg[6]_0 ;
  wire req_xfer_last;
  wire req_xfer_last_reg;
  wire rst;
  wire [7:0]sel0;
  wire \state_cs[2]_i_11__0_n_0 ;
  wire \state_cs[2]_i_12__0_n_0 ;
  wire \state_cs[2]_i_3__0_0 ;
  wire \state_cs[2]_i_5__0_n_0 ;
  wire \state_cs[2]_i_7__0_n_0 ;
  wire \state_cs_reg[0]_0 ;
  wire \state_cs_reg[0]_1 ;
  wire \state_cs_reg[0]_2 ;
  wire \state_cs_reg[0]_3 ;
  wire \state_cs_reg[2] ;
  wire \state_cs_reg[2]_0 ;
  wire [0:0]state_ns;
  wire transf_end;
  wire NLW_U_fifo_axi_req_full_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT2 #(
    .INIT(4'h8)) 
    U_fifo_axi_data_i_2__0
       (.I0(m_axi_wvalid_reg_0),
        .I1(m_axi_osc2_wready),
        .O(rd_en));
  (* CHECK_LICENSE_TYPE = "fifo_axi_req,fifo_generator_v13_2_5,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2020.1" *) 
  system_rp_oscilloscope_0_fifo_axi_req U_fifo_axi_req
       (.din(din),
        .dout(fifo_rd_data),
        .empty(empty_fwft_i_reg),
        .full(NLW_U_fifo_axi_req_full_UNCONNECTED),
        .rd_clk(m_axi_osc2_aclk),
        .rd_en(fifo_rd_re),
        .rst(rst),
        .wr_clk(m_axi_osc2_aclk),
        .wr_en(fifo_dis_reg));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT2 #(
    .INIT(4'h1)) 
    U_fifo_axi_req_i_10__0
       (.I0(\state_cs_reg[0]_0 ),
        .I1(empty_fwft_i_reg),
        .O(fifo_rd_re));
  LUT3 #(
    .INIT(8'h40)) 
    U_fifo_axi_req_i_9__0
       (.I0(\buf2_missed_samp_reg[0] ),
        .I1(m_axi_osc2_awready),
        .I2(m_axi_osc2_awvalid),
        .O(fifo_dis_reg));
  LUT6 #(
    .INIT(64'h0101010101FF0101)) 
    \buf1_missed_samp[0]_i_1__0 
       (.I0(\buf2_missed_samp_reg[0]_0 ),
        .I1(\buf2_missed_samp_reg[0]_1 ),
        .I2(\buf2_missed_samp_reg[0]_2 ),
        .I3(buf1_missed_samp0),
        .I4(cfg_dma_sts_reg),
        .I5(\buf2_missed_samp_reg[0]_3 ),
        .O(\state_cs_reg[2] ));
  LUT6 #(
    .INIT(64'h2220202020202020)) 
    \buf1_missed_samp[0]_i_2__0 
       (.I0(\buf1_missed_samp_reg[0] ),
        .I1(\buf1_missed_samp_reg[0]_0 ),
        .I2(\buf2_missed_samp_reg[0] ),
        .I3(m_axi_wvalid_reg_0),
        .I4(m_axi_wlast_reg_0),
        .I5(\buf2_missed_samp_reg[0]_4 ),
        .O(buf1_missed_samp0));
  LUT6 #(
    .INIT(64'h0000000F2222222F)) 
    \buf2_missed_samp[0]_i_1__0 
       (.I0(\buf2_missed_samp_reg[0]_3 ),
        .I1(cfg_dma_sts_reg),
        .I2(\buf2_missed_samp_reg[0]_2 ),
        .I3(\buf2_missed_samp_reg[0]_1 ),
        .I4(\buf2_missed_samp_reg[0]_0 ),
        .I5(buf2_missed_samp0),
        .O(req_buf_addr_sel_p1_reg));
  LUT6 #(
    .INIT(64'h2220202020202020)) 
    \buf2_missed_samp[0]_i_2__0 
       (.I0(\buf2_missed_samp_reg[0]_5 ),
        .I1(\buf2_missed_samp_reg[0]_6 ),
        .I2(\buf2_missed_samp_reg[0] ),
        .I3(m_axi_wvalid_reg_0),
        .I4(m_axi_wlast_reg_0),
        .I5(\buf2_missed_samp_reg[0]_4 ),
        .O(buf2_missed_samp0));
  FDRE busy_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(busy_reg_2),
        .Q(busy_reg_0),
        .R(clear));
  LUT5 #(
    .INIT(32'h000000A8)) 
    intr_i_1__0
       (.I0(m_axi_osc2_aresetn),
        .I1(intr_reg__0),
        .I2(intr0),
        .I3(cfg_dma_ctrl_reg[0]),
        .I4(intr_reg__0_0),
        .O(m_axi_osc2_aresetn_0));
  LUT6 #(
    .INIT(64'h4040FF4040FF4040)) 
    intr_i_2__0
       (.I0(busy_reg_0),
        .I1(\buf2_missed_samp_reg[0]_0 ),
        .I2(intr_reg__0_1),
        .I3(\buf2_missed_samp_reg[0]_3 ),
        .I4(cfg_dma_sts_reg),
        .I5(buf_sel_ch1),
        .O(intr0));
  LUT5 #(
    .INIT(32'h00000004)) 
    m_axi_wlast_i_2__0
       (.I0(fifo_rd_data[1]),
        .I1(fifo_rd_data[0]),
        .I2(fifo_rd_data[2]),
        .I3(fifo_rd_data[3]),
        .I4(m_axi_wlast_i_4__0_n_0),
        .O(\goreg_dm.dout_i_reg[1] ));
  LUT5 #(
    .INIT(32'h00010000)) 
    m_axi_wlast_i_3__0
       (.I0(m_axi_wlast_i_5__0_n_0),
        .I1(sel0[6]),
        .I2(sel0[7]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .O(\req_xfer_cnt_reg[6]_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    m_axi_wlast_i_4__0
       (.I0(fifo_rd_data[6]),
        .I1(fifo_rd_data[7]),
        .I2(fifo_rd_data[5]),
        .I3(fifo_rd_data[4]),
        .O(m_axi_wlast_i_4__0_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    m_axi_wlast_i_5__0
       (.I0(sel0[5]),
        .I1(sel0[2]),
        .I2(sel0[4]),
        .I3(sel0[3]),
        .O(m_axi_wlast_i_5__0_n_0));
  FDRE m_axi_wlast_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(m_axi_wlast_reg_1),
        .Q(m_axi_wlast_reg_0),
        .R(clear));
  FDRE m_axi_wvalid_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(m_axi_wvalid_reg_1),
        .Q(m_axi_wvalid_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT4 #(
    .INIT(16'hF704)) 
    \req_xfer_cnt[0]_i_1__0 
       (.I0(sel0[0]),
        .I1(\state_cs_reg[0]_0 ),
        .I2(m_axi_wlast_reg_0),
        .I3(fifo_rd_data[0]),
        .O(p_1_in[0]));
  LUT5 #(
    .INIT(32'hFF9F0090)) 
    \req_xfer_cnt[1]_i_1__0 
       (.I0(sel0[0]),
        .I1(sel0[1]),
        .I2(\state_cs_reg[0]_0 ),
        .I3(m_axi_wlast_reg_0),
        .I4(fifo_rd_data[1]),
        .O(p_1_in[1]));
  LUT6 #(
    .INIT(64'hFFFFA9FF0000A900)) 
    \req_xfer_cnt[2]_i_1__0 
       (.I0(sel0[2]),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(\state_cs_reg[0]_0 ),
        .I4(m_axi_wlast_reg_0),
        .I5(fifo_rd_data[2]),
        .O(p_1_in[2]));
  LUT6 #(
    .INIT(64'hAAA9FFFFAAA90000)) 
    \req_xfer_cnt[3]_i_1__0 
       (.I0(sel0[3]),
        .I1(sel0[2]),
        .I2(sel0[0]),
        .I3(sel0[1]),
        .I4(\req_xfer_cnt[3]_i_2__0_n_0 ),
        .I5(fifo_rd_data[3]),
        .O(p_1_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \req_xfer_cnt[3]_i_2__0 
       (.I0(\state_cs_reg[0]_0 ),
        .I1(m_axi_wlast_reg_0),
        .O(\req_xfer_cnt[3]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAF30CAAAAAAAA)) 
    \req_xfer_cnt[4]_i_1__0 
       (.I0(fifo_rd_data[4]),
        .I1(\req_xfer_cnt[4]_i_2__0_n_0 ),
        .I2(sel0[3]),
        .I3(sel0[4]),
        .I4(m_axi_wlast_reg_0),
        .I5(\state_cs_reg[0]_0 ),
        .O(p_1_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \req_xfer_cnt[4]_i_2__0 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[2]),
        .O(\req_xfer_cnt[4]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAEFF0000AE00)) 
    \req_xfer_cnt[5]_i_1__0 
       (.I0(\req_xfer_cnt[7]_i_3__0_n_0 ),
        .I1(sel0[5]),
        .I2(\req_xfer_cnt[5]_i_2__0_n_0 ),
        .I3(\state_cs_reg[0]_0 ),
        .I4(m_axi_wlast_reg_0),
        .I5(fifo_rd_data[5]),
        .O(p_1_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \req_xfer_cnt[5]_i_2__0 
       (.I0(sel0[4]),
        .I1(sel0[3]),
        .I2(sel0[2]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .O(\req_xfer_cnt[5]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT5 #(
    .INIT(32'hFF6F0060)) 
    \req_xfer_cnt[6]_i_1__0 
       (.I0(sel0[6]),
        .I1(\req_xfer_cnt[7]_i_3__0_n_0 ),
        .I2(\state_cs_reg[0]_0 ),
        .I3(m_axi_wlast_reg_0),
        .I4(fifo_rd_data[6]),
        .O(p_1_in[6]));
  LUT3 #(
    .INIT(8'h8F)) 
    \req_xfer_cnt[7]_i_1__0 
       (.I0(m_axi_osc2_wready),
        .I1(m_axi_wvalid_reg_0),
        .I2(\state_cs_reg[0]_0 ),
        .O(\req_xfer_cnt[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF9AFF00009A00)) 
    \req_xfer_cnt[7]_i_2__0 
       (.I0(sel0[7]),
        .I1(sel0[6]),
        .I2(\req_xfer_cnt[7]_i_3__0_n_0 ),
        .I3(\state_cs_reg[0]_0 ),
        .I4(m_axi_wlast_reg_0),
        .I5(fifo_rd_data[7]),
        .O(p_1_in[7]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \req_xfer_cnt[7]_i_3__0 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[3]),
        .I3(sel0[4]),
        .I4(sel0[2]),
        .I5(sel0[5]),
        .O(\req_xfer_cnt[7]_i_3__0_n_0 ));
  FDRE \req_xfer_cnt_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_xfer_cnt[7]_i_1__0_n_0 ),
        .D(p_1_in[0]),
        .Q(sel0[0]),
        .R(1'b0));
  FDRE \req_xfer_cnt_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_xfer_cnt[7]_i_1__0_n_0 ),
        .D(p_1_in[1]),
        .Q(sel0[1]),
        .R(1'b0));
  FDRE \req_xfer_cnt_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_xfer_cnt[7]_i_1__0_n_0 ),
        .D(p_1_in[2]),
        .Q(sel0[2]),
        .R(1'b0));
  FDRE \req_xfer_cnt_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_xfer_cnt[7]_i_1__0_n_0 ),
        .D(p_1_in[3]),
        .Q(sel0[3]),
        .R(1'b0));
  FDRE \req_xfer_cnt_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_xfer_cnt[7]_i_1__0_n_0 ),
        .D(p_1_in[4]),
        .Q(sel0[4]),
        .R(1'b0));
  FDRE \req_xfer_cnt_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_xfer_cnt[7]_i_1__0_n_0 ),
        .D(p_1_in[5]),
        .Q(sel0[5]),
        .R(1'b0));
  FDRE \req_xfer_cnt_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_xfer_cnt[7]_i_1__0_n_0 ),
        .D(p_1_in[6]),
        .Q(sel0[6]),
        .R(1'b0));
  FDRE \req_xfer_cnt_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(\req_xfer_cnt[7]_i_1__0_n_0 ),
        .D(p_1_in[7]),
        .Q(sel0[7]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000C0C000A0FFF)) 
    \state_cs[0]_i_2__0 
       (.I0(busy_reg_0),
        .I1(\buf2_missed_samp_reg[0]_4 ),
        .I2(cfg_dma_ctrl_reg[1]),
        .I3(\buf2_missed_samp_reg[0]_1 ),
        .I4(\buf2_missed_samp_reg[0]_0 ),
        .I5(\buf2_missed_samp_reg[0]_2 ),
        .O(state_ns));
  LUT6 #(
    .INIT(64'h7373700007070707)) 
    \state_cs[1]_i_2__0 
       (.I0(busy_reg_0),
        .I1(\buf2_missed_samp_reg[0]_0 ),
        .I2(\buf2_missed_samp_reg[0]_1 ),
        .I3(req_xfer_last),
        .I4(\buf2_missed_samp_reg[0]_4 ),
        .I5(\buf2_missed_samp_reg[0]_2 ),
        .O(busy_reg_1));
  LUT6 #(
    .INIT(64'hAAAAAAEAABAAABEA)) 
    \state_cs[2]_i_11__0 
       (.I0(\state_cs[2]_i_12__0_n_0 ),
        .I1(\buf2_missed_samp_reg[0]_0 ),
        .I2(\buf2_missed_samp_reg[0]_2 ),
        .I3(\buf2_missed_samp_reg[0]_1 ),
        .I4(\buf2_missed_samp_reg[0]_4 ),
        .I5(empty),
        .O(\state_cs[2]_i_11__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF30040004)) 
    \state_cs[2]_i_12__0 
       (.I0(busy_reg_0),
        .I1(\buf2_missed_samp_reg[0]_0 ),
        .I2(\buf2_missed_samp_reg[0]_1 ),
        .I3(\buf2_missed_samp_reg[0]_2 ),
        .I4(transf_end),
        .I5(cfg_dma_ctrl_reg[1]),
        .O(\state_cs[2]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'hFF1FFF1FFF1F0000)) 
    \state_cs[2]_i_2__0 
       (.I0(req_xfer_last),
        .I1(\state_cs_reg[2]_0 ),
        .I2(\buf2_missed_samp_reg[0]_2 ),
        .I3(\buf2_missed_samp_reg[0]_4 ),
        .I4(\state_cs[2]_i_5__0_n_0 ),
        .I5(\buf2_missed_samp_reg[0]_1 ),
        .O(req_xfer_last_reg));
  LUT6 #(
    .INIT(64'h00F3F3F3F3F3F3AA)) 
    \state_cs[2]_i_3__0 
       (.I0(\state_cs_reg[0]_2 ),
        .I1(\state_cs_reg[0]_3 ),
        .I2(\state_cs[2]_i_7__0_n_0 ),
        .I3(\buf2_missed_samp_reg[0]_2 ),
        .I4(\buf2_missed_samp_reg[0]_1 ),
        .I5(\buf2_missed_samp_reg[0]_0 ),
        .O(bit_start_reg));
  LUT4 #(
    .INIT(16'h7077)) 
    \state_cs[2]_i_5__0 
       (.I0(busy_reg_0),
        .I1(\buf2_missed_samp_reg[0]_0 ),
        .I2(\buf2_missed_samp_reg[0]_1 ),
        .I3(\buf2_missed_samp_reg[0]_2 ),
        .O(\state_cs[2]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10000000)) 
    \state_cs[2]_i_7__0 
       (.I0(\buf2_missed_samp_reg[0]_1 ),
        .I1(\buf2_missed_samp_reg[0]_0 ),
        .I2(\buf2_missed_samp_reg[0]_2 ),
        .I3(Q),
        .I4(\state_cs[2]_i_3__0_0 ),
        .I5(\state_cs[2]_i_11__0_n_0 ),
        .O(\state_cs[2]_i_7__0_n_0 ));
  FDRE \state_cs_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\state_cs_reg[0]_1 ),
        .Q(\state_cs_reg[0]_0 ),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT2 #(
    .INIT(4'h8)) 
    transf_end_i_1__0
       (.I0(m_axi_wvalid_reg_0),
        .I1(m_axi_wlast_reg_0),
        .O(full_immed0));
endmodule

(* ORIG_REF_NAME = "rp_dma_s2mm_data_ctrl" *) 
module system_rp_oscilloscope_0_rp_dma_s2mm_data_ctrl__xdcDup__1
   (empty_fwft_i_reg,
    fifo_dis_reg,
    \state_cs_reg[0]_0 ,
    m_axi_wvalid_reg_0,
    m_axi_wlast_reg_0,
    busy_reg_0,
    rd_en,
    \req_xfer_cnt_reg[0]_0 ,
    \state_cs_reg[1] ,
    buf1_missed_samp0,
    req_buf_addr_sel_p1_reg,
    buf2_missed_samp0,
    full_immed0,
    busy_reg_1,
    bit_start_reg,
    m_axi_osc1_aresetn_0,
    state_ns,
    req_xfer_last_reg,
    \goreg_dm.dout_i_reg[1] ,
    rst,
    m_axi_osc1_aclk,
    din,
    clear,
    \state_cs_reg[0]_1 ,
    m_axi_wvalid_reg_1,
    m_axi_wlast_reg_1,
    busy_reg_2,
    \buf2_missed_samp_reg[0] ,
    m_axi_osc1_awready,
    m_axi_osc1_awvalid,
    m_axi_osc1_wready,
    \buf2_missed_samp_reg[0]_0 ,
    \buf2_missed_samp_reg[0]_1 ,
    \buf2_missed_samp_reg[0]_2 ,
    cfg_dma_sts_reg,
    \buf2_missed_samp_reg[0]_3 ,
    \buf1_missed_samp_reg[0] ,
    \buf1_missed_samp_reg[0]_0 ,
    \buf2_missed_samp_reg[0]_4 ,
    \buf2_missed_samp_reg[0]_5 ,
    \buf2_missed_samp_reg[0]_6 ,
    req_xfer_last,
    bit_start_0,
    \state_cs_reg[0]_2 ,
    \state_cs[2]_i_3_0 ,
    Q,
    \state_cs[2]_i_3_1 ,
    E,
    empty,
    m_axi_osc1_aresetn,
    intr_reg__0,
    cfg_dma_ctrl_reg_0,
    intr_reg__0_0,
    intr_reg__0_1,
    buf_sel_ch2,
    \state_cs[2]_i_7_0 ,
    \state_cs_reg[2] );
  output empty_fwft_i_reg;
  output fifo_dis_reg;
  output \state_cs_reg[0]_0 ;
  output m_axi_wvalid_reg_0;
  output m_axi_wlast_reg_0;
  output busy_reg_0;
  output rd_en;
  output \req_xfer_cnt_reg[0]_0 ;
  output \state_cs_reg[1] ;
  output buf1_missed_samp0;
  output req_buf_addr_sel_p1_reg;
  output buf2_missed_samp0;
  output full_immed0;
  output busy_reg_1;
  output bit_start_reg;
  output m_axi_osc1_aresetn_0;
  output [0:0]state_ns;
  output req_xfer_last_reg;
  output \goreg_dm.dout_i_reg[1] ;
  input rst;
  input m_axi_osc1_aclk;
  input [7:0]din;
  input clear;
  input \state_cs_reg[0]_1 ;
  input m_axi_wvalid_reg_1;
  input m_axi_wlast_reg_1;
  input busy_reg_2;
  input \buf2_missed_samp_reg[0] ;
  input m_axi_osc1_awready;
  input m_axi_osc1_awvalid;
  input m_axi_osc1_wready;
  input \buf2_missed_samp_reg[0]_0 ;
  input \buf2_missed_samp_reg[0]_1 ;
  input \buf2_missed_samp_reg[0]_2 ;
  input [0:0]cfg_dma_sts_reg;
  input \buf2_missed_samp_reg[0]_3 ;
  input \buf1_missed_samp_reg[0] ;
  input \buf1_missed_samp_reg[0]_0 ;
  input \buf2_missed_samp_reg[0]_4 ;
  input \buf2_missed_samp_reg[0]_5 ;
  input \buf2_missed_samp_reg[0]_6 ;
  input req_xfer_last;
  input bit_start_0;
  input \state_cs_reg[0]_2 ;
  input \state_cs[2]_i_3_0 ;
  input [0:0]Q;
  input \state_cs[2]_i_3_1 ;
  input [0:0]E;
  input empty;
  input m_axi_osc1_aresetn;
  input intr_reg__0;
  input [1:0]cfg_dma_ctrl_reg_0;
  input intr_reg__0_0;
  input intr_reg__0_1;
  input buf_sel_ch2;
  input \state_cs[2]_i_7_0 ;
  input \state_cs_reg[2] ;

  wire [0:0]E;
  wire [0:0]Q;
  wire bit_start_0;
  wire bit_start_reg;
  wire buf1_missed_samp0;
  wire \buf1_missed_samp_reg[0] ;
  wire \buf1_missed_samp_reg[0]_0 ;
  wire buf2_missed_samp0;
  wire \buf2_missed_samp_reg[0] ;
  wire \buf2_missed_samp_reg[0]_0 ;
  wire \buf2_missed_samp_reg[0]_1 ;
  wire \buf2_missed_samp_reg[0]_2 ;
  wire \buf2_missed_samp_reg[0]_3 ;
  wire \buf2_missed_samp_reg[0]_4 ;
  wire \buf2_missed_samp_reg[0]_5 ;
  wire \buf2_missed_samp_reg[0]_6 ;
  wire buf_sel_ch2;
  wire busy_reg_0;
  wire busy_reg_1;
  wire busy_reg_2;
  wire [1:0]cfg_dma_ctrl_reg_0;
  wire [0:0]cfg_dma_sts_reg;
  wire clear;
  wire [7:0]din;
  wire empty;
  wire empty_fwft_i_reg;
  wire fifo_dis_reg;
  wire [7:0]fifo_rd_data;
  wire fifo_rd_re;
  wire full_immed0;
  wire \goreg_dm.dout_i_reg[1] ;
  wire intr0;
  wire intr_reg__0;
  wire intr_reg__0_0;
  wire intr_reg__0_1;
  wire m_axi_osc1_aclk;
  wire m_axi_osc1_aresetn;
  wire m_axi_osc1_aresetn_0;
  wire m_axi_osc1_awready;
  wire m_axi_osc1_awvalid;
  wire m_axi_osc1_wready;
  wire m_axi_wlast_i_4_n_0;
  wire m_axi_wlast_i_5_n_0;
  wire m_axi_wlast_reg_0;
  wire m_axi_wlast_reg_1;
  wire m_axi_wvalid_reg_0;
  wire m_axi_wvalid_reg_1;
  wire [7:0]p_1_in;
  wire rd_en;
  wire req_buf_addr_sel_p1_reg;
  wire \req_xfer_cnt[3]_i_2_n_0 ;
  wire \req_xfer_cnt[4]_i_2_n_0 ;
  wire \req_xfer_cnt[5]_i_2_n_0 ;
  wire \req_xfer_cnt[7]_i_1_n_0 ;
  wire \req_xfer_cnt[7]_i_3_n_0 ;
  wire \req_xfer_cnt_reg[0]_0 ;
  wire req_xfer_last;
  wire req_xfer_last_reg;
  wire rst;
  wire [7:0]sel0;
  wire \state_cs[2]_i_11_n_0 ;
  wire \state_cs[2]_i_3_0 ;
  wire \state_cs[2]_i_3_1 ;
  wire \state_cs[2]_i_5_n_0 ;
  wire \state_cs[2]_i_7_0 ;
  wire \state_cs[2]_i_7_n_0 ;
  wire \state_cs_reg[0]_0 ;
  wire \state_cs_reg[0]_1 ;
  wire \state_cs_reg[0]_2 ;
  wire \state_cs_reg[1] ;
  wire \state_cs_reg[2] ;
  wire [0:0]state_ns;
  wire NLW_U_fifo_axi_req_full_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h8)) 
    U_fifo_axi_data_i_2
       (.I0(m_axi_wvalid_reg_0),
        .I1(m_axi_osc1_wready),
        .O(rd_en));
  (* CHECK_LICENSE_TYPE = "fifo_axi_req,fifo_generator_v13_2_5,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "fifo_generator_v13_2_5,Vivado 2020.1" *) 
  system_rp_oscilloscope_0_fifo_axi_req__xdcDup__2 U_fifo_axi_req
       (.din(din),
        .dout(fifo_rd_data),
        .empty(empty_fwft_i_reg),
        .full(NLW_U_fifo_axi_req_full_UNCONNECTED),
        .rd_clk(m_axi_osc1_aclk),
        .rd_en(fifo_rd_re),
        .rst(rst),
        .wr_clk(m_axi_osc1_aclk),
        .wr_en(fifo_dis_reg));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h1)) 
    U_fifo_axi_req_i_10
       (.I0(\state_cs_reg[0]_0 ),
        .I1(empty_fwft_i_reg),
        .O(fifo_rd_re));
  LUT3 #(
    .INIT(8'h40)) 
    U_fifo_axi_req_i_9
       (.I0(\buf2_missed_samp_reg[0] ),
        .I1(m_axi_osc1_awready),
        .I2(m_axi_osc1_awvalid),
        .O(fifo_dis_reg));
  LUT6 #(
    .INIT(64'h0101010101FF0101)) 
    \buf1_missed_samp[0]_i_1 
       (.I0(\buf2_missed_samp_reg[0]_0 ),
        .I1(\buf2_missed_samp_reg[0]_1 ),
        .I2(\buf2_missed_samp_reg[0]_2 ),
        .I3(buf1_missed_samp0),
        .I4(cfg_dma_sts_reg),
        .I5(\buf2_missed_samp_reg[0]_3 ),
        .O(\state_cs_reg[1] ));
  LUT6 #(
    .INIT(64'h2220202020202020)) 
    \buf1_missed_samp[0]_i_2 
       (.I0(\buf1_missed_samp_reg[0] ),
        .I1(\buf1_missed_samp_reg[0]_0 ),
        .I2(\buf2_missed_samp_reg[0] ),
        .I3(m_axi_wvalid_reg_0),
        .I4(m_axi_wlast_reg_0),
        .I5(\buf2_missed_samp_reg[0]_4 ),
        .O(buf1_missed_samp0));
  LUT6 #(
    .INIT(64'h0000000F2222222F)) 
    \buf2_missed_samp[0]_i_1 
       (.I0(\buf2_missed_samp_reg[0]_3 ),
        .I1(cfg_dma_sts_reg),
        .I2(\buf2_missed_samp_reg[0]_2 ),
        .I3(\buf2_missed_samp_reg[0]_1 ),
        .I4(\buf2_missed_samp_reg[0]_0 ),
        .I5(buf2_missed_samp0),
        .O(req_buf_addr_sel_p1_reg));
  LUT6 #(
    .INIT(64'h2220202020202020)) 
    \buf2_missed_samp[0]_i_2 
       (.I0(\buf2_missed_samp_reg[0]_5 ),
        .I1(\buf2_missed_samp_reg[0]_6 ),
        .I2(\buf2_missed_samp_reg[0] ),
        .I3(m_axi_wvalid_reg_0),
        .I4(m_axi_wlast_reg_0),
        .I5(\buf2_missed_samp_reg[0]_4 ),
        .O(buf2_missed_samp0));
  FDRE busy_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(busy_reg_2),
        .Q(busy_reg_0),
        .R(clear));
  LUT5 #(
    .INIT(32'h000000A8)) 
    intr_i_1
       (.I0(m_axi_osc1_aresetn),
        .I1(intr_reg__0),
        .I2(intr0),
        .I3(cfg_dma_ctrl_reg_0[0]),
        .I4(intr_reg__0_0),
        .O(m_axi_osc1_aresetn_0));
  LUT6 #(
    .INIT(64'h1010FF1010FF1010)) 
    intr_i_2
       (.I0(\buf2_missed_samp_reg[0]_1 ),
        .I1(busy_reg_0),
        .I2(intr_reg__0_1),
        .I3(\buf2_missed_samp_reg[0]_3 ),
        .I4(cfg_dma_sts_reg),
        .I5(buf_sel_ch2),
        .O(intr0));
  LUT5 #(
    .INIT(32'h00000004)) 
    m_axi_wlast_i_2
       (.I0(fifo_rd_data[1]),
        .I1(fifo_rd_data[0]),
        .I2(fifo_rd_data[2]),
        .I3(fifo_rd_data[3]),
        .I4(m_axi_wlast_i_4_n_0),
        .O(\goreg_dm.dout_i_reg[1] ));
  LUT5 #(
    .INIT(32'h00000010)) 
    m_axi_wlast_i_3
       (.I0(m_axi_wlast_i_5_n_0),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .I3(sel0[6]),
        .I4(sel0[7]),
        .O(\req_xfer_cnt_reg[0]_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    m_axi_wlast_i_4
       (.I0(fifo_rd_data[6]),
        .I1(fifo_rd_data[7]),
        .I2(fifo_rd_data[5]),
        .I3(fifo_rd_data[4]),
        .O(m_axi_wlast_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    m_axi_wlast_i_5
       (.I0(sel0[5]),
        .I1(sel0[2]),
        .I2(sel0[4]),
        .I3(sel0[3]),
        .O(m_axi_wlast_i_5_n_0));
  FDRE m_axi_wlast_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(m_axi_wlast_reg_1),
        .Q(m_axi_wlast_reg_0),
        .R(clear));
  FDRE m_axi_wvalid_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(m_axi_wvalid_reg_1),
        .Q(m_axi_wvalid_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'hF704)) 
    \req_xfer_cnt[0]_i_1 
       (.I0(sel0[0]),
        .I1(\state_cs_reg[0]_0 ),
        .I2(m_axi_wlast_reg_0),
        .I3(fifo_rd_data[0]),
        .O(p_1_in[0]));
  LUT5 #(
    .INIT(32'hFF9F0090)) 
    \req_xfer_cnt[1]_i_1 
       (.I0(sel0[0]),
        .I1(sel0[1]),
        .I2(\state_cs_reg[0]_0 ),
        .I3(m_axi_wlast_reg_0),
        .I4(fifo_rd_data[1]),
        .O(p_1_in[1]));
  LUT6 #(
    .INIT(64'hFFFFA9FF0000A900)) 
    \req_xfer_cnt[2]_i_1 
       (.I0(sel0[2]),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(\state_cs_reg[0]_0 ),
        .I4(m_axi_wlast_reg_0),
        .I5(fifo_rd_data[2]),
        .O(p_1_in[2]));
  LUT6 #(
    .INIT(64'hAAA9FFFFAAA90000)) 
    \req_xfer_cnt[3]_i_1 
       (.I0(sel0[3]),
        .I1(sel0[2]),
        .I2(sel0[0]),
        .I3(sel0[1]),
        .I4(\req_xfer_cnt[3]_i_2_n_0 ),
        .I5(fifo_rd_data[3]),
        .O(p_1_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \req_xfer_cnt[3]_i_2 
       (.I0(\state_cs_reg[0]_0 ),
        .I1(m_axi_wlast_reg_0),
        .O(\req_xfer_cnt[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAF30CAAAAAAAA)) 
    \req_xfer_cnt[4]_i_1 
       (.I0(fifo_rd_data[4]),
        .I1(\req_xfer_cnt[4]_i_2_n_0 ),
        .I2(sel0[3]),
        .I3(sel0[4]),
        .I4(m_axi_wlast_reg_0),
        .I5(\state_cs_reg[0]_0 ),
        .O(p_1_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \req_xfer_cnt[4]_i_2 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[2]),
        .O(\req_xfer_cnt[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAEFF0000AE00)) 
    \req_xfer_cnt[5]_i_1 
       (.I0(\req_xfer_cnt[7]_i_3_n_0 ),
        .I1(sel0[5]),
        .I2(\req_xfer_cnt[5]_i_2_n_0 ),
        .I3(\state_cs_reg[0]_0 ),
        .I4(m_axi_wlast_reg_0),
        .I5(fifo_rd_data[5]),
        .O(p_1_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \req_xfer_cnt[5]_i_2 
       (.I0(sel0[4]),
        .I1(sel0[3]),
        .I2(sel0[2]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .O(\req_xfer_cnt[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'hFF6F0060)) 
    \req_xfer_cnt[6]_i_1 
       (.I0(sel0[6]),
        .I1(\req_xfer_cnt[7]_i_3_n_0 ),
        .I2(\state_cs_reg[0]_0 ),
        .I3(m_axi_wlast_reg_0),
        .I4(fifo_rd_data[6]),
        .O(p_1_in[6]));
  LUT3 #(
    .INIT(8'h8F)) 
    \req_xfer_cnt[7]_i_1 
       (.I0(m_axi_osc1_wready),
        .I1(m_axi_wvalid_reg_0),
        .I2(\state_cs_reg[0]_0 ),
        .O(\req_xfer_cnt[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF9AFF00009A00)) 
    \req_xfer_cnt[7]_i_2 
       (.I0(sel0[7]),
        .I1(sel0[6]),
        .I2(\req_xfer_cnt[7]_i_3_n_0 ),
        .I3(\state_cs_reg[0]_0 ),
        .I4(m_axi_wlast_reg_0),
        .I5(fifo_rd_data[7]),
        .O(p_1_in[7]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \req_xfer_cnt[7]_i_3 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[3]),
        .I3(sel0[4]),
        .I4(sel0[2]),
        .I5(sel0[5]),
        .O(\req_xfer_cnt[7]_i_3_n_0 ));
  FDRE \req_xfer_cnt_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_xfer_cnt[7]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(sel0[0]),
        .R(1'b0));
  FDRE \req_xfer_cnt_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_xfer_cnt[7]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(sel0[1]),
        .R(1'b0));
  FDRE \req_xfer_cnt_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_xfer_cnt[7]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(sel0[2]),
        .R(1'b0));
  FDRE \req_xfer_cnt_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_xfer_cnt[7]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(sel0[3]),
        .R(1'b0));
  FDRE \req_xfer_cnt_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_xfer_cnt[7]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(sel0[4]),
        .R(1'b0));
  FDRE \req_xfer_cnt_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_xfer_cnt[7]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(sel0[5]),
        .R(1'b0));
  FDRE \req_xfer_cnt_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_xfer_cnt[7]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(sel0[6]),
        .R(1'b0));
  FDRE \req_xfer_cnt_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(\req_xfer_cnt[7]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(sel0[7]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000C0C000A0FFF)) 
    \state_cs[0]_i_2 
       (.I0(busy_reg_0),
        .I1(\buf2_missed_samp_reg[0]_4 ),
        .I2(cfg_dma_ctrl_reg_0[1]),
        .I3(\buf2_missed_samp_reg[0]_0 ),
        .I4(\buf2_missed_samp_reg[0]_2 ),
        .I5(\buf2_missed_samp_reg[0]_1 ),
        .O(state_ns));
  LUT6 #(
    .INIT(64'h7373700007070707)) 
    \state_cs[1]_i_2 
       (.I0(busy_reg_0),
        .I1(\buf2_missed_samp_reg[0]_2 ),
        .I2(\buf2_missed_samp_reg[0]_0 ),
        .I3(req_xfer_last),
        .I4(\buf2_missed_samp_reg[0]_4 ),
        .I5(\buf2_missed_samp_reg[0]_1 ),
        .O(busy_reg_1));
  LUT6 #(
    .INIT(64'hFFFFFFFF00003500)) 
    \state_cs[2]_i_11 
       (.I0(busy_reg_0),
        .I1(\buf2_missed_samp_reg[0]_4 ),
        .I2(\buf2_missed_samp_reg[0]_1 ),
        .I3(\buf2_missed_samp_reg[0]_2 ),
        .I4(\buf2_missed_samp_reg[0]_0 ),
        .I5(\state_cs[2]_i_7_0 ),
        .O(\state_cs[2]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFF1FFF1FFF1F0000)) 
    \state_cs[2]_i_2 
       (.I0(req_xfer_last),
        .I1(\state_cs_reg[2] ),
        .I2(\buf2_missed_samp_reg[0]_1 ),
        .I3(\buf2_missed_samp_reg[0]_4 ),
        .I4(\state_cs[2]_i_5_n_0 ),
        .I5(\buf2_missed_samp_reg[0]_0 ),
        .O(req_xfer_last_reg));
  LUT6 #(
    .INIT(64'h00F3F3F3F3F3F3AA)) 
    \state_cs[2]_i_3 
       (.I0(bit_start_0),
        .I1(\state_cs_reg[0]_2 ),
        .I2(\state_cs[2]_i_7_n_0 ),
        .I3(\buf2_missed_samp_reg[0]_1 ),
        .I4(\buf2_missed_samp_reg[0]_0 ),
        .I5(\buf2_missed_samp_reg[0]_2 ),
        .O(bit_start_reg));
  LUT4 #(
    .INIT(16'h7077)) 
    \state_cs[2]_i_5 
       (.I0(busy_reg_0),
        .I1(\buf2_missed_samp_reg[0]_2 ),
        .I2(\buf2_missed_samp_reg[0]_0 ),
        .I3(\buf2_missed_samp_reg[0]_1 ),
        .O(\state_cs[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF80FF80FFFFFF80)) 
    \state_cs[2]_i_7 
       (.I0(\state_cs[2]_i_3_0 ),
        .I1(Q),
        .I2(\state_cs[2]_i_3_1 ),
        .I3(\state_cs[2]_i_11_n_0 ),
        .I4(E),
        .I5(empty),
        .O(\state_cs[2]_i_7_n_0 ));
  FDRE \state_cs_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\state_cs_reg[0]_1 ),
        .Q(\state_cs_reg[0]_0 ),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h8)) 
    transf_end_i_1
       (.I0(m_axi_wvalid_reg_0),
        .I1(m_axi_wlast_reg_0),
        .O(full_immed0));
endmodule

(* ORIG_REF_NAME = "rp_dma_s2mm_upsize" *) 
module system_rp_oscilloscope_0_rp_dma_s2mm_upsize
   (E,
    \xfer_cnt_reg[3]_0 ,
    \mux_sel_reg[1]_0 ,
    wr_en,
    m_axis_tvalid_reg_0,
    \mux_sel_reg[2]_0 ,
    \mux_sel_reg[2]_1 ,
    \mux_sel_reg[2]_2 ,
    \mux_sel_reg[2]_3 ,
    \mux_sel_reg[2]_4 ,
    \mux_sel_reg[2]_5 ,
    \mux_sel_reg[2]_6 ,
    \mux_sel_reg[2]_7 ,
    m_axis_tvalid_reg_1,
    \xfer_cnt_reg[6]_0 ,
    \mux_sel_reg[0]_0 ,
    din,
    tlast_reg_0,
    Q,
    m_axis_tvalid_reg_2,
    m_axi_osc2_aclk,
    req_we_reg_0,
    \gic0.gc0.count_reg[3] ,
    tlast_reg_1,
    \mux_sel_reg[2]_8 ,
    acq_tdata,
    \xfer_cnt_reg[6]_1 ,
    acq_tlast,
    \upsize_buf_reg[0][7]_0 ,
    \upsize_buf_reg[7][7]_0 ,
    \upsize_buf_reg[2][7]_0 );
  output [0:0]E;
  output \xfer_cnt_reg[3]_0 ;
  output \mux_sel_reg[1]_0 ;
  output wr_en;
  output m_axis_tvalid_reg_0;
  output \mux_sel_reg[2]_0 ;
  output \mux_sel_reg[2]_1 ;
  output \mux_sel_reg[2]_2 ;
  output \mux_sel_reg[2]_3 ;
  output \mux_sel_reg[2]_4 ;
  output \mux_sel_reg[2]_5 ;
  output \mux_sel_reg[2]_6 ;
  output \mux_sel_reg[2]_7 ;
  output m_axis_tvalid_reg_1;
  output \xfer_cnt_reg[6]_0 ;
  output \mux_sel_reg[0]_0 ;
  output [63:0]din;
  output [0:0]tlast_reg_0;
  output [7:0]Q;
  input m_axis_tvalid_reg_2;
  input m_axi_osc2_aclk;
  input req_we_reg_0;
  input \gic0.gc0.count_reg[3] ;
  input tlast_reg_1;
  input \mux_sel_reg[2]_8 ;
  input [15:0]acq_tdata;
  input \xfer_cnt_reg[6]_1 ;
  input acq_tlast;
  input [7:0]\upsize_buf_reg[0][7]_0 ;
  input [7:0]\upsize_buf_reg[7][7]_0 ;
  input [7:0]\upsize_buf_reg[2][7]_0 ;

  wire [0:0]E;
  wire [7:0]Q;
  wire [15:0]acq_tdata;
  wire acq_tlast;
  wire [63:0]din;
  wire \gic0.gc0.count_reg[3] ;
  wire m_axi_osc2_aclk;
  wire m_axis_tvalid_reg_0;
  wire m_axis_tvalid_reg_1;
  wire m_axis_tvalid_reg_2;
  wire \mux_sel[0]_i_1__0_n_0 ;
  wire \mux_sel[1]_i_1__0_n_0 ;
  wire \mux_sel[2]_i_1__0_n_0 ;
  wire [2:2]mux_sel_reg;
  wire \mux_sel_reg[0]_0 ;
  wire \mux_sel_reg[1]_0 ;
  wire \mux_sel_reg[2]_0 ;
  wire \mux_sel_reg[2]_1 ;
  wire \mux_sel_reg[2]_2 ;
  wire \mux_sel_reg[2]_3 ;
  wire \mux_sel_reg[2]_4 ;
  wire \mux_sel_reg[2]_5 ;
  wire \mux_sel_reg[2]_6 ;
  wire \mux_sel_reg[2]_7 ;
  wire \mux_sel_reg[2]_8 ;
  wire \req_data[4]_i_1__0_n_0 ;
  wire req_we;
  wire req_we_reg_0;
  wire tlast_i_1__0_n_0;
  wire [0:0]tlast_reg_0;
  wire tlast_reg_1;
  wire \upsize_buf[0][7]_i_1__0_n_0 ;
  wire \upsize_buf[1][0]_i_1__0_n_0 ;
  wire \upsize_buf[1][1]_i_1__0_n_0 ;
  wire \upsize_buf[1][2]_i_1__0_n_0 ;
  wire \upsize_buf[1][3]_i_1__0_n_0 ;
  wire \upsize_buf[1][4]_i_1__0_n_0 ;
  wire \upsize_buf[1][5]_i_1__0_n_0 ;
  wire \upsize_buf[1][6]_i_1__0_n_0 ;
  wire \upsize_buf[1][7]_i_2__0_n_0 ;
  wire \upsize_buf[3][0]_i_1__0_n_0 ;
  wire \upsize_buf[3][1]_i_1__0_n_0 ;
  wire \upsize_buf[3][2]_i_1__0_n_0 ;
  wire \upsize_buf[3][3]_i_1__0_n_0 ;
  wire \upsize_buf[3][4]_i_1__0_n_0 ;
  wire \upsize_buf[3][5]_i_1__0_n_0 ;
  wire \upsize_buf[3][6]_i_1__0_n_0 ;
  wire \upsize_buf[3][7]_i_2__0_n_0 ;
  wire \upsize_buf[3][7]_i_3__0_n_0 ;
  wire \upsize_buf[4][0]_i_1__0_n_0 ;
  wire \upsize_buf[4][1]_i_1__0_n_0 ;
  wire \upsize_buf[4][2]_i_1__0_n_0 ;
  wire \upsize_buf[4][3]_i_1__0_n_0 ;
  wire \upsize_buf[4][4]_i_1__0_n_0 ;
  wire \upsize_buf[4][5]_i_1__0_n_0 ;
  wire \upsize_buf[4][6]_i_1__0_n_0 ;
  wire \upsize_buf[4][7]_i_2__0_n_0 ;
  wire \upsize_buf[4][7]_i_3__0_n_0 ;
  wire \upsize_buf[5][0]_i_1__0_n_0 ;
  wire \upsize_buf[5][1]_i_1__0_n_0 ;
  wire \upsize_buf[5][2]_i_1__0_n_0 ;
  wire \upsize_buf[5][3]_i_1__0_n_0 ;
  wire \upsize_buf[5][4]_i_1__0_n_0 ;
  wire \upsize_buf[5][5]_i_1__0_n_0 ;
  wire \upsize_buf[5][6]_i_1__0_n_0 ;
  wire \upsize_buf[5][7]_i_2__0_n_0 ;
  wire \upsize_buf[5][7]_i_3__0_n_0 ;
  wire \upsize_buf[6][0]_i_1__0_n_0 ;
  wire \upsize_buf[6][1]_i_1__0_n_0 ;
  wire \upsize_buf[6][2]_i_1__0_n_0 ;
  wire \upsize_buf[6][3]_i_1__0_n_0 ;
  wire \upsize_buf[6][4]_i_1__0_n_0 ;
  wire \upsize_buf[6][5]_i_1__0_n_0 ;
  wire \upsize_buf[6][6]_i_1__0_n_0 ;
  wire \upsize_buf[6][7]_i_2__0_n_0 ;
  wire \upsize_buf[6][7]_i_3__0_n_0 ;
  wire \upsize_buf[7][0]_i_3__0_n_0 ;
  wire \upsize_buf[7][0]_i_4__0_n_0 ;
  wire \upsize_buf[7][1]_i_3__0_n_0 ;
  wire \upsize_buf[7][1]_i_4__0_n_0 ;
  wire \upsize_buf[7][2]_i_3__0_n_0 ;
  wire \upsize_buf[7][2]_i_4__0_n_0 ;
  wire \upsize_buf[7][3]_i_3__0_n_0 ;
  wire \upsize_buf[7][3]_i_4__0_n_0 ;
  wire \upsize_buf[7][4]_i_3__0_n_0 ;
  wire \upsize_buf[7][4]_i_4__0_n_0 ;
  wire \upsize_buf[7][5]_i_3__0_n_0 ;
  wire \upsize_buf[7][5]_i_4__0_n_0 ;
  wire \upsize_buf[7][6]_i_3__0_n_0 ;
  wire \upsize_buf[7][6]_i_4__0_n_0 ;
  wire \upsize_buf[7][7]_i_5__0_n_0 ;
  wire \upsize_buf[7][7]_i_6__0_n_0 ;
  wire [7:0]\upsize_buf_reg[0][7]_0 ;
  wire \upsize_buf_reg[1]_19 ;
  wire [7:0]\upsize_buf_reg[2][7]_0 ;
  wire \upsize_buf_reg[2]_18 ;
  wire \upsize_buf_reg[3]_22 ;
  wire \upsize_buf_reg[4]_17 ;
  wire \upsize_buf_reg[5]_23 ;
  wire \upsize_buf_reg[6]_21 ;
  wire [7:0]\upsize_buf_reg[7][7]_0 ;
  wire \upsize_buf_reg[7]_20 ;
  wire [1:0]upsize_lvl;
  wire wr_en;
  wire \xfer_cnt[0]_i_1__0_n_0 ;
  wire \xfer_cnt[1]_i_1__0_n_0 ;
  wire \xfer_cnt[2]_i_1__0_n_0 ;
  wire \xfer_cnt[3]_i_1__0_n_0 ;
  wire \xfer_cnt[4]_i_1__0_n_0 ;
  wire \xfer_cnt[5]_i_1__0_n_0 ;
  wire \xfer_cnt[6]_i_2__0_n_0 ;
  wire \xfer_cnt_reg[3]_0 ;
  wire \xfer_cnt_reg[6]_0 ;
  wire \xfer_cnt_reg[6]_1 ;
  wire \xfer_cnt_reg_n_0_[0] ;
  wire \xfer_cnt_reg_n_0_[1] ;
  wire \xfer_cnt_reg_n_0_[2] ;
  wire \xfer_cnt_reg_n_0_[3] ;
  wire \xfer_cnt_reg_n_0_[4] ;
  wire \xfer_cnt_reg_n_0_[5] ;
  wire \xfer_cnt_reg_n_0_[6] ;

  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'h2)) 
    U_fifo_axi_data_i_1__0
       (.I0(E),
        .I1(\gic0.gc0.count_reg[3] ),
        .O(m_axis_tvalid_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'h2)) 
    U_fifo_axi_req_i_1__0
       (.I0(req_we),
        .I1(\gic0.gc0.count_reg[3] ),
        .O(wr_en));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT5 #(
    .INIT(32'h8A000000)) 
    m_axis_tvalid_i_2__0
       (.I0(tlast_reg_1),
        .I1(upsize_lvl[0]),
        .I2(\mux_sel_reg[2]_8 ),
        .I3(upsize_lvl[1]),
        .I4(mux_sel_reg),
        .O(m_axis_tvalid_reg_0));
  FDRE m_axis_tvalid_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(m_axis_tvalid_reg_2),
        .Q(E),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h1410145014501450)) 
    \mux_sel[0]_i_1__0 
       (.I0(\xfer_cnt_reg[6]_1 ),
        .I1(tlast_reg_1),
        .I2(upsize_lvl[0]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(upsize_lvl[1]),
        .I5(mux_sel_reg),
        .O(\mux_sel[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h15114044)) 
    \mux_sel[1]_i_1__0 
       (.I0(\xfer_cnt_reg[6]_1 ),
        .I1(tlast_reg_1),
        .I2(upsize_lvl[0]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(upsize_lvl[1]),
        .O(\mux_sel[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h1511555540440000)) 
    \mux_sel[2]_i_1__0 
       (.I0(\xfer_cnt_reg[6]_1 ),
        .I1(tlast_reg_1),
        .I2(upsize_lvl[0]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(upsize_lvl[1]),
        .I5(mux_sel_reg),
        .O(\mux_sel[2]_i_1__0_n_0 ));
  FDRE \mux_sel_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\mux_sel[0]_i_1__0_n_0 ),
        .Q(upsize_lvl[0]),
        .R(1'b0));
  FDRE \mux_sel_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\mux_sel[1]_i_1__0_n_0 ),
        .Q(upsize_lvl[1]),
        .R(1'b0));
  FDRE \mux_sel_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\mux_sel[2]_i_1__0_n_0 ),
        .Q(mux_sel_reg),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \req_data[4]_i_1__0 
       (.I0(\xfer_cnt_reg_n_0_[3] ),
        .I1(\xfer_cnt_reg_n_0_[0] ),
        .I2(\xfer_cnt_reg_n_0_[1] ),
        .I3(\xfer_cnt_reg_n_0_[2] ),
        .I4(\xfer_cnt_reg_n_0_[4] ),
        .O(\req_data[4]_i_1__0_n_0 ));
  FDRE \req_data_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\xfer_cnt[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \req_data_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\xfer_cnt[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \req_data_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\xfer_cnt[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \req_data_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\xfer_cnt[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \req_data_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\req_data[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \req_data_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\xfer_cnt[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \req_data_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(\xfer_cnt[6]_i_2__0_n_0 ),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \req_data_reg[7] 
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(tlast_reg_0),
        .Q(Q[7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h01)) 
    req_we_i_2__0
       (.I0(\xfer_cnt_reg_n_0_[6] ),
        .I1(\xfer_cnt_reg_n_0_[4] ),
        .I2(\xfer_cnt_reg_n_0_[5] ),
        .O(\xfer_cnt_reg[6]_0 ));
  FDRE req_we_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(req_we_reg_0),
        .Q(req_we),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h00EA)) 
    tlast_i_1__0
       (.I0(tlast_reg_0),
        .I1(tlast_reg_1),
        .I2(acq_tlast),
        .I3(\xfer_cnt_reg[6]_1 ),
        .O(tlast_i_1__0_n_0));
  FDRE tlast_reg
       (.C(m_axi_osc2_aclk),
        .CE(1'b1),
        .D(tlast_i_1__0_n_0),
        .Q(tlast_reg_0),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h01)) 
    \upsize_buf[0][7]_i_1__0 
       (.I0(mux_sel_reg),
        .I1(upsize_lvl[1]),
        .I2(upsize_lvl[0]),
        .O(\upsize_buf[0][7]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][0]_i_1__0 
       (.I0(\mux_sel_reg[2]_7 ),
        .I1(\upsize_buf[0][7]_i_1__0_n_0 ),
        .I2(acq_tdata[8]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[0]),
        .O(\upsize_buf[1][0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][1]_i_1__0 
       (.I0(\mux_sel_reg[2]_6 ),
        .I1(\upsize_buf[0][7]_i_1__0_n_0 ),
        .I2(acq_tdata[9]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[1]),
        .O(\upsize_buf[1][1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][2]_i_1__0 
       (.I0(\mux_sel_reg[2]_5 ),
        .I1(\upsize_buf[0][7]_i_1__0_n_0 ),
        .I2(acq_tdata[10]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[2]),
        .O(\upsize_buf[1][2]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][3]_i_1__0 
       (.I0(\mux_sel_reg[2]_4 ),
        .I1(\upsize_buf[0][7]_i_1__0_n_0 ),
        .I2(acq_tdata[11]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[3]),
        .O(\upsize_buf[1][3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][4]_i_1__0 
       (.I0(\mux_sel_reg[2]_3 ),
        .I1(\upsize_buf[0][7]_i_1__0_n_0 ),
        .I2(acq_tdata[12]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[4]),
        .O(\upsize_buf[1][4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][5]_i_1__0 
       (.I0(\mux_sel_reg[2]_2 ),
        .I1(\upsize_buf[0][7]_i_1__0_n_0 ),
        .I2(acq_tdata[13]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[5]),
        .O(\upsize_buf[1][5]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][6]_i_1__0 
       (.I0(\mux_sel_reg[2]_1 ),
        .I1(\upsize_buf[0][7]_i_1__0_n_0 ),
        .I2(acq_tdata[14]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[6]),
        .O(\upsize_buf[1][6]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \upsize_buf[1][7]_i_1__0 
       (.I0(upsize_lvl[1]),
        .I1(mux_sel_reg),
        .O(\upsize_buf_reg[1]_19 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][7]_i_2__0 
       (.I0(\mux_sel_reg[2]_0 ),
        .I1(\upsize_buf[0][7]_i_1__0_n_0 ),
        .I2(acq_tdata[15]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[7]),
        .O(\upsize_buf[1][7]_i_2__0_n_0 ));
  LUT3 #(
    .INIT(8'h12)) 
    \upsize_buf[2][7]_i_1__0 
       (.I0(upsize_lvl[1]),
        .I1(mux_sel_reg),
        .I2(upsize_lvl[0]),
        .O(\upsize_buf_reg[2]_18 ));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    \upsize_buf[2][7]_i_3__0 
       (.I0(upsize_lvl[0]),
        .I1(mux_sel_reg),
        .I2(upsize_lvl[1]),
        .O(\mux_sel_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][0]_i_1__0 
       (.I0(\mux_sel_reg[2]_7 ),
        .I1(\upsize_buf[3][7]_i_3__0_n_0 ),
        .I2(acq_tdata[8]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[0]),
        .O(\upsize_buf[3][0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][1]_i_1__0 
       (.I0(\mux_sel_reg[2]_6 ),
        .I1(\upsize_buf[3][7]_i_3__0_n_0 ),
        .I2(acq_tdata[9]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[1]),
        .O(\upsize_buf[3][1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][2]_i_1__0 
       (.I0(\mux_sel_reg[2]_5 ),
        .I1(\upsize_buf[3][7]_i_3__0_n_0 ),
        .I2(acq_tdata[10]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[2]),
        .O(\upsize_buf[3][2]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][3]_i_1__0 
       (.I0(\mux_sel_reg[2]_4 ),
        .I1(\upsize_buf[3][7]_i_3__0_n_0 ),
        .I2(acq_tdata[11]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[3]),
        .O(\upsize_buf[3][3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][4]_i_1__0 
       (.I0(\mux_sel_reg[2]_3 ),
        .I1(\upsize_buf[3][7]_i_3__0_n_0 ),
        .I2(acq_tdata[12]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[4]),
        .O(\upsize_buf[3][4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][5]_i_1__0 
       (.I0(\mux_sel_reg[2]_2 ),
        .I1(\upsize_buf[3][7]_i_3__0_n_0 ),
        .I2(acq_tdata[13]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[5]),
        .O(\upsize_buf[3][5]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][6]_i_1__0 
       (.I0(\mux_sel_reg[2]_1 ),
        .I1(\upsize_buf[3][7]_i_3__0_n_0 ),
        .I2(acq_tdata[14]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[6]),
        .O(\upsize_buf[3][6]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \upsize_buf[3][7]_i_1__0 
       (.I0(upsize_lvl[1]),
        .I1(mux_sel_reg),
        .O(\upsize_buf_reg[3]_22 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][7]_i_2__0 
       (.I0(\mux_sel_reg[2]_0 ),
        .I1(\upsize_buf[3][7]_i_3__0_n_0 ),
        .I2(acq_tdata[15]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[7]),
        .O(\upsize_buf[3][7]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \upsize_buf[3][7]_i_3__0 
       (.I0(mux_sel_reg),
        .I1(upsize_lvl[1]),
        .I2(upsize_lvl[0]),
        .O(\upsize_buf[3][7]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][0]_i_1__0 
       (.I0(\mux_sel_reg[2]_7 ),
        .I1(\upsize_buf[4][7]_i_3__0_n_0 ),
        .I2(acq_tdata[8]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[0]),
        .O(\upsize_buf[4][0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][1]_i_1__0 
       (.I0(\mux_sel_reg[2]_6 ),
        .I1(\upsize_buf[4][7]_i_3__0_n_0 ),
        .I2(acq_tdata[9]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[1]),
        .O(\upsize_buf[4][1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][2]_i_1__0 
       (.I0(\mux_sel_reg[2]_5 ),
        .I1(\upsize_buf[4][7]_i_3__0_n_0 ),
        .I2(acq_tdata[10]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[2]),
        .O(\upsize_buf[4][2]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][3]_i_1__0 
       (.I0(\mux_sel_reg[2]_4 ),
        .I1(\upsize_buf[4][7]_i_3__0_n_0 ),
        .I2(acq_tdata[11]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[3]),
        .O(\upsize_buf[4][3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][4]_i_1__0 
       (.I0(\mux_sel_reg[2]_3 ),
        .I1(\upsize_buf[4][7]_i_3__0_n_0 ),
        .I2(acq_tdata[12]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[4]),
        .O(\upsize_buf[4][4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][5]_i_1__0 
       (.I0(\mux_sel_reg[2]_2 ),
        .I1(\upsize_buf[4][7]_i_3__0_n_0 ),
        .I2(acq_tdata[13]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[5]),
        .O(\upsize_buf[4][5]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][6]_i_1__0 
       (.I0(\mux_sel_reg[2]_1 ),
        .I1(\upsize_buf[4][7]_i_3__0_n_0 ),
        .I2(acq_tdata[14]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[6]),
        .O(\upsize_buf[4][6]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h18)) 
    \upsize_buf[4][7]_i_1__0 
       (.I0(upsize_lvl[0]),
        .I1(upsize_lvl[1]),
        .I2(mux_sel_reg),
        .O(\upsize_buf_reg[4]_17 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][7]_i_2__0 
       (.I0(\mux_sel_reg[2]_0 ),
        .I1(\upsize_buf[4][7]_i_3__0_n_0 ),
        .I2(acq_tdata[15]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[7]),
        .O(\upsize_buf[4][7]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \upsize_buf[4][7]_i_3__0 
       (.I0(mux_sel_reg),
        .I1(upsize_lvl[1]),
        .I2(upsize_lvl[0]),
        .O(\upsize_buf[4][7]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][0]_i_1__0 
       (.I0(\mux_sel_reg[2]_7 ),
        .I1(\upsize_buf[5][7]_i_3__0_n_0 ),
        .I2(acq_tdata[8]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[0]),
        .O(\upsize_buf[5][0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][1]_i_1__0 
       (.I0(\mux_sel_reg[2]_6 ),
        .I1(\upsize_buf[5][7]_i_3__0_n_0 ),
        .I2(acq_tdata[9]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[1]),
        .O(\upsize_buf[5][1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][2]_i_1__0 
       (.I0(\mux_sel_reg[2]_5 ),
        .I1(\upsize_buf[5][7]_i_3__0_n_0 ),
        .I2(acq_tdata[10]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[2]),
        .O(\upsize_buf[5][2]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][3]_i_1__0 
       (.I0(\mux_sel_reg[2]_4 ),
        .I1(\upsize_buf[5][7]_i_3__0_n_0 ),
        .I2(acq_tdata[11]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[3]),
        .O(\upsize_buf[5][3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][4]_i_1__0 
       (.I0(\mux_sel_reg[2]_3 ),
        .I1(\upsize_buf[5][7]_i_3__0_n_0 ),
        .I2(acq_tdata[12]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[4]),
        .O(\upsize_buf[5][4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][5]_i_1__0 
       (.I0(\mux_sel_reg[2]_2 ),
        .I1(\upsize_buf[5][7]_i_3__0_n_0 ),
        .I2(acq_tdata[13]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[5]),
        .O(\upsize_buf[5][5]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][6]_i_1__0 
       (.I0(\mux_sel_reg[2]_1 ),
        .I1(\upsize_buf[5][7]_i_3__0_n_0 ),
        .I2(acq_tdata[14]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[6]),
        .O(\upsize_buf[5][6]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h4)) 
    \upsize_buf[5][7]_i_1__0 
       (.I0(upsize_lvl[1]),
        .I1(mux_sel_reg),
        .O(\upsize_buf_reg[5]_23 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][7]_i_2__0 
       (.I0(\mux_sel_reg[2]_0 ),
        .I1(\upsize_buf[5][7]_i_3__0_n_0 ),
        .I2(acq_tdata[15]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[7]),
        .O(\upsize_buf[5][7]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \upsize_buf[5][7]_i_3__0 
       (.I0(mux_sel_reg),
        .I1(upsize_lvl[1]),
        .I2(upsize_lvl[0]),
        .O(\upsize_buf[5][7]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][0]_i_1__0 
       (.I0(\mux_sel_reg[2]_7 ),
        .I1(\upsize_buf[6][7]_i_3__0_n_0 ),
        .I2(acq_tdata[8]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[0]),
        .O(\upsize_buf[6][0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][1]_i_1__0 
       (.I0(\mux_sel_reg[2]_6 ),
        .I1(\upsize_buf[6][7]_i_3__0_n_0 ),
        .I2(acq_tdata[9]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[1]),
        .O(\upsize_buf[6][1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][2]_i_1__0 
       (.I0(\mux_sel_reg[2]_5 ),
        .I1(\upsize_buf[6][7]_i_3__0_n_0 ),
        .I2(acq_tdata[10]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[2]),
        .O(\upsize_buf[6][2]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][3]_i_1__0 
       (.I0(\mux_sel_reg[2]_4 ),
        .I1(\upsize_buf[6][7]_i_3__0_n_0 ),
        .I2(acq_tdata[11]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[3]),
        .O(\upsize_buf[6][3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][4]_i_1__0 
       (.I0(\mux_sel_reg[2]_3 ),
        .I1(\upsize_buf[6][7]_i_3__0_n_0 ),
        .I2(acq_tdata[12]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[4]),
        .O(\upsize_buf[6][4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][5]_i_1__0 
       (.I0(\mux_sel_reg[2]_2 ),
        .I1(\upsize_buf[6][7]_i_3__0_n_0 ),
        .I2(acq_tdata[13]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[5]),
        .O(\upsize_buf[6][5]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][6]_i_1__0 
       (.I0(\mux_sel_reg[2]_1 ),
        .I1(\upsize_buf[6][7]_i_3__0_n_0 ),
        .I2(acq_tdata[14]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[6]),
        .O(\upsize_buf[6][6]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h28)) 
    \upsize_buf[6][7]_i_1__0 
       (.I0(mux_sel_reg),
        .I1(upsize_lvl[0]),
        .I2(upsize_lvl[1]),
        .O(\upsize_buf_reg[6]_21 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][7]_i_2__0 
       (.I0(\mux_sel_reg[2]_0 ),
        .I1(\upsize_buf[6][7]_i_3__0_n_0 ),
        .I2(acq_tdata[15]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[7]),
        .O(\upsize_buf[6][7]_i_2__0_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \upsize_buf[6][7]_i_3__0 
       (.I0(mux_sel_reg),
        .I1(upsize_lvl[0]),
        .I2(upsize_lvl[1]),
        .O(\upsize_buf[6][7]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][0]_i_2__0 
       (.I0(\upsize_buf[7][0]_i_3__0_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][0]_i_4__0_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[8]),
        .O(\mux_sel_reg[2]_7 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][0]_i_3__0 
       (.I0(din[0]),
        .I1(din[56]),
        .I2(upsize_lvl[1]),
        .I3(din[48]),
        .I4(upsize_lvl[0]),
        .I5(din[40]),
        .O(\upsize_buf[7][0]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][0]_i_4__0 
       (.I0(din[32]),
        .I1(din[24]),
        .I2(upsize_lvl[1]),
        .I3(din[16]),
        .I4(upsize_lvl[0]),
        .I5(din[8]),
        .O(\upsize_buf[7][0]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][1]_i_2__0 
       (.I0(\upsize_buf[7][1]_i_3__0_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][1]_i_4__0_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[9]),
        .O(\mux_sel_reg[2]_6 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][1]_i_3__0 
       (.I0(din[1]),
        .I1(din[57]),
        .I2(upsize_lvl[1]),
        .I3(din[49]),
        .I4(upsize_lvl[0]),
        .I5(din[41]),
        .O(\upsize_buf[7][1]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][1]_i_4__0 
       (.I0(din[33]),
        .I1(din[25]),
        .I2(upsize_lvl[1]),
        .I3(din[17]),
        .I4(upsize_lvl[0]),
        .I5(din[9]),
        .O(\upsize_buf[7][1]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][2]_i_2__0 
       (.I0(\upsize_buf[7][2]_i_3__0_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][2]_i_4__0_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[10]),
        .O(\mux_sel_reg[2]_5 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][2]_i_3__0 
       (.I0(din[2]),
        .I1(din[58]),
        .I2(upsize_lvl[1]),
        .I3(din[50]),
        .I4(upsize_lvl[0]),
        .I5(din[42]),
        .O(\upsize_buf[7][2]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][2]_i_4__0 
       (.I0(din[34]),
        .I1(din[26]),
        .I2(upsize_lvl[1]),
        .I3(din[18]),
        .I4(upsize_lvl[0]),
        .I5(din[10]),
        .O(\upsize_buf[7][2]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][3]_i_2__0 
       (.I0(\upsize_buf[7][3]_i_3__0_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][3]_i_4__0_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[11]),
        .O(\mux_sel_reg[2]_4 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][3]_i_3__0 
       (.I0(din[3]),
        .I1(din[59]),
        .I2(upsize_lvl[1]),
        .I3(din[51]),
        .I4(upsize_lvl[0]),
        .I5(din[43]),
        .O(\upsize_buf[7][3]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][3]_i_4__0 
       (.I0(din[35]),
        .I1(din[27]),
        .I2(upsize_lvl[1]),
        .I3(din[19]),
        .I4(upsize_lvl[0]),
        .I5(din[11]),
        .O(\upsize_buf[7][3]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][4]_i_2__0 
       (.I0(\upsize_buf[7][4]_i_3__0_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][4]_i_4__0_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[12]),
        .O(\mux_sel_reg[2]_3 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][4]_i_3__0 
       (.I0(din[4]),
        .I1(din[60]),
        .I2(upsize_lvl[1]),
        .I3(din[52]),
        .I4(upsize_lvl[0]),
        .I5(din[44]),
        .O(\upsize_buf[7][4]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][4]_i_4__0 
       (.I0(din[36]),
        .I1(din[28]),
        .I2(upsize_lvl[1]),
        .I3(din[20]),
        .I4(upsize_lvl[0]),
        .I5(din[12]),
        .O(\upsize_buf[7][4]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][5]_i_2__0 
       (.I0(\upsize_buf[7][5]_i_3__0_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][5]_i_4__0_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[13]),
        .O(\mux_sel_reg[2]_2 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][5]_i_3__0 
       (.I0(din[5]),
        .I1(din[61]),
        .I2(upsize_lvl[1]),
        .I3(din[53]),
        .I4(upsize_lvl[0]),
        .I5(din[45]),
        .O(\upsize_buf[7][5]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][5]_i_4__0 
       (.I0(din[37]),
        .I1(din[29]),
        .I2(upsize_lvl[1]),
        .I3(din[21]),
        .I4(upsize_lvl[0]),
        .I5(din[13]),
        .O(\upsize_buf[7][5]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][6]_i_2__0 
       (.I0(\upsize_buf[7][6]_i_3__0_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][6]_i_4__0_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[14]),
        .O(\mux_sel_reg[2]_1 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][6]_i_3__0 
       (.I0(din[6]),
        .I1(din[62]),
        .I2(upsize_lvl[1]),
        .I3(din[54]),
        .I4(upsize_lvl[0]),
        .I5(din[46]),
        .O(\upsize_buf[7][6]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][6]_i_4__0 
       (.I0(din[38]),
        .I1(din[30]),
        .I2(upsize_lvl[1]),
        .I3(din[22]),
        .I4(upsize_lvl[0]),
        .I5(din[14]),
        .O(\upsize_buf[7][6]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \upsize_buf[7][7]_i_1__0 
       (.I0(upsize_lvl[1]),
        .I1(mux_sel_reg),
        .O(\upsize_buf_reg[7]_20 ));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \upsize_buf[7][7]_i_3__0 
       (.I0(upsize_lvl[1]),
        .I1(upsize_lvl[0]),
        .I2(mux_sel_reg),
        .O(\mux_sel_reg[1]_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][7]_i_4__0 
       (.I0(\upsize_buf[7][7]_i_5__0_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][7]_i_6__0_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[15]),
        .O(\mux_sel_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][7]_i_5__0 
       (.I0(din[7]),
        .I1(din[63]),
        .I2(upsize_lvl[1]),
        .I3(din[55]),
        .I4(upsize_lvl[0]),
        .I5(din[47]),
        .O(\upsize_buf[7][7]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][7]_i_6__0 
       (.I0(din[39]),
        .I1(din[31]),
        .I2(upsize_lvl[1]),
        .I3(din[23]),
        .I4(upsize_lvl[0]),
        .I5(din[15]),
        .O(\upsize_buf[7][7]_i_6__0_n_0 ));
  FDRE \upsize_buf_reg[0][0] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf[0][7]_i_1__0_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [0]),
        .Q(din[0]),
        .R(1'b0));
  FDRE \upsize_buf_reg[0][1] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf[0][7]_i_1__0_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [1]),
        .Q(din[1]),
        .R(1'b0));
  FDRE \upsize_buf_reg[0][2] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf[0][7]_i_1__0_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [2]),
        .Q(din[2]),
        .R(1'b0));
  FDRE \upsize_buf_reg[0][3] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf[0][7]_i_1__0_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [3]),
        .Q(din[3]),
        .R(1'b0));
  FDRE \upsize_buf_reg[0][4] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf[0][7]_i_1__0_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [4]),
        .Q(din[4]),
        .R(1'b0));
  FDRE \upsize_buf_reg[0][5] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf[0][7]_i_1__0_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [5]),
        .Q(din[5]),
        .R(1'b0));
  FDRE \upsize_buf_reg[0][6] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf[0][7]_i_1__0_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [6]),
        .Q(din[6]),
        .R(1'b0));
  FDRE \upsize_buf_reg[0][7] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf[0][7]_i_1__0_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [7]),
        .Q(din[7]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][0] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[1]_19 ),
        .D(\upsize_buf[1][0]_i_1__0_n_0 ),
        .Q(din[8]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][1] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[1]_19 ),
        .D(\upsize_buf[1][1]_i_1__0_n_0 ),
        .Q(din[9]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][2] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[1]_19 ),
        .D(\upsize_buf[1][2]_i_1__0_n_0 ),
        .Q(din[10]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][3] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[1]_19 ),
        .D(\upsize_buf[1][3]_i_1__0_n_0 ),
        .Q(din[11]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][4] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[1]_19 ),
        .D(\upsize_buf[1][4]_i_1__0_n_0 ),
        .Q(din[12]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][5] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[1]_19 ),
        .D(\upsize_buf[1][5]_i_1__0_n_0 ),
        .Q(din[13]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][6] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[1]_19 ),
        .D(\upsize_buf[1][6]_i_1__0_n_0 ),
        .Q(din[14]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][7] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[1]_19 ),
        .D(\upsize_buf[1][7]_i_2__0_n_0 ),
        .Q(din[15]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][0] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[2]_18 ),
        .D(\upsize_buf_reg[2][7]_0 [0]),
        .Q(din[16]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][1] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[2]_18 ),
        .D(\upsize_buf_reg[2][7]_0 [1]),
        .Q(din[17]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][2] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[2]_18 ),
        .D(\upsize_buf_reg[2][7]_0 [2]),
        .Q(din[18]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][3] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[2]_18 ),
        .D(\upsize_buf_reg[2][7]_0 [3]),
        .Q(din[19]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][4] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[2]_18 ),
        .D(\upsize_buf_reg[2][7]_0 [4]),
        .Q(din[20]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][5] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[2]_18 ),
        .D(\upsize_buf_reg[2][7]_0 [5]),
        .Q(din[21]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][6] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[2]_18 ),
        .D(\upsize_buf_reg[2][7]_0 [6]),
        .Q(din[22]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][7] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[2]_18 ),
        .D(\upsize_buf_reg[2][7]_0 [7]),
        .Q(din[23]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][0] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[3]_22 ),
        .D(\upsize_buf[3][0]_i_1__0_n_0 ),
        .Q(din[24]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][1] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[3]_22 ),
        .D(\upsize_buf[3][1]_i_1__0_n_0 ),
        .Q(din[25]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][2] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[3]_22 ),
        .D(\upsize_buf[3][2]_i_1__0_n_0 ),
        .Q(din[26]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][3] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[3]_22 ),
        .D(\upsize_buf[3][3]_i_1__0_n_0 ),
        .Q(din[27]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][4] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[3]_22 ),
        .D(\upsize_buf[3][4]_i_1__0_n_0 ),
        .Q(din[28]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][5] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[3]_22 ),
        .D(\upsize_buf[3][5]_i_1__0_n_0 ),
        .Q(din[29]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][6] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[3]_22 ),
        .D(\upsize_buf[3][6]_i_1__0_n_0 ),
        .Q(din[30]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][7] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[3]_22 ),
        .D(\upsize_buf[3][7]_i_2__0_n_0 ),
        .Q(din[31]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][0] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[4]_17 ),
        .D(\upsize_buf[4][0]_i_1__0_n_0 ),
        .Q(din[32]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][1] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[4]_17 ),
        .D(\upsize_buf[4][1]_i_1__0_n_0 ),
        .Q(din[33]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][2] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[4]_17 ),
        .D(\upsize_buf[4][2]_i_1__0_n_0 ),
        .Q(din[34]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][3] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[4]_17 ),
        .D(\upsize_buf[4][3]_i_1__0_n_0 ),
        .Q(din[35]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][4] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[4]_17 ),
        .D(\upsize_buf[4][4]_i_1__0_n_0 ),
        .Q(din[36]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][5] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[4]_17 ),
        .D(\upsize_buf[4][5]_i_1__0_n_0 ),
        .Q(din[37]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][6] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[4]_17 ),
        .D(\upsize_buf[4][6]_i_1__0_n_0 ),
        .Q(din[38]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][7] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[4]_17 ),
        .D(\upsize_buf[4][7]_i_2__0_n_0 ),
        .Q(din[39]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][0] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[5]_23 ),
        .D(\upsize_buf[5][0]_i_1__0_n_0 ),
        .Q(din[40]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][1] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[5]_23 ),
        .D(\upsize_buf[5][1]_i_1__0_n_0 ),
        .Q(din[41]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][2] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[5]_23 ),
        .D(\upsize_buf[5][2]_i_1__0_n_0 ),
        .Q(din[42]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][3] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[5]_23 ),
        .D(\upsize_buf[5][3]_i_1__0_n_0 ),
        .Q(din[43]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][4] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[5]_23 ),
        .D(\upsize_buf[5][4]_i_1__0_n_0 ),
        .Q(din[44]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][5] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[5]_23 ),
        .D(\upsize_buf[5][5]_i_1__0_n_0 ),
        .Q(din[45]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][6] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[5]_23 ),
        .D(\upsize_buf[5][6]_i_1__0_n_0 ),
        .Q(din[46]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][7] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[5]_23 ),
        .D(\upsize_buf[5][7]_i_2__0_n_0 ),
        .Q(din[47]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][0] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[6]_21 ),
        .D(\upsize_buf[6][0]_i_1__0_n_0 ),
        .Q(din[48]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][1] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[6]_21 ),
        .D(\upsize_buf[6][1]_i_1__0_n_0 ),
        .Q(din[49]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][2] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[6]_21 ),
        .D(\upsize_buf[6][2]_i_1__0_n_0 ),
        .Q(din[50]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][3] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[6]_21 ),
        .D(\upsize_buf[6][3]_i_1__0_n_0 ),
        .Q(din[51]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][4] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[6]_21 ),
        .D(\upsize_buf[6][4]_i_1__0_n_0 ),
        .Q(din[52]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][5] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[6]_21 ),
        .D(\upsize_buf[6][5]_i_1__0_n_0 ),
        .Q(din[53]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][6] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[6]_21 ),
        .D(\upsize_buf[6][6]_i_1__0_n_0 ),
        .Q(din[54]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][7] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[6]_21 ),
        .D(\upsize_buf[6][7]_i_2__0_n_0 ),
        .Q(din[55]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][0] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[7]_20 ),
        .D(\upsize_buf_reg[7][7]_0 [0]),
        .Q(din[56]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][1] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[7]_20 ),
        .D(\upsize_buf_reg[7][7]_0 [1]),
        .Q(din[57]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][2] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[7]_20 ),
        .D(\upsize_buf_reg[7][7]_0 [2]),
        .Q(din[58]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][3] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[7]_20 ),
        .D(\upsize_buf_reg[7][7]_0 [3]),
        .Q(din[59]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][4] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[7]_20 ),
        .D(\upsize_buf_reg[7][7]_0 [4]),
        .Q(din[60]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][5] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[7]_20 ),
        .D(\upsize_buf_reg[7][7]_0 [5]),
        .Q(din[61]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][6] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[7]_20 ),
        .D(\upsize_buf_reg[7][7]_0 [6]),
        .Q(din[62]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][7] 
       (.C(m_axi_osc2_aclk),
        .CE(\upsize_buf_reg[7]_20 ),
        .D(\upsize_buf_reg[7][7]_0 [7]),
        .Q(din[63]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \xfer_cnt[0]_i_1__0 
       (.I0(\xfer_cnt_reg_n_0_[0] ),
        .O(\xfer_cnt[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \xfer_cnt[1]_i_1__0 
       (.I0(\xfer_cnt_reg_n_0_[0] ),
        .I1(\xfer_cnt_reg_n_0_[1] ),
        .O(\xfer_cnt[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \xfer_cnt[2]_i_1__0 
       (.I0(\xfer_cnt_reg_n_0_[2] ),
        .I1(\xfer_cnt_reg_n_0_[1] ),
        .I2(\xfer_cnt_reg_n_0_[0] ),
        .O(\xfer_cnt[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \xfer_cnt[3]_i_1__0 
       (.I0(\xfer_cnt_reg_n_0_[3] ),
        .I1(\xfer_cnt_reg_n_0_[0] ),
        .I2(\xfer_cnt_reg_n_0_[1] ),
        .I3(\xfer_cnt_reg_n_0_[2] ),
        .O(\xfer_cnt[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT4 #(
    .INIT(16'hF00E)) 
    \xfer_cnt[4]_i_1__0 
       (.I0(\xfer_cnt_reg_n_0_[5] ),
        .I1(\xfer_cnt_reg_n_0_[6] ),
        .I2(\xfer_cnt_reg[3]_0 ),
        .I3(\xfer_cnt_reg_n_0_[4] ),
        .O(\xfer_cnt[4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \xfer_cnt[5]_i_1__0 
       (.I0(\xfer_cnt_reg_n_0_[5] ),
        .I1(\xfer_cnt_reg_n_0_[3] ),
        .I2(\xfer_cnt_reg_n_0_[0] ),
        .I3(\xfer_cnt_reg_n_0_[1] ),
        .I4(\xfer_cnt_reg_n_0_[2] ),
        .I5(\xfer_cnt_reg_n_0_[4] ),
        .O(\xfer_cnt[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \xfer_cnt[6]_i_2__0 
       (.I0(\xfer_cnt_reg_n_0_[6] ),
        .I1(\xfer_cnt_reg_n_0_[4] ),
        .I2(\xfer_cnt_reg[3]_0 ),
        .I3(\xfer_cnt_reg_n_0_[5] ),
        .O(\xfer_cnt[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \xfer_cnt[6]_i_4__0 
       (.I0(\xfer_cnt_reg_n_0_[3] ),
        .I1(\xfer_cnt_reg_n_0_[0] ),
        .I2(\xfer_cnt_reg_n_0_[1] ),
        .I3(\xfer_cnt_reg_n_0_[2] ),
        .O(\xfer_cnt_reg[3]_0 ));
  FDRE \xfer_cnt_reg[0] 
       (.C(m_axi_osc2_aclk),
        .CE(E),
        .D(\xfer_cnt[0]_i_1__0_n_0 ),
        .Q(\xfer_cnt_reg_n_0_[0] ),
        .R(\xfer_cnt_reg[6]_1 ));
  FDRE \xfer_cnt_reg[1] 
       (.C(m_axi_osc2_aclk),
        .CE(E),
        .D(\xfer_cnt[1]_i_1__0_n_0 ),
        .Q(\xfer_cnt_reg_n_0_[1] ),
        .R(\xfer_cnt_reg[6]_1 ));
  FDRE \xfer_cnt_reg[2] 
       (.C(m_axi_osc2_aclk),
        .CE(E),
        .D(\xfer_cnt[2]_i_1__0_n_0 ),
        .Q(\xfer_cnt_reg_n_0_[2] ),
        .R(\xfer_cnt_reg[6]_1 ));
  FDRE \xfer_cnt_reg[3] 
       (.C(m_axi_osc2_aclk),
        .CE(E),
        .D(\xfer_cnt[3]_i_1__0_n_0 ),
        .Q(\xfer_cnt_reg_n_0_[3] ),
        .R(\xfer_cnt_reg[6]_1 ));
  FDRE \xfer_cnt_reg[4] 
       (.C(m_axi_osc2_aclk),
        .CE(E),
        .D(\xfer_cnt[4]_i_1__0_n_0 ),
        .Q(\xfer_cnt_reg_n_0_[4] ),
        .R(\xfer_cnt_reg[6]_1 ));
  FDRE \xfer_cnt_reg[5] 
       (.C(m_axi_osc2_aclk),
        .CE(E),
        .D(\xfer_cnt[5]_i_1__0_n_0 ),
        .Q(\xfer_cnt_reg_n_0_[5] ),
        .R(\xfer_cnt_reg[6]_1 ));
  FDRE \xfer_cnt_reg[6] 
       (.C(m_axi_osc2_aclk),
        .CE(E),
        .D(\xfer_cnt[6]_i_2__0_n_0 ),
        .Q(\xfer_cnt_reg_n_0_[6] ),
        .R(\xfer_cnt_reg[6]_1 ));
endmodule

(* ORIG_REF_NAME = "rp_dma_s2mm_upsize" *) 
module system_rp_oscilloscope_0_rp_dma_s2mm_upsize_21
   (E,
    \xfer_cnt_reg[3]_0 ,
    \mux_sel_reg[1]_0 ,
    wr_en,
    m_axis_tvalid_reg_0,
    \mux_sel_reg[2]_0 ,
    \mux_sel_reg[2]_1 ,
    \mux_sel_reg[2]_2 ,
    \mux_sel_reg[2]_3 ,
    \mux_sel_reg[2]_4 ,
    \mux_sel_reg[2]_5 ,
    \mux_sel_reg[2]_6 ,
    \mux_sel_reg[2]_7 ,
    m_axis_tvalid_reg_1,
    \xfer_cnt_reg[6]_0 ,
    \mux_sel_reg[0]_0 ,
    din,
    tlast_reg_0,
    Q,
    m_axis_tvalid_reg_2,
    m_axi_osc1_aclk,
    req_we_reg_0,
    \gic0.gc0.count_reg[3] ,
    tlast_reg_1,
    \mux_sel_reg[2]_8 ,
    acq_tdata,
    \xfer_cnt_reg[6]_1 ,
    acq_tlast,
    \upsize_buf_reg[0][7]_0 ,
    \upsize_buf_reg[7][7]_0 ,
    \upsize_buf_reg[2][7]_0 );
  output [0:0]E;
  output \xfer_cnt_reg[3]_0 ;
  output \mux_sel_reg[1]_0 ;
  output wr_en;
  output m_axis_tvalid_reg_0;
  output \mux_sel_reg[2]_0 ;
  output \mux_sel_reg[2]_1 ;
  output \mux_sel_reg[2]_2 ;
  output \mux_sel_reg[2]_3 ;
  output \mux_sel_reg[2]_4 ;
  output \mux_sel_reg[2]_5 ;
  output \mux_sel_reg[2]_6 ;
  output \mux_sel_reg[2]_7 ;
  output m_axis_tvalid_reg_1;
  output \xfer_cnt_reg[6]_0 ;
  output \mux_sel_reg[0]_0 ;
  output [63:0]din;
  output [0:0]tlast_reg_0;
  output [7:0]Q;
  input m_axis_tvalid_reg_2;
  input m_axi_osc1_aclk;
  input req_we_reg_0;
  input \gic0.gc0.count_reg[3] ;
  input tlast_reg_1;
  input \mux_sel_reg[2]_8 ;
  input [15:0]acq_tdata;
  input \xfer_cnt_reg[6]_1 ;
  input acq_tlast;
  input [7:0]\upsize_buf_reg[0][7]_0 ;
  input [7:0]\upsize_buf_reg[7][7]_0 ;
  input [7:0]\upsize_buf_reg[2][7]_0 ;

  wire [0:0]E;
  wire [7:0]Q;
  wire [15:0]acq_tdata;
  wire acq_tlast;
  wire [63:0]din;
  wire \gic0.gc0.count_reg[3] ;
  wire m_axi_osc1_aclk;
  wire m_axis_tvalid_reg_0;
  wire m_axis_tvalid_reg_1;
  wire m_axis_tvalid_reg_2;
  wire \mux_sel[0]_i_1_n_0 ;
  wire \mux_sel[1]_i_1_n_0 ;
  wire \mux_sel[2]_i_1_n_0 ;
  wire [2:2]mux_sel_reg;
  wire \mux_sel_reg[0]_0 ;
  wire \mux_sel_reg[1]_0 ;
  wire \mux_sel_reg[2]_0 ;
  wire \mux_sel_reg[2]_1 ;
  wire \mux_sel_reg[2]_2 ;
  wire \mux_sel_reg[2]_3 ;
  wire \mux_sel_reg[2]_4 ;
  wire \mux_sel_reg[2]_5 ;
  wire \mux_sel_reg[2]_6 ;
  wire \mux_sel_reg[2]_7 ;
  wire \mux_sel_reg[2]_8 ;
  wire \req_data[4]_i_1_n_0 ;
  wire req_we;
  wire req_we_reg_0;
  wire tlast_i_1_n_0;
  wire [0:0]tlast_reg_0;
  wire tlast_reg_1;
  wire \upsize_buf[0][7]_i_1_n_0 ;
  wire \upsize_buf[1][0]_i_1_n_0 ;
  wire \upsize_buf[1][1]_i_1_n_0 ;
  wire \upsize_buf[1][2]_i_1_n_0 ;
  wire \upsize_buf[1][3]_i_1_n_0 ;
  wire \upsize_buf[1][4]_i_1_n_0 ;
  wire \upsize_buf[1][5]_i_1_n_0 ;
  wire \upsize_buf[1][6]_i_1_n_0 ;
  wire \upsize_buf[1][7]_i_2_n_0 ;
  wire \upsize_buf[3][0]_i_1_n_0 ;
  wire \upsize_buf[3][1]_i_1_n_0 ;
  wire \upsize_buf[3][2]_i_1_n_0 ;
  wire \upsize_buf[3][3]_i_1_n_0 ;
  wire \upsize_buf[3][4]_i_1_n_0 ;
  wire \upsize_buf[3][5]_i_1_n_0 ;
  wire \upsize_buf[3][6]_i_1_n_0 ;
  wire \upsize_buf[3][7]_i_2_n_0 ;
  wire \upsize_buf[3][7]_i_3_n_0 ;
  wire \upsize_buf[4][0]_i_1_n_0 ;
  wire \upsize_buf[4][1]_i_1_n_0 ;
  wire \upsize_buf[4][2]_i_1_n_0 ;
  wire \upsize_buf[4][3]_i_1_n_0 ;
  wire \upsize_buf[4][4]_i_1_n_0 ;
  wire \upsize_buf[4][5]_i_1_n_0 ;
  wire \upsize_buf[4][6]_i_1_n_0 ;
  wire \upsize_buf[4][7]_i_2_n_0 ;
  wire \upsize_buf[4][7]_i_3_n_0 ;
  wire \upsize_buf[5][0]_i_1_n_0 ;
  wire \upsize_buf[5][1]_i_1_n_0 ;
  wire \upsize_buf[5][2]_i_1_n_0 ;
  wire \upsize_buf[5][3]_i_1_n_0 ;
  wire \upsize_buf[5][4]_i_1_n_0 ;
  wire \upsize_buf[5][5]_i_1_n_0 ;
  wire \upsize_buf[5][6]_i_1_n_0 ;
  wire \upsize_buf[5][7]_i_2_n_0 ;
  wire \upsize_buf[5][7]_i_3_n_0 ;
  wire \upsize_buf[6][0]_i_1_n_0 ;
  wire \upsize_buf[6][1]_i_1_n_0 ;
  wire \upsize_buf[6][2]_i_1_n_0 ;
  wire \upsize_buf[6][3]_i_1_n_0 ;
  wire \upsize_buf[6][4]_i_1_n_0 ;
  wire \upsize_buf[6][5]_i_1_n_0 ;
  wire \upsize_buf[6][6]_i_1_n_0 ;
  wire \upsize_buf[6][7]_i_2_n_0 ;
  wire \upsize_buf[6][7]_i_3_n_0 ;
  wire \upsize_buf[7][0]_i_3_n_0 ;
  wire \upsize_buf[7][0]_i_4_n_0 ;
  wire \upsize_buf[7][1]_i_3_n_0 ;
  wire \upsize_buf[7][1]_i_4_n_0 ;
  wire \upsize_buf[7][2]_i_3_n_0 ;
  wire \upsize_buf[7][2]_i_4_n_0 ;
  wire \upsize_buf[7][3]_i_3_n_0 ;
  wire \upsize_buf[7][3]_i_4_n_0 ;
  wire \upsize_buf[7][4]_i_3_n_0 ;
  wire \upsize_buf[7][4]_i_4_n_0 ;
  wire \upsize_buf[7][5]_i_3_n_0 ;
  wire \upsize_buf[7][5]_i_4_n_0 ;
  wire \upsize_buf[7][6]_i_3_n_0 ;
  wire \upsize_buf[7][6]_i_4_n_0 ;
  wire \upsize_buf[7][7]_i_5_n_0 ;
  wire \upsize_buf[7][7]_i_6_n_0 ;
  wire [7:0]\upsize_buf_reg[0][7]_0 ;
  wire \upsize_buf_reg[1]_7 ;
  wire [7:0]\upsize_buf_reg[2][7]_0 ;
  wire \upsize_buf_reg[2]_6 ;
  wire \upsize_buf_reg[3]_10 ;
  wire \upsize_buf_reg[4]_5 ;
  wire \upsize_buf_reg[5]_11 ;
  wire \upsize_buf_reg[6]_9 ;
  wire [7:0]\upsize_buf_reg[7][7]_0 ;
  wire \upsize_buf_reg[7]_8 ;
  wire [1:0]upsize_lvl;
  wire wr_en;
  wire \xfer_cnt[0]_i_1_n_0 ;
  wire \xfer_cnt[1]_i_1_n_0 ;
  wire \xfer_cnt[2]_i_1_n_0 ;
  wire \xfer_cnt[3]_i_1_n_0 ;
  wire \xfer_cnt[4]_i_1_n_0 ;
  wire \xfer_cnt[5]_i_1_n_0 ;
  wire \xfer_cnt[6]_i_2_n_0 ;
  wire \xfer_cnt_reg[3]_0 ;
  wire \xfer_cnt_reg[6]_0 ;
  wire \xfer_cnt_reg[6]_1 ;
  wire \xfer_cnt_reg_n_0_[0] ;
  wire \xfer_cnt_reg_n_0_[1] ;
  wire \xfer_cnt_reg_n_0_[2] ;
  wire \xfer_cnt_reg_n_0_[3] ;
  wire \xfer_cnt_reg_n_0_[4] ;
  wire \xfer_cnt_reg_n_0_[5] ;
  wire \xfer_cnt_reg_n_0_[6] ;

  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h2)) 
    U_fifo_axi_data_i_1
       (.I0(E),
        .I1(\gic0.gc0.count_reg[3] ),
        .O(m_axis_tvalid_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h2)) 
    U_fifo_axi_req_i_1
       (.I0(req_we),
        .I1(\gic0.gc0.count_reg[3] ),
        .O(wr_en));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT5 #(
    .INIT(32'h8A000000)) 
    m_axis_tvalid_i_2
       (.I0(tlast_reg_1),
        .I1(upsize_lvl[0]),
        .I2(\mux_sel_reg[2]_8 ),
        .I3(upsize_lvl[1]),
        .I4(mux_sel_reg),
        .O(m_axis_tvalid_reg_0));
  FDRE m_axis_tvalid_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(m_axis_tvalid_reg_2),
        .Q(E),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h1410145014501450)) 
    \mux_sel[0]_i_1 
       (.I0(\xfer_cnt_reg[6]_1 ),
        .I1(tlast_reg_1),
        .I2(upsize_lvl[0]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(upsize_lvl[1]),
        .I5(mux_sel_reg),
        .O(\mux_sel[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h15114044)) 
    \mux_sel[1]_i_1 
       (.I0(\xfer_cnt_reg[6]_1 ),
        .I1(tlast_reg_1),
        .I2(upsize_lvl[0]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(upsize_lvl[1]),
        .O(\mux_sel[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1511555540440000)) 
    \mux_sel[2]_i_1 
       (.I0(\xfer_cnt_reg[6]_1 ),
        .I1(tlast_reg_1),
        .I2(upsize_lvl[0]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(upsize_lvl[1]),
        .I5(mux_sel_reg),
        .O(\mux_sel[2]_i_1_n_0 ));
  FDRE \mux_sel_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\mux_sel[0]_i_1_n_0 ),
        .Q(upsize_lvl[0]),
        .R(1'b0));
  FDRE \mux_sel_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\mux_sel[1]_i_1_n_0 ),
        .Q(upsize_lvl[1]),
        .R(1'b0));
  FDRE \mux_sel_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\mux_sel[2]_i_1_n_0 ),
        .Q(mux_sel_reg),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \req_data[4]_i_1 
       (.I0(\xfer_cnt_reg_n_0_[3] ),
        .I1(\xfer_cnt_reg_n_0_[0] ),
        .I2(\xfer_cnt_reg_n_0_[1] ),
        .I3(\xfer_cnt_reg_n_0_[2] ),
        .I4(\xfer_cnt_reg_n_0_[4] ),
        .O(\req_data[4]_i_1_n_0 ));
  FDRE \req_data_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\xfer_cnt[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \req_data_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\xfer_cnt[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \req_data_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\xfer_cnt[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \req_data_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\xfer_cnt[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \req_data_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\req_data[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \req_data_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\xfer_cnt[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \req_data_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(\xfer_cnt[6]_i_2_n_0 ),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \req_data_reg[7] 
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(tlast_reg_0),
        .Q(Q[7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h01)) 
    req_we_i_2
       (.I0(\xfer_cnt_reg_n_0_[6] ),
        .I1(\xfer_cnt_reg_n_0_[4] ),
        .I2(\xfer_cnt_reg_n_0_[5] ),
        .O(\xfer_cnt_reg[6]_0 ));
  FDRE req_we_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(req_we_reg_0),
        .Q(req_we),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h00EA)) 
    tlast_i_1
       (.I0(tlast_reg_0),
        .I1(tlast_reg_1),
        .I2(acq_tlast),
        .I3(\xfer_cnt_reg[6]_1 ),
        .O(tlast_i_1_n_0));
  FDRE tlast_reg
       (.C(m_axi_osc1_aclk),
        .CE(1'b1),
        .D(tlast_i_1_n_0),
        .Q(tlast_reg_0),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h01)) 
    \upsize_buf[0][7]_i_1 
       (.I0(mux_sel_reg),
        .I1(upsize_lvl[1]),
        .I2(upsize_lvl[0]),
        .O(\upsize_buf[0][7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][0]_i_1 
       (.I0(\mux_sel_reg[2]_7 ),
        .I1(\upsize_buf[0][7]_i_1_n_0 ),
        .I2(acq_tdata[8]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[0]),
        .O(\upsize_buf[1][0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][1]_i_1 
       (.I0(\mux_sel_reg[2]_6 ),
        .I1(\upsize_buf[0][7]_i_1_n_0 ),
        .I2(acq_tdata[9]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[1]),
        .O(\upsize_buf[1][1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][2]_i_1 
       (.I0(\mux_sel_reg[2]_5 ),
        .I1(\upsize_buf[0][7]_i_1_n_0 ),
        .I2(acq_tdata[10]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[2]),
        .O(\upsize_buf[1][2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][3]_i_1 
       (.I0(\mux_sel_reg[2]_4 ),
        .I1(\upsize_buf[0][7]_i_1_n_0 ),
        .I2(acq_tdata[11]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[3]),
        .O(\upsize_buf[1][3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][4]_i_1 
       (.I0(\mux_sel_reg[2]_3 ),
        .I1(\upsize_buf[0][7]_i_1_n_0 ),
        .I2(acq_tdata[12]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[4]),
        .O(\upsize_buf[1][4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][5]_i_1 
       (.I0(\mux_sel_reg[2]_2 ),
        .I1(\upsize_buf[0][7]_i_1_n_0 ),
        .I2(acq_tdata[13]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[5]),
        .O(\upsize_buf[1][5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][6]_i_1 
       (.I0(\mux_sel_reg[2]_1 ),
        .I1(\upsize_buf[0][7]_i_1_n_0 ),
        .I2(acq_tdata[14]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[6]),
        .O(\upsize_buf[1][6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \upsize_buf[1][7]_i_1 
       (.I0(upsize_lvl[1]),
        .I1(mux_sel_reg),
        .O(\upsize_buf_reg[1]_7 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[1][7]_i_2 
       (.I0(\mux_sel_reg[2]_0 ),
        .I1(\upsize_buf[0][7]_i_1_n_0 ),
        .I2(acq_tdata[15]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[7]),
        .O(\upsize_buf[1][7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h12)) 
    \upsize_buf[2][7]_i_1 
       (.I0(upsize_lvl[1]),
        .I1(mux_sel_reg),
        .I2(upsize_lvl[0]),
        .O(\upsize_buf_reg[2]_6 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    \upsize_buf[2][7]_i_3 
       (.I0(upsize_lvl[0]),
        .I1(mux_sel_reg),
        .I2(upsize_lvl[1]),
        .O(\mux_sel_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][0]_i_1 
       (.I0(\mux_sel_reg[2]_7 ),
        .I1(\upsize_buf[3][7]_i_3_n_0 ),
        .I2(acq_tdata[8]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[0]),
        .O(\upsize_buf[3][0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][1]_i_1 
       (.I0(\mux_sel_reg[2]_6 ),
        .I1(\upsize_buf[3][7]_i_3_n_0 ),
        .I2(acq_tdata[9]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[1]),
        .O(\upsize_buf[3][1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][2]_i_1 
       (.I0(\mux_sel_reg[2]_5 ),
        .I1(\upsize_buf[3][7]_i_3_n_0 ),
        .I2(acq_tdata[10]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[2]),
        .O(\upsize_buf[3][2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][3]_i_1 
       (.I0(\mux_sel_reg[2]_4 ),
        .I1(\upsize_buf[3][7]_i_3_n_0 ),
        .I2(acq_tdata[11]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[3]),
        .O(\upsize_buf[3][3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][4]_i_1 
       (.I0(\mux_sel_reg[2]_3 ),
        .I1(\upsize_buf[3][7]_i_3_n_0 ),
        .I2(acq_tdata[12]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[4]),
        .O(\upsize_buf[3][4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][5]_i_1 
       (.I0(\mux_sel_reg[2]_2 ),
        .I1(\upsize_buf[3][7]_i_3_n_0 ),
        .I2(acq_tdata[13]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[5]),
        .O(\upsize_buf[3][5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][6]_i_1 
       (.I0(\mux_sel_reg[2]_1 ),
        .I1(\upsize_buf[3][7]_i_3_n_0 ),
        .I2(acq_tdata[14]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[6]),
        .O(\upsize_buf[3][6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \upsize_buf[3][7]_i_1 
       (.I0(upsize_lvl[1]),
        .I1(mux_sel_reg),
        .O(\upsize_buf_reg[3]_10 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[3][7]_i_2 
       (.I0(\mux_sel_reg[2]_0 ),
        .I1(\upsize_buf[3][7]_i_3_n_0 ),
        .I2(acq_tdata[15]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[7]),
        .O(\upsize_buf[3][7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \upsize_buf[3][7]_i_3 
       (.I0(mux_sel_reg),
        .I1(upsize_lvl[1]),
        .I2(upsize_lvl[0]),
        .O(\upsize_buf[3][7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][0]_i_1 
       (.I0(\mux_sel_reg[2]_7 ),
        .I1(\upsize_buf[4][7]_i_3_n_0 ),
        .I2(acq_tdata[8]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[0]),
        .O(\upsize_buf[4][0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][1]_i_1 
       (.I0(\mux_sel_reg[2]_6 ),
        .I1(\upsize_buf[4][7]_i_3_n_0 ),
        .I2(acq_tdata[9]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[1]),
        .O(\upsize_buf[4][1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][2]_i_1 
       (.I0(\mux_sel_reg[2]_5 ),
        .I1(\upsize_buf[4][7]_i_3_n_0 ),
        .I2(acq_tdata[10]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[2]),
        .O(\upsize_buf[4][2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][3]_i_1 
       (.I0(\mux_sel_reg[2]_4 ),
        .I1(\upsize_buf[4][7]_i_3_n_0 ),
        .I2(acq_tdata[11]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[3]),
        .O(\upsize_buf[4][3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][4]_i_1 
       (.I0(\mux_sel_reg[2]_3 ),
        .I1(\upsize_buf[4][7]_i_3_n_0 ),
        .I2(acq_tdata[12]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[4]),
        .O(\upsize_buf[4][4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][5]_i_1 
       (.I0(\mux_sel_reg[2]_2 ),
        .I1(\upsize_buf[4][7]_i_3_n_0 ),
        .I2(acq_tdata[13]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[5]),
        .O(\upsize_buf[4][5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][6]_i_1 
       (.I0(\mux_sel_reg[2]_1 ),
        .I1(\upsize_buf[4][7]_i_3_n_0 ),
        .I2(acq_tdata[14]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[6]),
        .O(\upsize_buf[4][6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h18)) 
    \upsize_buf[4][7]_i_1 
       (.I0(upsize_lvl[0]),
        .I1(upsize_lvl[1]),
        .I2(mux_sel_reg),
        .O(\upsize_buf_reg[4]_5 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[4][7]_i_2 
       (.I0(\mux_sel_reg[2]_0 ),
        .I1(\upsize_buf[4][7]_i_3_n_0 ),
        .I2(acq_tdata[15]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[7]),
        .O(\upsize_buf[4][7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \upsize_buf[4][7]_i_3 
       (.I0(mux_sel_reg),
        .I1(upsize_lvl[1]),
        .I2(upsize_lvl[0]),
        .O(\upsize_buf[4][7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][0]_i_1 
       (.I0(\mux_sel_reg[2]_7 ),
        .I1(\upsize_buf[5][7]_i_3_n_0 ),
        .I2(acq_tdata[8]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[0]),
        .O(\upsize_buf[5][0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][1]_i_1 
       (.I0(\mux_sel_reg[2]_6 ),
        .I1(\upsize_buf[5][7]_i_3_n_0 ),
        .I2(acq_tdata[9]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[1]),
        .O(\upsize_buf[5][1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][2]_i_1 
       (.I0(\mux_sel_reg[2]_5 ),
        .I1(\upsize_buf[5][7]_i_3_n_0 ),
        .I2(acq_tdata[10]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[2]),
        .O(\upsize_buf[5][2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][3]_i_1 
       (.I0(\mux_sel_reg[2]_4 ),
        .I1(\upsize_buf[5][7]_i_3_n_0 ),
        .I2(acq_tdata[11]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[3]),
        .O(\upsize_buf[5][3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][4]_i_1 
       (.I0(\mux_sel_reg[2]_3 ),
        .I1(\upsize_buf[5][7]_i_3_n_0 ),
        .I2(acq_tdata[12]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[4]),
        .O(\upsize_buf[5][4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][5]_i_1 
       (.I0(\mux_sel_reg[2]_2 ),
        .I1(\upsize_buf[5][7]_i_3_n_0 ),
        .I2(acq_tdata[13]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[5]),
        .O(\upsize_buf[5][5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][6]_i_1 
       (.I0(\mux_sel_reg[2]_1 ),
        .I1(\upsize_buf[5][7]_i_3_n_0 ),
        .I2(acq_tdata[14]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[6]),
        .O(\upsize_buf[5][6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h4)) 
    \upsize_buf[5][7]_i_1 
       (.I0(upsize_lvl[1]),
        .I1(mux_sel_reg),
        .O(\upsize_buf_reg[5]_11 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[5][7]_i_2 
       (.I0(\mux_sel_reg[2]_0 ),
        .I1(\upsize_buf[5][7]_i_3_n_0 ),
        .I2(acq_tdata[15]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[7]),
        .O(\upsize_buf[5][7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \upsize_buf[5][7]_i_3 
       (.I0(mux_sel_reg),
        .I1(upsize_lvl[1]),
        .I2(upsize_lvl[0]),
        .O(\upsize_buf[5][7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][0]_i_1 
       (.I0(\mux_sel_reg[2]_7 ),
        .I1(\upsize_buf[6][7]_i_3_n_0 ),
        .I2(acq_tdata[8]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[0]),
        .O(\upsize_buf[6][0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][1]_i_1 
       (.I0(\mux_sel_reg[2]_6 ),
        .I1(\upsize_buf[6][7]_i_3_n_0 ),
        .I2(acq_tdata[9]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[1]),
        .O(\upsize_buf[6][1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][2]_i_1 
       (.I0(\mux_sel_reg[2]_5 ),
        .I1(\upsize_buf[6][7]_i_3_n_0 ),
        .I2(acq_tdata[10]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[2]),
        .O(\upsize_buf[6][2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][3]_i_1 
       (.I0(\mux_sel_reg[2]_4 ),
        .I1(\upsize_buf[6][7]_i_3_n_0 ),
        .I2(acq_tdata[11]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[3]),
        .O(\upsize_buf[6][3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][4]_i_1 
       (.I0(\mux_sel_reg[2]_3 ),
        .I1(\upsize_buf[6][7]_i_3_n_0 ),
        .I2(acq_tdata[12]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[4]),
        .O(\upsize_buf[6][4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][5]_i_1 
       (.I0(\mux_sel_reg[2]_2 ),
        .I1(\upsize_buf[6][7]_i_3_n_0 ),
        .I2(acq_tdata[13]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[5]),
        .O(\upsize_buf[6][5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][6]_i_1 
       (.I0(\mux_sel_reg[2]_1 ),
        .I1(\upsize_buf[6][7]_i_3_n_0 ),
        .I2(acq_tdata[14]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[6]),
        .O(\upsize_buf[6][6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h28)) 
    \upsize_buf[6][7]_i_1 
       (.I0(mux_sel_reg),
        .I1(upsize_lvl[0]),
        .I2(upsize_lvl[1]),
        .O(\upsize_buf_reg[6]_9 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \upsize_buf[6][7]_i_2 
       (.I0(\mux_sel_reg[2]_0 ),
        .I1(\upsize_buf[6][7]_i_3_n_0 ),
        .I2(acq_tdata[15]),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[7]),
        .O(\upsize_buf[6][7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \upsize_buf[6][7]_i_3 
       (.I0(mux_sel_reg),
        .I1(upsize_lvl[0]),
        .I2(upsize_lvl[1]),
        .O(\upsize_buf[6][7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][0]_i_2 
       (.I0(\upsize_buf[7][0]_i_3_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][0]_i_4_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[8]),
        .O(\mux_sel_reg[2]_7 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][0]_i_3 
       (.I0(din[0]),
        .I1(din[56]),
        .I2(upsize_lvl[1]),
        .I3(din[48]),
        .I4(upsize_lvl[0]),
        .I5(din[40]),
        .O(\upsize_buf[7][0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][0]_i_4 
       (.I0(din[32]),
        .I1(din[24]),
        .I2(upsize_lvl[1]),
        .I3(din[16]),
        .I4(upsize_lvl[0]),
        .I5(din[8]),
        .O(\upsize_buf[7][0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][1]_i_2 
       (.I0(\upsize_buf[7][1]_i_3_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][1]_i_4_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[9]),
        .O(\mux_sel_reg[2]_6 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][1]_i_3 
       (.I0(din[1]),
        .I1(din[57]),
        .I2(upsize_lvl[1]),
        .I3(din[49]),
        .I4(upsize_lvl[0]),
        .I5(din[41]),
        .O(\upsize_buf[7][1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][1]_i_4 
       (.I0(din[33]),
        .I1(din[25]),
        .I2(upsize_lvl[1]),
        .I3(din[17]),
        .I4(upsize_lvl[0]),
        .I5(din[9]),
        .O(\upsize_buf[7][1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][2]_i_2 
       (.I0(\upsize_buf[7][2]_i_3_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][2]_i_4_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[10]),
        .O(\mux_sel_reg[2]_5 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][2]_i_3 
       (.I0(din[2]),
        .I1(din[58]),
        .I2(upsize_lvl[1]),
        .I3(din[50]),
        .I4(upsize_lvl[0]),
        .I5(din[42]),
        .O(\upsize_buf[7][2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][2]_i_4 
       (.I0(din[34]),
        .I1(din[26]),
        .I2(upsize_lvl[1]),
        .I3(din[18]),
        .I4(upsize_lvl[0]),
        .I5(din[10]),
        .O(\upsize_buf[7][2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][3]_i_2 
       (.I0(\upsize_buf[7][3]_i_3_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][3]_i_4_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[11]),
        .O(\mux_sel_reg[2]_4 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][3]_i_3 
       (.I0(din[3]),
        .I1(din[59]),
        .I2(upsize_lvl[1]),
        .I3(din[51]),
        .I4(upsize_lvl[0]),
        .I5(din[43]),
        .O(\upsize_buf[7][3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][3]_i_4 
       (.I0(din[35]),
        .I1(din[27]),
        .I2(upsize_lvl[1]),
        .I3(din[19]),
        .I4(upsize_lvl[0]),
        .I5(din[11]),
        .O(\upsize_buf[7][3]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][4]_i_2 
       (.I0(\upsize_buf[7][4]_i_3_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][4]_i_4_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[12]),
        .O(\mux_sel_reg[2]_3 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][4]_i_3 
       (.I0(din[4]),
        .I1(din[60]),
        .I2(upsize_lvl[1]),
        .I3(din[52]),
        .I4(upsize_lvl[0]),
        .I5(din[44]),
        .O(\upsize_buf[7][4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][4]_i_4 
       (.I0(din[36]),
        .I1(din[28]),
        .I2(upsize_lvl[1]),
        .I3(din[20]),
        .I4(upsize_lvl[0]),
        .I5(din[12]),
        .O(\upsize_buf[7][4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][5]_i_2 
       (.I0(\upsize_buf[7][5]_i_3_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][5]_i_4_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[13]),
        .O(\mux_sel_reg[2]_2 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][5]_i_3 
       (.I0(din[5]),
        .I1(din[61]),
        .I2(upsize_lvl[1]),
        .I3(din[53]),
        .I4(upsize_lvl[0]),
        .I5(din[45]),
        .O(\upsize_buf[7][5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][5]_i_4 
       (.I0(din[37]),
        .I1(din[29]),
        .I2(upsize_lvl[1]),
        .I3(din[21]),
        .I4(upsize_lvl[0]),
        .I5(din[13]),
        .O(\upsize_buf[7][5]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][6]_i_2 
       (.I0(\upsize_buf[7][6]_i_3_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][6]_i_4_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[14]),
        .O(\mux_sel_reg[2]_1 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][6]_i_3 
       (.I0(din[6]),
        .I1(din[62]),
        .I2(upsize_lvl[1]),
        .I3(din[54]),
        .I4(upsize_lvl[0]),
        .I5(din[46]),
        .O(\upsize_buf[7][6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][6]_i_4 
       (.I0(din[38]),
        .I1(din[30]),
        .I2(upsize_lvl[1]),
        .I3(din[22]),
        .I4(upsize_lvl[0]),
        .I5(din[14]),
        .O(\upsize_buf[7][6]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \upsize_buf[7][7]_i_1 
       (.I0(upsize_lvl[1]),
        .I1(mux_sel_reg),
        .O(\upsize_buf_reg[7]_8 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \upsize_buf[7][7]_i_3 
       (.I0(upsize_lvl[1]),
        .I1(upsize_lvl[0]),
        .I2(mux_sel_reg),
        .O(\mux_sel_reg[1]_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \upsize_buf[7][7]_i_4 
       (.I0(\upsize_buf[7][7]_i_5_n_0 ),
        .I1(mux_sel_reg),
        .I2(\upsize_buf[7][7]_i_6_n_0 ),
        .I3(\mux_sel_reg[2]_8 ),
        .I4(acq_tdata[15]),
        .O(\mux_sel_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][7]_i_5 
       (.I0(din[7]),
        .I1(din[63]),
        .I2(upsize_lvl[1]),
        .I3(din[55]),
        .I4(upsize_lvl[0]),
        .I5(din[47]),
        .O(\upsize_buf[7][7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \upsize_buf[7][7]_i_6 
       (.I0(din[39]),
        .I1(din[31]),
        .I2(upsize_lvl[1]),
        .I3(din[23]),
        .I4(upsize_lvl[0]),
        .I5(din[15]),
        .O(\upsize_buf[7][7]_i_6_n_0 ));
  FDRE \upsize_buf_reg[0][0] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf[0][7]_i_1_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [0]),
        .Q(din[0]),
        .R(1'b0));
  FDRE \upsize_buf_reg[0][1] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf[0][7]_i_1_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [1]),
        .Q(din[1]),
        .R(1'b0));
  FDRE \upsize_buf_reg[0][2] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf[0][7]_i_1_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [2]),
        .Q(din[2]),
        .R(1'b0));
  FDRE \upsize_buf_reg[0][3] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf[0][7]_i_1_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [3]),
        .Q(din[3]),
        .R(1'b0));
  FDRE \upsize_buf_reg[0][4] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf[0][7]_i_1_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [4]),
        .Q(din[4]),
        .R(1'b0));
  FDRE \upsize_buf_reg[0][5] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf[0][7]_i_1_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [5]),
        .Q(din[5]),
        .R(1'b0));
  FDRE \upsize_buf_reg[0][6] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf[0][7]_i_1_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [6]),
        .Q(din[6]),
        .R(1'b0));
  FDRE \upsize_buf_reg[0][7] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf[0][7]_i_1_n_0 ),
        .D(\upsize_buf_reg[0][7]_0 [7]),
        .Q(din[7]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][0] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[1]_7 ),
        .D(\upsize_buf[1][0]_i_1_n_0 ),
        .Q(din[8]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][1] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[1]_7 ),
        .D(\upsize_buf[1][1]_i_1_n_0 ),
        .Q(din[9]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][2] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[1]_7 ),
        .D(\upsize_buf[1][2]_i_1_n_0 ),
        .Q(din[10]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][3] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[1]_7 ),
        .D(\upsize_buf[1][3]_i_1_n_0 ),
        .Q(din[11]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][4] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[1]_7 ),
        .D(\upsize_buf[1][4]_i_1_n_0 ),
        .Q(din[12]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][5] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[1]_7 ),
        .D(\upsize_buf[1][5]_i_1_n_0 ),
        .Q(din[13]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][6] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[1]_7 ),
        .D(\upsize_buf[1][6]_i_1_n_0 ),
        .Q(din[14]),
        .R(1'b0));
  FDRE \upsize_buf_reg[1][7] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[1]_7 ),
        .D(\upsize_buf[1][7]_i_2_n_0 ),
        .Q(din[15]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][0] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[2]_6 ),
        .D(\upsize_buf_reg[2][7]_0 [0]),
        .Q(din[16]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][1] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[2]_6 ),
        .D(\upsize_buf_reg[2][7]_0 [1]),
        .Q(din[17]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][2] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[2]_6 ),
        .D(\upsize_buf_reg[2][7]_0 [2]),
        .Q(din[18]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][3] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[2]_6 ),
        .D(\upsize_buf_reg[2][7]_0 [3]),
        .Q(din[19]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][4] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[2]_6 ),
        .D(\upsize_buf_reg[2][7]_0 [4]),
        .Q(din[20]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][5] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[2]_6 ),
        .D(\upsize_buf_reg[2][7]_0 [5]),
        .Q(din[21]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][6] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[2]_6 ),
        .D(\upsize_buf_reg[2][7]_0 [6]),
        .Q(din[22]),
        .R(1'b0));
  FDRE \upsize_buf_reg[2][7] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[2]_6 ),
        .D(\upsize_buf_reg[2][7]_0 [7]),
        .Q(din[23]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][0] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[3]_10 ),
        .D(\upsize_buf[3][0]_i_1_n_0 ),
        .Q(din[24]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][1] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[3]_10 ),
        .D(\upsize_buf[3][1]_i_1_n_0 ),
        .Q(din[25]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][2] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[3]_10 ),
        .D(\upsize_buf[3][2]_i_1_n_0 ),
        .Q(din[26]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][3] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[3]_10 ),
        .D(\upsize_buf[3][3]_i_1_n_0 ),
        .Q(din[27]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][4] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[3]_10 ),
        .D(\upsize_buf[3][4]_i_1_n_0 ),
        .Q(din[28]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][5] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[3]_10 ),
        .D(\upsize_buf[3][5]_i_1_n_0 ),
        .Q(din[29]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][6] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[3]_10 ),
        .D(\upsize_buf[3][6]_i_1_n_0 ),
        .Q(din[30]),
        .R(1'b0));
  FDRE \upsize_buf_reg[3][7] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[3]_10 ),
        .D(\upsize_buf[3][7]_i_2_n_0 ),
        .Q(din[31]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][0] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[4]_5 ),
        .D(\upsize_buf[4][0]_i_1_n_0 ),
        .Q(din[32]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][1] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[4]_5 ),
        .D(\upsize_buf[4][1]_i_1_n_0 ),
        .Q(din[33]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][2] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[4]_5 ),
        .D(\upsize_buf[4][2]_i_1_n_0 ),
        .Q(din[34]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][3] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[4]_5 ),
        .D(\upsize_buf[4][3]_i_1_n_0 ),
        .Q(din[35]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][4] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[4]_5 ),
        .D(\upsize_buf[4][4]_i_1_n_0 ),
        .Q(din[36]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][5] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[4]_5 ),
        .D(\upsize_buf[4][5]_i_1_n_0 ),
        .Q(din[37]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][6] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[4]_5 ),
        .D(\upsize_buf[4][6]_i_1_n_0 ),
        .Q(din[38]),
        .R(1'b0));
  FDRE \upsize_buf_reg[4][7] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[4]_5 ),
        .D(\upsize_buf[4][7]_i_2_n_0 ),
        .Q(din[39]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][0] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[5]_11 ),
        .D(\upsize_buf[5][0]_i_1_n_0 ),
        .Q(din[40]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][1] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[5]_11 ),
        .D(\upsize_buf[5][1]_i_1_n_0 ),
        .Q(din[41]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][2] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[5]_11 ),
        .D(\upsize_buf[5][2]_i_1_n_0 ),
        .Q(din[42]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][3] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[5]_11 ),
        .D(\upsize_buf[5][3]_i_1_n_0 ),
        .Q(din[43]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][4] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[5]_11 ),
        .D(\upsize_buf[5][4]_i_1_n_0 ),
        .Q(din[44]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][5] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[5]_11 ),
        .D(\upsize_buf[5][5]_i_1_n_0 ),
        .Q(din[45]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][6] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[5]_11 ),
        .D(\upsize_buf[5][6]_i_1_n_0 ),
        .Q(din[46]),
        .R(1'b0));
  FDRE \upsize_buf_reg[5][7] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[5]_11 ),
        .D(\upsize_buf[5][7]_i_2_n_0 ),
        .Q(din[47]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][0] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[6]_9 ),
        .D(\upsize_buf[6][0]_i_1_n_0 ),
        .Q(din[48]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][1] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[6]_9 ),
        .D(\upsize_buf[6][1]_i_1_n_0 ),
        .Q(din[49]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][2] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[6]_9 ),
        .D(\upsize_buf[6][2]_i_1_n_0 ),
        .Q(din[50]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][3] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[6]_9 ),
        .D(\upsize_buf[6][3]_i_1_n_0 ),
        .Q(din[51]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][4] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[6]_9 ),
        .D(\upsize_buf[6][4]_i_1_n_0 ),
        .Q(din[52]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][5] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[6]_9 ),
        .D(\upsize_buf[6][5]_i_1_n_0 ),
        .Q(din[53]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][6] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[6]_9 ),
        .D(\upsize_buf[6][6]_i_1_n_0 ),
        .Q(din[54]),
        .R(1'b0));
  FDRE \upsize_buf_reg[6][7] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[6]_9 ),
        .D(\upsize_buf[6][7]_i_2_n_0 ),
        .Q(din[55]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][0] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[7]_8 ),
        .D(\upsize_buf_reg[7][7]_0 [0]),
        .Q(din[56]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][1] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[7]_8 ),
        .D(\upsize_buf_reg[7][7]_0 [1]),
        .Q(din[57]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][2] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[7]_8 ),
        .D(\upsize_buf_reg[7][7]_0 [2]),
        .Q(din[58]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][3] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[7]_8 ),
        .D(\upsize_buf_reg[7][7]_0 [3]),
        .Q(din[59]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][4] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[7]_8 ),
        .D(\upsize_buf_reg[7][7]_0 [4]),
        .Q(din[60]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][5] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[7]_8 ),
        .D(\upsize_buf_reg[7][7]_0 [5]),
        .Q(din[61]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][6] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[7]_8 ),
        .D(\upsize_buf_reg[7][7]_0 [6]),
        .Q(din[62]),
        .R(1'b0));
  FDRE \upsize_buf_reg[7][7] 
       (.C(m_axi_osc1_aclk),
        .CE(\upsize_buf_reg[7]_8 ),
        .D(\upsize_buf_reg[7][7]_0 [7]),
        .Q(din[63]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \xfer_cnt[0]_i_1 
       (.I0(\xfer_cnt_reg_n_0_[0] ),
        .O(\xfer_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \xfer_cnt[1]_i_1 
       (.I0(\xfer_cnt_reg_n_0_[0] ),
        .I1(\xfer_cnt_reg_n_0_[1] ),
        .O(\xfer_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \xfer_cnt[2]_i_1 
       (.I0(\xfer_cnt_reg_n_0_[2] ),
        .I1(\xfer_cnt_reg_n_0_[1] ),
        .I2(\xfer_cnt_reg_n_0_[0] ),
        .O(\xfer_cnt[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \xfer_cnt[3]_i_1 
       (.I0(\xfer_cnt_reg_n_0_[3] ),
        .I1(\xfer_cnt_reg_n_0_[0] ),
        .I2(\xfer_cnt_reg_n_0_[1] ),
        .I3(\xfer_cnt_reg_n_0_[2] ),
        .O(\xfer_cnt[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'hF00E)) 
    \xfer_cnt[4]_i_1 
       (.I0(\xfer_cnt_reg_n_0_[5] ),
        .I1(\xfer_cnt_reg_n_0_[6] ),
        .I2(\xfer_cnt_reg[3]_0 ),
        .I3(\xfer_cnt_reg_n_0_[4] ),
        .O(\xfer_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \xfer_cnt[5]_i_1 
       (.I0(\xfer_cnt_reg_n_0_[5] ),
        .I1(\xfer_cnt_reg_n_0_[3] ),
        .I2(\xfer_cnt_reg_n_0_[0] ),
        .I3(\xfer_cnt_reg_n_0_[1] ),
        .I4(\xfer_cnt_reg_n_0_[2] ),
        .I5(\xfer_cnt_reg_n_0_[4] ),
        .O(\xfer_cnt[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \xfer_cnt[6]_i_2 
       (.I0(\xfer_cnt_reg_n_0_[6] ),
        .I1(\xfer_cnt_reg_n_0_[4] ),
        .I2(\xfer_cnt_reg[3]_0 ),
        .I3(\xfer_cnt_reg_n_0_[5] ),
        .O(\xfer_cnt[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \xfer_cnt[6]_i_4 
       (.I0(\xfer_cnt_reg_n_0_[3] ),
        .I1(\xfer_cnt_reg_n_0_[0] ),
        .I2(\xfer_cnt_reg_n_0_[1] ),
        .I3(\xfer_cnt_reg_n_0_[2] ),
        .O(\xfer_cnt_reg[3]_0 ));
  FDRE \xfer_cnt_reg[0] 
       (.C(m_axi_osc1_aclk),
        .CE(E),
        .D(\xfer_cnt[0]_i_1_n_0 ),
        .Q(\xfer_cnt_reg_n_0_[0] ),
        .R(\xfer_cnt_reg[6]_1 ));
  FDRE \xfer_cnt_reg[1] 
       (.C(m_axi_osc1_aclk),
        .CE(E),
        .D(\xfer_cnt[1]_i_1_n_0 ),
        .Q(\xfer_cnt_reg_n_0_[1] ),
        .R(\xfer_cnt_reg[6]_1 ));
  FDRE \xfer_cnt_reg[2] 
       (.C(m_axi_osc1_aclk),
        .CE(E),
        .D(\xfer_cnt[2]_i_1_n_0 ),
        .Q(\xfer_cnt_reg_n_0_[2] ),
        .R(\xfer_cnt_reg[6]_1 ));
  FDRE \xfer_cnt_reg[3] 
       (.C(m_axi_osc1_aclk),
        .CE(E),
        .D(\xfer_cnt[3]_i_1_n_0 ),
        .Q(\xfer_cnt_reg_n_0_[3] ),
        .R(\xfer_cnt_reg[6]_1 ));
  FDRE \xfer_cnt_reg[4] 
       (.C(m_axi_osc1_aclk),
        .CE(E),
        .D(\xfer_cnt[4]_i_1_n_0 ),
        .Q(\xfer_cnt_reg_n_0_[4] ),
        .R(\xfer_cnt_reg[6]_1 ));
  FDRE \xfer_cnt_reg[5] 
       (.C(m_axi_osc1_aclk),
        .CE(E),
        .D(\xfer_cnt[5]_i_1_n_0 ),
        .Q(\xfer_cnt_reg_n_0_[5] ),
        .R(\xfer_cnt_reg[6]_1 ));
  FDRE \xfer_cnt_reg[6] 
       (.C(m_axi_osc1_aclk),
        .CE(E),
        .D(\xfer_cnt[6]_i_2_n_0 ),
        .Q(\xfer_cnt_reg_n_0_[6] ),
        .R(\xfer_cnt_reg[6]_1 ));
endmodule

(* ORIG_REF_NAME = "rp_oscilloscope" *) 
module system_rp_oscilloscope_0_rp_oscilloscope
   (m_axi_osc1_awvalid,
    trig_out,
    m_axi_awaddr,
    m_axi_osc2_awvalid,
    \req_addr_reg[31] ,
    s_axi_reg_awready,
    s_axi_reg_wready,
    s_axi_reg_bresp,
    s_axi_reg_bvalid,
    s_axi_reg_arready,
    s_axi_reg_rdata,
    s_axi_reg_rresp,
    s_axi_reg_rvalid,
    m_axi_osc1_wdata,
    m_axi_osc1_awlen,
    m_axi_wlast_reg,
    osc1_event_op,
    loopback_sel,
    m_axi_wvalid_reg,
    osc1_trig_op,
    m_axi_osc2_wdata,
    m_axi_osc2_awlen,
    m_axi_wlast_reg_0,
    osc2_event_op,
    m_axi_wvalid_reg_0,
    osc2_trig_op,
    intr,
    m_axi_osc1_aclk,
    m_axi_osc2_aclk,
    m_axi_osc1_aresetn,
    m_axi_osc1_awready,
    m_axi_osc2_aresetn,
    m_axi_osc2_awready,
    s_axi_reg_aclk,
    s_axi_reg_aresetn,
    s_axi_reg_awaddr,
    s_axi_reg_awprot,
    s_axi_reg_awvalid,
    s_axi_reg_wdata,
    s_axi_reg_wstrb,
    s_axi_reg_wvalid,
    s_axi_reg_bready,
    s_axi_reg_araddr,
    s_axi_reg_arprot,
    s_axi_reg_arvalid,
    s_axi_reg_rready,
    m_axi_osc1_wready,
    trig_ip,
    event_ip_reset,
    event_ip_start,
    event_ip_stop,
    event_ip_trig,
    m_axi_osc2_wready,
    adc_data_ch2,
    adc_data_ch1,
    clk);
  output m_axi_osc1_awvalid;
  output trig_out;
  output [31:0]m_axi_awaddr;
  output m_axi_osc2_awvalid;
  output [31:0]\req_addr_reg[31] ;
  output s_axi_reg_awready;
  output s_axi_reg_wready;
  output [1:0]s_axi_reg_bresp;
  output s_axi_reg_bvalid;
  output s_axi_reg_arready;
  output [31:0]s_axi_reg_rdata;
  output [1:0]s_axi_reg_rresp;
  output s_axi_reg_rvalid;
  output [63:0]m_axi_osc1_wdata;
  output [7:0]m_axi_osc1_awlen;
  output m_axi_wlast_reg;
  output [3:0]osc1_event_op;
  output [7:0]loopback_sel;
  output m_axi_wvalid_reg;
  output osc1_trig_op;
  output [63:0]m_axi_osc2_wdata;
  output [7:0]m_axi_osc2_awlen;
  output m_axi_wlast_reg_0;
  output [3:0]osc2_event_op;
  output m_axi_wvalid_reg_0;
  output osc2_trig_op;
  output intr;
  input m_axi_osc1_aclk;
  input m_axi_osc2_aclk;
  input m_axi_osc1_aresetn;
  input m_axi_osc1_awready;
  input m_axi_osc2_aresetn;
  input m_axi_osc2_awready;
  input s_axi_reg_aclk;
  input s_axi_reg_aresetn;
  input [11:0]s_axi_reg_awaddr;
  input [2:0]s_axi_reg_awprot;
  input s_axi_reg_awvalid;
  input [31:0]s_axi_reg_wdata;
  input [3:0]s_axi_reg_wstrb;
  input s_axi_reg_wvalid;
  input s_axi_reg_bready;
  input [11:0]s_axi_reg_araddr;
  input [2:0]s_axi_reg_arprot;
  input s_axi_reg_arvalid;
  input s_axi_reg_rready;
  input m_axi_osc1_wready;
  input [5:0]trig_ip;
  input [4:0]event_ip_reset;
  input [4:0]event_ip_start;
  input [4:0]event_ip_stop;
  input [4:0]event_ip_trig;
  input m_axi_osc2_wready;
  input [13:0]adc_data_ch2;
  input [13:0]adc_data_ch1;
  input clk;

  wire \U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/fifo_empty ;
  wire \U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/fifo_empty_20 ;
  wire \U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/state_cs ;
  wire \U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/state_cs_15 ;
  wire \U_dma_s2mm/U_dma_s2mm_ctrl/bit_start ;
  wire \U_dma_s2mm/U_dma_s2mm_ctrl/dat_ctrl_busy ;
  wire \U_dma_s2mm/U_dma_s2mm_ctrl/dat_ctrl_busy_14 ;
  wire \U_dma_s2mm/U_dma_s2mm_ctrl/fifo_empty ;
  wire \U_dma_s2mm/U_dma_s2mm_ctrl/fifo_empty_21 ;
  wire \U_dma_s2mm/U_dma_s2mm_ctrl/full_immed0 ;
  wire \U_dma_s2mm/U_dma_s2mm_ctrl/full_immed0_18 ;
  wire [2:0]\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs ;
  wire [2:0]\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs_6 ;
  wire \U_dma_s2mm/U_dma_s2mm_upsize/tlast ;
  wire \U_dma_s2mm/U_dma_s2mm_upsize/tlast_0 ;
  wire \U_dma_s2mm/fifo_dis ;
  wire \U_dma_s2mm/fifo_dis_13 ;
  wire \U_dma_s2mm/fifo_rd_re ;
  wire \U_dma_s2mm/fifo_rd_re_19 ;
  wire \U_dma_s2mm/fifo_wr_we ;
  wire \U_dma_s2mm/fifo_wr_we_10 ;
  wire \U_dma_s2mm/first_rst ;
  wire \U_dma_s2mm/first_rst_11 ;
  wire U_osc1_n_102;
  wire U_osc1_n_103;
  wire U_osc1_n_136;
  wire U_osc1_n_169;
  wire U_osc1_n_170;
  wire U_osc1_n_171;
  wire U_osc1_n_172;
  wire U_osc1_n_174;
  wire U_osc1_n_175;
  wire U_osc1_n_176;
  wire U_osc1_n_178;
  wire U_osc1_n_187;
  wire U_osc1_n_189;
  wire U_osc1_n_190;
  wire U_osc1_n_199;
  wire U_osc1_n_2;
  wire U_osc1_n_200;
  wire U_osc1_n_202;
  wire U_osc1_n_203;
  wire U_osc1_n_204;
  wire U_osc1_n_205;
  wire U_osc1_n_206;
  wire U_osc1_n_207;
  wire U_osc1_n_208;
  wire U_osc1_n_209;
  wire U_osc1_n_7;
  wire U_osc1_n_87;
  wire U_osc2_n_122;
  wire U_osc2_n_134;
  wire U_osc2_n_136;
  wire U_osc2_n_137;
  wire U_osc2_n_139;
  wire U_osc2_n_140;
  wire U_osc2_n_144;
  wire U_osc2_n_146;
  wire U_osc2_n_147;
  wire U_osc2_n_148;
  wire U_osc2_n_149;
  wire U_osc2_n_150;
  wire U_osc2_n_151;
  wire U_osc2_n_152;
  wire U_osc2_n_153;
  wire U_osc2_n_154;
  wire U_osc2_n_155;
  wire U_osc2_n_159;
  wire U_osc2_n_2;
  wire U_osc2_n_7;
  wire [2:0]\U_osc_acq/state_cs ;
  wire [2:0]\U_osc_acq/state_cs_7 ;
  wire \U_osc_trigger/trig_detect12_in ;
  wire \U_osc_trigger/trig_detect12_in_3 ;
  wire \U_osc_trigger/trig_detect14_in ;
  wire \U_osc_trigger/trig_detect14_in_1 ;
  wire \U_osc_trigger/trig_detect16_in ;
  wire \U_osc_trigger/trig_detect16_in_2 ;
  wire U_reg_ctrl_i_33_n_0;
  wire U_reg_ctrl_i_34_n_0;
  wire U_reg_ctrl_i_36_n_0;
  wire U_reg_ctrl_i_37_n_0;
  wire U_reg_ctrl_i_38_n_0;
  wire U_reg_ctrl_i_39_n_0;
  wire U_reg_ctrl_i_40_n_0;
  wire U_reg_ctrl_i_41_n_0;
  wire acq_tlast;
  wire acq_tlast_22;
  wire acq_tvalid;
  wire acq_tvalid_23;
  wire [13:0]adc_data_ch1;
  wire [15:2]adc_data_ch1_signed;
  wire \adc_data_ch1_signed[10]_i_1_n_0 ;
  wire \adc_data_ch1_signed[11]_i_1_n_0 ;
  wire \adc_data_ch1_signed[12]_i_1_n_0 ;
  wire \adc_data_ch1_signed[13]_i_1_n_0 ;
  wire \adc_data_ch1_signed[14]_i_1_n_0 ;
  wire \adc_data_ch1_signed[2]_i_1_n_0 ;
  wire \adc_data_ch1_signed[3]_i_1_n_0 ;
  wire \adc_data_ch1_signed[4]_i_1_n_0 ;
  wire \adc_data_ch1_signed[5]_i_1_n_0 ;
  wire \adc_data_ch1_signed[6]_i_1_n_0 ;
  wire \adc_data_ch1_signed[7]_i_1_n_0 ;
  wire \adc_data_ch1_signed[8]_i_1_n_0 ;
  wire \adc_data_ch1_signed[9]_i_1_n_0 ;
  wire [13:0]adc_data_ch2;
  wire [15:2]adc_data_ch2_signed;
  wire \adc_data_ch2_signed[10]_i_1_n_0 ;
  wire \adc_data_ch2_signed[11]_i_1_n_0 ;
  wire \adc_data_ch2_signed[12]_i_1_n_0 ;
  wire \adc_data_ch2_signed[13]_i_1_n_0 ;
  wire \adc_data_ch2_signed[14]_i_1_n_0 ;
  wire \adc_data_ch2_signed[2]_i_1_n_0 ;
  wire \adc_data_ch2_signed[3]_i_1_n_0 ;
  wire \adc_data_ch2_signed[4]_i_1_n_0 ;
  wire \adc_data_ch2_signed[5]_i_1_n_0 ;
  wire \adc_data_ch2_signed[6]_i_1_n_0 ;
  wire \adc_data_ch2_signed[7]_i_1_n_0 ;
  wire \adc_data_ch2_signed[8]_i_1_n_0 ;
  wire \adc_data_ch2_signed[9]_i_1_n_0 ;
  wire buf_sel_ch1;
  wire buf_sel_ch2;
  wire busy_i_1__0_n_0;
  wire busy_i_1_n_0;
  wire cfg_8bit_dat;
  wire cfg_8bit_dat_17;
  wire cfg_8bit_dat_i_1__0_n_0;
  wire cfg_8bit_dat_i_1_n_0;
  wire cfg_avg_en;
  wire cfg_avg_en_8;
  wire cfg_avg_en_i_1__0_n_0;
  wire cfg_avg_en_i_1_n_0;
  wire [9:8]cfg_dma_ctrl_reg;
  wire [9:0]cfg_dma_ctrl_reg_4;
  wire cfg_filt_bypass;
  wire cfg_filt_bypass_25;
  wire cfg_filt_bypass_i_1__0_n_0;
  wire cfg_filt_bypass_i_1_n_0;
  wire cfg_trig_edge;
  wire cfg_trig_edge_9;
  wire cfg_trig_edge_i_1__0_n_0;
  wire cfg_trig_edge_i_1_n_0;
  wire clk;
  wire ctl_trg;
  wire ctl_trg_5;
  wire dec_tvalid;
  wire dec_tvalid_24;
  wire dma_mode;
  wire dma_mode_12;
  wire [4:0]event_ip_reset;
  wire [4:0]event_ip_start;
  wire [4:0]event_ip_stop;
  wire [4:0]event_ip_trig;
  wire external_trig_val;
  wire fifo_dis_i_1__0_n_0;
  wire fifo_dis_i_1_n_0;
  wire first_rst_i_1__0_n_0;
  wire first_rst_i_1_n_0;
  wire intr;
  wire [7:0]loopback_sel;
  wire [31:0]m_axi_awaddr;
  wire m_axi_awvalid_i_1__0_n_0;
  wire m_axi_awvalid_i_1_n_0;
  wire m_axi_osc1_aclk;
  wire m_axi_osc1_aresetn;
  wire [7:0]m_axi_osc1_awlen;
  wire m_axi_osc1_awready;
  wire m_axi_osc1_awvalid;
  wire [63:0]m_axi_osc1_wdata;
  wire m_axi_osc1_wready;
  wire m_axi_osc2_aclk;
  wire m_axi_osc2_aresetn;
  wire [7:0]m_axi_osc2_awlen;
  wire m_axi_osc2_awready;
  wire m_axi_osc2_awvalid;
  wire [63:0]m_axi_osc2_wdata;
  wire m_axi_osc2_wready;
  wire m_axi_wlast_i_1__0_n_0;
  wire m_axi_wlast_i_1_n_0;
  wire m_axi_wlast_reg;
  wire m_axi_wlast_reg_0;
  wire m_axi_wvalid_i_1__0_n_0;
  wire m_axi_wvalid_i_1_n_0;
  wire m_axi_wvalid_reg;
  wire m_axi_wvalid_reg_0;
  wire m_axis_tvalid_i_1__0__0_n_0;
  wire m_axis_tvalid_i_1__1_n_0;
  wire mode_i_1__0_n_0;
  wire mode_i_1_n_0;
  wire [3:0]osc1_event_op;
  wire osc1_trig_op;
  wire osc2_dma_intr;
  wire [3:0]osc2_event_op;
  wire [31:0]osc2_reg_rd_data;
  wire osc2_reg_wr_we;
  wire osc2_trig_op;
  wire [3:3]p_20_in;
  wire [3:3]p_20_in_16;
  wire [7:0]reg_addr;
  wire reg_en;
  wire [31:0]reg_rd_data;
  wire [3:0]reg_we;
  wire [31:0]reg_wr_data;
  wire [31:0]\req_addr_reg[31] ;
  wire req_we_i_1__0_n_0;
  wire req_we_i_1_n_0;
  wire s_axi_reg_aclk;
  wire [11:0]s_axi_reg_araddr;
  wire s_axi_reg_aresetn;
  wire [2:0]s_axi_reg_arprot;
  wire s_axi_reg_arready;
  wire s_axi_reg_arvalid;
  wire [11:0]s_axi_reg_awaddr;
  wire [2:0]s_axi_reg_awprot;
  wire s_axi_reg_awready;
  wire s_axi_reg_awvalid;
  wire s_axi_reg_bready;
  wire [1:0]s_axi_reg_bresp;
  wire s_axi_reg_bvalid;
  wire [31:0]s_axi_reg_rdata;
  wire s_axi_reg_rready;
  wire [1:0]s_axi_reg_rresp;
  wire s_axi_reg_rvalid;
  wire [31:0]s_axi_reg_wdata;
  wire s_axi_reg_wready;
  wire [3:0]s_axi_reg_wstrb;
  wire s_axi_reg_wvalid;
  wire \state_cs[0]_i_1__0_n_0 ;
  wire \state_cs[0]_i_1_n_0 ;
  wire sts_trig_i_1__0_n_0;
  wire sts_trig_i_1_n_0;
  wire trig_detect_i_2__0_n_0;
  wire trig_detect_i_2_n_0;
  wire [5:0]trig_ip;
  wire trig_out;
  wire NLW_U_reg_ctrl_bram_clk_a_UNCONNECTED;
  wire NLW_U_reg_ctrl_bram_rst_a_UNCONNECTED;
  wire [11:8]NLW_U_reg_ctrl_bram_addr_a_UNCONNECTED;

  system_rp_oscilloscope_0_osc_top U_osc1
       (.CO(\U_osc_trigger/trig_detect12_in ),
        .D(reg_wr_data),
        .\FSM_onehot_GEN_NO_RD_CMD_OPT.lite_sm_cs_reg[0] (U_osc1_n_170),
        .Q(adc_data_ch1_signed),
        .acq_tlast(acq_tlast),
        .acq_tvalid(acq_tvalid),
        .bb_mult(U_osc2_n_154),
        .bit_start(\U_dma_s2mm/U_dma_s2mm_ctrl/bit_start ),
        .bram_addr_a(reg_addr),
        .bram_en_a(reg_en),
        .bram_rddata_a(reg_rd_data),
        .bram_we_a(reg_we),
        .buf_sel_ch1(buf_sel_ch1),
        .buf_sel_ch2(buf_sel_ch2),
        .busy_reg(busy_i_1_n_0),
        .cfg_8bit_dat(cfg_8bit_dat),
        .cfg_8bit_dat_reg_0(cfg_8bit_dat_i_1_n_0),
        .cfg_avg_en(cfg_avg_en),
        .cfg_avg_en_reg_0(cfg_avg_en_i_1_n_0),
        .\cfg_calib_offset_reg[0]_0 (U_osc2_n_134),
        .\cfg_dec_rshift[3]_i_2_0 (U_osc2_n_152),
        .cfg_dma_ctrl_reg(cfg_dma_ctrl_reg_4[0]),
        .cfg_filt_bypass(cfg_filt_bypass),
        .cfg_filt_bypass_reg_0(cfg_filt_bypass_i_1_n_0),
        .cfg_trig_edge(cfg_trig_edge),
        .cfg_trig_edge_reg_0(cfg_trig_edge_i_1_n_0),
        .\cfg_trig_high_level_reg[15]_0 (\U_osc_trigger/trig_detect16_in ),
        .ctl_start_r_reg(U_osc1_n_187),
        .ctl_trg(ctl_trg),
        .dat_ctrl_busy(\U_dma_s2mm/U_dma_s2mm_ctrl/dat_ctrl_busy ),
        .dec_tvalid(dec_tvalid),
        .dma_mode(dma_mode),
        .empty(\U_dma_s2mm/U_dma_s2mm_ctrl/fifo_empty ),
        .empty_fwft_i_reg(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/fifo_empty ),
        .event_ip_reset(event_ip_reset),
        .event_ip_start(event_ip_start),
        .event_ip_stop(event_ip_stop),
        .event_ip_trig(event_ip_trig),
        .event_op_reset_i_5__0(U_osc1_n_102),
        .external_trig_val(external_trig_val),
        .fifo_dis(\U_dma_s2mm/fifo_dis ),
        .fifo_dis_reg(fifo_dis_i_1_n_0),
        .fifo_wr_we(\U_dma_s2mm/fifo_wr_we ),
        .first_rst(\U_dma_s2mm/first_rst ),
        .first_rst_reg(first_rst_i_1_n_0),
        .full_immed0(\U_dma_s2mm/U_dma_s2mm_ctrl/full_immed0 ),
        .\goreg_dm.dout_i_reg[1] (U_osc1_n_203),
        .intr(intr),
        .loopback_sel(loopback_sel),
        .m_axi_awvalid_reg(m_axi_awvalid_i_1_n_0),
        .m_axi_osc1_aclk(m_axi_osc1_aclk),
        .m_axi_osc1_aresetn(m_axi_osc1_aresetn),
        .m_axi_osc1_awlen(m_axi_osc1_awlen),
        .m_axi_osc1_awready(m_axi_osc1_awready),
        .m_axi_osc1_awvalid(m_axi_osc1_awvalid),
        .m_axi_osc1_wdata(m_axi_osc1_wdata),
        .m_axi_osc1_wready(m_axi_osc1_wready),
        .m_axi_wlast_reg(m_axi_wlast_reg),
        .m_axi_wlast_reg_0(m_axi_wlast_i_1_n_0),
        .m_axi_wvalid_reg(m_axi_wvalid_reg),
        .m_axi_wvalid_reg_0(m_axi_wvalid_i_1_n_0),
        .\m_axis_tdata_reg[15] (\U_osc_trigger/trig_detect14_in ),
        .m_axis_tvalid_reg(U_osc1_n_200),
        .m_axis_tvalid_reg_0(m_axis_tvalid_i_1__1_n_0),
        .mode_reg(mode_i_1_n_0),
        .next_buf_full_reg(U_osc1_n_87),
        .osc1_event_op(osc1_event_op),
        .osc1_trig_op(osc1_trig_op),
        .osc2_dma_intr(osc2_dma_intr),
        .rd_en(\U_dma_s2mm/fifo_rd_re ),
        .\reg_ctrl_reg[9] (cfg_dma_ctrl_reg),
        .\reg_rd_data_reg[2]_0 (U_osc2_n_155),
        .\req_addr_reg[31] (m_axi_awaddr),
        .req_we_reg(req_we_i_1_n_0),
        .\req_xfer_cnt_reg[0] (U_osc1_n_199),
        .\s_axi_reg_araddr[2] (U_osc1_n_174),
        .\s_axi_reg_araddr[2]_0 (U_osc1_n_190),
        .\s_axi_reg_araddr[2]_1 (U_osc1_n_207),
        .\s_axi_reg_araddr[2]_2 (U_osc1_n_208),
        .\s_axi_reg_araddr[3] (U_osc1_n_178),
        .\s_axi_reg_araddr[4] (U_osc1_n_136),
        .\s_axi_reg_araddr[4]_0 (U_osc1_n_169),
        .\s_axi_reg_araddr[4]_1 (U_osc1_n_171),
        .\s_axi_reg_araddr[4]_2 (U_osc1_n_176),
        .\s_axi_reg_araddr[4]_3 (U_osc1_n_209),
        .\s_axi_reg_araddr[5] (U_osc1_n_204),
        .\s_axi_reg_araddr[6] (U_osc1_n_189),
        .\s_axi_reg_araddr[7] (U_osc1_n_172),
        .\s_axi_reg_araddr[7]_0 (U_osc1_n_175),
        .\s_axi_reg_araddr[7]_1 (U_osc1_n_205),
        .\s_axi_reg_araddr[7]_2 (U_osc1_n_206),
        .\s_axi_reg_rdata[0] (U_reg_ctrl_i_33_n_0),
        .\s_axi_reg_rdata[0]_0 (U_reg_ctrl_i_34_n_0),
        .\s_axi_reg_rdata[31] (osc2_reg_rd_data),
        .state_cs(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/state_cs ),
        .state_cs_0(\U_osc_acq/state_cs ),
        .state_cs_1(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs ),
        .\state_cs_reg[0] (\state_cs[0]_i_1_n_0 ),
        .sts_trig_reg(p_20_in),
        .sts_trig_reg_0(sts_trig_i_1_n_0),
        .tlast_reg(\U_dma_s2mm/U_dma_s2mm_upsize/tlast ),
        .trig_detect_reg(U_osc1_n_2),
        .trig_detect_reg_0(trig_detect_i_2_n_0),
        .trig_ip(trig_ip),
        .trig_out(trig_out),
        .wr_en(U_osc1_n_7),
        .\xfer_cnt_reg[3] (U_osc1_n_103),
        .\xfer_cnt_reg[6] (U_osc1_n_202));
  system_rp_oscilloscope_0_osc_top__parameterized0 U_osc2
       (.CO(\U_osc_trigger/trig_detect12_in_3 ),
        .D(\U_dma_s2mm/U_dma_s2mm_upsize/tlast_0 ),
        .Q(adc_data_ch2_signed),
        .acq_tlast(acq_tlast_22),
        .acq_tvalid(acq_tvalid_23),
        .bit_start(\U_dma_s2mm/U_dma_s2mm_ctrl/bit_start ),
        .bram_addr_a(reg_addr),
        .bram_en_a(reg_en),
        .bram_we_a(reg_we),
        .bram_wrdata_a(reg_wr_data),
        .buf_sel_ch1(buf_sel_ch1),
        .buf_sel_ch2(buf_sel_ch2),
        .busy_reg(busy_i_1__0_n_0),
        .cfg_8bit_dat(cfg_8bit_dat_17),
        .cfg_8bit_dat_reg_0(cfg_8bit_dat_i_1__0_n_0),
        .cfg_avg_en(cfg_avg_en_8),
        .cfg_avg_en_reg_0(cfg_avg_en_i_1__0_n_0),
        .\cfg_dec_factor_reg[0]_0 (U_osc1_n_175),
        .\cfg_dma_dst_addr1_reg[0]_0 (U_osc1_n_176),
        .cfg_filt_bypass(cfg_filt_bypass_25),
        .cfg_filt_bypass_reg_0(cfg_filt_bypass_i_1__0_n_0),
        .cfg_trig_edge(cfg_trig_edge_9),
        .cfg_trig_edge_reg_0(cfg_trig_edge_i_1__0_n_0),
        .\cfg_trig_high_level_reg[15]_0 (\U_osc_trigger/trig_detect16_in_2 ),
        .\cfg_trig_pre_samp_reg[0]_0 (U_osc1_n_102),
        .ctl_start_r_reg(U_osc2_n_140),
        .ctl_trg(ctl_trg_5),
        .dat_ctrl_busy(\U_dma_s2mm/U_dma_s2mm_ctrl/dat_ctrl_busy_14 ),
        .dec_tvalid(dec_tvalid_24),
        .dma_mode(dma_mode_12),
        .empty(\U_dma_s2mm/U_dma_s2mm_ctrl/fifo_empty_21 ),
        .empty_fwft_i_reg(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/fifo_empty_20 ),
        .event_ip_reset(event_ip_reset),
        .event_ip_start(event_ip_start),
        .event_ip_stop(event_ip_stop),
        .event_ip_trig(event_ip_trig),
        .event_op_reset_i_7(U_osc1_n_170),
        .external_trig_val(external_trig_val),
        .fifo_dis(\U_dma_s2mm/fifo_dis_13 ),
        .fifo_dis_reg(fifo_dis_i_1__0_n_0),
        .fifo_wr_we(\U_dma_s2mm/fifo_wr_we_10 ),
        .first_rst(\U_dma_s2mm/first_rst_11 ),
        .first_rst_reg(first_rst_i_1__0_n_0),
        .full_immed0(\U_dma_s2mm/U_dma_s2mm_ctrl/full_immed0_18 ),
        .\goreg_dm.dout_i_reg[1] (U_osc2_n_149),
        .m_axi_awvalid_reg(m_axi_awvalid_i_1__0_n_0),
        .m_axi_osc2_aclk(m_axi_osc2_aclk),
        .m_axi_osc2_aresetn(m_axi_osc2_aresetn),
        .m_axi_osc2_awlen(m_axi_osc2_awlen),
        .m_axi_osc2_awready(m_axi_osc2_awready),
        .m_axi_osc2_awvalid(m_axi_osc2_awvalid),
        .m_axi_osc2_wdata(m_axi_osc2_wdata),
        .m_axi_osc2_wready(m_axi_osc2_wready),
        .m_axi_wlast_reg(m_axi_wlast_reg_0),
        .m_axi_wlast_reg_0(m_axi_wlast_i_1__0_n_0),
        .m_axi_wvalid_reg(m_axi_wvalid_reg_0),
        .m_axi_wvalid_reg_0(m_axi_wvalid_i_1__0_n_0),
        .\m_axis_tdata_reg[15] (\U_osc_trigger/trig_detect14_in_1 ),
        .m_axis_tvalid_reg(U_osc2_n_144),
        .m_axis_tvalid_reg_0(m_axis_tvalid_i_1__0__0_n_0),
        .mode_reg(mode_i_1__0_n_0),
        .next_buf_full_reg(U_osc2_n_122),
        .osc2_dma_intr(osc2_dma_intr),
        .osc2_event_op(osc2_event_op),
        .osc2_reg_wr_we(osc2_reg_wr_we),
        .osc2_trig_op(osc2_trig_op),
        .rd_en(\U_dma_s2mm/fifo_rd_re_19 ),
        .\reg_ctrl_reg[31] (U_osc1_n_174),
        .\reg_ctrl_reg[9] ({cfg_dma_ctrl_reg_4[9:8],cfg_dma_ctrl_reg_4[0]}),
        .\reg_rd_data_reg[31]_0 (osc2_reg_rd_data),
        .\req_addr_reg[31] (\req_addr_reg[31] ),
        .req_we_reg(req_we_i_1__0_n_0),
        .\req_xfer_cnt_reg[6] (U_osc2_n_139),
        .\s_axi_reg_araddr[2] (U_osc2_n_151),
        .\s_axi_reg_araddr[2]_0 (U_osc2_n_155),
        .\s_axi_reg_araddr[3] (U_osc2_n_150),
        .\s_axi_reg_araddr[3]_0 (U_osc2_n_159),
        .\s_axi_reg_araddr[4] (U_osc2_n_134),
        .\s_axi_reg_araddr[4]_0 (U_osc2_n_152),
        .\s_axi_reg_araddr[4]_1 (U_osc2_n_153),
        .\s_axi_reg_araddr[5] (U_osc2_n_137),
        .\s_axi_reg_araddr[7] (U_osc2_n_146),
        .\s_axi_reg_araddr[7]_0 (U_osc2_n_147),
        .\s_axi_reg_araddr[7]_1 (U_osc2_n_154),
        .state_cs(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/state_cs_15 ),
        .state_cs_0(\U_osc_acq/state_cs_7 ),
        .state_cs_1(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs_6 ),
        .\state_cs_reg[0] (\state_cs[0]_i_1__0_n_0 ),
        .sts_trig_reg(p_20_in_16),
        .sts_trig_reg_0(sts_trig_i_1__0_n_0),
        .trig_detect_reg(U_osc2_n_2),
        .trig_detect_reg_0(trig_detect_i_2__0_n_0),
        .trig_ip(trig_ip),
        .wr_en(U_osc2_n_7),
        .\xfer_cnt_reg[3] (U_osc2_n_136),
        .\xfer_cnt_reg[6] (U_osc2_n_148));
  (* CHECK_LICENSE_TYPE = "reg_ctrl,axi_bram_ctrl,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "axi_bram_ctrl,Vivado 2020.1" *) 
  system_rp_oscilloscope_0_reg_ctrl U_reg_ctrl
       (.bram_addr_a({NLW_U_reg_ctrl_bram_addr_a_UNCONNECTED[11:8],reg_addr}),
        .bram_clk_a(NLW_U_reg_ctrl_bram_clk_a_UNCONNECTED),
        .bram_en_a(reg_en),
        .bram_rddata_a(reg_rd_data),
        .bram_rst_a(NLW_U_reg_ctrl_bram_rst_a_UNCONNECTED),
        .bram_we_a(reg_we),
        .bram_wrdata_a(reg_wr_data),
        .s_axi_aclk(s_axi_reg_aclk),
        .s_axi_araddr(s_axi_reg_araddr),
        .s_axi_aresetn(s_axi_reg_aresetn),
        .s_axi_arprot(s_axi_reg_arprot),
        .s_axi_arready(s_axi_reg_arready),
        .s_axi_arvalid(s_axi_reg_arvalid),
        .s_axi_awaddr(s_axi_reg_awaddr),
        .s_axi_awprot(s_axi_reg_awprot),
        .s_axi_awready(s_axi_reg_awready),
        .s_axi_awvalid(s_axi_reg_awvalid),
        .s_axi_bready(s_axi_reg_bready),
        .s_axi_bresp(s_axi_reg_bresp),
        .s_axi_bvalid(s_axi_reg_bvalid),
        .s_axi_rdata(s_axi_reg_rdata),
        .s_axi_rready(s_axi_reg_rready),
        .s_axi_rresp(s_axi_reg_rresp),
        .s_axi_rvalid(s_axi_reg_rvalid),
        .s_axi_wdata(s_axi_reg_wdata),
        .s_axi_wready(s_axi_reg_wready),
        .s_axi_wstrb(s_axi_reg_wstrb),
        .s_axi_wvalid(s_axi_reg_wvalid));
  LUT6 #(
    .INIT(64'hFFFFFFFFEEEEEEEF)) 
    U_reg_ctrl_i_33
       (.I0(U_osc1_n_169),
        .I1(U_reg_ctrl_i_36_n_0),
        .I2(reg_addr[3]),
        .I3(reg_addr[5]),
        .I4(reg_addr[7]),
        .I5(U_reg_ctrl_i_37_n_0),
        .O(U_reg_ctrl_i_33_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEAAA)) 
    U_reg_ctrl_i_34
       (.I0(U_reg_ctrl_i_38_n_0),
        .I1(U_osc1_n_102),
        .I2(U_reg_ctrl_i_39_n_0),
        .I3(reg_addr[2]),
        .I4(U_reg_ctrl_i_40_n_0),
        .I5(U_reg_ctrl_i_41_n_0),
        .O(U_reg_ctrl_i_34_n_0));
  LUT6 #(
    .INIT(64'h0111111101000000)) 
    U_reg_ctrl_i_36
       (.I0(reg_addr[4]),
        .I1(U_osc1_n_102),
        .I2(reg_addr[3]),
        .I3(reg_addr[5]),
        .I4(reg_addr[2]),
        .I5(reg_addr[6]),
        .O(U_reg_ctrl_i_36_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF05051555)) 
    U_reg_ctrl_i_37
       (.I0(reg_addr[7]),
        .I1(U_osc1_n_102),
        .I2(reg_addr[6]),
        .I3(reg_addr[4]),
        .I4(reg_addr[5]),
        .I5(U_osc1_n_171),
        .O(U_reg_ctrl_i_37_n_0));
  LUT5 #(
    .INIT(32'h04000000)) 
    U_reg_ctrl_i_38
       (.I0(reg_addr[2]),
        .I1(reg_addr[4]),
        .I2(reg_addr[3]),
        .I3(reg_addr[6]),
        .I4(reg_addr[5]),
        .O(U_reg_ctrl_i_38_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    U_reg_ctrl_i_39
       (.I0(reg_addr[3]),
        .I1(reg_addr[7]),
        .O(U_reg_ctrl_i_39_n_0));
  LUT6 #(
    .INIT(64'hFFFF8080AA000000)) 
    U_reg_ctrl_i_40
       (.I0(U_osc1_n_102),
        .I1(reg_addr[3]),
        .I2(reg_addr[6]),
        .I3(reg_addr[5]),
        .I4(reg_addr[7]),
        .I5(reg_addr[4]),
        .O(U_reg_ctrl_i_40_n_0));
  LUT6 #(
    .INIT(64'hFCAC0C0CA0AC0C0C)) 
    U_reg_ctrl_i_41
       (.I0(U_osc1_n_102),
        .I1(reg_addr[7]),
        .I2(reg_addr[6]),
        .I3(reg_addr[2]),
        .I4(reg_addr[5]),
        .I5(reg_addr[3]),
        .O(U_reg_ctrl_i_41_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch1_signed[10]_i_1 
       (.I0(adc_data_ch1[8]),
        .O(\adc_data_ch1_signed[10]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch1_signed[11]_i_1 
       (.I0(adc_data_ch1[9]),
        .O(\adc_data_ch1_signed[11]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch1_signed[12]_i_1 
       (.I0(adc_data_ch1[10]),
        .O(\adc_data_ch1_signed[12]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch1_signed[13]_i_1 
       (.I0(adc_data_ch1[11]),
        .O(\adc_data_ch1_signed[13]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch1_signed[14]_i_1 
       (.I0(adc_data_ch1[12]),
        .O(\adc_data_ch1_signed[14]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch1_signed[2]_i_1 
       (.I0(adc_data_ch1[0]),
        .O(\adc_data_ch1_signed[2]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch1_signed[3]_i_1 
       (.I0(adc_data_ch1[1]),
        .O(\adc_data_ch1_signed[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch1_signed[4]_i_1 
       (.I0(adc_data_ch1[2]),
        .O(\adc_data_ch1_signed[4]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch1_signed[5]_i_1 
       (.I0(adc_data_ch1[3]),
        .O(\adc_data_ch1_signed[5]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch1_signed[6]_i_1 
       (.I0(adc_data_ch1[4]),
        .O(\adc_data_ch1_signed[6]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch1_signed[7]_i_1 
       (.I0(adc_data_ch1[5]),
        .O(\adc_data_ch1_signed[7]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch1_signed[8]_i_1 
       (.I0(adc_data_ch1[6]),
        .O(\adc_data_ch1_signed[8]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch1_signed[9]_i_1 
       (.I0(adc_data_ch1[7]),
        .O(\adc_data_ch1_signed[9]_i_1_n_0 ));
  FDRE \adc_data_ch1_signed_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch1_signed[10]_i_1_n_0 ),
        .Q(adc_data_ch1_signed[10]),
        .R(1'b0));
  FDRE \adc_data_ch1_signed_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch1_signed[11]_i_1_n_0 ),
        .Q(adc_data_ch1_signed[11]),
        .R(1'b0));
  FDRE \adc_data_ch1_signed_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch1_signed[12]_i_1_n_0 ),
        .Q(adc_data_ch1_signed[12]),
        .R(1'b0));
  FDRE \adc_data_ch1_signed_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch1_signed[13]_i_1_n_0 ),
        .Q(adc_data_ch1_signed[13]),
        .R(1'b0));
  FDRE \adc_data_ch1_signed_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch1_signed[14]_i_1_n_0 ),
        .Q(adc_data_ch1_signed[14]),
        .R(1'b0));
  FDRE \adc_data_ch1_signed_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(adc_data_ch1[13]),
        .Q(adc_data_ch1_signed[15]),
        .R(1'b0));
  FDRE \adc_data_ch1_signed_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch1_signed[2]_i_1_n_0 ),
        .Q(adc_data_ch1_signed[2]),
        .R(1'b0));
  FDRE \adc_data_ch1_signed_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch1_signed[3]_i_1_n_0 ),
        .Q(adc_data_ch1_signed[3]),
        .R(1'b0));
  FDRE \adc_data_ch1_signed_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch1_signed[4]_i_1_n_0 ),
        .Q(adc_data_ch1_signed[4]),
        .R(1'b0));
  FDRE \adc_data_ch1_signed_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch1_signed[5]_i_1_n_0 ),
        .Q(adc_data_ch1_signed[5]),
        .R(1'b0));
  FDRE \adc_data_ch1_signed_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch1_signed[6]_i_1_n_0 ),
        .Q(adc_data_ch1_signed[6]),
        .R(1'b0));
  FDRE \adc_data_ch1_signed_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch1_signed[7]_i_1_n_0 ),
        .Q(adc_data_ch1_signed[7]),
        .R(1'b0));
  FDRE \adc_data_ch1_signed_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch1_signed[8]_i_1_n_0 ),
        .Q(adc_data_ch1_signed[8]),
        .R(1'b0));
  FDRE \adc_data_ch1_signed_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch1_signed[9]_i_1_n_0 ),
        .Q(adc_data_ch1_signed[9]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch2_signed[10]_i_1 
       (.I0(adc_data_ch2[8]),
        .O(\adc_data_ch2_signed[10]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch2_signed[11]_i_1 
       (.I0(adc_data_ch2[9]),
        .O(\adc_data_ch2_signed[11]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch2_signed[12]_i_1 
       (.I0(adc_data_ch2[10]),
        .O(\adc_data_ch2_signed[12]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch2_signed[13]_i_1 
       (.I0(adc_data_ch2[11]),
        .O(\adc_data_ch2_signed[13]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch2_signed[14]_i_1 
       (.I0(adc_data_ch2[12]),
        .O(\adc_data_ch2_signed[14]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch2_signed[2]_i_1 
       (.I0(adc_data_ch2[0]),
        .O(\adc_data_ch2_signed[2]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch2_signed[3]_i_1 
       (.I0(adc_data_ch2[1]),
        .O(\adc_data_ch2_signed[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch2_signed[4]_i_1 
       (.I0(adc_data_ch2[2]),
        .O(\adc_data_ch2_signed[4]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch2_signed[5]_i_1 
       (.I0(adc_data_ch2[3]),
        .O(\adc_data_ch2_signed[5]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch2_signed[6]_i_1 
       (.I0(adc_data_ch2[4]),
        .O(\adc_data_ch2_signed[6]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch2_signed[7]_i_1 
       (.I0(adc_data_ch2[5]),
        .O(\adc_data_ch2_signed[7]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch2_signed[8]_i_1 
       (.I0(adc_data_ch2[6]),
        .O(\adc_data_ch2_signed[8]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adc_data_ch2_signed[9]_i_1 
       (.I0(adc_data_ch2[7]),
        .O(\adc_data_ch2_signed[9]_i_1_n_0 ));
  FDRE \adc_data_ch2_signed_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch2_signed[10]_i_1_n_0 ),
        .Q(adc_data_ch2_signed[10]),
        .R(1'b0));
  FDRE \adc_data_ch2_signed_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch2_signed[11]_i_1_n_0 ),
        .Q(adc_data_ch2_signed[11]),
        .R(1'b0));
  FDRE \adc_data_ch2_signed_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch2_signed[12]_i_1_n_0 ),
        .Q(adc_data_ch2_signed[12]),
        .R(1'b0));
  FDRE \adc_data_ch2_signed_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch2_signed[13]_i_1_n_0 ),
        .Q(adc_data_ch2_signed[13]),
        .R(1'b0));
  FDRE \adc_data_ch2_signed_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch2_signed[14]_i_1_n_0 ),
        .Q(adc_data_ch2_signed[14]),
        .R(1'b0));
  FDRE \adc_data_ch2_signed_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(adc_data_ch2[13]),
        .Q(adc_data_ch2_signed[15]),
        .R(1'b0));
  FDRE \adc_data_ch2_signed_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch2_signed[2]_i_1_n_0 ),
        .Q(adc_data_ch2_signed[2]),
        .R(1'b0));
  FDRE \adc_data_ch2_signed_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch2_signed[3]_i_1_n_0 ),
        .Q(adc_data_ch2_signed[3]),
        .R(1'b0));
  FDRE \adc_data_ch2_signed_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch2_signed[4]_i_1_n_0 ),
        .Q(adc_data_ch2_signed[4]),
        .R(1'b0));
  FDRE \adc_data_ch2_signed_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch2_signed[5]_i_1_n_0 ),
        .Q(adc_data_ch2_signed[5]),
        .R(1'b0));
  FDRE \adc_data_ch2_signed_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch2_signed[6]_i_1_n_0 ),
        .Q(adc_data_ch2_signed[6]),
        .R(1'b0));
  FDRE \adc_data_ch2_signed_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch2_signed[7]_i_1_n_0 ),
        .Q(adc_data_ch2_signed[7]),
        .R(1'b0));
  FDRE \adc_data_ch2_signed_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch2_signed[8]_i_1_n_0 ),
        .Q(adc_data_ch2_signed[8]),
        .R(1'b0));
  FDRE \adc_data_ch2_signed_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\adc_data_ch2_signed[9]_i_1_n_0 ),
        .Q(adc_data_ch2_signed[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFF7FFFFFFF0000)) 
    busy_i_1
       (.I0(m_axi_osc1_wready),
        .I1(m_axi_wvalid_reg),
        .I2(m_axi_wlast_reg),
        .I3(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/fifo_empty ),
        .I4(U_osc1_n_7),
        .I5(\U_dma_s2mm/U_dma_s2mm_ctrl/dat_ctrl_busy ),
        .O(busy_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFF7FFFFFFF0000)) 
    busy_i_1__0
       (.I0(m_axi_osc2_wready),
        .I1(m_axi_wvalid_reg_0),
        .I2(m_axi_wlast_reg_0),
        .I3(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/fifo_empty_20 ),
        .I4(U_osc2_n_7),
        .I5(\U_dma_s2mm/U_dma_s2mm_ctrl/dat_ctrl_busy_14 ),
        .O(busy_i_1__0_n_0));
  LUT6 #(
    .INIT(64'hFFFBFFFF00080000)) 
    cfg_8bit_dat_i_1
       (.I0(reg_wr_data[0]),
        .I1(U_osc1_n_136),
        .I2(U_osc1_n_178),
        .I3(U_osc1_n_190),
        .I4(U_osc1_n_172),
        .I5(cfg_8bit_dat),
        .O(cfg_8bit_dat_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    cfg_8bit_dat_i_1__0
       (.I0(reg_wr_data[0]),
        .I1(U_osc2_n_153),
        .I2(osc2_reg_wr_we),
        .I3(U_osc2_n_146),
        .I4(U_osc2_n_159),
        .I5(cfg_8bit_dat_17),
        .O(cfg_8bit_dat_i_1__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    cfg_avg_en_i_1
       (.I0(reg_wr_data[0]),
        .I1(U_osc1_n_208),
        .I2(reg_addr[4]),
        .I3(reg_addr[3]),
        .I4(U_osc1_n_205),
        .I5(cfg_avg_en),
        .O(cfg_avg_en_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFEF00000020)) 
    cfg_avg_en_i_1__0
       (.I0(reg_wr_data[0]),
        .I1(reg_addr[2]),
        .I2(osc2_reg_wr_we),
        .I3(reg_addr[0]),
        .I4(U_osc2_n_137),
        .I5(cfg_avg_en_8),
        .O(cfg_avg_en_i_1__0_n_0));
  LUT6 #(
    .INIT(64'hFFBFFFFF00800000)) 
    cfg_filt_bypass_i_1
       (.I0(reg_wr_data[0]),
        .I1(U_osc1_n_189),
        .I2(U_osc1_n_209),
        .I3(U_osc1_n_190),
        .I4(reg_addr[5]),
        .I5(cfg_filt_bypass),
        .O(cfg_filt_bypass_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFEF00000020)) 
    cfg_filt_bypass_i_1__0
       (.I0(reg_wr_data[0]),
        .I1(U_osc2_n_151),
        .I2(reg_addr[4]),
        .I3(U_osc1_n_175),
        .I4(U_osc2_n_150),
        .I5(cfg_filt_bypass_25),
        .O(cfg_filt_bypass_i_1__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    cfg_trig_edge_i_1
       (.I0(reg_wr_data[0]),
        .I1(U_osc1_n_206),
        .I2(reg_addr[3]),
        .I3(U_osc1_n_204),
        .I4(U_osc1_n_207),
        .I5(cfg_trig_edge),
        .O(cfg_trig_edge_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFEF00000020)) 
    cfg_trig_edge_i_1__0
       (.I0(reg_wr_data[0]),
        .I1(reg_addr[2]),
        .I2(osc2_reg_wr_we),
        .I3(reg_addr[0]),
        .I4(U_osc2_n_147),
        .I5(cfg_trig_edge_9),
        .O(cfg_trig_edge_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h0CFF00000C8F0000)) 
    fifo_dis_i_1
       (.I0(\U_dma_s2mm/U_dma_s2mm_ctrl/full_immed0 ),
        .I1(U_osc1_n_87),
        .I2(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs [1]),
        .I3(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs [2]),
        .I4(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs [0]),
        .I5(\U_dma_s2mm/fifo_dis ),
        .O(fifo_dis_i_1_n_0));
  LUT6 #(
    .INIT(64'h0CFF00000C8F0000)) 
    fifo_dis_i_1__0
       (.I0(\U_dma_s2mm/U_dma_s2mm_ctrl/full_immed0_18 ),
        .I1(U_osc2_n_122),
        .I2(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs_6 [1]),
        .I3(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs_6 [2]),
        .I4(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs_6 [0]),
        .I5(\U_dma_s2mm/fifo_dis_13 ),
        .O(fifo_dis_i_1__0_n_0));
  LUT4 #(
    .INIT(16'hB701)) 
    first_rst_i_1
       (.I0(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs [0]),
        .I1(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs [2]),
        .I2(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs [1]),
        .I3(\U_dma_s2mm/first_rst ),
        .O(first_rst_i_1_n_0));
  LUT4 #(
    .INIT(16'hD701)) 
    first_rst_i_1__0
       (.I0(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs_6 [2]),
        .I1(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs_6 [0]),
        .I2(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs_6 [1]),
        .I3(\U_dma_s2mm/first_rst_11 ),
        .O(first_rst_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h000000002A2F0000)) 
    m_axi_awvalid_i_1
       (.I0(m_axi_osc1_awvalid),
        .I1(m_axi_osc1_awready),
        .I2(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs [0]),
        .I3(\U_dma_s2mm/U_dma_s2mm_ctrl/fifo_empty ),
        .I4(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs [1]),
        .I5(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs [2]),
        .O(m_axi_awvalid_i_1_n_0));
  LUT6 #(
    .INIT(64'h000000002A2F0000)) 
    m_axi_awvalid_i_1__0
       (.I0(m_axi_osc2_awvalid),
        .I1(m_axi_osc2_awready),
        .I2(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs_6 [0]),
        .I3(\U_dma_s2mm/U_dma_s2mm_ctrl/fifo_empty_21 ),
        .I4(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs_6 [1]),
        .I5(\U_dma_s2mm/U_dma_s2mm_ctrl/state_cs_6 [2]),
        .O(m_axi_awvalid_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h3C3CCCAA0C0CCCAA)) 
    m_axi_wlast_i_1
       (.I0(U_osc1_n_203),
        .I1(m_axi_wlast_reg),
        .I2(\U_dma_s2mm/fifo_rd_re ),
        .I3(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/fifo_empty ),
        .I4(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/state_cs ),
        .I5(U_osc1_n_199),
        .O(m_axi_wlast_i_1_n_0));
  LUT6 #(
    .INIT(64'h3C3CCCAA0C0CCCAA)) 
    m_axi_wlast_i_1__0
       (.I0(U_osc2_n_149),
        .I1(m_axi_wlast_reg_0),
        .I2(\U_dma_s2mm/fifo_rd_re_19 ),
        .I3(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/fifo_empty_20 ),
        .I4(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/state_cs_15 ),
        .I5(U_osc2_n_139),
        .O(m_axi_wlast_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h30F0555500000000)) 
    m_axi_wvalid_i_1
       (.I0(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/fifo_empty ),
        .I1(m_axi_wlast_reg),
        .I2(m_axi_wvalid_reg),
        .I3(m_axi_osc1_wready),
        .I4(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/state_cs ),
        .I5(m_axi_osc1_aresetn),
        .O(m_axi_wvalid_i_1_n_0));
  LUT6 #(
    .INIT(64'h30F0555500000000)) 
    m_axi_wvalid_i_1__0
       (.I0(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/fifo_empty_20 ),
        .I1(m_axi_wlast_reg_0),
        .I2(m_axi_wvalid_reg_0),
        .I3(m_axi_osc2_wready),
        .I4(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/state_cs_15 ),
        .I5(m_axi_osc2_aresetn),
        .O(m_axi_wvalid_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h00F8)) 
    m_axis_tvalid_i_1__0__0
       (.I0(acq_tvalid_23),
        .I1(acq_tlast_22),
        .I2(U_osc2_n_144),
        .I3(U_osc2_n_140),
        .O(m_axis_tvalid_i_1__0__0_n_0));
  LUT4 #(
    .INIT(16'h00F8)) 
    m_axis_tvalid_i_1__1
       (.I0(acq_tvalid),
        .I1(acq_tlast),
        .I2(U_osc1_n_200),
        .I3(U_osc1_n_187),
        .O(m_axis_tvalid_i_1__1_n_0));
  LUT3 #(
    .INIT(8'hDC)) 
    mode_i_1
       (.I0(cfg_dma_ctrl_reg[8]),
        .I1(cfg_dma_ctrl_reg[9]),
        .I2(dma_mode),
        .O(mode_i_1_n_0));
  LUT3 #(
    .INIT(8'hDC)) 
    mode_i_1__0
       (.I0(cfg_dma_ctrl_reg_4[8]),
        .I1(cfg_dma_ctrl_reg_4[9]),
        .I2(dma_mode_12),
        .O(mode_i_1__0_n_0));
  LUT5 #(
    .INIT(32'h0000F200)) 
    req_we_i_1
       (.I0(U_osc1_n_202),
        .I1(U_osc1_n_103),
        .I2(\U_dma_s2mm/U_dma_s2mm_upsize/tlast ),
        .I3(\U_dma_s2mm/fifo_wr_we ),
        .I4(U_osc1_n_187),
        .O(req_we_i_1_n_0));
  LUT5 #(
    .INIT(32'h0000F200)) 
    req_we_i_1__0
       (.I0(U_osc2_n_148),
        .I1(U_osc2_n_136),
        .I2(\U_dma_s2mm/U_dma_s2mm_upsize/tlast_0 ),
        .I3(\U_dma_s2mm/fifo_wr_we_10 ),
        .I4(U_osc2_n_140),
        .O(req_we_i_1__0_n_0));
  LUT5 #(
    .INIT(32'h77FF0F0F)) 
    \state_cs[0]_i_1 
       (.I0(m_axi_wvalid_reg),
        .I1(m_axi_osc1_wready),
        .I2(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/fifo_empty ),
        .I3(m_axi_wlast_reg),
        .I4(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/state_cs ),
        .O(\state_cs[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h77FF0F0F)) 
    \state_cs[0]_i_1__0 
       (.I0(m_axi_wvalid_reg_0),
        .I1(m_axi_osc2_wready),
        .I2(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/fifo_empty_20 ),
        .I3(m_axi_wlast_reg_0),
        .I4(\U_dma_s2mm/U_dma_s2mm_ctrl/U_dma_s2mm_data_ctrl/state_cs_15 ),
        .O(\state_cs[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF0820)) 
    sts_trig_i_1
       (.I0(ctl_trg),
        .I1(\U_osc_acq/state_cs [0]),
        .I2(\U_osc_acq/state_cs [2]),
        .I3(\U_osc_acq/state_cs [1]),
        .I4(p_20_in),
        .O(sts_trig_i_1_n_0));
  LUT5 #(
    .INIT(32'hFFFF0820)) 
    sts_trig_i_1__0
       (.I0(ctl_trg_5),
        .I1(\U_osc_acq/state_cs_7 [0]),
        .I2(\U_osc_acq/state_cs_7 [2]),
        .I3(\U_osc_acq/state_cs_7 [1]),
        .I4(p_20_in_16),
        .O(sts_trig_i_1__0_n_0));
  LUT6 #(
    .INIT(64'hDFDF0FFFC0C00000)) 
    trig_detect_i_2
       (.I0(\U_osc_trigger/trig_detect16_in ),
        .I1(\U_osc_trigger/trig_detect12_in ),
        .I2(dec_tvalid),
        .I3(\U_osc_trigger/trig_detect14_in ),
        .I4(cfg_trig_edge),
        .I5(U_osc1_n_2),
        .O(trig_detect_i_2_n_0));
  LUT6 #(
    .INIT(64'hDFDF0FFFC0C00000)) 
    trig_detect_i_2__0
       (.I0(\U_osc_trigger/trig_detect16_in_2 ),
        .I1(\U_osc_trigger/trig_detect12_in_3 ),
        .I2(dec_tvalid_24),
        .I3(\U_osc_trigger/trig_detect14_in_1 ),
        .I4(cfg_trig_edge_9),
        .I5(U_osc2_n_2),
        .O(trig_detect_i_2__0_n_0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "1" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ASYNC_RST" *) 
module system_rp_oscilloscope_0_xpm_cdc_async_rst
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(src_arst),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(arststages_ff[0]),
        .PRE(src_arst),
        .Q(arststages_ff[1]));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "1" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ASYNC_RST" *) 
module system_rp_oscilloscope_0_xpm_cdc_async_rst__10
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(src_arst),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(arststages_ff[0]),
        .PRE(src_arst),
        .Q(arststages_ff[1]));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "1" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ASYNC_RST" *) 
module system_rp_oscilloscope_0_xpm_cdc_async_rst__4
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(src_arst),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(arststages_ff[0]),
        .PRE(src_arst),
        .Q(arststages_ff[1]));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "1" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ASYNC_RST" *) 
module system_rp_oscilloscope_0_xpm_cdc_async_rst__5
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(src_arst),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(arststages_ff[0]),
        .PRE(src_arst),
        .Q(arststages_ff[1]));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "1" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ASYNC_RST" *) 
module system_rp_oscilloscope_0_xpm_cdc_async_rst__6
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(src_arst),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(arststages_ff[0]),
        .PRE(src_arst),
        .Q(arststages_ff[1]));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "1" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ASYNC_RST" *) 
module system_rp_oscilloscope_0_xpm_cdc_async_rst__7
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(src_arst),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(arststages_ff[0]),
        .PRE(src_arst),
        .Q(arststages_ff[1]));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "1" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ASYNC_RST" *) 
module system_rp_oscilloscope_0_xpm_cdc_async_rst__8
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(src_arst),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(arststages_ff[0]),
        .PRE(src_arst),
        .Q(arststages_ff[1]));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "1" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ASYNC_RST" *) 
module system_rp_oscilloscope_0_xpm_cdc_async_rst__9
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(src_arst),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(arststages_ff[0]),
        .PRE(src_arst),
        .Q(arststages_ff[1]));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module system_rp_oscilloscope_0_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire [2:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  wire [3:0]dest_out_bin;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module system_rp_oscilloscope_0_xpm_cdc_gray__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire [2:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  wire [3:0]dest_out_bin;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module system_rp_oscilloscope_0_xpm_cdc_gray__11
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire [2:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  wire [3:0]dest_out_bin;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module system_rp_oscilloscope_0_xpm_cdc_gray__12
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire [2:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  wire [3:0]dest_out_bin;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module system_rp_oscilloscope_0_xpm_cdc_gray__13
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire [2:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  wire [3:0]dest_out_bin;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module system_rp_oscilloscope_0_xpm_cdc_gray__14
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire [2:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  wire [3:0]dest_out_bin;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module system_rp_oscilloscope_0_xpm_cdc_gray__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire [2:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  wire [3:0]dest_out_bin;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module system_rp_oscilloscope_0_xpm_cdc_gray__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire [2:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  wire [3:0]dest_out_bin;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module system_rp_oscilloscope_0_xpm_cdc_gray__parameterized2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire [7:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  wire [8:0]dest_out_bin;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(binval[3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(binval[3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(binval[3]),
        .O(binval[2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [7]),
        .I3(\dest_graysync_ff[1] [8]),
        .I4(\dest_graysync_ff[1] [6]),
        .I5(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [7]),
        .I4(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [7]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[6]_i_1 
       (.I0(\dest_graysync_ff[1] [6]),
        .I1(\dest_graysync_ff[1] [8]),
        .I2(\dest_graysync_ff[1] [7]),
        .O(binval[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[7]_i_1 
       (.I0(\dest_graysync_ff[1] [7]),
        .I1(\dest_graysync_ff[1] [8]),
        .O(binval[7]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[7]),
        .Q(dest_out_bin[7]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(dest_out_bin[8]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module system_rp_oscilloscope_0_xpm_cdc_gray__parameterized2__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire [7:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  wire [8:0]dest_out_bin;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(binval[3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(binval[3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(binval[3]),
        .O(binval[2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [7]),
        .I3(\dest_graysync_ff[1] [8]),
        .I4(\dest_graysync_ff[1] [6]),
        .I5(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [7]),
        .I4(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [7]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[6]_i_1 
       (.I0(\dest_graysync_ff[1] [6]),
        .I1(\dest_graysync_ff[1] [8]),
        .I2(\dest_graysync_ff[1] [7]),
        .O(binval[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[7]_i_1 
       (.I0(\dest_graysync_ff[1] [7]),
        .I1(\dest_graysync_ff[1] [8]),
        .O(binval[7]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[7]),
        .Q(dest_out_bin[7]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(dest_out_bin[8]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module system_rp_oscilloscope_0_xpm_cdc_gray__parameterized2__5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire [7:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  wire [8:0]dest_out_bin;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(binval[3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(binval[3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(binval[3]),
        .O(binval[2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [7]),
        .I3(\dest_graysync_ff[1] [8]),
        .I4(\dest_graysync_ff[1] [6]),
        .I5(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [7]),
        .I4(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [7]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[6]_i_1 
       (.I0(\dest_graysync_ff[1] [6]),
        .I1(\dest_graysync_ff[1] [8]),
        .I2(\dest_graysync_ff[1] [7]),
        .O(binval[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[7]_i_1 
       (.I0(\dest_graysync_ff[1] [7]),
        .I1(\dest_graysync_ff[1] [8]),
        .O(binval[7]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[7]),
        .Q(dest_out_bin[7]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(dest_out_bin[8]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module system_rp_oscilloscope_0_xpm_cdc_gray__parameterized2__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire [7:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  wire [8:0]dest_out_bin;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(binval[3]),
        .I3(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(binval[3]),
        .I2(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(binval[3]),
        .O(binval[2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [7]),
        .I3(\dest_graysync_ff[1] [8]),
        .I4(\dest_graysync_ff[1] [6]),
        .I5(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [7]),
        .I4(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [7]),
        .I2(\dest_graysync_ff[1] [8]),
        .I3(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[6]_i_1 
       (.I0(\dest_graysync_ff[1] [6]),
        .I1(\dest_graysync_ff[1] [8]),
        .I2(\dest_graysync_ff[1] [7]),
        .O(binval[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[7]_i_1 
       (.I0(\dest_graysync_ff[1] [7]),
        .I1(\dest_graysync_ff[1] [8]),
        .O(binval[7]));
  FDRE \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[7]),
        .Q(dest_out_bin[7]),
        .R(1'b0));
  FDRE \dest_out_bin_ff_reg[8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(dest_out_bin[8]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "4" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module system_rp_oscilloscope_0_xpm_cdc_single
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [3:0]syncstages_ff;

  assign dest_out = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "4" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module system_rp_oscilloscope_0_xpm_cdc_single__10
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [3:0]syncstages_ff;

  assign dest_out = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "4" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module system_rp_oscilloscope_0_xpm_cdc_single__11
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [3:0]syncstages_ff;

  assign dest_out = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "4" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module system_rp_oscilloscope_0_xpm_cdc_single__12
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [3:0]syncstages_ff;

  assign dest_out = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "4" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module system_rp_oscilloscope_0_xpm_cdc_single__13
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [3:0]syncstages_ff;

  assign dest_out = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "4" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module system_rp_oscilloscope_0_xpm_cdc_single__14
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [3:0]syncstages_ff;

  assign dest_out = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "4" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module system_rp_oscilloscope_0_xpm_cdc_single__8
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [3:0]syncstages_ff;

  assign dest_out = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "4" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module system_rp_oscilloscope_0_xpm_cdc_single__9
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [3:0]syncstages_ff;

  assign dest_out = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module system_rp_oscilloscope_0_xpm_cdc_single__parameterized2
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [4:0]syncstages_ff;

  assign dest_out = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module system_rp_oscilloscope_0_xpm_cdc_single__parameterized2__4
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [4:0]syncstages_ff;

  assign dest_out = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module system_rp_oscilloscope_0_xpm_cdc_single__parameterized2__5
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [4:0]syncstages_ff;

  assign dest_out = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module system_rp_oscilloscope_0_xpm_cdc_single__parameterized2__6
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [4:0]syncstages_ff;

  assign dest_out = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "5" *) (* INIT = "1" *) 
(* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module system_rp_oscilloscope_0_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [4:0]syncstages_ff;

  assign dest_rst = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "5" *) (* INIT = "1" *) 
(* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module system_rp_oscilloscope_0_xpm_cdc_sync_rst__4
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [4:0]syncstages_ff;

  assign dest_rst = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "5" *) (* INIT = "1" *) 
(* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module system_rp_oscilloscope_0_xpm_cdc_sync_rst__5
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [4:0]syncstages_ff;

  assign dest_rst = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "5" *) (* INIT = "1" *) 
(* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module system_rp_oscilloscope_0_xpm_cdc_sync_rst__6
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [4:0]syncstages_ff;

  assign dest_rst = syncstages_ff[4];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[3]),
        .Q(syncstages_ff[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module system_rp_oscilloscope_0_blk_mem_gen_generic_cstr
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    Q,
    din,
    E,
    SR,
    out,
    wr_en);
  output [63:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [8:0]Q;
  input [63:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [63:0]D;
  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [8:0]Q;
  wire [0:0]SR;
  wire [63:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  system_rp_oscilloscope_0_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module system_rp_oscilloscope_0_blk_mem_gen_generic_cstr_46
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    Q,
    din,
    E,
    SR,
    out,
    wr_en);
  output [63:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [8:0]Q;
  input [63:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [63:0]D;
  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [8:0]Q;
  wire [0:0]SR;
  wire [63:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  system_rp_oscilloscope_0_blk_mem_gen_prim_width_47 \ramloop[0].ram.r 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module system_rp_oscilloscope_0_blk_mem_gen_prim_width
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    Q,
    din,
    E,
    SR,
    out,
    wr_en);
  output [63:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [8:0]Q;
  input [63:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [63:0]D;
  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire ENA_dly_D;
  wire ENB_I;
  wire ENB_dly;
  wire ENB_dly_D;
  wire POR_A0;
  wire POR_B;
  wire POR_B0;
  wire [8:0]Q;
  wire [4:0]RSTA_SHFT_REG;
  wire [4:0]RSTB_SHFT_REG;
  wire \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ;
  wire \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ;
  wire \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ;
  wire [0:0]SR;
  wire [63:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_D_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ),
        .Q(ENA_dly_D),
        .R(1'b0));
  (* srl_bus_name = "\inst/U_osc2/U_dma_s2mm/U_fifo_axi_data /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop " *) 
  (* srl_name = "\inst/U_osc2/U_dma_s2mm/U_fifo_axi_data /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(wr_clk),
        .D(POR_A0),
        .Q(\SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_i_1 
       (.I0(RSTA_SHFT_REG[0]),
        .I1(RSTA_SHFT_REG[4]),
        .O(POR_A0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_D_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ENB_dly),
        .Q(ENB_dly_D),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(POR_B),
        .Q(ENB_dly),
        .S(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \SAFETY_CKT_GEN.POR_B_i_1 
       (.I0(RSTB_SHFT_REG[0]),
        .I1(RSTB_SHFT_REG[4]),
        .O(POR_B0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.POR_B_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(POR_B0),
        .Q(POR_B),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(RSTA_SHFT_REG[0]),
        .R(1'b0));
  (* srl_bus_name = "\inst/U_osc2/U_dma_s2mm/U_fifo_axi_data /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg " *) 
  (* srl_name = "\inst/U_osc2/U_dma_s2mm/U_fifo_axi_data /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(wr_clk),
        .D(RSTA_SHFT_REG[0]),
        .Q(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ),
        .Q(RSTA_SHFT_REG[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(RSTB_SHFT_REG[0]),
        .R(1'b0));
  (* srl_bus_name = "\inst/U_osc2/U_dma_s2mm/U_fifo_axi_data /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg " *) 
  (* srl_name = "\inst/U_osc2/U_dma_s2mm/U_fifo_axi_data /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rd_clk),
        .D(RSTB_SHFT_REG[0]),
        .Q(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ),
        .Q(RSTB_SHFT_REG[4]),
        .R(1'b0));
  system_rp_oscilloscope_0_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .ENA_dly_D(ENA_dly_D),
        .ENB_I(ENB_I),
        .Q(Q),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module system_rp_oscilloscope_0_blk_mem_gen_prim_width_47
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    Q,
    din,
    E,
    SR,
    out,
    wr_en);
  output [63:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [8:0]Q;
  input [63:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [63:0]D;
  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire ENA_dly_D;
  wire ENB_I;
  wire ENB_dly;
  wire ENB_dly_D;
  wire POR_A0;
  wire POR_B;
  wire POR_B0;
  wire [8:0]Q;
  wire [4:0]RSTA_SHFT_REG;
  wire [4:0]RSTB_SHFT_REG;
  wire \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ;
  wire \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ;
  wire \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ;
  wire [0:0]SR;
  wire [63:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_D_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ),
        .Q(ENA_dly_D),
        .R(1'b0));
  (* srl_bus_name = "\inst/U_osc1/U_dma_s2mm/U_fifo_axi_data /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop " *) 
  (* srl_name = "\inst/U_osc1/U_dma_s2mm/U_fifo_axi_data /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(wr_clk),
        .D(POR_A0),
        .Q(\SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg_srl2_i_1 
       (.I0(RSTA_SHFT_REG[0]),
        .I1(RSTA_SHFT_REG[4]),
        .O(POR_A0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_D_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ENB_dly),
        .Q(ENB_dly_D),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(POR_B),
        .Q(ENB_dly),
        .S(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \SAFETY_CKT_GEN.POR_B_i_1 
       (.I0(RSTB_SHFT_REG[0]),
        .I1(RSTB_SHFT_REG[4]),
        .O(POR_B0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.POR_B_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(POR_B0),
        .Q(POR_B),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(RSTA_SHFT_REG[0]),
        .R(1'b0));
  (* srl_bus_name = "\inst/U_osc1/U_dma_s2mm/U_fifo_axi_data /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg " *) 
  (* srl_name = "\inst/U_osc1/U_dma_s2mm/U_fifo_axi_data /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(wr_clk),
        .D(RSTA_SHFT_REG[0]),
        .Q(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ),
        .Q(RSTA_SHFT_REG[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(RSTB_SHFT_REG[0]),
        .R(1'b0));
  (* srl_bus_name = "\inst/U_osc1/U_dma_s2mm/U_fifo_axi_data /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg " *) 
  (* srl_name = "\inst/U_osc1/U_dma_s2mm/U_fifo_axi_data /U0/\inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rd_clk),
        .D(RSTB_SHFT_REG[0]),
        .Q(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ),
        .Q(RSTB_SHFT_REG[4]),
        .R(1'b0));
  system_rp_oscilloscope_0_blk_mem_gen_prim_wrapper_48 \prim_noinit.ram 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .ENA_dly_D(ENA_dly_D),
        .ENB_I(ENB_I),
        .Q(Q),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module system_rp_oscilloscope_0_blk_mem_gen_prim_wrapper
   (D,
    rd_clk,
    wr_clk,
    ENB_I,
    ram_rstram_b,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_0 ,
    Q,
    din,
    E,
    ENA_dly_D,
    out,
    wr_en);
  output [63:0]D;
  input rd_clk;
  input wr_clk;
  input ENB_I;
  input ram_rstram_b;
  input [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_0 ;
  input [8:0]Q;
  input [63:0]din;
  input [0:0]E;
  input ENA_dly_D;
  input out;
  input wr_en;

  wire [63:0]D;
  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_0 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_68 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_69 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_70 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_71 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_72 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_73 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_74 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_75 ;
  wire [0:0]E;
  wire ENA_I;
  wire ENA_dly_D;
  wire ENB_I;
  wire [8:0]Q;
  wire [63:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram 
       (.ADDRARDADDR({1'b1,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_0 ,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,Q,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(rd_clk),
        .CLKBWRCLK(wr_clk),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ),
        .DIADI(din[31:0]),
        .DIBDI(din[63:32]),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(D[31:0]),
        .DOBDO(D[63:32]),
        .DOPADOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_68 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_69 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_70 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_71 }),
        .DOPBDOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_72 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_73 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_74 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_75 }),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ENB_I),
        .ENBWREN(ENA_I),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(ram_rstram_b),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({E,E,E,E,E,E,E,E}));
  LUT3 #(
    .INIT(8'hBA)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_2 
       (.I0(ENA_dly_D),
        .I1(out),
        .I2(wr_en),
        .O(ENA_I));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module system_rp_oscilloscope_0_blk_mem_gen_prim_wrapper_48
   (D,
    rd_clk,
    wr_clk,
    ENB_I,
    ram_rstram_b,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_0 ,
    Q,
    din,
    E,
    ENA_dly_D,
    out,
    wr_en);
  output [63:0]D;
  input rd_clk;
  input wr_clk;
  input ENB_I;
  input ram_rstram_b;
  input [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_0 ;
  input [8:0]Q;
  input [63:0]din;
  input [0:0]E;
  input ENA_dly_D;
  input out;
  input wr_en;

  wire [63:0]D;
  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_0 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_68 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_69 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_70 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_71 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_72 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_73 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_74 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_75 ;
  wire [0:0]E;
  wire ENA_I;
  wire ENA_dly_D;
  wire ENB_I;
  wire [8:0]Q;
  wire [63:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram 
       (.ADDRARDADDR({1'b1,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_0 ,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,Q,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(rd_clk),
        .CLKBWRCLK(wr_clk),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ),
        .DIADI(din[31:0]),
        .DIBDI(din[63:32]),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(D[31:0]),
        .DOBDO(D[63:32]),
        .DOPADOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_68 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_69 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_70 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_71 }),
        .DOPBDOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_72 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_73 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_74 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_75 }),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ENB_I),
        .ENBWREN(ENA_I),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(ram_rstram_b),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({E,E,E,E,E,E,E,E}));
  LUT3 #(
    .INIT(8'hBA)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_2 
       (.I0(ENA_dly_D),
        .I1(out),
        .I2(wr_en),
        .O(ENA_I));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module system_rp_oscilloscope_0_blk_mem_gen_top
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    Q,
    din,
    E,
    SR,
    out,
    wr_en);
  output [63:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [8:0]Q;
  input [63:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [63:0]D;
  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [8:0]Q;
  wire [0:0]SR;
  wire [63:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  system_rp_oscilloscope_0_blk_mem_gen_generic_cstr \valid.cstr 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module system_rp_oscilloscope_0_blk_mem_gen_top_45
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    Q,
    din,
    E,
    SR,
    out,
    wr_en);
  output [63:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [8:0]Q;
  input [63:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [63:0]D;
  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [8:0]Q;
  wire [0:0]SR;
  wire [63:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  system_rp_oscilloscope_0_blk_mem_gen_generic_cstr_46 \valid.cstr 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_4" *) 
module system_rp_oscilloscope_0_blk_mem_gen_v8_4_4
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    Q,
    din,
    E,
    SR,
    out,
    wr_en);
  output [63:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [8:0]Q;
  input [63:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [63:0]D;
  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [8:0]Q;
  wire [0:0]SR;
  wire [63:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  system_rp_oscilloscope_0_blk_mem_gen_v8_4_4_synth inst_blk_mem_gen
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_4" *) 
module system_rp_oscilloscope_0_blk_mem_gen_v8_4_4_43
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    Q,
    din,
    E,
    SR,
    out,
    wr_en);
  output [63:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [8:0]Q;
  input [63:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [63:0]D;
  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [8:0]Q;
  wire [0:0]SR;
  wire [63:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  system_rp_oscilloscope_0_blk_mem_gen_v8_4_4_synth_44 inst_blk_mem_gen
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_4_synth" *) 
module system_rp_oscilloscope_0_blk_mem_gen_v8_4_4_synth
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    Q,
    din,
    E,
    SR,
    out,
    wr_en);
  output [63:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [8:0]Q;
  input [63:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [63:0]D;
  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [8:0]Q;
  wire [0:0]SR;
  wire [63:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  system_rp_oscilloscope_0_blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_4_synth" *) 
module system_rp_oscilloscope_0_blk_mem_gen_v8_4_4_synth_44
   (D,
    POR_B,
    ENB_dly_D,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    Q,
    din,
    E,
    SR,
    out,
    wr_en);
  output [63:0]D;
  output POR_B;
  output ENB_dly_D;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [8:0]Q;
  input [63:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;

  wire [63:0]D;
  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [8:0]Q;
  wire [0:0]SR;
  wire [63:0]din;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  system_rp_oscilloscope_0_blk_mem_gen_top_45 \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module system_rp_oscilloscope_0_clk_x_pntrs
   (\dest_out_bin_ff_reg[2] ,
    RD_PNTR_WR,
    \dest_out_bin_ff_reg[2]_0 ,
    WR_PNTR_RD,
    Q,
    ram_empty_i_reg,
    wr_clk,
    \src_gray_ff_reg[3] ,
    rd_clk,
    \src_gray_ff_reg[3]_0 );
  output \dest_out_bin_ff_reg[2] ;
  output [3:0]RD_PNTR_WR;
  output \dest_out_bin_ff_reg[2]_0 ;
  output [3:0]WR_PNTR_RD;
  input [2:0]Q;
  input [2:0]ram_empty_i_reg;
  input wr_clk;
  input [3:0]\src_gray_ff_reg[3] ;
  input rd_clk;
  input [3:0]\src_gray_ff_reg[3]_0 ;

  wire [2:0]Q;
  wire [3:0]RD_PNTR_WR;
  wire [3:0]WR_PNTR_RD;
  wire \dest_out_bin_ff_reg[2] ;
  wire \dest_out_bin_ff_reg[2]_0 ;
  wire [2:0]ram_empty_i_reg;
  wire rd_clk;
  wire [3:0]\src_gray_ff_reg[3] ;
  wire [3:0]\src_gray_ff_reg[3]_0 ;
  wire wr_clk;

  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_empty_i_i_4
       (.I0(WR_PNTR_RD[2]),
        .I1(ram_empty_i_reg[2]),
        .I2(WR_PNTR_RD[1]),
        .I3(ram_empty_i_reg[1]),
        .I4(ram_empty_i_reg[0]),
        .I5(WR_PNTR_RD[0]),
        .O(\dest_out_bin_ff_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_full_i_i_2
       (.I0(RD_PNTR_WR[2]),
        .I1(Q[2]),
        .I2(RD_PNTR_WR[1]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(RD_PNTR_WR[0]),
        .O(\dest_out_bin_ff_reg[2] ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_gray rd_pntr_cdc_inst
       (.dest_clk(wr_clk),
        .dest_out_bin(RD_PNTR_WR),
        .src_clk(rd_clk),
        .src_in_bin(\src_gray_ff_reg[3]_0 ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_gray__14 wr_pntr_cdc_inst
       (.dest_clk(rd_clk),
        .dest_out_bin(WR_PNTR_RD),
        .src_clk(wr_clk),
        .src_in_bin(\src_gray_ff_reg[3] ));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module system_rp_oscilloscope_0_clk_x_pntrs__parameterized0
   (S,
    WR_PNTR_RD,
    \dest_out_bin_ff_reg[7] ,
    \dest_out_bin_ff_reg[8] ,
    \dest_out_bin_ff_reg[8]_0 ,
    v1_reg,
    RD_PNTR_WR,
    v1_reg_0,
    v1_reg_1,
    v1_reg_2,
    Q,
    \gmux.gm[3].gms.ms ,
    \gmux.gm[3].gms.ms_0 ,
    \gmux.gm[4].gms.ms ,
    wr_clk,
    \src_gray_ff_reg[8] ,
    rd_clk);
  output [3:0]S;
  output [7:0]WR_PNTR_RD;
  output [3:0]\dest_out_bin_ff_reg[7] ;
  output \dest_out_bin_ff_reg[8] ;
  output [0:0]\dest_out_bin_ff_reg[8]_0 ;
  output [3:0]v1_reg;
  output [8:0]RD_PNTR_WR;
  output [3:0]v1_reg_0;
  output [3:0]v1_reg_1;
  output [0:0]v1_reg_2;
  input [8:0]Q;
  input [7:0]\gmux.gm[3].gms.ms ;
  input [7:0]\gmux.gm[3].gms.ms_0 ;
  input [0:0]\gmux.gm[4].gms.ms ;
  input wr_clk;
  input [8:0]\src_gray_ff_reg[8] ;
  input rd_clk;

  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire [3:0]S;
  wire [7:0]WR_PNTR_RD;
  wire [3:0]\dest_out_bin_ff_reg[7] ;
  wire \dest_out_bin_ff_reg[8] ;
  wire [0:0]\dest_out_bin_ff_reg[8]_0 ;
  wire [7:0]\gmux.gm[3].gms.ms ;
  wire [7:0]\gmux.gm[3].gms.ms_0 ;
  wire [0:0]\gmux.gm[4].gms.ms ;
  wire rd_clk;
  wire [8:0]\src_gray_ff_reg[8] ;
  wire [3:0]v1_reg;
  wire [3:0]v1_reg_0;
  wire [3:0]v1_reg_1;
  wire [0:0]v1_reg_2;
  wire wr_clk;
  wire [8:8]wr_pntr_rd;

  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(RD_PNTR_WR[0]),
        .I1(\gmux.gm[3].gms.ms [0]),
        .I2(RD_PNTR_WR[1]),
        .I3(\gmux.gm[3].gms.ms [1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__0 
       (.I0(RD_PNTR_WR[0]),
        .I1(\gmux.gm[3].gms.ms_0 [0]),
        .I2(RD_PNTR_WR[1]),
        .I3(\gmux.gm[3].gms.ms_0 [1]),
        .O(v1_reg_0[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__1 
       (.I0(WR_PNTR_RD[0]),
        .I1(Q[0]),
        .I2(WR_PNTR_RD[1]),
        .I3(Q[1]),
        .O(v1_reg_1[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(RD_PNTR_WR[2]),
        .I1(\gmux.gm[3].gms.ms [2]),
        .I2(RD_PNTR_WR[3]),
        .I3(\gmux.gm[3].gms.ms [3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[2]),
        .I1(\gmux.gm[3].gms.ms_0 [2]),
        .I2(RD_PNTR_WR[3]),
        .I3(\gmux.gm[3].gms.ms_0 [3]),
        .O(v1_reg_0[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__1 
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .I2(WR_PNTR_RD[3]),
        .I3(Q[3]),
        .O(v1_reg_1[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(RD_PNTR_WR[4]),
        .I1(\gmux.gm[3].gms.ms [4]),
        .I2(RD_PNTR_WR[5]),
        .I3(\gmux.gm[3].gms.ms [5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[4]),
        .I1(\gmux.gm[3].gms.ms_0 [4]),
        .I2(RD_PNTR_WR[5]),
        .I3(\gmux.gm[3].gms.ms_0 [5]),
        .O(v1_reg_0[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__1 
       (.I0(WR_PNTR_RD[4]),
        .I1(Q[4]),
        .I2(WR_PNTR_RD[5]),
        .I3(Q[5]),
        .O(v1_reg_1[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(RD_PNTR_WR[6]),
        .I1(\gmux.gm[3].gms.ms [6]),
        .I2(RD_PNTR_WR[7]),
        .I3(\gmux.gm[3].gms.ms [7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[6]),
        .I1(\gmux.gm[3].gms.ms_0 [6]),
        .I2(RD_PNTR_WR[7]),
        .I3(\gmux.gm[3].gms.ms_0 [7]),
        .O(v1_reg_0[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__1 
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .I2(WR_PNTR_RD[7]),
        .I3(Q[7]),
        .O(v1_reg_1[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__1 
       (.I0(wr_pntr_rd),
        .I1(\gmux.gm[4].gms.ms ),
        .O(v1_reg_2));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__2 
       (.I0(wr_pntr_rd),
        .I1(Q[8]),
        .O(\dest_out_bin_ff_reg[8] ));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_1__0
       (.I0(WR_PNTR_RD[7]),
        .I1(Q[7]),
        .O(\dest_out_bin_ff_reg[7] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_2__0
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .O(\dest_out_bin_ff_reg[7] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_3__0
       (.I0(WR_PNTR_RD[5]),
        .I1(Q[5]),
        .O(\dest_out_bin_ff_reg[7] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_4__0
       (.I0(WR_PNTR_RD[4]),
        .I1(Q[4]),
        .O(\dest_out_bin_ff_reg[7] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__1_i_1__0
       (.I0(wr_pntr_rd),
        .I1(Q[8]),
        .O(\dest_out_bin_ff_reg[8]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_1__0
       (.I0(WR_PNTR_RD[3]),
        .I1(Q[3]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_2__0
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_3__0
       (.I0(WR_PNTR_RD[1]),
        .I1(Q[1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_4__0
       (.I0(WR_PNTR_RD[0]),
        .I1(Q[0]),
        .O(S[0]));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_gray__parameterized2 rd_pntr_cdc_inst
       (.dest_clk(wr_clk),
        .dest_out_bin(RD_PNTR_WR),
        .src_clk(rd_clk),
        .src_in_bin(Q));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_gray__parameterized2__6 wr_pntr_cdc_inst
       (.dest_clk(rd_clk),
        .dest_out_bin({wr_pntr_rd,WR_PNTR_RD}),
        .src_clk(wr_clk),
        .src_in_bin(\src_gray_ff_reg[8] ));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module system_rp_oscilloscope_0_clk_x_pntrs__parameterized0__xdcDup__1
   (S,
    WR_PNTR_RD,
    \dest_out_bin_ff_reg[7] ,
    \dest_out_bin_ff_reg[8] ,
    \dest_out_bin_ff_reg[8]_0 ,
    v1_reg,
    RD_PNTR_WR,
    v1_reg_0,
    v1_reg_1,
    v1_reg_2,
    Q,
    \gmux.gm[3].gms.ms ,
    \gmux.gm[3].gms.ms_0 ,
    \gmux.gm[4].gms.ms ,
    wr_clk,
    \src_gray_ff_reg[8] ,
    rd_clk);
  output [3:0]S;
  output [7:0]WR_PNTR_RD;
  output [3:0]\dest_out_bin_ff_reg[7] ;
  output \dest_out_bin_ff_reg[8] ;
  output [0:0]\dest_out_bin_ff_reg[8]_0 ;
  output [3:0]v1_reg;
  output [8:0]RD_PNTR_WR;
  output [3:0]v1_reg_0;
  output [3:0]v1_reg_1;
  output [0:0]v1_reg_2;
  input [8:0]Q;
  input [7:0]\gmux.gm[3].gms.ms ;
  input [7:0]\gmux.gm[3].gms.ms_0 ;
  input [0:0]\gmux.gm[4].gms.ms ;
  input wr_clk;
  input [8:0]\src_gray_ff_reg[8] ;
  input rd_clk;

  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire [3:0]S;
  wire [7:0]WR_PNTR_RD;
  wire [3:0]\dest_out_bin_ff_reg[7] ;
  wire \dest_out_bin_ff_reg[8] ;
  wire [0:0]\dest_out_bin_ff_reg[8]_0 ;
  wire [7:0]\gmux.gm[3].gms.ms ;
  wire [7:0]\gmux.gm[3].gms.ms_0 ;
  wire [0:0]\gmux.gm[4].gms.ms ;
  wire rd_clk;
  wire [8:0]\src_gray_ff_reg[8] ;
  wire [3:0]v1_reg;
  wire [3:0]v1_reg_0;
  wire [3:0]v1_reg_1;
  wire [0:0]v1_reg_2;
  wire wr_clk;
  wire [8:8]wr_pntr_rd;

  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(RD_PNTR_WR[0]),
        .I1(\gmux.gm[3].gms.ms [0]),
        .I2(RD_PNTR_WR[1]),
        .I3(\gmux.gm[3].gms.ms [1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__0 
       (.I0(RD_PNTR_WR[0]),
        .I1(\gmux.gm[3].gms.ms_0 [0]),
        .I2(RD_PNTR_WR[1]),
        .I3(\gmux.gm[3].gms.ms_0 [1]),
        .O(v1_reg_0[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__1 
       (.I0(WR_PNTR_RD[0]),
        .I1(Q[0]),
        .I2(WR_PNTR_RD[1]),
        .I3(Q[1]),
        .O(v1_reg_1[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(RD_PNTR_WR[2]),
        .I1(\gmux.gm[3].gms.ms [2]),
        .I2(RD_PNTR_WR[3]),
        .I3(\gmux.gm[3].gms.ms [3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[2]),
        .I1(\gmux.gm[3].gms.ms_0 [2]),
        .I2(RD_PNTR_WR[3]),
        .I3(\gmux.gm[3].gms.ms_0 [3]),
        .O(v1_reg_0[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__1 
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .I2(WR_PNTR_RD[3]),
        .I3(Q[3]),
        .O(v1_reg_1[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(RD_PNTR_WR[4]),
        .I1(\gmux.gm[3].gms.ms [4]),
        .I2(RD_PNTR_WR[5]),
        .I3(\gmux.gm[3].gms.ms [5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[4]),
        .I1(\gmux.gm[3].gms.ms_0 [4]),
        .I2(RD_PNTR_WR[5]),
        .I3(\gmux.gm[3].gms.ms_0 [5]),
        .O(v1_reg_0[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__1 
       (.I0(WR_PNTR_RD[4]),
        .I1(Q[4]),
        .I2(WR_PNTR_RD[5]),
        .I3(Q[5]),
        .O(v1_reg_1[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(RD_PNTR_WR[6]),
        .I1(\gmux.gm[3].gms.ms [6]),
        .I2(RD_PNTR_WR[7]),
        .I3(\gmux.gm[3].gms.ms [7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[6]),
        .I1(\gmux.gm[3].gms.ms_0 [6]),
        .I2(RD_PNTR_WR[7]),
        .I3(\gmux.gm[3].gms.ms_0 [7]),
        .O(v1_reg_0[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__1 
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .I2(WR_PNTR_RD[7]),
        .I3(Q[7]),
        .O(v1_reg_1[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__1 
       (.I0(wr_pntr_rd),
        .I1(\gmux.gm[4].gms.ms ),
        .O(v1_reg_2));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__2 
       (.I0(wr_pntr_rd),
        .I1(Q[8]),
        .O(\dest_out_bin_ff_reg[8] ));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_1__0
       (.I0(WR_PNTR_RD[7]),
        .I1(Q[7]),
        .O(\dest_out_bin_ff_reg[7] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_2__0
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .O(\dest_out_bin_ff_reg[7] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_3__0
       (.I0(WR_PNTR_RD[5]),
        .I1(Q[5]),
        .O(\dest_out_bin_ff_reg[7] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_4__0
       (.I0(WR_PNTR_RD[4]),
        .I1(Q[4]),
        .O(\dest_out_bin_ff_reg[7] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__1_i_1__0
       (.I0(wr_pntr_rd),
        .I1(Q[8]),
        .O(\dest_out_bin_ff_reg[8]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_1__0
       (.I0(WR_PNTR_RD[3]),
        .I1(Q[3]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_2__0
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_3__0
       (.I0(WR_PNTR_RD[1]),
        .I1(Q[1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_4__0
       (.I0(WR_PNTR_RD[0]),
        .I1(Q[0]),
        .O(S[0]));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_gray__parameterized2__5 rd_pntr_cdc_inst
       (.dest_clk(wr_clk),
        .dest_out_bin(RD_PNTR_WR),
        .src_clk(rd_clk),
        .src_in_bin(Q));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_gray__parameterized2__4 wr_pntr_cdc_inst
       (.dest_clk(rd_clk),
        .dest_out_bin({wr_pntr_rd,WR_PNTR_RD}),
        .src_clk(wr_clk),
        .src_in_bin(\src_gray_ff_reg[8] ));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module system_rp_oscilloscope_0_clk_x_pntrs__xdcDup__1
   (\dest_out_bin_ff_reg[2] ,
    RD_PNTR_WR,
    \dest_out_bin_ff_reg[2]_0 ,
    WR_PNTR_RD,
    Q,
    ram_empty_i_reg,
    wr_clk,
    \src_gray_ff_reg[3] ,
    rd_clk,
    \src_gray_ff_reg[3]_0 );
  output \dest_out_bin_ff_reg[2] ;
  output [3:0]RD_PNTR_WR;
  output \dest_out_bin_ff_reg[2]_0 ;
  output [3:0]WR_PNTR_RD;
  input [2:0]Q;
  input [2:0]ram_empty_i_reg;
  input wr_clk;
  input [3:0]\src_gray_ff_reg[3] ;
  input rd_clk;
  input [3:0]\src_gray_ff_reg[3]_0 ;

  wire [2:0]Q;
  wire [3:0]RD_PNTR_WR;
  wire [3:0]WR_PNTR_RD;
  wire \dest_out_bin_ff_reg[2] ;
  wire \dest_out_bin_ff_reg[2]_0 ;
  wire [2:0]ram_empty_i_reg;
  wire rd_clk;
  wire [3:0]\src_gray_ff_reg[3] ;
  wire [3:0]\src_gray_ff_reg[3]_0 ;
  wire wr_clk;

  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_empty_i_i_4
       (.I0(WR_PNTR_RD[2]),
        .I1(ram_empty_i_reg[2]),
        .I2(WR_PNTR_RD[1]),
        .I3(ram_empty_i_reg[1]),
        .I4(ram_empty_i_reg[0]),
        .I5(WR_PNTR_RD[0]),
        .O(\dest_out_bin_ff_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_full_i_i_2
       (.I0(RD_PNTR_WR[2]),
        .I1(Q[2]),
        .I2(RD_PNTR_WR[1]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(RD_PNTR_WR[0]),
        .O(\dest_out_bin_ff_reg[2] ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_gray__9 rd_pntr_cdc_inst
       (.dest_clk(wr_clk),
        .dest_out_bin(RD_PNTR_WR),
        .src_clk(rd_clk),
        .src_in_bin(\src_gray_ff_reg[3]_0 ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_gray__8 wr_pntr_cdc_inst
       (.dest_clk(rd_clk),
        .dest_out_bin(WR_PNTR_RD),
        .src_clk(wr_clk),
        .src_in_bin(\src_gray_ff_reg[3] ));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module system_rp_oscilloscope_0_clk_x_pntrs__xdcDup__2
   (\dest_out_bin_ff_reg[2] ,
    RD_PNTR_WR,
    \dest_out_bin_ff_reg[2]_0 ,
    WR_PNTR_RD,
    Q,
    ram_empty_i_reg,
    wr_clk,
    \src_gray_ff_reg[3] ,
    rd_clk,
    \src_gray_ff_reg[3]_0 );
  output \dest_out_bin_ff_reg[2] ;
  output [3:0]RD_PNTR_WR;
  output \dest_out_bin_ff_reg[2]_0 ;
  output [3:0]WR_PNTR_RD;
  input [2:0]Q;
  input [2:0]ram_empty_i_reg;
  input wr_clk;
  input [3:0]\src_gray_ff_reg[3] ;
  input rd_clk;
  input [3:0]\src_gray_ff_reg[3]_0 ;

  wire [2:0]Q;
  wire [3:0]RD_PNTR_WR;
  wire [3:0]WR_PNTR_RD;
  wire \dest_out_bin_ff_reg[2] ;
  wire \dest_out_bin_ff_reg[2]_0 ;
  wire [2:0]ram_empty_i_reg;
  wire rd_clk;
  wire [3:0]\src_gray_ff_reg[3] ;
  wire [3:0]\src_gray_ff_reg[3]_0 ;
  wire wr_clk;

  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_empty_i_i_4
       (.I0(WR_PNTR_RD[2]),
        .I1(ram_empty_i_reg[2]),
        .I2(WR_PNTR_RD[1]),
        .I3(ram_empty_i_reg[1]),
        .I4(ram_empty_i_reg[0]),
        .I5(WR_PNTR_RD[0]),
        .O(\dest_out_bin_ff_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_full_i_i_2
       (.I0(RD_PNTR_WR[2]),
        .I1(Q[2]),
        .I2(RD_PNTR_WR[1]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(RD_PNTR_WR[0]),
        .O(\dest_out_bin_ff_reg[2] ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_gray__11 rd_pntr_cdc_inst
       (.dest_clk(wr_clk),
        .dest_out_bin(RD_PNTR_WR),
        .src_clk(rd_clk),
        .src_in_bin(\src_gray_ff_reg[3]_0 ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_gray__10 wr_pntr_cdc_inst
       (.dest_clk(rd_clk),
        .dest_out_bin(WR_PNTR_RD),
        .src_clk(wr_clk),
        .src_in_bin(\src_gray_ff_reg[3] ));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module system_rp_oscilloscope_0_clk_x_pntrs__xdcDup__3
   (\dest_out_bin_ff_reg[2] ,
    RD_PNTR_WR,
    \dest_out_bin_ff_reg[2]_0 ,
    WR_PNTR_RD,
    Q,
    ram_empty_i_reg,
    wr_clk,
    \src_gray_ff_reg[3] ,
    rd_clk,
    \src_gray_ff_reg[3]_0 );
  output \dest_out_bin_ff_reg[2] ;
  output [3:0]RD_PNTR_WR;
  output \dest_out_bin_ff_reg[2]_0 ;
  output [3:0]WR_PNTR_RD;
  input [2:0]Q;
  input [2:0]ram_empty_i_reg;
  input wr_clk;
  input [3:0]\src_gray_ff_reg[3] ;
  input rd_clk;
  input [3:0]\src_gray_ff_reg[3]_0 ;

  wire [2:0]Q;
  wire [3:0]RD_PNTR_WR;
  wire [3:0]WR_PNTR_RD;
  wire \dest_out_bin_ff_reg[2] ;
  wire \dest_out_bin_ff_reg[2]_0 ;
  wire [2:0]ram_empty_i_reg;
  wire rd_clk;
  wire [3:0]\src_gray_ff_reg[3] ;
  wire [3:0]\src_gray_ff_reg[3]_0 ;
  wire wr_clk;

  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_empty_i_i_4
       (.I0(WR_PNTR_RD[2]),
        .I1(ram_empty_i_reg[2]),
        .I2(WR_PNTR_RD[1]),
        .I3(ram_empty_i_reg[1]),
        .I4(ram_empty_i_reg[0]),
        .I5(WR_PNTR_RD[0]),
        .O(\dest_out_bin_ff_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_full_i_i_2
       (.I0(RD_PNTR_WR[2]),
        .I1(Q[2]),
        .I2(RD_PNTR_WR[1]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(RD_PNTR_WR[0]),
        .O(\dest_out_bin_ff_reg[2] ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_gray__13 rd_pntr_cdc_inst
       (.dest_clk(wr_clk),
        .dest_out_bin(RD_PNTR_WR),
        .src_clk(rd_clk),
        .src_in_bin(\src_gray_ff_reg[3]_0 ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_gray__12 wr_pntr_cdc_inst
       (.dest_clk(rd_clk),
        .dest_out_bin(WR_PNTR_RD),
        .src_clk(wr_clk),
        .src_in_bin(\src_gray_ff_reg[3] ));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module system_rp_oscilloscope_0_compare__parameterized0
   (comp1,
    \gmux.gm[4].gms.ms_0 ,
    v1_reg);
  output comp1;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input [0:0]v1_reg;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  wire [0:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(\gmux.gm[4].gms.ms_0 ));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module system_rp_oscilloscope_0_compare__parameterized0_10
   (ram_full_fb_i_reg,
    \gmux.gm[4].gms.ms_0 ,
    v1_reg_0,
    out,
    wr_en,
    comp1,
    ram_full_fb_i_reg_0);
  output ram_full_fb_i_reg;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input [0:0]v1_reg_0;
  input out;
  input wr_en;
  input comp1;
  input ram_full_fb_i_reg_0;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire comp2;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  wire out;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire [0:0]v1_reg_0;
  wire wr_en;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(\gmux.gm[4].gms.ms_0 ));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp2}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg_0}));
  LUT5 #(
    .INIT(32'h0000FF20)) 
    ram_full_i_i_1
       (.I0(comp2),
        .I1(out),
        .I2(wr_en),
        .I3(comp1),
        .I4(ram_full_fb_i_reg_0),
        .O(ram_full_fb_i_reg));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module system_rp_oscilloscope_0_compare__parameterized0_11
   (ram_empty_fb_i_reg,
    v1_reg,
    ram_empty_fb_i_reg_0,
    out,
    rd_en,
    ram_empty_fb_i_reg_1,
    comp1);
  output ram_empty_fb_i_reg;
  input [3:0]v1_reg;
  input ram_empty_fb_i_reg_0;
  input out;
  input rd_en;
  input [1:0]ram_empty_fb_i_reg_1;
  input comp1;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp0;
  wire comp1;
  wire out;
  wire ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire [1:0]ram_empty_fb_i_reg_1;
  wire rd_en;
  wire [3:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp0}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],ram_empty_fb_i_reg_0}));
  LUT6 #(
    .INIT(64'hBABBBBBBAAAAAAAA)) 
    ram_empty_i_i_1
       (.I0(comp0),
        .I1(out),
        .I2(rd_en),
        .I3(ram_empty_fb_i_reg_1[1]),
        .I4(ram_empty_fb_i_reg_1[0]),
        .I5(comp1),
        .O(ram_empty_fb_i_reg));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module system_rp_oscilloscope_0_compare__parameterized0_12
   (comp1,
    v1_reg_0,
    ram_empty_fb_i_reg);
  output comp1;
  input [3:0]v1_reg_0;
  input [0:0]ram_empty_fb_i_reg;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire [0:0]ram_empty_fb_i_reg;
  wire [3:0]v1_reg_0;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_0));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],ram_empty_fb_i_reg}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module system_rp_oscilloscope_0_compare__parameterized0_52
   (comp1,
    \gmux.gm[4].gms.ms_0 ,
    v1_reg);
  output comp1;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input [0:0]v1_reg;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  wire [0:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(\gmux.gm[4].gms.ms_0 ));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module system_rp_oscilloscope_0_compare__parameterized0_53
   (ram_full_fb_i_reg,
    \gmux.gm[4].gms.ms_0 ,
    v1_reg_0,
    out,
    wr_en,
    comp1,
    ram_full_fb_i_reg_0);
  output ram_full_fb_i_reg;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input [0:0]v1_reg_0;
  input out;
  input wr_en;
  input comp1;
  input ram_full_fb_i_reg_0;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire comp2;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  wire out;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire [0:0]v1_reg_0;
  wire wr_en;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(\gmux.gm[4].gms.ms_0 ));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp2}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg_0}));
  LUT5 #(
    .INIT(32'h0000FF20)) 
    ram_full_i_i_1
       (.I0(comp2),
        .I1(out),
        .I2(wr_en),
        .I3(comp1),
        .I4(ram_full_fb_i_reg_0),
        .O(ram_full_fb_i_reg));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module system_rp_oscilloscope_0_compare__parameterized0_58
   (ram_empty_fb_i_reg,
    v1_reg,
    ram_empty_fb_i_reg_0,
    out,
    rd_en,
    ram_empty_fb_i_reg_1,
    comp1);
  output ram_empty_fb_i_reg;
  input [3:0]v1_reg;
  input ram_empty_fb_i_reg_0;
  input out;
  input rd_en;
  input [1:0]ram_empty_fb_i_reg_1;
  input comp1;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp0;
  wire comp1;
  wire out;
  wire ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire [1:0]ram_empty_fb_i_reg_1;
  wire rd_en;
  wire [3:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp0}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],ram_empty_fb_i_reg_0}));
  LUT6 #(
    .INIT(64'hBABBBBBBAAAAAAAA)) 
    ram_empty_i_i_1
       (.I0(comp0),
        .I1(out),
        .I2(rd_en),
        .I3(ram_empty_fb_i_reg_1[1]),
        .I4(ram_empty_fb_i_reg_1[0]),
        .I5(comp1),
        .O(ram_empty_fb_i_reg));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module system_rp_oscilloscope_0_compare__parameterized0_59
   (comp1,
    v1_reg_0,
    ram_empty_fb_i_reg);
  output comp1;
  input [3:0]v1_reg_0;
  input [0:0]ram_empty_fb_i_reg;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire [0:0]ram_empty_fb_i_reg;
  wire [3:0]v1_reg_0;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_0));
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],ram_empty_fb_i_reg}));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module system_rp_oscilloscope_0_dmem
   (Q,
    wr_clk,
    EN,
    din,
    \gpr1.dout_i_reg[1]_0 ,
    count_d2,
    E,
    rd_clk,
    AR);
  output [7:0]Q;
  input wr_clk;
  input EN;
  input [7:0]din;
  input [3:0]\gpr1.dout_i_reg[1]_0 ;
  input [3:0]count_d2;
  input [0:0]E;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire EN;
  wire [7:0]Q;
  wire [3:0]count_d2;
  wire [7:0]din;
  wire [7:0]dout_i0;
  wire [3:0]\gpr1.dout_i_reg[1]_0 ;
  wire rd_clk;
  wire wr_clk;
  wire [1:0]NLW_RAM_reg_0_15_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_6_7_DOB_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_6_7_DOC_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_6_7_DOD_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "128" *) 
  (* RTL_RAM_NAME = "inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gdm.dm_gen.dm/RAM" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "5" *) 
  RAM32M RAM_reg_0_15_0_5
       (.ADDRA({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRB({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRC({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRD({1'b0,count_d2}),
        .DIA(din[1:0]),
        .DIB(din[3:2]),
        .DIC(din[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(dout_i0[1:0]),
        .DOB(dout_i0[3:2]),
        .DOC(dout_i0[5:4]),
        .DOD(NLW_RAM_reg_0_15_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(EN));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "128" *) 
  (* RTL_RAM_NAME = "inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gdm.dm_gen.dm/RAM" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "7" *) 
  RAM32M RAM_reg_0_15_6_7
       (.ADDRA({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRB({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRC({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRD({1'b0,count_d2}),
        .DIA(din[7:6]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(dout_i0[7:6]),
        .DOB(NLW_RAM_reg_0_15_6_7_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_RAM_reg_0_15_6_7_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_RAM_reg_0_15_6_7_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(EN));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[7]),
        .Q(Q[7]));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module system_rp_oscilloscope_0_dmem_25
   (Q,
    wr_clk,
    EN,
    din,
    \gpr1.dout_i_reg[1]_0 ,
    count_d2,
    E,
    rd_clk,
    AR);
  output [7:0]Q;
  input wr_clk;
  input EN;
  input [7:0]din;
  input [3:0]\gpr1.dout_i_reg[1]_0 ;
  input [3:0]count_d2;
  input [0:0]E;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire EN;
  wire [7:0]Q;
  wire [3:0]count_d2;
  wire [7:0]din;
  wire [7:0]dout_i0;
  wire [3:0]\gpr1.dout_i_reg[1]_0 ;
  wire rd_clk;
  wire wr_clk;
  wire [1:0]NLW_RAM_reg_0_15_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_6_7_DOB_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_6_7_DOC_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_6_7_DOD_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "128" *) 
  (* RTL_RAM_NAME = "inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gdm.dm_gen.dm/RAM" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "5" *) 
  RAM32M RAM_reg_0_15_0_5
       (.ADDRA({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRB({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRC({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRD({1'b0,count_d2}),
        .DIA(din[1:0]),
        .DIB(din[3:2]),
        .DIC(din[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(dout_i0[1:0]),
        .DOB(dout_i0[3:2]),
        .DOC(dout_i0[5:4]),
        .DOD(NLW_RAM_reg_0_15_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(EN));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "128" *) 
  (* RTL_RAM_NAME = "inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gdm.dm_gen.dm/RAM" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "7" *) 
  RAM32M RAM_reg_0_15_6_7
       (.ADDRA({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRB({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRC({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRD({1'b0,count_d2}),
        .DIA(din[7:6]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(dout_i0[7:6]),
        .DOB(NLW_RAM_reg_0_15_6_7_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_RAM_reg_0_15_6_7_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_RAM_reg_0_15_6_7_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(EN));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[7]),
        .Q(Q[7]));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module system_rp_oscilloscope_0_dmem_34
   (Q,
    wr_clk,
    EN,
    din,
    \gpr1.dout_i_reg[1]_0 ,
    count_d2,
    E,
    rd_clk,
    AR);
  output [7:0]Q;
  input wr_clk;
  input EN;
  input [7:0]din;
  input [3:0]\gpr1.dout_i_reg[1]_0 ;
  input [3:0]count_d2;
  input [0:0]E;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire EN;
  wire [7:0]Q;
  wire [3:0]count_d2;
  wire [7:0]din;
  wire [7:0]dout_i0;
  wire [3:0]\gpr1.dout_i_reg[1]_0 ;
  wire rd_clk;
  wire wr_clk;
  wire [1:0]NLW_RAM_reg_0_15_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_6_7_DOB_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_6_7_DOC_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_6_7_DOD_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "128" *) 
  (* RTL_RAM_NAME = "inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gdm.dm_gen.dm/RAM" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "5" *) 
  RAM32M RAM_reg_0_15_0_5
       (.ADDRA({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRB({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRC({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRD({1'b0,count_d2}),
        .DIA(din[1:0]),
        .DIB(din[3:2]),
        .DIC(din[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(dout_i0[1:0]),
        .DOB(dout_i0[3:2]),
        .DOC(dout_i0[5:4]),
        .DOD(NLW_RAM_reg_0_15_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(EN));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "128" *) 
  (* RTL_RAM_NAME = "inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gdm.dm_gen.dm/RAM" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "7" *) 
  RAM32M RAM_reg_0_15_6_7
       (.ADDRA({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRB({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRC({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRD({1'b0,count_d2}),
        .DIA(din[7:6]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(dout_i0[7:6]),
        .DOB(NLW_RAM_reg_0_15_6_7_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_RAM_reg_0_15_6_7_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_RAM_reg_0_15_6_7_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(EN));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[7]),
        .Q(Q[7]));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module system_rp_oscilloscope_0_dmem_4
   (Q,
    wr_clk,
    EN,
    din,
    \gpr1.dout_i_reg[1]_0 ,
    count_d2,
    E,
    rd_clk,
    AR);
  output [7:0]Q;
  input wr_clk;
  input EN;
  input [7:0]din;
  input [3:0]\gpr1.dout_i_reg[1]_0 ;
  input [3:0]count_d2;
  input [0:0]E;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire EN;
  wire [7:0]Q;
  wire [3:0]count_d2;
  wire [7:0]din;
  wire [7:0]dout_i0;
  wire [3:0]\gpr1.dout_i_reg[1]_0 ;
  wire rd_clk;
  wire wr_clk;
  wire [1:0]NLW_RAM_reg_0_15_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_6_7_DOB_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_6_7_DOC_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_6_7_DOD_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "128" *) 
  (* RTL_RAM_NAME = "inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gdm.dm_gen.dm/RAM" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "5" *) 
  RAM32M RAM_reg_0_15_0_5
       (.ADDRA({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRB({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRC({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRD({1'b0,count_d2}),
        .DIA(din[1:0]),
        .DIB(din[3:2]),
        .DIC(din[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(dout_i0[1:0]),
        .DOB(dout_i0[3:2]),
        .DOC(dout_i0[5:4]),
        .DOD(NLW_RAM_reg_0_15_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(EN));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "128" *) 
  (* RTL_RAM_NAME = "inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gdm.dm_gen.dm/RAM" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "7" *) 
  RAM32M RAM_reg_0_15_6_7
       (.ADDRA({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRB({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRC({1'b0,\gpr1.dout_i_reg[1]_0 }),
        .ADDRD({1'b0,count_d2}),
        .DIA(din[7:6]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(dout_i0[7:6]),
        .DOB(NLW_RAM_reg_0_15_6_7_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_RAM_reg_0_15_6_7_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_RAM_reg_0_15_6_7_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(EN));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(dout_i0[7]),
        .Q(Q[7]));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module system_rp_oscilloscope_0_fifo_generator_ramfifo
   (wr_rst_busy,
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    empty,
    full,
    dout,
    rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en);
  output wr_rst_busy;
  output \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output empty;
  output full;
  output [7:0]dout;
  input rst;
  input wr_clk;
  input rd_clk;
  input [7:0]din;
  input wr_en;
  input rd_en;

  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_5 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire ram_rd_en_i;
  wire ram_regout_en;
  wire ram_wr_en;
  wire rd_clk;
  wire rd_en;
  wire [3:0]rd_pntr;
  wire [2:0]rd_pntr_plus1;
  wire [3:0]rd_pntr_wr;
  wire rst;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire rstblk_n_0;
  wire wr_clk;
  wire wr_en;
  wire [3:0]wr_pntr;
  wire [2:0]wr_pntr_plus2;
  wire [3:0]wr_pntr_rd;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_clk_x_pntrs \gntv_or_sync_fifo.gcx.clkx 
       (.Q(wr_pntr_plus2),
        .RD_PNTR_WR(rd_pntr_wr),
        .WR_PNTR_RD(wr_pntr_rd),
        .\dest_out_bin_ff_reg[2] (\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .\dest_out_bin_ff_reg[2]_0 (\gntv_or_sync_fifo.gcx.clkx_n_5 ),
        .ram_empty_i_reg(rd_pntr_plus1),
        .rd_clk(rd_clk),
        .\src_gray_ff_reg[3] (wr_pntr),
        .\src_gray_ff_reg[3]_0 (rd_pntr),
        .wr_clk(wr_clk));
  system_rp_oscilloscope_0_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.AR(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .E(ram_regout_en),
        .Q(rd_pntr_plus1),
        .WR_PNTR_RD(wr_pntr_rd),
        .empty(empty),
        .\gc0.count_d1_reg[3] (rd_pntr),
        .\gpregsm1.curr_fwft_state_reg[1] (ram_rd_en_i),
        .ram_empty_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_5 ),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  system_rp_oscilloscope_0_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.AR(rstblk_n_0),
        .E(ram_wr_en),
        .Q(wr_pntr_plus2),
        .RD_PNTR_WR(rd_pntr_wr),
        .full(full),
        .\gic0.gc0.count_d2_reg[3] (wr_pntr),
        .out(rst_full_ff_i),
        .ram_full_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .ram_full_i_reg_0(rst_full_gen_i),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  system_rp_oscilloscope_0_memory \gntv_or_sync_fifo.mem 
       (.AR(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .E(ram_rd_en_i),
        .EN(ram_wr_en),
        .count_d2(wr_pntr),
        .din(din),
        .dout(dout),
        .\goreg_dm.dout_i_reg[7]_0 (ram_regout_en),
        .\gpr1.dout_i_reg[1] (rd_pntr),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  system_rp_oscilloscope_0_reset_blk_ramfifo rstblk
       (.AR(rstblk_n_0),
        .\grstd1.grst_full.grst_f.rst_d3_reg_0 (rst_full_gen_i),
        .\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 (\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .out(rst_full_ff_i),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module system_rp_oscilloscope_0_fifo_generator_ramfifo__parameterized0
   (\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    wr_rst_busy,
    empty,
    full,
    dout,
    rd_data_count,
    wr_data_count,
    wr_clk,
    rd_clk,
    rst,
    din,
    wr_en,
    rd_en);
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output wr_rst_busy;
  output empty;
  output full;
  output [63:0]dout;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  input wr_clk;
  input rd_clk;
  input rst;
  input [63:0]din;
  input wr_en;
  input rd_en;

  wire [63:0]din;
  wire [63:0]dout;
  wire empty;
  wire full;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/POR_B ;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ram_rstram_b ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_1 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_12 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_13 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_14 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_15 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_16 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_17 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_2 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_3 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_1 ;
  wire [3:0]\gras.rsts/c0/v1_reg ;
  wire [4:4]\gras.rsts/c1/v1_reg ;
  wire [3:0]\gwas.wsts/c1/v1_reg ;
  wire [3:0]\gwas.wsts/c2/v1_reg ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire ram_regout_en;
  wire ram_wr_en;
  wire rd_clk;
  wire [9:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr;
  wire [8:8]rd_pntr_plus1;
  wire [8:0]rd_pntr_wr;
  wire rst;
  wire rst_full_gen_i;
  wire rstblk_n_0;
  wire wr_clk;
  wire [9:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr;
  wire [7:0]wr_pntr_plus1;
  wire [7:0]wr_pntr_plus2;
  wire [7:0]wr_pntr_rd;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_clk_x_pntrs__parameterized0 \gntv_or_sync_fifo.gcx.clkx 
       (.Q(rd_pntr),
        .RD_PNTR_WR(rd_pntr_wr),
        .S({\gntv_or_sync_fifo.gcx.clkx_n_0 ,\gntv_or_sync_fifo.gcx.clkx_n_1 ,\gntv_or_sync_fifo.gcx.clkx_n_2 ,\gntv_or_sync_fifo.gcx.clkx_n_3 }),
        .WR_PNTR_RD(wr_pntr_rd),
        .\dest_out_bin_ff_reg[7] ({\gntv_or_sync_fifo.gcx.clkx_n_12 ,\gntv_or_sync_fifo.gcx.clkx_n_13 ,\gntv_or_sync_fifo.gcx.clkx_n_14 ,\gntv_or_sync_fifo.gcx.clkx_n_15 }),
        .\dest_out_bin_ff_reg[8] (\gntv_or_sync_fifo.gcx.clkx_n_16 ),
        .\dest_out_bin_ff_reg[8]_0 (\gntv_or_sync_fifo.gcx.clkx_n_17 ),
        .\gmux.gm[3].gms.ms (wr_pntr_plus1),
        .\gmux.gm[3].gms.ms_0 (wr_pntr_plus2),
        .\gmux.gm[4].gms.ms (rd_pntr_plus1),
        .rd_clk(rd_clk),
        .\src_gray_ff_reg[8] (wr_pntr),
        .v1_reg(\gwas.wsts/c1/v1_reg ),
        .v1_reg_0(\gwas.wsts/c2/v1_reg ),
        .v1_reg_1(\gras.rsts/c0/v1_reg ),
        .v1_reg_2(\gras.rsts/c1/v1_reg ),
        .wr_clk(wr_clk));
  system_rp_oscilloscope_0_rd_logic__parameterized0 \gntv_or_sync_fifo.gl0.rd 
       (.E(ram_regout_en),
        .ENB_I(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ),
        .ENB_dly_D(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ),
        .Q(rd_pntr_plus1),
        .S({\gntv_or_sync_fifo.gcx.clkx_n_0 ,\gntv_or_sync_fifo.gcx.clkx_n_1 ,\gntv_or_sync_fifo.gcx.clkx_n_2 ,\gntv_or_sync_fifo.gcx.clkx_n_3 }),
        .SR(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .WR_PNTR_RD(wr_pntr_rd),
        .empty(empty),
        .\g_rd.gvalid_low.rd_dc_i_reg[7] ({\gntv_or_sync_fifo.gcx.clkx_n_12 ,\gntv_or_sync_fifo.gcx.clkx_n_13 ,\gntv_or_sync_fifo.gcx.clkx_n_14 ,\gntv_or_sync_fifo.gcx.clkx_n_15 }),
        .\g_rd.gvalid_low.rd_dc_i_reg[8] (\gntv_or_sync_fifo.gcx.clkx_n_17 ),
        .\gc0.count_d1_reg[8] (rd_pntr),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_16 ),
        .ram_empty_fb_i_reg_0(\gras.rsts/c1/v1_reg ),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .v1_reg(\gras.rsts/c0/v1_reg ));
  system_rp_oscilloscope_0_wr_logic__parameterized0 \gntv_or_sync_fifo.gl0.wr 
       (.E(ram_wr_en),
        .Q(wr_pntr),
        .RD_PNTR_WR(rd_pntr_wr),
        .full(full),
        .\gic0.gc0.count_d1_reg[1] (rstblk_n_0),
        .\gic0.gc0.count_d1_reg[7] (wr_pntr_plus1),
        .\gic0.gc0.count_reg[7] (wr_pntr_plus2),
        .\gmux.gm[4].gms.ms (\gwas.wsts/c1/v1_reg ),
        .\gmux.gm[4].gms.ms_0 (\gwas.wsts/c2/v1_reg ),
        .out(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .ram_full_fb_i_reg(rst_full_gen_i),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en));
  system_rp_oscilloscope_0_memory__parameterized0 \gntv_or_sync_fifo.mem 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (rd_pntr),
        .E(ram_wr_en),
        .ENB_I(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ),
        .ENB_dly_D(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ),
        .POR_B(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/POR_B ),
        .Q(wr_pntr),
        .SR(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .din(din),
        .dout(dout),
        .\goreg_bm.dout_i_reg[63]_0 (ram_regout_en),
        .out(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .ram_rstram_b(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ram_rstram_b ),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  system_rp_oscilloscope_0_reset_blk_ramfifo__parameterized0 rstblk
       (.POR_B(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/POR_B ),
        .SR(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 (rstblk_n_0),
        .out(rst_full_gen_i),
        .ram_rstram_b(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ram_rstram_b ),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module system_rp_oscilloscope_0_fifo_generator_ramfifo__parameterized0__xdcDup__1
   (\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    wr_rst_busy,
    empty,
    full,
    dout,
    rd_data_count,
    wr_data_count,
    wr_clk,
    rd_clk,
    rst,
    din,
    wr_en,
    rd_en);
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output wr_rst_busy;
  output empty;
  output full;
  output [63:0]dout;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  input wr_clk;
  input rd_clk;
  input rst;
  input [63:0]din;
  input wr_en;
  input rd_en;

  wire [63:0]din;
  wire [63:0]dout;
  wire empty;
  wire full;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/POR_B ;
  wire \gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ram_rstram_b ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_1 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_12 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_13 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_14 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_15 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_16 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_17 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_2 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_3 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_1 ;
  wire [3:0]\gras.rsts/c0/v1_reg ;
  wire [4:4]\gras.rsts/c1/v1_reg ;
  wire [3:0]\gwas.wsts/c1/v1_reg ;
  wire [3:0]\gwas.wsts/c2/v1_reg ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire ram_regout_en;
  wire ram_wr_en;
  wire rd_clk;
  wire [9:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr;
  wire [8:8]rd_pntr_plus1;
  wire [8:0]rd_pntr_wr;
  wire rst;
  wire rst_full_gen_i;
  wire rstblk_n_0;
  wire wr_clk;
  wire [9:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr;
  wire [7:0]wr_pntr_plus1;
  wire [7:0]wr_pntr_plus2;
  wire [7:0]wr_pntr_rd;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_clk_x_pntrs__parameterized0__xdcDup__1 \gntv_or_sync_fifo.gcx.clkx 
       (.Q(rd_pntr),
        .RD_PNTR_WR(rd_pntr_wr),
        .S({\gntv_or_sync_fifo.gcx.clkx_n_0 ,\gntv_or_sync_fifo.gcx.clkx_n_1 ,\gntv_or_sync_fifo.gcx.clkx_n_2 ,\gntv_or_sync_fifo.gcx.clkx_n_3 }),
        .WR_PNTR_RD(wr_pntr_rd),
        .\dest_out_bin_ff_reg[7] ({\gntv_or_sync_fifo.gcx.clkx_n_12 ,\gntv_or_sync_fifo.gcx.clkx_n_13 ,\gntv_or_sync_fifo.gcx.clkx_n_14 ,\gntv_or_sync_fifo.gcx.clkx_n_15 }),
        .\dest_out_bin_ff_reg[8] (\gntv_or_sync_fifo.gcx.clkx_n_16 ),
        .\dest_out_bin_ff_reg[8]_0 (\gntv_or_sync_fifo.gcx.clkx_n_17 ),
        .\gmux.gm[3].gms.ms (wr_pntr_plus1),
        .\gmux.gm[3].gms.ms_0 (wr_pntr_plus2),
        .\gmux.gm[4].gms.ms (rd_pntr_plus1),
        .rd_clk(rd_clk),
        .\src_gray_ff_reg[8] (wr_pntr),
        .v1_reg(\gwas.wsts/c1/v1_reg ),
        .v1_reg_0(\gwas.wsts/c2/v1_reg ),
        .v1_reg_1(\gras.rsts/c0/v1_reg ),
        .v1_reg_2(\gras.rsts/c1/v1_reg ),
        .wr_clk(wr_clk));
  system_rp_oscilloscope_0_rd_logic__parameterized0_40 \gntv_or_sync_fifo.gl0.rd 
       (.E(ram_regout_en),
        .ENB_I(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ),
        .ENB_dly_D(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ),
        .Q(rd_pntr_plus1),
        .S({\gntv_or_sync_fifo.gcx.clkx_n_0 ,\gntv_or_sync_fifo.gcx.clkx_n_1 ,\gntv_or_sync_fifo.gcx.clkx_n_2 ,\gntv_or_sync_fifo.gcx.clkx_n_3 }),
        .SR(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .WR_PNTR_RD(wr_pntr_rd),
        .empty(empty),
        .\g_rd.gvalid_low.rd_dc_i_reg[7] ({\gntv_or_sync_fifo.gcx.clkx_n_12 ,\gntv_or_sync_fifo.gcx.clkx_n_13 ,\gntv_or_sync_fifo.gcx.clkx_n_14 ,\gntv_or_sync_fifo.gcx.clkx_n_15 }),
        .\g_rd.gvalid_low.rd_dc_i_reg[8] (\gntv_or_sync_fifo.gcx.clkx_n_17 ),
        .\gc0.count_d1_reg[8] (rd_pntr),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_16 ),
        .ram_empty_fb_i_reg_0(\gras.rsts/c1/v1_reg ),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .v1_reg(\gras.rsts/c0/v1_reg ));
  system_rp_oscilloscope_0_wr_logic__parameterized0_41 \gntv_or_sync_fifo.gl0.wr 
       (.E(ram_wr_en),
        .Q(wr_pntr),
        .RD_PNTR_WR(rd_pntr_wr),
        .full(full),
        .\gic0.gc0.count_d1_reg[1] (rstblk_n_0),
        .\gic0.gc0.count_d1_reg[7] (wr_pntr_plus1),
        .\gic0.gc0.count_reg[7] (wr_pntr_plus2),
        .\gmux.gm[4].gms.ms (\gwas.wsts/c1/v1_reg ),
        .\gmux.gm[4].gms.ms_0 (\gwas.wsts/c2/v1_reg ),
        .out(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .ram_full_fb_i_reg(rst_full_gen_i),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en));
  system_rp_oscilloscope_0_memory__parameterized0_42 \gntv_or_sync_fifo.mem 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (rd_pntr),
        .E(ram_wr_en),
        .ENB_I(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_I ),
        .ENB_dly_D(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ENB_dly_D ),
        .POR_B(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/POR_B ),
        .Q(wr_pntr),
        .SR(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .din(din),
        .dout(dout),
        .\goreg_bm.dout_i_reg[63]_0 (ram_regout_en),
        .out(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .ram_rstram_b(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ram_rstram_b ),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  system_rp_oscilloscope_0_reset_blk_ramfifo__parameterized0__xdcDup__1 rstblk
       (.POR_B(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/POR_B ),
        .SR(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 (rstblk_n_0),
        .out(rst_full_gen_i),
        .ram_rstram_b(\gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/ram_rstram_b ),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module system_rp_oscilloscope_0_fifo_generator_ramfifo__xdcDup__1
   (wr_rst_busy,
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    empty,
    full,
    dout,
    rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en);
  output wr_rst_busy;
  output \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output empty;
  output full;
  output [7:0]dout;
  input rst;
  input wr_clk;
  input rd_clk;
  input [7:0]din;
  input wr_en;
  input rd_en;

  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_5 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire ram_rd_en_i;
  wire ram_regout_en;
  wire ram_wr_en;
  wire rd_clk;
  wire rd_en;
  wire [3:0]rd_pntr;
  wire [2:0]rd_pntr_plus1;
  wire [3:0]rd_pntr_wr;
  wire rst;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire rstblk_n_0;
  wire wr_clk;
  wire wr_en;
  wire [3:0]wr_pntr;
  wire [2:0]wr_pntr_plus2;
  wire [3:0]wr_pntr_rd;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_clk_x_pntrs__xdcDup__1 \gntv_or_sync_fifo.gcx.clkx 
       (.Q(wr_pntr_plus2),
        .RD_PNTR_WR(rd_pntr_wr),
        .WR_PNTR_RD(wr_pntr_rd),
        .\dest_out_bin_ff_reg[2] (\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .\dest_out_bin_ff_reg[2]_0 (\gntv_or_sync_fifo.gcx.clkx_n_5 ),
        .ram_empty_i_reg(rd_pntr_plus1),
        .rd_clk(rd_clk),
        .\src_gray_ff_reg[3] (wr_pntr),
        .\src_gray_ff_reg[3]_0 (rd_pntr),
        .wr_clk(wr_clk));
  system_rp_oscilloscope_0_rd_logic_31 \gntv_or_sync_fifo.gl0.rd 
       (.AR(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .E(ram_regout_en),
        .Q(rd_pntr_plus1),
        .WR_PNTR_RD(wr_pntr_rd),
        .empty(empty),
        .\gc0.count_d1_reg[3] (rd_pntr),
        .\gpregsm1.curr_fwft_state_reg[1] (ram_rd_en_i),
        .ram_empty_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_5 ),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  system_rp_oscilloscope_0_wr_logic_32 \gntv_or_sync_fifo.gl0.wr 
       (.AR(rstblk_n_0),
        .E(ram_wr_en),
        .Q(wr_pntr_plus2),
        .RD_PNTR_WR(rd_pntr_wr),
        .full(full),
        .\gic0.gc0.count_d2_reg[3] (wr_pntr),
        .out(rst_full_ff_i),
        .ram_full_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .ram_full_i_reg_0(rst_full_gen_i),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  system_rp_oscilloscope_0_memory_33 \gntv_or_sync_fifo.mem 
       (.AR(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .E(ram_rd_en_i),
        .EN(ram_wr_en),
        .count_d2(wr_pntr),
        .din(din),
        .dout(dout),
        .\goreg_dm.dout_i_reg[7]_0 (ram_regout_en),
        .\gpr1.dout_i_reg[1] (rd_pntr),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  system_rp_oscilloscope_0_reset_blk_ramfifo__xdcDup__1 rstblk
       (.AR(rstblk_n_0),
        .\grstd1.grst_full.grst_f.rst_d3_reg_0 (rst_full_gen_i),
        .\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 (\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .out(rst_full_ff_i),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module system_rp_oscilloscope_0_fifo_generator_ramfifo__xdcDup__2
   (wr_rst_busy,
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    empty,
    full,
    dout,
    rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en);
  output wr_rst_busy;
  output \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output empty;
  output full;
  output [7:0]dout;
  input rst;
  input wr_clk;
  input rd_clk;
  input [7:0]din;
  input wr_en;
  input rd_en;

  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_5 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire ram_rd_en_i;
  wire ram_regout_en;
  wire ram_wr_en;
  wire rd_clk;
  wire rd_en;
  wire [3:0]rd_pntr;
  wire [2:0]rd_pntr_plus1;
  wire [3:0]rd_pntr_wr;
  wire rst;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire rstblk_n_0;
  wire wr_clk;
  wire wr_en;
  wire [3:0]wr_pntr;
  wire [2:0]wr_pntr_plus2;
  wire [3:0]wr_pntr_rd;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_clk_x_pntrs__xdcDup__2 \gntv_or_sync_fifo.gcx.clkx 
       (.Q(wr_pntr_plus2),
        .RD_PNTR_WR(rd_pntr_wr),
        .WR_PNTR_RD(wr_pntr_rd),
        .\dest_out_bin_ff_reg[2] (\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .\dest_out_bin_ff_reg[2]_0 (\gntv_or_sync_fifo.gcx.clkx_n_5 ),
        .ram_empty_i_reg(rd_pntr_plus1),
        .rd_clk(rd_clk),
        .\src_gray_ff_reg[3] (wr_pntr),
        .\src_gray_ff_reg[3]_0 (rd_pntr),
        .wr_clk(wr_clk));
  system_rp_oscilloscope_0_rd_logic_22 \gntv_or_sync_fifo.gl0.rd 
       (.AR(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .E(ram_regout_en),
        .Q(rd_pntr_plus1),
        .WR_PNTR_RD(wr_pntr_rd),
        .empty(empty),
        .\gc0.count_d1_reg[3] (rd_pntr),
        .\gpregsm1.curr_fwft_state_reg[1] (ram_rd_en_i),
        .ram_empty_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_5 ),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  system_rp_oscilloscope_0_wr_logic_23 \gntv_or_sync_fifo.gl0.wr 
       (.AR(rstblk_n_0),
        .E(ram_wr_en),
        .Q(wr_pntr_plus2),
        .RD_PNTR_WR(rd_pntr_wr),
        .full(full),
        .\gic0.gc0.count_d2_reg[3] (wr_pntr),
        .out(rst_full_ff_i),
        .ram_full_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .ram_full_i_reg_0(rst_full_gen_i),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  system_rp_oscilloscope_0_memory_24 \gntv_or_sync_fifo.mem 
       (.AR(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .E(ram_rd_en_i),
        .EN(ram_wr_en),
        .count_d2(wr_pntr),
        .din(din),
        .dout(dout),
        .\goreg_dm.dout_i_reg[7]_0 (ram_regout_en),
        .\gpr1.dout_i_reg[1] (rd_pntr),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  system_rp_oscilloscope_0_reset_blk_ramfifo__xdcDup__2 rstblk
       (.AR(rstblk_n_0),
        .\grstd1.grst_full.grst_f.rst_d3_reg_0 (rst_full_gen_i),
        .\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 (\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .out(rst_full_ff_i),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module system_rp_oscilloscope_0_fifo_generator_ramfifo__xdcDup__3
   (wr_rst_busy,
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    empty,
    full,
    dout,
    rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en);
  output wr_rst_busy;
  output \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output empty;
  output full;
  output [7:0]dout;
  input rst;
  input wr_clk;
  input rd_clk;
  input [7:0]din;
  input wr_en;
  input rd_en;

  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_5 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire ram_rd_en_i;
  wire ram_regout_en;
  wire ram_wr_en;
  wire rd_clk;
  wire rd_en;
  wire [3:0]rd_pntr;
  wire [2:0]rd_pntr_plus1;
  wire [3:0]rd_pntr_wr;
  wire rst;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire rstblk_n_0;
  wire wr_clk;
  wire wr_en;
  wire [3:0]wr_pntr;
  wire [2:0]wr_pntr_plus2;
  wire [3:0]wr_pntr_rd;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_clk_x_pntrs__xdcDup__3 \gntv_or_sync_fifo.gcx.clkx 
       (.Q(wr_pntr_plus2),
        .RD_PNTR_WR(rd_pntr_wr),
        .WR_PNTR_RD(wr_pntr_rd),
        .\dest_out_bin_ff_reg[2] (\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .\dest_out_bin_ff_reg[2]_0 (\gntv_or_sync_fifo.gcx.clkx_n_5 ),
        .ram_empty_i_reg(rd_pntr_plus1),
        .rd_clk(rd_clk),
        .\src_gray_ff_reg[3] (wr_pntr),
        .\src_gray_ff_reg[3]_0 (rd_pntr),
        .wr_clk(wr_clk));
  system_rp_oscilloscope_0_rd_logic_1 \gntv_or_sync_fifo.gl0.rd 
       (.AR(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .E(ram_regout_en),
        .Q(rd_pntr_plus1),
        .WR_PNTR_RD(wr_pntr_rd),
        .empty(empty),
        .\gc0.count_d1_reg[3] (rd_pntr),
        .\gpregsm1.curr_fwft_state_reg[1] (ram_rd_en_i),
        .ram_empty_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_5 ),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  system_rp_oscilloscope_0_wr_logic_2 \gntv_or_sync_fifo.gl0.wr 
       (.AR(rstblk_n_0),
        .E(ram_wr_en),
        .Q(wr_pntr_plus2),
        .RD_PNTR_WR(rd_pntr_wr),
        .full(full),
        .\gic0.gc0.count_d2_reg[3] (wr_pntr),
        .out(rst_full_ff_i),
        .ram_full_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .ram_full_i_reg_0(rst_full_gen_i),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  system_rp_oscilloscope_0_memory_3 \gntv_or_sync_fifo.mem 
       (.AR(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .E(ram_rd_en_i),
        .EN(ram_wr_en),
        .count_d2(wr_pntr),
        .din(din),
        .dout(dout),
        .\goreg_dm.dout_i_reg[7]_0 (ram_regout_en),
        .\gpr1.dout_i_reg[1] (rd_pntr),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  system_rp_oscilloscope_0_reset_blk_ramfifo__xdcDup__3 rstblk
       (.AR(rstblk_n_0),
        .\grstd1.grst_full.grst_f.rst_d3_reg_0 (rst_full_gen_i),
        .\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 (\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .out(rst_full_ff_i),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module system_rp_oscilloscope_0_fifo_generator_top
   (wr_rst_busy,
    AR,
    empty,
    full,
    dout,
    rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en);
  output wr_rst_busy;
  output [0:0]AR;
  output empty;
  output full;
  output [7:0]dout;
  input rst;
  input wr_clk;
  input rd_clk;
  input [7:0]din;
  input wr_en;
  input rd_en;

  wire [0:0]AR;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_fifo_generator_ramfifo \grf.rf 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (AR),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module system_rp_oscilloscope_0_fifo_generator_top__parameterized0
   (SR,
    wr_rst_busy,
    empty,
    full,
    dout,
    rd_data_count,
    wr_data_count,
    wr_clk,
    rd_clk,
    rst,
    din,
    wr_en,
    rd_en);
  output [0:0]SR;
  output wr_rst_busy;
  output empty;
  output full;
  output [63:0]dout;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  input wr_clk;
  input rd_clk;
  input rst;
  input [63:0]din;
  input wr_en;
  input rd_en;

  wire [0:0]SR;
  wire [63:0]din;
  wire [63:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [9:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire [9:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_fifo_generator_ramfifo__parameterized0 \grf.rf 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (SR),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module system_rp_oscilloscope_0_fifo_generator_top__parameterized0__xdcDup__1
   (SR,
    wr_rst_busy,
    empty,
    full,
    dout,
    rd_data_count,
    wr_data_count,
    wr_clk,
    rd_clk,
    rst,
    din,
    wr_en,
    rd_en);
  output [0:0]SR;
  output wr_rst_busy;
  output empty;
  output full;
  output [63:0]dout;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  input wr_clk;
  input rd_clk;
  input rst;
  input [63:0]din;
  input wr_en;
  input rd_en;

  wire [0:0]SR;
  wire [63:0]din;
  wire [63:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [9:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire [9:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_fifo_generator_ramfifo__parameterized0__xdcDup__1 \grf.rf 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (SR),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module system_rp_oscilloscope_0_fifo_generator_top__xdcDup__1
   (wr_rst_busy,
    AR,
    empty,
    full,
    dout,
    rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en);
  output wr_rst_busy;
  output [0:0]AR;
  output empty;
  output full;
  output [7:0]dout;
  input rst;
  input wr_clk;
  input rd_clk;
  input [7:0]din;
  input wr_en;
  input rd_en;

  wire [0:0]AR;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_fifo_generator_ramfifo__xdcDup__1 \grf.rf 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (AR),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module system_rp_oscilloscope_0_fifo_generator_top__xdcDup__2
   (wr_rst_busy,
    AR,
    empty,
    full,
    dout,
    rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en);
  output wr_rst_busy;
  output [0:0]AR;
  output empty;
  output full;
  output [7:0]dout;
  input rst;
  input wr_clk;
  input rd_clk;
  input [7:0]din;
  input wr_en;
  input rd_en;

  wire [0:0]AR;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_fifo_generator_ramfifo__xdcDup__2 \grf.rf 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (AR),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module system_rp_oscilloscope_0_fifo_generator_top__xdcDup__3
   (wr_rst_busy,
    AR,
    empty,
    full,
    dout,
    rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en);
  output wr_rst_busy;
  output [0:0]AR;
  output empty;
  output full;
  output [7:0]dout;
  input rst;
  input wr_clk;
  input rd_clk;
  input [7:0]din;
  input wr_en;
  input rd_en;

  wire [0:0]AR;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_fifo_generator_ramfifo__xdcDup__3 \grf.rf 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (AR),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "4" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "8" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "8" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "2" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "15" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "14" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "4" *) 
(* C_RD_DEPTH = "16" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "4" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "4" *) 
(* C_WR_DEPTH = "16" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "4" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_5" *) 
module system_rp_oscilloscope_0_fifo_generator_v13_2_5
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [7:0]din;
  input wr_en;
  input rd_en;
  input [3:0]prog_empty_thresh;
  input [3:0]prog_empty_thresh_assert;
  input [3:0]prog_empty_thresh_negate;
  input [3:0]prog_full_thresh;
  input [3:0]prog_full_thresh_assert;
  input [3:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [7:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [3:0]data_count;
  output [3:0]rd_data_count;
  output [3:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  system_rp_oscilloscope_0_fifo_generator_v13_2_5_synth inst_fifo_gen
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (rd_rst_busy),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "9" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "64" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "64" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "1" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "1" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "1" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x72" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "511" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "510" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "10" *) 
(* C_RD_DEPTH = "512" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "9" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "1" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "10" *) 
(* C_WR_DEPTH = "512" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "9" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_5" *) 
module system_rp_oscilloscope_0_fifo_generator_v13_2_5__parameterized1
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [63:0]din;
  input wr_en;
  input rd_en;
  input [8:0]prog_empty_thresh;
  input [8:0]prog_empty_thresh_assert;
  input [8:0]prog_empty_thresh_negate;
  input [8:0]prog_full_thresh;
  input [8:0]prog_full_thresh_assert;
  input [8:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [63:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [8:0]data_count;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire [63:0]din;
  wire [63:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [9:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire wr_clk;
  wire [9:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  system_rp_oscilloscope_0_fifo_generator_v13_2_5_synth__parameterized0 inst_fifo_gen
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (rd_rst_busy),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "9" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "64" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "64" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "1" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "1" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "1" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x72" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "511" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "510" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "10" *) 
(* C_RD_DEPTH = "512" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "9" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "1" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "10" *) 
(* C_WR_DEPTH = "512" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "9" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_5" *) 
module system_rp_oscilloscope_0_fifo_generator_v13_2_5__parameterized1__xdcDup__1
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [63:0]din;
  input wr_en;
  input rd_en;
  input [8:0]prog_empty_thresh;
  input [8:0]prog_empty_thresh_assert;
  input [8:0]prog_empty_thresh_negate;
  input [8:0]prog_full_thresh;
  input [8:0]prog_full_thresh_assert;
  input [8:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [63:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [8:0]data_count;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire [63:0]din;
  wire [63:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [9:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire wr_clk;
  wire [9:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  system_rp_oscilloscope_0_fifo_generator_v13_2_5_synth__parameterized0__xdcDup__1 inst_fifo_gen
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (rd_rst_busy),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "4" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "8" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "8" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "2" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "15" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "14" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "4" *) 
(* C_RD_DEPTH = "16" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "4" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "4" *) 
(* C_WR_DEPTH = "16" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "4" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_5" *) 
module system_rp_oscilloscope_0_fifo_generator_v13_2_5__xdcDup__1
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [7:0]din;
  input wr_en;
  input rd_en;
  input [3:0]prog_empty_thresh;
  input [3:0]prog_empty_thresh_assert;
  input [3:0]prog_empty_thresh_negate;
  input [3:0]prog_full_thresh;
  input [3:0]prog_full_thresh_assert;
  input [3:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [7:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [3:0]data_count;
  output [3:0]rd_data_count;
  output [3:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  system_rp_oscilloscope_0_fifo_generator_v13_2_5_synth__xdcDup__1 inst_fifo_gen
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (rd_rst_busy),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "4" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "8" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "8" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "2" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "15" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "14" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "4" *) 
(* C_RD_DEPTH = "16" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "4" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "4" *) 
(* C_WR_DEPTH = "16" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "4" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_5" *) 
module system_rp_oscilloscope_0_fifo_generator_v13_2_5__xdcDup__2
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [7:0]din;
  input wr_en;
  input rd_en;
  input [3:0]prog_empty_thresh;
  input [3:0]prog_empty_thresh_assert;
  input [3:0]prog_empty_thresh_negate;
  input [3:0]prog_full_thresh;
  input [3:0]prog_full_thresh_assert;
  input [3:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [7:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [3:0]data_count;
  output [3:0]rd_data_count;
  output [3:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  system_rp_oscilloscope_0_fifo_generator_v13_2_5_synth__xdcDup__2 inst_fifo_gen
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (rd_rst_busy),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "4" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "8" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "8" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "2" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "15" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "14" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "4" *) 
(* C_RD_DEPTH = "16" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "4" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "4" *) 
(* C_WR_DEPTH = "16" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "4" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_5" *) 
module system_rp_oscilloscope_0_fifo_generator_v13_2_5__xdcDup__3
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [7:0]din;
  input wr_en;
  input rd_en;
  input [3:0]prog_empty_thresh;
  input [3:0]prog_empty_thresh_assert;
  input [3:0]prog_empty_thresh_negate;
  input [3:0]prog_full_thresh;
  input [3:0]prog_full_thresh_assert;
  input [3:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [7:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [3:0]data_count;
  output [3:0]rd_data_count;
  output [3:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  system_rp_oscilloscope_0_fifo_generator_v13_2_5_synth__xdcDup__3 inst_fifo_gen
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg (rd_rst_busy),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_5_synth" *) 
module system_rp_oscilloscope_0_fifo_generator_v13_2_5_synth
   (wr_rst_busy,
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    empty,
    full,
    dout,
    rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en);
  output wr_rst_busy;
  output \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output empty;
  output full;
  output [7:0]dout;
  input rst;
  input wr_clk;
  input rd_clk;
  input [7:0]din;
  input wr_en;
  input rd_en;

  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_fifo_generator_top \gconvfifo.rf 
       (.AR(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_5_synth" *) 
module system_rp_oscilloscope_0_fifo_generator_v13_2_5_synth__parameterized0
   (\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    wr_rst_busy,
    empty,
    full,
    dout,
    rd_data_count,
    wr_data_count,
    wr_clk,
    rd_clk,
    rst,
    din,
    wr_en,
    rd_en);
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output wr_rst_busy;
  output empty;
  output full;
  output [63:0]dout;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  input wr_clk;
  input rd_clk;
  input rst;
  input [63:0]din;
  input wr_en;
  input rd_en;

  wire [63:0]din;
  wire [63:0]dout;
  wire empty;
  wire full;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire rd_clk;
  wire [9:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire [9:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_fifo_generator_top__parameterized0 \gconvfifo.rf 
       (.SR(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_5_synth" *) 
module system_rp_oscilloscope_0_fifo_generator_v13_2_5_synth__parameterized0__xdcDup__1
   (\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    wr_rst_busy,
    empty,
    full,
    dout,
    rd_data_count,
    wr_data_count,
    wr_clk,
    rd_clk,
    rst,
    din,
    wr_en,
    rd_en);
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output wr_rst_busy;
  output empty;
  output full;
  output [63:0]dout;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  input wr_clk;
  input rd_clk;
  input rst;
  input [63:0]din;
  input wr_en;
  input rd_en;

  wire [63:0]din;
  wire [63:0]dout;
  wire empty;
  wire full;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire rd_clk;
  wire [9:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire [9:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_fifo_generator_top__parameterized0__xdcDup__1 \gconvfifo.rf 
       (.SR(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_5_synth" *) 
module system_rp_oscilloscope_0_fifo_generator_v13_2_5_synth__xdcDup__1
   (wr_rst_busy,
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    empty,
    full,
    dout,
    rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en);
  output wr_rst_busy;
  output \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output empty;
  output full;
  output [7:0]dout;
  input rst;
  input wr_clk;
  input rd_clk;
  input [7:0]din;
  input wr_en;
  input rd_en;

  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_fifo_generator_top__xdcDup__1 \gconvfifo.rf 
       (.AR(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_5_synth" *) 
module system_rp_oscilloscope_0_fifo_generator_v13_2_5_synth__xdcDup__2
   (wr_rst_busy,
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    empty,
    full,
    dout,
    rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en);
  output wr_rst_busy;
  output \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output empty;
  output full;
  output [7:0]dout;
  input rst;
  input wr_clk;
  input rd_clk;
  input [7:0]din;
  input wr_en;
  input rd_en;

  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_fifo_generator_top__xdcDup__2 \gconvfifo.rf 
       (.AR(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_5_synth" *) 
module system_rp_oscilloscope_0_fifo_generator_v13_2_5_synth__xdcDup__3
   (wr_rst_busy,
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ,
    empty,
    full,
    dout,
    rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en);
  output wr_rst_busy;
  output \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  output empty;
  output full;
  output [7:0]dout;
  input rst;
  input wr_clk;
  input rd_clk;
  input [7:0]din;
  input wr_en;
  input rd_en;

  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  system_rp_oscilloscope_0_fifo_generator_top__xdcDup__3 \gconvfifo.rf 
       (.AR(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module system_rp_oscilloscope_0_memory
   (dout,
    wr_clk,
    EN,
    din,
    \gpr1.dout_i_reg[1] ,
    count_d2,
    E,
    rd_clk,
    AR,
    \goreg_dm.dout_i_reg[7]_0 );
  output [7:0]dout;
  input wr_clk;
  input EN;
  input [7:0]din;
  input [3:0]\gpr1.dout_i_reg[1] ;
  input [3:0]count_d2;
  input [0:0]E;
  input rd_clk;
  input [0:0]AR;
  input [0:0]\goreg_dm.dout_i_reg[7]_0 ;

  wire [0:0]AR;
  wire [0:0]E;
  wire EN;
  wire [3:0]count_d2;
  wire [7:0]din;
  wire [7:0]dout;
  wire [7:0]dout_i;
  wire [0:0]\goreg_dm.dout_i_reg[7]_0 ;
  wire [3:0]\gpr1.dout_i_reg[1] ;
  wire rd_clk;
  wire wr_clk;

  system_rp_oscilloscope_0_dmem \gdm.dm_gen.dm 
       (.AR(AR),
        .E(E),
        .EN(EN),
        .Q(dout_i),
        .count_d2(count_d2),
        .din(din),
        .\gpr1.dout_i_reg[1]_0 (\gpr1.dout_i_reg[1] ),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[0]),
        .Q(dout[0]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[1]),
        .Q(dout[1]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[2]),
        .Q(dout[2]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[3]),
        .Q(dout[3]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[4]),
        .Q(dout[4]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[5]),
        .Q(dout[5]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[6]),
        .Q(dout[6]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[7]),
        .Q(dout[7]));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module system_rp_oscilloscope_0_memory_24
   (dout,
    wr_clk,
    EN,
    din,
    \gpr1.dout_i_reg[1] ,
    count_d2,
    E,
    rd_clk,
    AR,
    \goreg_dm.dout_i_reg[7]_0 );
  output [7:0]dout;
  input wr_clk;
  input EN;
  input [7:0]din;
  input [3:0]\gpr1.dout_i_reg[1] ;
  input [3:0]count_d2;
  input [0:0]E;
  input rd_clk;
  input [0:0]AR;
  input [0:0]\goreg_dm.dout_i_reg[7]_0 ;

  wire [0:0]AR;
  wire [0:0]E;
  wire EN;
  wire [3:0]count_d2;
  wire [7:0]din;
  wire [7:0]dout;
  wire [7:0]dout_i;
  wire [0:0]\goreg_dm.dout_i_reg[7]_0 ;
  wire [3:0]\gpr1.dout_i_reg[1] ;
  wire rd_clk;
  wire wr_clk;

  system_rp_oscilloscope_0_dmem_25 \gdm.dm_gen.dm 
       (.AR(AR),
        .E(E),
        .EN(EN),
        .Q(dout_i),
        .count_d2(count_d2),
        .din(din),
        .\gpr1.dout_i_reg[1]_0 (\gpr1.dout_i_reg[1] ),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[0]),
        .Q(dout[0]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[1]),
        .Q(dout[1]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[2]),
        .Q(dout[2]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[3]),
        .Q(dout[3]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[4]),
        .Q(dout[4]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[5]),
        .Q(dout[5]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[6]),
        .Q(dout[6]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[7]),
        .Q(dout[7]));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module system_rp_oscilloscope_0_memory_3
   (dout,
    wr_clk,
    EN,
    din,
    \gpr1.dout_i_reg[1] ,
    count_d2,
    E,
    rd_clk,
    AR,
    \goreg_dm.dout_i_reg[7]_0 );
  output [7:0]dout;
  input wr_clk;
  input EN;
  input [7:0]din;
  input [3:0]\gpr1.dout_i_reg[1] ;
  input [3:0]count_d2;
  input [0:0]E;
  input rd_clk;
  input [0:0]AR;
  input [0:0]\goreg_dm.dout_i_reg[7]_0 ;

  wire [0:0]AR;
  wire [0:0]E;
  wire EN;
  wire [3:0]count_d2;
  wire [7:0]din;
  wire [7:0]dout;
  wire [7:0]dout_i;
  wire [0:0]\goreg_dm.dout_i_reg[7]_0 ;
  wire [3:0]\gpr1.dout_i_reg[1] ;
  wire rd_clk;
  wire wr_clk;

  system_rp_oscilloscope_0_dmem_4 \gdm.dm_gen.dm 
       (.AR(AR),
        .E(E),
        .EN(EN),
        .Q(dout_i),
        .count_d2(count_d2),
        .din(din),
        .\gpr1.dout_i_reg[1]_0 (\gpr1.dout_i_reg[1] ),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[0]),
        .Q(dout[0]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[1]),
        .Q(dout[1]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[2]),
        .Q(dout[2]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[3]),
        .Q(dout[3]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[4]),
        .Q(dout[4]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[5]),
        .Q(dout[5]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[6]),
        .Q(dout[6]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[7]),
        .Q(dout[7]));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module system_rp_oscilloscope_0_memory_33
   (dout,
    wr_clk,
    EN,
    din,
    \gpr1.dout_i_reg[1] ,
    count_d2,
    E,
    rd_clk,
    AR,
    \goreg_dm.dout_i_reg[7]_0 );
  output [7:0]dout;
  input wr_clk;
  input EN;
  input [7:0]din;
  input [3:0]\gpr1.dout_i_reg[1] ;
  input [3:0]count_d2;
  input [0:0]E;
  input rd_clk;
  input [0:0]AR;
  input [0:0]\goreg_dm.dout_i_reg[7]_0 ;

  wire [0:0]AR;
  wire [0:0]E;
  wire EN;
  wire [3:0]count_d2;
  wire [7:0]din;
  wire [7:0]dout;
  wire [7:0]dout_i;
  wire [0:0]\goreg_dm.dout_i_reg[7]_0 ;
  wire [3:0]\gpr1.dout_i_reg[1] ;
  wire rd_clk;
  wire wr_clk;

  system_rp_oscilloscope_0_dmem_34 \gdm.dm_gen.dm 
       (.AR(AR),
        .E(E),
        .EN(EN),
        .Q(dout_i),
        .count_d2(count_d2),
        .din(din),
        .\gpr1.dout_i_reg[1]_0 (\gpr1.dout_i_reg[1] ),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[0]),
        .Q(dout[0]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[1]),
        .Q(dout[1]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[2]),
        .Q(dout[2]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[3]),
        .Q(dout[3]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[4]),
        .Q(dout[4]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[5]),
        .Q(dout[5]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[6]),
        .Q(dout[6]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(\goreg_dm.dout_i_reg[7]_0 ),
        .CLR(AR),
        .D(dout_i[7]),
        .Q(dout[7]));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module system_rp_oscilloscope_0_memory__parameterized0
   (POR_B,
    ENB_dly_D,
    dout,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    Q,
    din,
    E,
    SR,
    out,
    wr_en,
    \goreg_bm.dout_i_reg[63]_0 );
  output POR_B;
  output ENB_dly_D;
  output [63:0]dout;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [8:0]Q;
  input [63:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;
  input [0:0]\goreg_bm.dout_i_reg[63]_0 ;

  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [8:0]Q;
  wire [0:0]SR;
  wire [63:0]din;
  wire [63:0]dout;
  wire [63:0]doutb;
  wire [0:0]\goreg_bm.dout_i_reg[63]_0 ;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  system_rp_oscilloscope_0_blk_mem_gen_v8_4_4 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[0]),
        .Q(dout[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[10]),
        .Q(dout[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[11]),
        .Q(dout[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[12]),
        .Q(dout[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[13]),
        .Q(dout[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[14]),
        .Q(dout[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[15]),
        .Q(dout[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[16]),
        .Q(dout[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[17]),
        .Q(dout[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[18]),
        .Q(dout[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[19]),
        .Q(dout[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[1]),
        .Q(dout[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[20]),
        .Q(dout[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[21]),
        .Q(dout[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[22]),
        .Q(dout[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[23]),
        .Q(dout[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[24]),
        .Q(dout[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[25] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[25]),
        .Q(dout[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[26] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[26]),
        .Q(dout[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[27] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[27]),
        .Q(dout[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[28] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[28]),
        .Q(dout[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[29] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[29]),
        .Q(dout[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[2]),
        .Q(dout[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[30] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[30]),
        .Q(dout[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[31] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[31]),
        .Q(dout[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[32] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[32]),
        .Q(dout[32]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[33] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[33]),
        .Q(dout[33]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[34] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[34]),
        .Q(dout[34]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[35] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[35]),
        .Q(dout[35]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[36] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[36]),
        .Q(dout[36]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[37] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[37]),
        .Q(dout[37]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[38] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[38]),
        .Q(dout[38]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[39] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[39]),
        .Q(dout[39]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[3]),
        .Q(dout[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[40] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[40]),
        .Q(dout[40]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[41] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[41]),
        .Q(dout[41]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[42] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[42]),
        .Q(dout[42]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[43] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[43]),
        .Q(dout[43]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[44] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[44]),
        .Q(dout[44]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[45] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[45]),
        .Q(dout[45]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[46] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[46]),
        .Q(dout[46]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[47] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[47]),
        .Q(dout[47]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[48] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[48]),
        .Q(dout[48]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[49] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[49]),
        .Q(dout[49]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[4]),
        .Q(dout[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[50] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[50]),
        .Q(dout[50]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[51] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[51]),
        .Q(dout[51]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[52] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[52]),
        .Q(dout[52]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[53] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[53]),
        .Q(dout[53]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[54] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[54]),
        .Q(dout[54]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[55] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[55]),
        .Q(dout[55]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[56] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[56]),
        .Q(dout[56]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[57] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[57]),
        .Q(dout[57]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[58] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[58]),
        .Q(dout[58]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[59] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[59]),
        .Q(dout[59]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[5]),
        .Q(dout[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[60] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[60]),
        .Q(dout[60]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[61] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[61]),
        .Q(dout[61]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[62] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[62]),
        .Q(dout[62]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[63] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[63]),
        .Q(dout[63]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[6]),
        .Q(dout[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[7]),
        .Q(dout[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[8]),
        .Q(dout[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[9]),
        .Q(dout[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module system_rp_oscilloscope_0_memory__parameterized0_42
   (POR_B,
    ENB_dly_D,
    dout,
    wr_clk,
    rd_clk,
    ENB_I,
    ram_rstram_b,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    Q,
    din,
    E,
    SR,
    out,
    wr_en,
    \goreg_bm.dout_i_reg[63]_0 );
  output POR_B;
  output ENB_dly_D;
  output [63:0]dout;
  input wr_clk;
  input rd_clk;
  input ENB_I;
  input ram_rstram_b;
  input [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [8:0]Q;
  input [63:0]din;
  input [0:0]E;
  input [0:0]SR;
  input out;
  input wr_en;
  input [0:0]\goreg_bm.dout_i_reg[63]_0 ;

  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_B;
  wire [8:0]Q;
  wire [0:0]SR;
  wire [63:0]din;
  wire [63:0]dout;
  wire [63:0]doutb;
  wire [0:0]\goreg_bm.dout_i_reg[63]_0 ;
  wire out;
  wire ram_rstram_b;
  wire rd_clk;
  wire wr_clk;
  wire wr_en;

  system_rp_oscilloscope_0_blk_mem_gen_v8_4_4_43 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_B(POR_B),
        .Q(Q),
        .SR(SR),
        .din(din),
        .out(out),
        .ram_rstram_b(ram_rstram_b),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[0]),
        .Q(dout[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[10]),
        .Q(dout[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[11]),
        .Q(dout[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[12]),
        .Q(dout[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[13]),
        .Q(dout[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[14]),
        .Q(dout[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[15]),
        .Q(dout[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[16]),
        .Q(dout[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[17]),
        .Q(dout[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[18]),
        .Q(dout[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[19]),
        .Q(dout[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[1]),
        .Q(dout[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[20]),
        .Q(dout[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[21]),
        .Q(dout[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[22]),
        .Q(dout[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[23]),
        .Q(dout[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[24]),
        .Q(dout[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[25] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[25]),
        .Q(dout[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[26] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[26]),
        .Q(dout[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[27] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[27]),
        .Q(dout[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[28] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[28]),
        .Q(dout[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[29] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[29]),
        .Q(dout[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[2]),
        .Q(dout[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[30] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[30]),
        .Q(dout[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[31] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[31]),
        .Q(dout[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[32] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[32]),
        .Q(dout[32]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[33] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[33]),
        .Q(dout[33]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[34] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[34]),
        .Q(dout[34]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[35] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[35]),
        .Q(dout[35]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[36] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[36]),
        .Q(dout[36]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[37] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[37]),
        .Q(dout[37]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[38] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[38]),
        .Q(dout[38]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[39] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[39]),
        .Q(dout[39]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[3]),
        .Q(dout[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[40] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[40]),
        .Q(dout[40]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[41] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[41]),
        .Q(dout[41]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[42] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[42]),
        .Q(dout[42]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[43] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[43]),
        .Q(dout[43]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[44] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[44]),
        .Q(dout[44]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[45] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[45]),
        .Q(dout[45]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[46] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[46]),
        .Q(dout[46]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[47] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[47]),
        .Q(dout[47]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[48] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[48]),
        .Q(dout[48]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[49] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[49]),
        .Q(dout[49]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[4]),
        .Q(dout[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[50] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[50]),
        .Q(dout[50]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[51] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[51]),
        .Q(dout[51]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[52] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[52]),
        .Q(dout[52]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[53] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[53]),
        .Q(dout[53]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[54] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[54]),
        .Q(dout[54]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[55] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[55]),
        .Q(dout[55]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[56] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[56]),
        .Q(dout[56]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[57] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[57]),
        .Q(dout[57]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[58] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[58]),
        .Q(dout[58]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[59] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[59]),
        .Q(dout[59]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[5]),
        .Q(dout[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[60] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[60]),
        .Q(dout[60]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[61] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[61]),
        .Q(dout[61]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[62] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[62]),
        .Q(dout[62]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[63] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[63]),
        .Q(dout[63]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[6]),
        .Q(dout[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[7]),
        .Q(dout[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[8]),
        .Q(dout[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[63]_0 ),
        .D(doutb[9]),
        .Q(dout[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module system_rp_oscilloscope_0_rd_bin_cntr
   (\gc0.count_d1_reg[2]_0 ,
    Q,
    \gc0.count_d1_reg[3]_0 ,
    ram_empty_i_reg,
    ram_empty_i_reg_0,
    WR_PNTR_RD,
    E,
    rd_clk,
    AR);
  output \gc0.count_d1_reg[2]_0 ;
  output [3:0]Q;
  output [3:0]\gc0.count_d1_reg[3]_0 ;
  input ram_empty_i_reg;
  input ram_empty_i_reg_0;
  input [3:0]WR_PNTR_RD;
  input [0:0]E;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [3:0]Q;
  wire [3:0]WR_PNTR_RD;
  wire \gc0.count_d1_reg[2]_0 ;
  wire [3:0]\gc0.count_d1_reg[3]_0 ;
  wire [3:0]plusOp__0;
  wire ram_empty_i_i_2_n_0;
  wire ram_empty_i_i_3_n_0;
  wire ram_empty_i_reg;
  wire ram_empty_i_reg_0;
  wire rd_clk;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(plusOp__0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[0]),
        .Q(\gc0.count_d1_reg[3]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[1]),
        .Q(\gc0.count_d1_reg[3]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[2]),
        .Q(\gc0.count_d1_reg[3]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[3]),
        .Q(\gc0.count_d1_reg[3]_0 [3]));
  FDPE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__0[0]),
        .PRE(AR),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[3]),
        .Q(Q[3]));
  LUT4 #(
    .INIT(16'hF888)) 
    ram_empty_i_i_1
       (.I0(ram_empty_i_i_2_n_0),
        .I1(ram_empty_i_i_3_n_0),
        .I2(ram_empty_i_reg),
        .I3(ram_empty_i_reg_0),
        .O(\gc0.count_d1_reg[2]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_2
       (.I0(\gc0.count_d1_reg[3]_0 [2]),
        .I1(WR_PNTR_RD[2]),
        .I2(\gc0.count_d1_reg[3]_0 [3]),
        .I3(WR_PNTR_RD[3]),
        .O(ram_empty_i_i_2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_3
       (.I0(\gc0.count_d1_reg[3]_0 [0]),
        .I1(WR_PNTR_RD[0]),
        .I2(\gc0.count_d1_reg[3]_0 [1]),
        .I3(WR_PNTR_RD[1]),
        .O(ram_empty_i_i_3_n_0));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module system_rp_oscilloscope_0_rd_bin_cntr_30
   (\gc0.count_d1_reg[2]_0 ,
    Q,
    \gc0.count_d1_reg[3]_0 ,
    ram_empty_i_reg,
    ram_empty_i_reg_0,
    WR_PNTR_RD,
    E,
    rd_clk,
    AR);
  output \gc0.count_d1_reg[2]_0 ;
  output [3:0]Q;
  output [3:0]\gc0.count_d1_reg[3]_0 ;
  input ram_empty_i_reg;
  input ram_empty_i_reg_0;
  input [3:0]WR_PNTR_RD;
  input [0:0]E;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [3:0]Q;
  wire [3:0]WR_PNTR_RD;
  wire \gc0.count_d1_reg[2]_0 ;
  wire [3:0]\gc0.count_d1_reg[3]_0 ;
  wire [3:0]plusOp__0;
  wire ram_empty_i_i_2_n_0;
  wire ram_empty_i_i_3_n_0;
  wire ram_empty_i_reg;
  wire ram_empty_i_reg_0;
  wire rd_clk;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(plusOp__0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[0]),
        .Q(\gc0.count_d1_reg[3]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[1]),
        .Q(\gc0.count_d1_reg[3]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[2]),
        .Q(\gc0.count_d1_reg[3]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[3]),
        .Q(\gc0.count_d1_reg[3]_0 [3]));
  FDPE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__0[0]),
        .PRE(AR),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[3]),
        .Q(Q[3]));
  LUT4 #(
    .INIT(16'hF888)) 
    ram_empty_i_i_1
       (.I0(ram_empty_i_i_2_n_0),
        .I1(ram_empty_i_i_3_n_0),
        .I2(ram_empty_i_reg),
        .I3(ram_empty_i_reg_0),
        .O(\gc0.count_d1_reg[2]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_2
       (.I0(\gc0.count_d1_reg[3]_0 [2]),
        .I1(WR_PNTR_RD[2]),
        .I2(\gc0.count_d1_reg[3]_0 [3]),
        .I3(WR_PNTR_RD[3]),
        .O(ram_empty_i_i_2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_3
       (.I0(\gc0.count_d1_reg[3]_0 [0]),
        .I1(WR_PNTR_RD[0]),
        .I2(\gc0.count_d1_reg[3]_0 [1]),
        .I3(WR_PNTR_RD[1]),
        .O(ram_empty_i_i_3_n_0));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module system_rp_oscilloscope_0_rd_bin_cntr_39
   (\gc0.count_d1_reg[2]_0 ,
    Q,
    \gc0.count_d1_reg[3]_0 ,
    ram_empty_i_reg,
    ram_empty_i_reg_0,
    WR_PNTR_RD,
    E,
    rd_clk,
    AR);
  output \gc0.count_d1_reg[2]_0 ;
  output [3:0]Q;
  output [3:0]\gc0.count_d1_reg[3]_0 ;
  input ram_empty_i_reg;
  input ram_empty_i_reg_0;
  input [3:0]WR_PNTR_RD;
  input [0:0]E;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [3:0]Q;
  wire [3:0]WR_PNTR_RD;
  wire \gc0.count_d1_reg[2]_0 ;
  wire [3:0]\gc0.count_d1_reg[3]_0 ;
  wire [3:0]plusOp__0;
  wire ram_empty_i_i_2_n_0;
  wire ram_empty_i_i_3_n_0;
  wire ram_empty_i_reg;
  wire ram_empty_i_reg_0;
  wire rd_clk;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(plusOp__0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[0]),
        .Q(\gc0.count_d1_reg[3]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[1]),
        .Q(\gc0.count_d1_reg[3]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[2]),
        .Q(\gc0.count_d1_reg[3]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[3]),
        .Q(\gc0.count_d1_reg[3]_0 [3]));
  FDPE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__0[0]),
        .PRE(AR),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[3]),
        .Q(Q[3]));
  LUT4 #(
    .INIT(16'hF888)) 
    ram_empty_i_i_1
       (.I0(ram_empty_i_i_2_n_0),
        .I1(ram_empty_i_i_3_n_0),
        .I2(ram_empty_i_reg),
        .I3(ram_empty_i_reg_0),
        .O(\gc0.count_d1_reg[2]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_2
       (.I0(\gc0.count_d1_reg[3]_0 [2]),
        .I1(WR_PNTR_RD[2]),
        .I2(\gc0.count_d1_reg[3]_0 [3]),
        .I3(WR_PNTR_RD[3]),
        .O(ram_empty_i_i_2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_3
       (.I0(\gc0.count_d1_reg[3]_0 [0]),
        .I1(WR_PNTR_RD[0]),
        .I2(\gc0.count_d1_reg[3]_0 [1]),
        .I3(WR_PNTR_RD[1]),
        .O(ram_empty_i_i_3_n_0));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module system_rp_oscilloscope_0_rd_bin_cntr_9
   (\gc0.count_d1_reg[2]_0 ,
    Q,
    \gc0.count_d1_reg[3]_0 ,
    ram_empty_i_reg,
    ram_empty_i_reg_0,
    WR_PNTR_RD,
    E,
    rd_clk,
    AR);
  output \gc0.count_d1_reg[2]_0 ;
  output [3:0]Q;
  output [3:0]\gc0.count_d1_reg[3]_0 ;
  input ram_empty_i_reg;
  input ram_empty_i_reg_0;
  input [3:0]WR_PNTR_RD;
  input [0:0]E;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [3:0]Q;
  wire [3:0]WR_PNTR_RD;
  wire \gc0.count_d1_reg[2]_0 ;
  wire [3:0]\gc0.count_d1_reg[3]_0 ;
  wire [3:0]plusOp__0;
  wire ram_empty_i_i_2_n_0;
  wire ram_empty_i_i_3_n_0;
  wire ram_empty_i_reg;
  wire ram_empty_i_reg_0;
  wire rd_clk;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(plusOp__0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[0]),
        .Q(\gc0.count_d1_reg[3]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[1]),
        .Q(\gc0.count_d1_reg[3]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[2]),
        .Q(\gc0.count_d1_reg[3]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[3]),
        .Q(\gc0.count_d1_reg[3]_0 [3]));
  FDPE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__0[0]),
        .PRE(AR),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[3]),
        .Q(Q[3]));
  LUT4 #(
    .INIT(16'hF888)) 
    ram_empty_i_i_1
       (.I0(ram_empty_i_i_2_n_0),
        .I1(ram_empty_i_i_3_n_0),
        .I2(ram_empty_i_reg),
        .I3(ram_empty_i_reg_0),
        .O(\gc0.count_d1_reg[2]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_2
       (.I0(\gc0.count_d1_reg[3]_0 [2]),
        .I1(WR_PNTR_RD[2]),
        .I2(\gc0.count_d1_reg[3]_0 [3]),
        .I3(WR_PNTR_RD[3]),
        .O(ram_empty_i_i_2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_3
       (.I0(\gc0.count_d1_reg[3]_0 [0]),
        .I1(WR_PNTR_RD[0]),
        .I2(\gc0.count_d1_reg[3]_0 [1]),
        .I3(WR_PNTR_RD[1]),
        .O(ram_empty_i_i_3_n_0));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module system_rp_oscilloscope_0_rd_bin_cntr__parameterized0
   (Q,
    v1_reg,
    \gc0.count_d1_reg[8]_0 ,
    WR_PNTR_RD,
    SR,
    E,
    rd_clk);
  output [0:0]Q;
  output [3:0]v1_reg;
  output [8:0]\gc0.count_d1_reg[8]_0 ;
  input [7:0]WR_PNTR_RD;
  input [0:0]SR;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]SR;
  wire [7:0]WR_PNTR_RD;
  wire \gc0.count[8]_i_2_n_0 ;
  wire [8:0]\gc0.count_d1_reg[8]_0 ;
  wire [8:0]plusOp__1;
  wire rd_clk;
  wire [7:0]rd_pntr_plus1;
  wire [3:0]v1_reg;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .O(plusOp__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .O(plusOp__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[2]),
        .O(plusOp__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1 
       (.I0(rd_pntr_plus1[1]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[2]),
        .I3(rd_pntr_plus1[3]),
        .O(plusOp__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[4]_i_1 
       (.I0(rd_pntr_plus1[2]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[3]),
        .I4(rd_pntr_plus1[4]),
        .O(plusOp__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc0.count[5]_i_1 
       (.I0(rd_pntr_plus1[3]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[0]),
        .I3(rd_pntr_plus1[2]),
        .I4(rd_pntr_plus1[4]),
        .I5(rd_pntr_plus1[5]),
        .O(plusOp__1[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[6]_i_1 
       (.I0(\gc0.count[8]_i_2_n_0 ),
        .I1(rd_pntr_plus1[6]),
        .O(plusOp__1[6]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[7]_i_1 
       (.I0(\gc0.count[8]_i_2_n_0 ),
        .I1(rd_pntr_plus1[6]),
        .I2(rd_pntr_plus1[7]),
        .O(plusOp__1[7]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[8]_i_1 
       (.I0(rd_pntr_plus1[6]),
        .I1(\gc0.count[8]_i_2_n_0 ),
        .I2(rd_pntr_plus1[7]),
        .I3(Q),
        .O(plusOp__1[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gc0.count[8]_i_2 
       (.I0(rd_pntr_plus1[5]),
        .I1(rd_pntr_plus1[3]),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[0]),
        .I4(rd_pntr_plus1[2]),
        .I5(rd_pntr_plus1[4]),
        .O(\gc0.count[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[0]),
        .Q(\gc0.count_d1_reg[8]_0 [0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[1]),
        .Q(\gc0.count_d1_reg[8]_0 [1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[2]),
        .Q(\gc0.count_d1_reg[8]_0 [2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[3]),
        .Q(\gc0.count_d1_reg[8]_0 [3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[4]),
        .Q(\gc0.count_d1_reg[8]_0 [4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[5]),
        .Q(\gc0.count_d1_reg[8]_0 [5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[6]),
        .Q(\gc0.count_d1_reg[8]_0 [6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[7]),
        .Q(\gc0.count_d1_reg[8]_0 [7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(Q),
        .Q(\gc0.count_d1_reg[8]_0 [8]),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[0]),
        .Q(rd_pntr_plus1[0]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[1]),
        .Q(rd_pntr_plus1[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[2]),
        .Q(rd_pntr_plus1[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[3]),
        .Q(rd_pntr_plus1[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[4]),
        .Q(rd_pntr_plus1[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[5]),
        .Q(rd_pntr_plus1[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[6]),
        .Q(rd_pntr_plus1[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[7]),
        .Q(rd_pntr_plus1[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[8]),
        .Q(Q),
        .R(SR));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__2 
       (.I0(rd_pntr_plus1[0]),
        .I1(WR_PNTR_RD[0]),
        .I2(rd_pntr_plus1[1]),
        .I3(WR_PNTR_RD[1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[2]),
        .I1(WR_PNTR_RD[2]),
        .I2(rd_pntr_plus1[3]),
        .I3(WR_PNTR_RD[3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[4]),
        .I1(WR_PNTR_RD[4]),
        .I2(rd_pntr_plus1[5]),
        .I3(WR_PNTR_RD[5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[6]),
        .I1(WR_PNTR_RD[6]),
        .I2(rd_pntr_plus1[7]),
        .I3(WR_PNTR_RD[7]),
        .O(v1_reg[3]));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module system_rp_oscilloscope_0_rd_bin_cntr__parameterized0_57
   (Q,
    v1_reg,
    \gc0.count_d1_reg[8]_0 ,
    WR_PNTR_RD,
    SR,
    E,
    rd_clk);
  output [0:0]Q;
  output [3:0]v1_reg;
  output [8:0]\gc0.count_d1_reg[8]_0 ;
  input [7:0]WR_PNTR_RD;
  input [0:0]SR;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]SR;
  wire [7:0]WR_PNTR_RD;
  wire \gc0.count[8]_i_2_n_0 ;
  wire [8:0]\gc0.count_d1_reg[8]_0 ;
  wire [8:0]plusOp__1;
  wire rd_clk;
  wire [7:0]rd_pntr_plus1;
  wire [3:0]v1_reg;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .O(plusOp__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .O(plusOp__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[2]),
        .O(plusOp__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1 
       (.I0(rd_pntr_plus1[1]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[2]),
        .I3(rd_pntr_plus1[3]),
        .O(plusOp__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[4]_i_1 
       (.I0(rd_pntr_plus1[2]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[3]),
        .I4(rd_pntr_plus1[4]),
        .O(plusOp__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc0.count[5]_i_1 
       (.I0(rd_pntr_plus1[3]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[0]),
        .I3(rd_pntr_plus1[2]),
        .I4(rd_pntr_plus1[4]),
        .I5(rd_pntr_plus1[5]),
        .O(plusOp__1[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[6]_i_1 
       (.I0(\gc0.count[8]_i_2_n_0 ),
        .I1(rd_pntr_plus1[6]),
        .O(plusOp__1[6]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[7]_i_1 
       (.I0(\gc0.count[8]_i_2_n_0 ),
        .I1(rd_pntr_plus1[6]),
        .I2(rd_pntr_plus1[7]),
        .O(plusOp__1[7]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[8]_i_1 
       (.I0(rd_pntr_plus1[6]),
        .I1(\gc0.count[8]_i_2_n_0 ),
        .I2(rd_pntr_plus1[7]),
        .I3(Q),
        .O(plusOp__1[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gc0.count[8]_i_2 
       (.I0(rd_pntr_plus1[5]),
        .I1(rd_pntr_plus1[3]),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[0]),
        .I4(rd_pntr_plus1[2]),
        .I5(rd_pntr_plus1[4]),
        .O(\gc0.count[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[0]),
        .Q(\gc0.count_d1_reg[8]_0 [0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[1]),
        .Q(\gc0.count_d1_reg[8]_0 [1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[2]),
        .Q(\gc0.count_d1_reg[8]_0 [2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[3]),
        .Q(\gc0.count_d1_reg[8]_0 [3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[4]),
        .Q(\gc0.count_d1_reg[8]_0 [4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[5]),
        .Q(\gc0.count_d1_reg[8]_0 [5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[6]),
        .Q(\gc0.count_d1_reg[8]_0 [6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus1[7]),
        .Q(\gc0.count_d1_reg[8]_0 [7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(Q),
        .Q(\gc0.count_d1_reg[8]_0 [8]),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[0]),
        .Q(rd_pntr_plus1[0]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[1]),
        .Q(rd_pntr_plus1[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[2]),
        .Q(rd_pntr_plus1[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[3]),
        .Q(rd_pntr_plus1[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[4]),
        .Q(rd_pntr_plus1[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[5]),
        .Q(rd_pntr_plus1[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[6]),
        .Q(rd_pntr_plus1[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[7]),
        .Q(rd_pntr_plus1[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__1[8]),
        .Q(Q),
        .R(SR));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__2 
       (.I0(rd_pntr_plus1[0]),
        .I1(WR_PNTR_RD[0]),
        .I2(rd_pntr_plus1[1]),
        .I3(WR_PNTR_RD[1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[2]),
        .I1(WR_PNTR_RD[2]),
        .I2(rd_pntr_plus1[3]),
        .I3(WR_PNTR_RD[3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[4]),
        .I1(WR_PNTR_RD[4]),
        .I2(rd_pntr_plus1[5]),
        .I3(WR_PNTR_RD[5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[6]),
        .I1(WR_PNTR_RD[6]),
        .I2(rd_pntr_plus1[7]),
        .I3(WR_PNTR_RD[7]),
        .O(v1_reg[3]));
endmodule

(* ORIG_REF_NAME = "rd_dc_fwft_ext_as" *) 
module system_rp_oscilloscope_0_rd_dc_fwft_ext_as
   (rd_data_count,
    O,
    rd_dc_i,
    rd_clk,
    WR_PNTR_RD,
    S,
    \g_rd.gvalid_low.rd_dc_i_reg[7]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[8]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[0]_0 );
  output [9:0]rd_data_count;
  output [0:0]O;
  input [0:0]rd_dc_i;
  input rd_clk;
  input [7:0]WR_PNTR_RD;
  input [3:0]S;
  input [3:0]\g_rd.gvalid_low.rd_dc_i_reg[7]_0 ;
  input [0:0]\g_rd.gvalid_low.rd_dc_i_reg[8]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[0]_0 ;

  wire [0:0]O;
  wire [3:0]S;
  wire [7:0]WR_PNTR_RD;
  wire [8:1]diff_wr_rd__0;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_3_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[0]_0 ;
  wire [3:0]\g_rd.gvalid_low.rd_dc_i_reg[7]_0 ;
  wire [0:0]\g_rd.gvalid_low.rd_dc_i_reg[8]_0 ;
  wire minusOp_carry__0_n_0;
  wire minusOp_carry__0_n_1;
  wire minusOp_carry__0_n_2;
  wire minusOp_carry__0_n_3;
  wire minusOp_carry_n_0;
  wire minusOp_carry_n_1;
  wire minusOp_carry_n_2;
  wire minusOp_carry_n_3;
  wire [9:1]plusOp;
  wire rd_clk;
  wire [9:0]rd_data_count;
  wire [0:0]rd_dc_i;
  wire [3:0]NLW_minusOp_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_minusOp_carry__1_O_UNCONNECTED;

  LUT1 #(
    .INIT(2'h1)) 
    \g_rd.gvalid_low.rd_dc_i[1]_i_1 
       (.I0(diff_wr_rd__0[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \g_rd.gvalid_low.rd_dc_i[2]_i_1 
       (.I0(diff_wr_rd__0[1]),
        .I1(diff_wr_rd__0[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \g_rd.gvalid_low.rd_dc_i[3]_i_1 
       (.I0(diff_wr_rd__0[1]),
        .I1(diff_wr_rd__0[2]),
        .I2(diff_wr_rd__0[3]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \g_rd.gvalid_low.rd_dc_i[4]_i_1 
       (.I0(diff_wr_rd__0[2]),
        .I1(diff_wr_rd__0[1]),
        .I2(diff_wr_rd__0[3]),
        .I3(diff_wr_rd__0[4]),
        .O(plusOp[4]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \g_rd.gvalid_low.rd_dc_i[5]_i_1 
       (.I0(diff_wr_rd__0[3]),
        .I1(diff_wr_rd__0[1]),
        .I2(diff_wr_rd__0[2]),
        .I3(diff_wr_rd__0[4]),
        .I4(diff_wr_rd__0[5]),
        .O(plusOp[5]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \g_rd.gvalid_low.rd_dc_i[6]_i_1 
       (.I0(diff_wr_rd__0[4]),
        .I1(diff_wr_rd__0[2]),
        .I2(diff_wr_rd__0[1]),
        .I3(diff_wr_rd__0[3]),
        .I4(diff_wr_rd__0[5]),
        .I5(diff_wr_rd__0[6]),
        .O(plusOp[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \g_rd.gvalid_low.rd_dc_i[7]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i[9]_i_3_n_0 ),
        .I1(diff_wr_rd__0[7]),
        .O(plusOp[7]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \g_rd.gvalid_low.rd_dc_i[8]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i[9]_i_3_n_0 ),
        .I1(diff_wr_rd__0[7]),
        .I2(diff_wr_rd__0[8]),
        .O(plusOp[8]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_2 
       (.I0(diff_wr_rd__0[8]),
        .I1(\g_rd.gvalid_low.rd_dc_i[9]_i_3_n_0 ),
        .I2(diff_wr_rd__0[7]),
        .O(plusOp[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_3 
       (.I0(diff_wr_rd__0[6]),
        .I1(diff_wr_rd__0[4]),
        .I2(diff_wr_rd__0[2]),
        .I3(diff_wr_rd__0[1]),
        .I4(diff_wr_rd__0[3]),
        .I5(diff_wr_rd__0[5]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[0]_0 ),
        .Q(rd_data_count[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[1]),
        .Q(rd_data_count[1]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[2]),
        .Q(rd_data_count[2]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[3]),
        .Q(rd_data_count[3]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[4]),
        .Q(rd_data_count[4]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[5]),
        .Q(rd_data_count[5]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[6]),
        .Q(rd_data_count[6]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[7]),
        .Q(rd_data_count[7]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[8]),
        .Q(rd_data_count[8]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[9]),
        .Q(rd_data_count[9]),
        .R(rd_dc_i));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 minusOp_carry
       (.CI(1'b0),
        .CO({minusOp_carry_n_0,minusOp_carry_n_1,minusOp_carry_n_2,minusOp_carry_n_3}),
        .CYINIT(1'b1),
        .DI(WR_PNTR_RD[3:0]),
        .O({diff_wr_rd__0[3:1],O}),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CO({minusOp_carry__0_n_0,minusOp_carry__0_n_1,minusOp_carry__0_n_2,minusOp_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(WR_PNTR_RD[7:4]),
        .O(diff_wr_rd__0[7:4]),
        .S(\g_rd.gvalid_low.rd_dc_i_reg[7]_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 minusOp_carry__1
       (.CI(minusOp_carry__0_n_0),
        .CO(NLW_minusOp_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_minusOp_carry__1_O_UNCONNECTED[3:1],diff_wr_rd__0[8]}),
        .S({1'b0,1'b0,1'b0,\g_rd.gvalid_low.rd_dc_i_reg[8]_0 }));
endmodule

(* ORIG_REF_NAME = "rd_dc_fwft_ext_as" *) 
module system_rp_oscilloscope_0_rd_dc_fwft_ext_as_55
   (rd_data_count,
    O,
    rd_dc_i,
    rd_clk,
    WR_PNTR_RD,
    S,
    \g_rd.gvalid_low.rd_dc_i_reg[7]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[8]_0 ,
    \g_rd.gvalid_low.rd_dc_i_reg[0]_0 );
  output [9:0]rd_data_count;
  output [0:0]O;
  input [0:0]rd_dc_i;
  input rd_clk;
  input [7:0]WR_PNTR_RD;
  input [3:0]S;
  input [3:0]\g_rd.gvalid_low.rd_dc_i_reg[7]_0 ;
  input [0:0]\g_rd.gvalid_low.rd_dc_i_reg[8]_0 ;
  input \g_rd.gvalid_low.rd_dc_i_reg[0]_0 ;

  wire [0:0]O;
  wire [3:0]S;
  wire [7:0]WR_PNTR_RD;
  wire [8:1]diff_wr_rd__0;
  wire \g_rd.gvalid_low.rd_dc_i[9]_i_3_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[0]_0 ;
  wire [3:0]\g_rd.gvalid_low.rd_dc_i_reg[7]_0 ;
  wire [0:0]\g_rd.gvalid_low.rd_dc_i_reg[8]_0 ;
  wire minusOp_carry__0_n_0;
  wire minusOp_carry__0_n_1;
  wire minusOp_carry__0_n_2;
  wire minusOp_carry__0_n_3;
  wire minusOp_carry_n_0;
  wire minusOp_carry_n_1;
  wire minusOp_carry_n_2;
  wire minusOp_carry_n_3;
  wire [9:1]plusOp;
  wire rd_clk;
  wire [9:0]rd_data_count;
  wire [0:0]rd_dc_i;
  wire [3:0]NLW_minusOp_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_minusOp_carry__1_O_UNCONNECTED;

  LUT1 #(
    .INIT(2'h1)) 
    \g_rd.gvalid_low.rd_dc_i[1]_i_1 
       (.I0(diff_wr_rd__0[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \g_rd.gvalid_low.rd_dc_i[2]_i_1 
       (.I0(diff_wr_rd__0[1]),
        .I1(diff_wr_rd__0[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \g_rd.gvalid_low.rd_dc_i[3]_i_1 
       (.I0(diff_wr_rd__0[1]),
        .I1(diff_wr_rd__0[2]),
        .I2(diff_wr_rd__0[3]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \g_rd.gvalid_low.rd_dc_i[4]_i_1 
       (.I0(diff_wr_rd__0[2]),
        .I1(diff_wr_rd__0[1]),
        .I2(diff_wr_rd__0[3]),
        .I3(diff_wr_rd__0[4]),
        .O(plusOp[4]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \g_rd.gvalid_low.rd_dc_i[5]_i_1 
       (.I0(diff_wr_rd__0[3]),
        .I1(diff_wr_rd__0[1]),
        .I2(diff_wr_rd__0[2]),
        .I3(diff_wr_rd__0[4]),
        .I4(diff_wr_rd__0[5]),
        .O(plusOp[5]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \g_rd.gvalid_low.rd_dc_i[6]_i_1 
       (.I0(diff_wr_rd__0[4]),
        .I1(diff_wr_rd__0[2]),
        .I2(diff_wr_rd__0[1]),
        .I3(diff_wr_rd__0[3]),
        .I4(diff_wr_rd__0[5]),
        .I5(diff_wr_rd__0[6]),
        .O(plusOp[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \g_rd.gvalid_low.rd_dc_i[7]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i[9]_i_3_n_0 ),
        .I1(diff_wr_rd__0[7]),
        .O(plusOp[7]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \g_rd.gvalid_low.rd_dc_i[8]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i[9]_i_3_n_0 ),
        .I1(diff_wr_rd__0[7]),
        .I2(diff_wr_rd__0[8]),
        .O(plusOp[8]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_2 
       (.I0(diff_wr_rd__0[8]),
        .I1(\g_rd.gvalid_low.rd_dc_i[9]_i_3_n_0 ),
        .I2(diff_wr_rd__0[7]),
        .O(plusOp[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_3 
       (.I0(diff_wr_rd__0[6]),
        .I1(diff_wr_rd__0[4]),
        .I2(diff_wr_rd__0[2]),
        .I3(diff_wr_rd__0[1]),
        .I4(diff_wr_rd__0[3]),
        .I5(diff_wr_rd__0[5]),
        .O(\g_rd.gvalid_low.rd_dc_i[9]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\g_rd.gvalid_low.rd_dc_i_reg[0]_0 ),
        .Q(rd_data_count[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[1]),
        .Q(rd_data_count[1]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[2]),
        .Q(rd_data_count[2]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[3]),
        .Q(rd_data_count[3]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[4]),
        .Q(rd_data_count[4]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[5]),
        .Q(rd_data_count[5]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[6]),
        .Q(rd_data_count[6]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[7]),
        .Q(rd_data_count[7]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[8]),
        .Q(rd_data_count[8]),
        .R(rd_dc_i));
  FDRE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(plusOp[9]),
        .Q(rd_data_count[9]),
        .R(rd_dc_i));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 minusOp_carry
       (.CI(1'b0),
        .CO({minusOp_carry_n_0,minusOp_carry_n_1,minusOp_carry_n_2,minusOp_carry_n_3}),
        .CYINIT(1'b1),
        .DI(WR_PNTR_RD[3:0]),
        .O({diff_wr_rd__0[3:1],O}),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CO({minusOp_carry__0_n_0,minusOp_carry__0_n_1,minusOp_carry__0_n_2,minusOp_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(WR_PNTR_RD[7:4]),
        .O(diff_wr_rd__0[7:4]),
        .S(\g_rd.gvalid_low.rd_dc_i_reg[7]_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 minusOp_carry__1
       (.CI(minusOp_carry__0_n_0),
        .CO(NLW_minusOp_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_minusOp_carry__1_O_UNCONNECTED[3:1],diff_wr_rd__0[8]}),
        .S({1'b0,1'b0,1'b0,\g_rd.gvalid_low.rd_dc_i_reg[8]_0 }));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module system_rp_oscilloscope_0_rd_fwft
   (empty,
    E,
    \gpregsm1.curr_fwft_state_reg[1]_0 ,
    \gpregsm1.curr_fwft_state_reg[1]_1 ,
    rd_clk,
    AR,
    rd_en,
    out,
    WR_PNTR_RD,
    Q);
  output empty;
  output [0:0]E;
  output \gpregsm1.curr_fwft_state_reg[1]_0 ;
  output [0:0]\gpregsm1.curr_fwft_state_reg[1]_1 ;
  input rd_clk;
  input [0:0]AR;
  input rd_en;
  input out;
  input [0:0]WR_PNTR_RD;
  input [0:0]Q;

  wire [0:0]AR;
  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]WR_PNTR_RD;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0;
  wire \gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1]_1 ;
  wire [1:0]next_fwft_state;
  wire out;
  wire rd_clk;
  wire rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign empty = empty_fwft_i;
  LUT5 #(
    .INIT(32'hEF80EB00)) 
    aempty_fwft_fb_i_i_1
       (.I0(out),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(aempty_fwft_fb_i),
        .I4(rd_en),
        .O(aempty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AR),
        .Q(aempty_fwft_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AR),
        .Q(aempty_fwft_i));
  LUT4 #(
    .INIT(16'hBA22)) 
    empty_fwft_fb_i_i_1
       (.I0(empty_fwft_fb_i),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AR),
        .Q(empty_fwft_fb_i));
  LUT4 #(
    .INIT(16'hBA22)) 
    empty_fwft_fb_o_i_i_1
       (.I0(empty_fwft_fb_o_i),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_fb_o_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i0),
        .PRE(AR),
        .Q(empty_fwft_fb_o_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AR),
        .Q(empty_fwft_i));
  LUT4 #(
    .INIT(16'h00DF)) 
    \gc0.count_d1[3]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .O(\gpregsm1.curr_fwft_state_reg[1]_1 ));
  LUT3 #(
    .INIT(8'hD0)) 
    \goreg_dm.dout_i[7]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .O(E));
  LUT3 #(
    .INIT(8'hAE)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[0]),
        .Q(user_valid));
  LUT6 #(
    .INIT(64'h00DF0000000000DF)) 
    ram_empty_i_i_5
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .I4(WR_PNTR_RD),
        .I5(Q),
        .O(\gpregsm1.curr_fwft_state_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module system_rp_oscilloscope_0_rd_fwft_28
   (empty,
    E,
    \gpregsm1.curr_fwft_state_reg[1]_0 ,
    \gpregsm1.curr_fwft_state_reg[1]_1 ,
    rd_clk,
    AR,
    rd_en,
    out,
    WR_PNTR_RD,
    Q);
  output empty;
  output [0:0]E;
  output \gpregsm1.curr_fwft_state_reg[1]_0 ;
  output [0:0]\gpregsm1.curr_fwft_state_reg[1]_1 ;
  input rd_clk;
  input [0:0]AR;
  input rd_en;
  input out;
  input [0:0]WR_PNTR_RD;
  input [0:0]Q;

  wire [0:0]AR;
  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]WR_PNTR_RD;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0;
  wire \gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1]_1 ;
  wire [1:0]next_fwft_state;
  wire out;
  wire rd_clk;
  wire rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign empty = empty_fwft_i;
  LUT5 #(
    .INIT(32'hEF80EB00)) 
    aempty_fwft_fb_i_i_1
       (.I0(out),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(aempty_fwft_fb_i),
        .I4(rd_en),
        .O(aempty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AR),
        .Q(aempty_fwft_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AR),
        .Q(aempty_fwft_i));
  LUT4 #(
    .INIT(16'hBA22)) 
    empty_fwft_fb_i_i_1
       (.I0(empty_fwft_fb_i),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AR),
        .Q(empty_fwft_fb_i));
  LUT4 #(
    .INIT(16'hBA22)) 
    empty_fwft_fb_o_i_i_1
       (.I0(empty_fwft_fb_o_i),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_fb_o_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i0),
        .PRE(AR),
        .Q(empty_fwft_fb_o_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AR),
        .Q(empty_fwft_i));
  LUT4 #(
    .INIT(16'h00DF)) 
    \gc0.count_d1[3]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .O(\gpregsm1.curr_fwft_state_reg[1]_1 ));
  LUT3 #(
    .INIT(8'hD0)) 
    \goreg_dm.dout_i[7]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .O(E));
  LUT3 #(
    .INIT(8'hAE)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[0]),
        .Q(user_valid));
  LUT6 #(
    .INIT(64'h00DF0000000000DF)) 
    ram_empty_i_i_5
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .I4(WR_PNTR_RD),
        .I5(Q),
        .O(\gpregsm1.curr_fwft_state_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module system_rp_oscilloscope_0_rd_fwft_37
   (empty,
    E,
    \gpregsm1.curr_fwft_state_reg[1]_0 ,
    \gpregsm1.curr_fwft_state_reg[1]_1 ,
    rd_clk,
    AR,
    rd_en,
    out,
    WR_PNTR_RD,
    Q);
  output empty;
  output [0:0]E;
  output \gpregsm1.curr_fwft_state_reg[1]_0 ;
  output [0:0]\gpregsm1.curr_fwft_state_reg[1]_1 ;
  input rd_clk;
  input [0:0]AR;
  input rd_en;
  input out;
  input [0:0]WR_PNTR_RD;
  input [0:0]Q;

  wire [0:0]AR;
  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]WR_PNTR_RD;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0;
  wire \gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1]_1 ;
  wire [1:0]next_fwft_state;
  wire out;
  wire rd_clk;
  wire rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign empty = empty_fwft_i;
  LUT5 #(
    .INIT(32'hEF80EB00)) 
    aempty_fwft_fb_i_i_1
       (.I0(out),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(aempty_fwft_fb_i),
        .I4(rd_en),
        .O(aempty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AR),
        .Q(aempty_fwft_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AR),
        .Q(aempty_fwft_i));
  LUT4 #(
    .INIT(16'hBA22)) 
    empty_fwft_fb_i_i_1
       (.I0(empty_fwft_fb_i),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AR),
        .Q(empty_fwft_fb_i));
  LUT4 #(
    .INIT(16'hBA22)) 
    empty_fwft_fb_o_i_i_1
       (.I0(empty_fwft_fb_o_i),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_fb_o_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i0),
        .PRE(AR),
        .Q(empty_fwft_fb_o_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AR),
        .Q(empty_fwft_i));
  LUT4 #(
    .INIT(16'h00DF)) 
    \gc0.count_d1[3]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .O(\gpregsm1.curr_fwft_state_reg[1]_1 ));
  LUT3 #(
    .INIT(8'hD0)) 
    \goreg_dm.dout_i[7]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .O(E));
  LUT3 #(
    .INIT(8'hAE)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[0]),
        .Q(user_valid));
  LUT6 #(
    .INIT(64'h00DF0000000000DF)) 
    ram_empty_i_i_5
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .I4(WR_PNTR_RD),
        .I5(Q),
        .O(\gpregsm1.curr_fwft_state_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module system_rp_oscilloscope_0_rd_fwft_7
   (empty,
    E,
    \gpregsm1.curr_fwft_state_reg[1]_0 ,
    \gpregsm1.curr_fwft_state_reg[1]_1 ,
    rd_clk,
    AR,
    rd_en,
    out,
    WR_PNTR_RD,
    Q);
  output empty;
  output [0:0]E;
  output \gpregsm1.curr_fwft_state_reg[1]_0 ;
  output [0:0]\gpregsm1.curr_fwft_state_reg[1]_1 ;
  input rd_clk;
  input [0:0]AR;
  input rd_en;
  input out;
  input [0:0]WR_PNTR_RD;
  input [0:0]Q;

  wire [0:0]AR;
  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]WR_PNTR_RD;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0;
  wire \gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1]_1 ;
  wire [1:0]next_fwft_state;
  wire out;
  wire rd_clk;
  wire rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign empty = empty_fwft_i;
  LUT5 #(
    .INIT(32'hEF80EB00)) 
    aempty_fwft_fb_i_i_1
       (.I0(out),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(aempty_fwft_fb_i),
        .I4(rd_en),
        .O(aempty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AR),
        .Q(aempty_fwft_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AR),
        .Q(aempty_fwft_i));
  LUT4 #(
    .INIT(16'hBA22)) 
    empty_fwft_fb_i_i_1
       (.I0(empty_fwft_fb_i),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AR),
        .Q(empty_fwft_fb_i));
  LUT4 #(
    .INIT(16'hBA22)) 
    empty_fwft_fb_o_i_i_1
       (.I0(empty_fwft_fb_o_i),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_fb_o_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i0),
        .PRE(AR),
        .Q(empty_fwft_fb_o_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AR),
        .Q(empty_fwft_i));
  LUT4 #(
    .INIT(16'h00DF)) 
    \gc0.count_d1[3]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .O(\gpregsm1.curr_fwft_state_reg[1]_1 ));
  LUT3 #(
    .INIT(8'hD0)) 
    \goreg_dm.dout_i[7]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .O(E));
  LUT3 #(
    .INIT(8'hAE)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[0]),
        .Q(user_valid));
  LUT6 #(
    .INIT(64'h00DF0000000000DF)) 
    ram_empty_i_i_5
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .I4(WR_PNTR_RD),
        .I5(Q),
        .O(\gpregsm1.curr_fwft_state_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module system_rp_oscilloscope_0_rd_fwft__parameterized0
   (out,
    empty,
    ENB_I,
    \gpregsm1.curr_fwft_state_reg[1]_0 ,
    E,
    ram_empty_fb_i_reg,
    rd_dc_i,
    SR,
    rd_clk,
    ENB_dly_D,
    rd_en,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    O);
  output [1:0]out;
  output empty;
  output ENB_I;
  output \gpregsm1.curr_fwft_state_reg[1]_0 ;
  output [0:0]E;
  output [0:0]ram_empty_fb_i_reg;
  output [0:0]rd_dc_i;
  input [0:0]SR;
  input rd_clk;
  input ENB_dly_D;
  input rd_en;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [0:0]O;

  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [0:0]O;
  wire [0:0]SR;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0__1;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i_reg0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0__1;
  wire \gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire [1:0]next_fwft_state;
  wire [0:0]ram_empty_fb_i_reg;
  wire rd_clk;
  wire [0:0]rd_dc_i;
  wire rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign empty = empty_fwft_i;
  assign out[1:0] = curr_fwft_state;
  LUT6 #(
    .INIT(64'hEEEEEEEEFFFFEFFF)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_1 
       (.I0(ENB_dly_D),
        .I1(SR),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .I4(rd_en),
        .I5(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .O(ENB_I));
  LUT5 #(
    .INIT(32'hFFCB8000)) 
    aempty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .I4(aempty_fwft_fb_i),
        .O(aempty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_fb_i),
        .S(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_i),
        .S(SR));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_i),
        .O(empty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_fb_i),
        .S(SR));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_o_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_o_i),
        .O(empty_fwft_fb_o_i_reg0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i_reg0),
        .Q(empty_fwft_fb_o_i),
        .S(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_i),
        .S(SR));
  LUT4 #(
    .INIT(16'h00D0)) 
    \g_rd.gvalid_low.rd_dc_i[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(O),
        .I2(user_valid),
        .I3(SR),
        .O(\gpregsm1.curr_fwft_state_reg[1]_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_1 
       (.I0(SR),
        .I1(curr_fwft_state[1]),
        .I2(user_valid),
        .O(rd_dc_i));
  LUT4 #(
    .INIT(16'h4555)) 
    \gc0.count_d1[8]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(ram_empty_fb_i_reg));
  LUT3 #(
    .INIT(8'hA2)) 
    \goreg_bm.dout_i[63]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(E));
  LUT3 #(
    .INIT(8'hBA)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(user_valid),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module system_rp_oscilloscope_0_rd_fwft__parameterized0_54
   (out,
    empty,
    ENB_I,
    \gpregsm1.curr_fwft_state_reg[1]_0 ,
    E,
    ram_empty_fb_i_reg,
    rd_dc_i,
    SR,
    rd_clk,
    ENB_dly_D,
    rd_en,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    O);
  output [1:0]out;
  output empty;
  output ENB_I;
  output \gpregsm1.curr_fwft_state_reg[1]_0 ;
  output [0:0]E;
  output [0:0]ram_empty_fb_i_reg;
  output [0:0]rd_dc_i;
  input [0:0]SR;
  input rd_clk;
  input ENB_dly_D;
  input rd_en;
  input \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [0:0]O;

  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [0:0]O;
  wire [0:0]SR;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0__1;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i_reg0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0__1;
  wire \gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire [1:0]next_fwft_state;
  wire [0:0]ram_empty_fb_i_reg;
  wire rd_clk;
  wire [0:0]rd_dc_i;
  wire rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign empty = empty_fwft_i;
  assign out[1:0] = curr_fwft_state;
  LUT6 #(
    .INIT(64'hEEEEEEEEFFFFEFFF)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_1 
       (.I0(ENB_dly_D),
        .I1(SR),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .I4(rd_en),
        .I5(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .O(ENB_I));
  LUT5 #(
    .INIT(32'hFFCB8000)) 
    aempty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .I4(aempty_fwft_fb_i),
        .O(aempty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_fb_i),
        .S(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_i),
        .S(SR));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_i),
        .O(empty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_fb_i),
        .S(SR));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_o_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_o_i),
        .O(empty_fwft_fb_o_i_reg0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i_reg0),
        .Q(empty_fwft_fb_o_i),
        .S(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_i),
        .S(SR));
  LUT4 #(
    .INIT(16'h00D0)) 
    \g_rd.gvalid_low.rd_dc_i[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(O),
        .I2(user_valid),
        .I3(SR),
        .O(\gpregsm1.curr_fwft_state_reg[1]_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    \g_rd.gvalid_low.rd_dc_i[9]_i_1 
       (.I0(SR),
        .I1(curr_fwft_state[1]),
        .I2(user_valid),
        .O(rd_dc_i));
  LUT4 #(
    .INIT(16'h4555)) 
    \gc0.count_d1[8]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(ram_empty_fb_i_reg));
  LUT3 #(
    .INIT(8'hA2)) 
    \goreg_bm.dout_i[63]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(E));
  LUT3 #(
    .INIT(8'hBA)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(user_valid),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module system_rp_oscilloscope_0_rd_logic
   (empty,
    E,
    Q,
    \gpregsm1.curr_fwft_state_reg[1] ,
    \gc0.count_d1_reg[3] ,
    rd_clk,
    AR,
    rd_en,
    ram_empty_i_reg,
    WR_PNTR_RD);
  output empty;
  output [0:0]E;
  output [2:0]Q;
  output [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  output [3:0]\gc0.count_d1_reg[3] ;
  input rd_clk;
  input [0:0]AR;
  input rd_en;
  input ram_empty_i_reg;
  input [3:0]WR_PNTR_RD;

  wire [0:0]AR;
  wire [0:0]E;
  wire [2:0]Q;
  wire [3:0]WR_PNTR_RD;
  wire empty;
  wire empty_fb_i;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire \gr1.gr1_int.rfwft_n_2 ;
  wire ram_empty_i_reg;
  wire rd_clk;
  wire rd_en;
  wire [3:3]rd_pntr_plus1;
  wire rpntr_n_0;

  system_rp_oscilloscope_0_rd_fwft \gr1.gr1_int.rfwft 
       (.AR(AR),
        .E(E),
        .Q(rd_pntr_plus1),
        .WR_PNTR_RD(WR_PNTR_RD[3]),
        .empty(empty),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (\gr1.gr1_int.rfwft_n_2 ),
        .\gpregsm1.curr_fwft_state_reg[1]_1 (\gpregsm1.curr_fwft_state_reg[1] ),
        .out(empty_fb_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  system_rp_oscilloscope_0_rd_status_flags_as \gras.rsts 
       (.AR(AR),
        .out(empty_fb_i),
        .ram_empty_i_reg_0(rpntr_n_0),
        .rd_clk(rd_clk));
  system_rp_oscilloscope_0_rd_bin_cntr rpntr
       (.AR(AR),
        .E(\gpregsm1.curr_fwft_state_reg[1] ),
        .Q({rd_pntr_plus1,Q}),
        .WR_PNTR_RD(WR_PNTR_RD),
        .\gc0.count_d1_reg[2]_0 (rpntr_n_0),
        .\gc0.count_d1_reg[3]_0 (\gc0.count_d1_reg[3] ),
        .ram_empty_i_reg(ram_empty_i_reg),
        .ram_empty_i_reg_0(\gr1.gr1_int.rfwft_n_2 ),
        .rd_clk(rd_clk));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module system_rp_oscilloscope_0_rd_logic_1
   (empty,
    E,
    Q,
    \gpregsm1.curr_fwft_state_reg[1] ,
    \gc0.count_d1_reg[3] ,
    rd_clk,
    AR,
    rd_en,
    ram_empty_i_reg,
    WR_PNTR_RD);
  output empty;
  output [0:0]E;
  output [2:0]Q;
  output [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  output [3:0]\gc0.count_d1_reg[3] ;
  input rd_clk;
  input [0:0]AR;
  input rd_en;
  input ram_empty_i_reg;
  input [3:0]WR_PNTR_RD;

  wire [0:0]AR;
  wire [0:0]E;
  wire [2:0]Q;
  wire [3:0]WR_PNTR_RD;
  wire empty;
  wire empty_fb_i;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire \gr1.gr1_int.rfwft_n_2 ;
  wire ram_empty_i_reg;
  wire rd_clk;
  wire rd_en;
  wire [3:3]rd_pntr_plus1;
  wire rpntr_n_0;

  system_rp_oscilloscope_0_rd_fwft_7 \gr1.gr1_int.rfwft 
       (.AR(AR),
        .E(E),
        .Q(rd_pntr_plus1),
        .WR_PNTR_RD(WR_PNTR_RD[3]),
        .empty(empty),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (\gr1.gr1_int.rfwft_n_2 ),
        .\gpregsm1.curr_fwft_state_reg[1]_1 (\gpregsm1.curr_fwft_state_reg[1] ),
        .out(empty_fb_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  system_rp_oscilloscope_0_rd_status_flags_as_8 \gras.rsts 
       (.AR(AR),
        .out(empty_fb_i),
        .ram_empty_i_reg_0(rpntr_n_0),
        .rd_clk(rd_clk));
  system_rp_oscilloscope_0_rd_bin_cntr_9 rpntr
       (.AR(AR),
        .E(\gpregsm1.curr_fwft_state_reg[1] ),
        .Q({rd_pntr_plus1,Q}),
        .WR_PNTR_RD(WR_PNTR_RD),
        .\gc0.count_d1_reg[2]_0 (rpntr_n_0),
        .\gc0.count_d1_reg[3]_0 (\gc0.count_d1_reg[3] ),
        .ram_empty_i_reg(ram_empty_i_reg),
        .ram_empty_i_reg_0(\gr1.gr1_int.rfwft_n_2 ),
        .rd_clk(rd_clk));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module system_rp_oscilloscope_0_rd_logic_22
   (empty,
    E,
    Q,
    \gpregsm1.curr_fwft_state_reg[1] ,
    \gc0.count_d1_reg[3] ,
    rd_clk,
    AR,
    rd_en,
    ram_empty_i_reg,
    WR_PNTR_RD);
  output empty;
  output [0:0]E;
  output [2:0]Q;
  output [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  output [3:0]\gc0.count_d1_reg[3] ;
  input rd_clk;
  input [0:0]AR;
  input rd_en;
  input ram_empty_i_reg;
  input [3:0]WR_PNTR_RD;

  wire [0:0]AR;
  wire [0:0]E;
  wire [2:0]Q;
  wire [3:0]WR_PNTR_RD;
  wire empty;
  wire empty_fb_i;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire \gr1.gr1_int.rfwft_n_2 ;
  wire ram_empty_i_reg;
  wire rd_clk;
  wire rd_en;
  wire [3:3]rd_pntr_plus1;
  wire rpntr_n_0;

  system_rp_oscilloscope_0_rd_fwft_28 \gr1.gr1_int.rfwft 
       (.AR(AR),
        .E(E),
        .Q(rd_pntr_plus1),
        .WR_PNTR_RD(WR_PNTR_RD[3]),
        .empty(empty),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (\gr1.gr1_int.rfwft_n_2 ),
        .\gpregsm1.curr_fwft_state_reg[1]_1 (\gpregsm1.curr_fwft_state_reg[1] ),
        .out(empty_fb_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  system_rp_oscilloscope_0_rd_status_flags_as_29 \gras.rsts 
       (.AR(AR),
        .out(empty_fb_i),
        .ram_empty_i_reg_0(rpntr_n_0),
        .rd_clk(rd_clk));
  system_rp_oscilloscope_0_rd_bin_cntr_30 rpntr
       (.AR(AR),
        .E(\gpregsm1.curr_fwft_state_reg[1] ),
        .Q({rd_pntr_plus1,Q}),
        .WR_PNTR_RD(WR_PNTR_RD),
        .\gc0.count_d1_reg[2]_0 (rpntr_n_0),
        .\gc0.count_d1_reg[3]_0 (\gc0.count_d1_reg[3] ),
        .ram_empty_i_reg(ram_empty_i_reg),
        .ram_empty_i_reg_0(\gr1.gr1_int.rfwft_n_2 ),
        .rd_clk(rd_clk));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module system_rp_oscilloscope_0_rd_logic_31
   (empty,
    E,
    Q,
    \gpregsm1.curr_fwft_state_reg[1] ,
    \gc0.count_d1_reg[3] ,
    rd_clk,
    AR,
    rd_en,
    ram_empty_i_reg,
    WR_PNTR_RD);
  output empty;
  output [0:0]E;
  output [2:0]Q;
  output [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  output [3:0]\gc0.count_d1_reg[3] ;
  input rd_clk;
  input [0:0]AR;
  input rd_en;
  input ram_empty_i_reg;
  input [3:0]WR_PNTR_RD;

  wire [0:0]AR;
  wire [0:0]E;
  wire [2:0]Q;
  wire [3:0]WR_PNTR_RD;
  wire empty;
  wire empty_fb_i;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire \gr1.gr1_int.rfwft_n_2 ;
  wire ram_empty_i_reg;
  wire rd_clk;
  wire rd_en;
  wire [3:3]rd_pntr_plus1;
  wire rpntr_n_0;

  system_rp_oscilloscope_0_rd_fwft_37 \gr1.gr1_int.rfwft 
       (.AR(AR),
        .E(E),
        .Q(rd_pntr_plus1),
        .WR_PNTR_RD(WR_PNTR_RD[3]),
        .empty(empty),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (\gr1.gr1_int.rfwft_n_2 ),
        .\gpregsm1.curr_fwft_state_reg[1]_1 (\gpregsm1.curr_fwft_state_reg[1] ),
        .out(empty_fb_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  system_rp_oscilloscope_0_rd_status_flags_as_38 \gras.rsts 
       (.AR(AR),
        .out(empty_fb_i),
        .ram_empty_i_reg_0(rpntr_n_0),
        .rd_clk(rd_clk));
  system_rp_oscilloscope_0_rd_bin_cntr_39 rpntr
       (.AR(AR),
        .E(\gpregsm1.curr_fwft_state_reg[1] ),
        .Q({rd_pntr_plus1,Q}),
        .WR_PNTR_RD(WR_PNTR_RD),
        .\gc0.count_d1_reg[2]_0 (rpntr_n_0),
        .\gc0.count_d1_reg[3]_0 (\gc0.count_d1_reg[3] ),
        .ram_empty_i_reg(ram_empty_i_reg),
        .ram_empty_i_reg_0(\gr1.gr1_int.rfwft_n_2 ),
        .rd_clk(rd_clk));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module system_rp_oscilloscope_0_rd_logic__parameterized0
   (empty,
    rd_data_count,
    ENB_I,
    Q,
    E,
    \gc0.count_d1_reg[8] ,
    v1_reg,
    ram_empty_fb_i_reg,
    ram_empty_fb_i_reg_0,
    SR,
    rd_clk,
    WR_PNTR_RD,
    S,
    \g_rd.gvalid_low.rd_dc_i_reg[7] ,
    \g_rd.gvalid_low.rd_dc_i_reg[8] ,
    ENB_dly_D,
    rd_en);
  output empty;
  output [9:0]rd_data_count;
  output ENB_I;
  output [0:0]Q;
  output [0:0]E;
  output [8:0]\gc0.count_d1_reg[8] ;
  input [3:0]v1_reg;
  input ram_empty_fb_i_reg;
  input [0:0]ram_empty_fb_i_reg_0;
  input [0:0]SR;
  input rd_clk;
  input [7:0]WR_PNTR_RD;
  input [3:0]S;
  input [3:0]\g_rd.gvalid_low.rd_dc_i_reg[7] ;
  input [0:0]\g_rd.gvalid_low.rd_dc_i_reg[8] ;
  input ENB_dly_D;
  input rd_en;

  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [0:0]Q;
  wire [3:0]S;
  wire [0:0]SR;
  wire [7:0]WR_PNTR_RD;
  wire [3:0]\c1/v1_reg ;
  wire [0:0]diff_wr_rd;
  wire empty;
  wire empty_fb_i;
  wire [3:0]\g_rd.gvalid_low.rd_dc_i_reg[7] ;
  wire [0:0]\g_rd.gvalid_low.rd_dc_i_reg[8] ;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire \gr1.gr1_int.rfwft_n_4 ;
  wire [0:0]p_0_in;
  wire ram_empty_fb_i_reg;
  wire [0:0]ram_empty_fb_i_reg_0;
  wire ram_rd_en;
  wire ram_valid_fwft;
  wire rd_clk;
  wire [9:0]rd_data_count;
  wire [9:9]rd_dc_i;
  wire rd_en;
  wire [3:0]v1_reg;

  system_rp_oscilloscope_0_rd_fwft__parameterized0 \gr1.gr1_int.rfwft 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (empty_fb_i),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .O(diff_wr_rd),
        .SR(SR),
        .empty(empty),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (\gr1.gr1_int.rfwft_n_4 ),
        .out({ram_valid_fwft,p_0_in}),
        .ram_empty_fb_i_reg(ram_rd_en),
        .rd_clk(rd_clk),
        .rd_dc_i(rd_dc_i),
        .rd_en(rd_en));
  system_rp_oscilloscope_0_rd_dc_fwft_ext_as \gr1.grdc2.rdc 
       (.O(diff_wr_rd),
        .S(S),
        .WR_PNTR_RD(WR_PNTR_RD),
        .\g_rd.gvalid_low.rd_dc_i_reg[0]_0 (\gr1.gr1_int.rfwft_n_4 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[7]_0 (\g_rd.gvalid_low.rd_dc_i_reg[7] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[8]_0 (\g_rd.gvalid_low.rd_dc_i_reg[8] ),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_dc_i(rd_dc_i));
  system_rp_oscilloscope_0_rd_status_flags_as__parameterized0 \gras.rsts 
       (.SR(SR),
        .out(empty_fb_i),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg),
        .ram_empty_fb_i_reg_1(ram_empty_fb_i_reg_0),
        .ram_empty_fb_i_reg_2({ram_valid_fwft,p_0_in}),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .v1_reg(v1_reg),
        .v1_reg_0(\c1/v1_reg ));
  system_rp_oscilloscope_0_rd_bin_cntr__parameterized0 rpntr
       (.E(ram_rd_en),
        .Q(Q),
        .SR(SR),
        .WR_PNTR_RD(WR_PNTR_RD),
        .\gc0.count_d1_reg[8]_0 (\gc0.count_d1_reg[8] ),
        .rd_clk(rd_clk),
        .v1_reg(\c1/v1_reg ));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module system_rp_oscilloscope_0_rd_logic__parameterized0_40
   (empty,
    rd_data_count,
    ENB_I,
    Q,
    E,
    \gc0.count_d1_reg[8] ,
    v1_reg,
    ram_empty_fb_i_reg,
    ram_empty_fb_i_reg_0,
    SR,
    rd_clk,
    WR_PNTR_RD,
    S,
    \g_rd.gvalid_low.rd_dc_i_reg[7] ,
    \g_rd.gvalid_low.rd_dc_i_reg[8] ,
    ENB_dly_D,
    rd_en);
  output empty;
  output [9:0]rd_data_count;
  output ENB_I;
  output [0:0]Q;
  output [0:0]E;
  output [8:0]\gc0.count_d1_reg[8] ;
  input [3:0]v1_reg;
  input ram_empty_fb_i_reg;
  input [0:0]ram_empty_fb_i_reg_0;
  input [0:0]SR;
  input rd_clk;
  input [7:0]WR_PNTR_RD;
  input [3:0]S;
  input [3:0]\g_rd.gvalid_low.rd_dc_i_reg[7] ;
  input [0:0]\g_rd.gvalid_low.rd_dc_i_reg[8] ;
  input ENB_dly_D;
  input rd_en;

  wire [0:0]E;
  wire ENB_I;
  wire ENB_dly_D;
  wire [0:0]Q;
  wire [3:0]S;
  wire [0:0]SR;
  wire [7:0]WR_PNTR_RD;
  wire [3:0]\c1/v1_reg ;
  wire [0:0]diff_wr_rd;
  wire empty;
  wire empty_fb_i;
  wire [3:0]\g_rd.gvalid_low.rd_dc_i_reg[7] ;
  wire [0:0]\g_rd.gvalid_low.rd_dc_i_reg[8] ;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire \gr1.gr1_int.rfwft_n_4 ;
  wire [0:0]p_0_in;
  wire ram_empty_fb_i_reg;
  wire [0:0]ram_empty_fb_i_reg_0;
  wire ram_rd_en;
  wire ram_valid_fwft;
  wire rd_clk;
  wire [9:0]rd_data_count;
  wire [9:9]rd_dc_i;
  wire rd_en;
  wire [3:0]v1_reg;

  system_rp_oscilloscope_0_rd_fwft__parameterized0_54 \gr1.gr1_int.rfwft 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (empty_fb_i),
        .E(E),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .O(diff_wr_rd),
        .SR(SR),
        .empty(empty),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (\gr1.gr1_int.rfwft_n_4 ),
        .out({ram_valid_fwft,p_0_in}),
        .ram_empty_fb_i_reg(ram_rd_en),
        .rd_clk(rd_clk),
        .rd_dc_i(rd_dc_i),
        .rd_en(rd_en));
  system_rp_oscilloscope_0_rd_dc_fwft_ext_as_55 \gr1.grdc2.rdc 
       (.O(diff_wr_rd),
        .S(S),
        .WR_PNTR_RD(WR_PNTR_RD),
        .\g_rd.gvalid_low.rd_dc_i_reg[0]_0 (\gr1.gr1_int.rfwft_n_4 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[7]_0 (\g_rd.gvalid_low.rd_dc_i_reg[7] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[8]_0 (\g_rd.gvalid_low.rd_dc_i_reg[8] ),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_dc_i(rd_dc_i));
  system_rp_oscilloscope_0_rd_status_flags_as__parameterized0_56 \gras.rsts 
       (.SR(SR),
        .out(empty_fb_i),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg),
        .ram_empty_fb_i_reg_1(ram_empty_fb_i_reg_0),
        .ram_empty_fb_i_reg_2({ram_valid_fwft,p_0_in}),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .v1_reg(v1_reg),
        .v1_reg_0(\c1/v1_reg ));
  system_rp_oscilloscope_0_rd_bin_cntr__parameterized0_57 rpntr
       (.E(ram_rd_en),
        .Q(Q),
        .SR(SR),
        .WR_PNTR_RD(WR_PNTR_RD),
        .\gc0.count_d1_reg[8]_0 (\gc0.count_d1_reg[8] ),
        .rd_clk(rd_clk),
        .v1_reg(\c1/v1_reg ));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module system_rp_oscilloscope_0_rd_status_flags_as
   (out,
    ram_empty_i_reg_0,
    rd_clk,
    AR);
  output out;
  input ram_empty_i_reg_0;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire ram_empty_i_reg_0;
  wire rd_clk;

  assign out = ram_empty_fb_i;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i_reg_0),
        .PRE(AR),
        .Q(ram_empty_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i_reg_0),
        .PRE(AR),
        .Q(ram_empty_i));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module system_rp_oscilloscope_0_rd_status_flags_as_29
   (out,
    ram_empty_i_reg_0,
    rd_clk,
    AR);
  output out;
  input ram_empty_i_reg_0;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire ram_empty_i_reg_0;
  wire rd_clk;

  assign out = ram_empty_fb_i;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i_reg_0),
        .PRE(AR),
        .Q(ram_empty_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i_reg_0),
        .PRE(AR),
        .Q(ram_empty_i));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module system_rp_oscilloscope_0_rd_status_flags_as_38
   (out,
    ram_empty_i_reg_0,
    rd_clk,
    AR);
  output out;
  input ram_empty_i_reg_0;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire ram_empty_i_reg_0;
  wire rd_clk;

  assign out = ram_empty_fb_i;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i_reg_0),
        .PRE(AR),
        .Q(ram_empty_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i_reg_0),
        .PRE(AR),
        .Q(ram_empty_i));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module system_rp_oscilloscope_0_rd_status_flags_as_8
   (out,
    ram_empty_i_reg_0,
    rd_clk,
    AR);
  output out;
  input ram_empty_i_reg_0;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire ram_empty_i_reg_0;
  wire rd_clk;

  assign out = ram_empty_fb_i;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i_reg_0),
        .PRE(AR),
        .Q(ram_empty_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i_reg_0),
        .PRE(AR),
        .Q(ram_empty_i));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module system_rp_oscilloscope_0_rd_status_flags_as__parameterized0
   (out,
    v1_reg,
    ram_empty_fb_i_reg_0,
    v1_reg_0,
    ram_empty_fb_i_reg_1,
    SR,
    rd_clk,
    rd_en,
    ram_empty_fb_i_reg_2);
  output out;
  input [3:0]v1_reg;
  input ram_empty_fb_i_reg_0;
  input [3:0]v1_reg_0;
  input [0:0]ram_empty_fb_i_reg_1;
  input [0:0]SR;
  input rd_clk;
  input rd_en;
  input [1:0]ram_empty_fb_i_reg_2;

  wire [0:0]SR;
  wire c0_n_0;
  wire comp1;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  wire ram_empty_fb_i_reg_0;
  wire [0:0]ram_empty_fb_i_reg_1;
  wire [1:0]ram_empty_fb_i_reg_2;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [3:0]v1_reg;
  wire [3:0]v1_reg_0;

  assign out = ram_empty_fb_i;
  system_rp_oscilloscope_0_compare__parameterized0_11 c0
       (.comp1(comp1),
        .out(ram_empty_fb_i),
        .ram_empty_fb_i_reg(c0_n_0),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg_0),
        .ram_empty_fb_i_reg_1(ram_empty_fb_i_reg_2),
        .rd_en(rd_en),
        .v1_reg(v1_reg));
  system_rp_oscilloscope_0_compare__parameterized0_12 c1
       (.comp1(comp1),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg_1),
        .v1_reg_0(v1_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(c0_n_0),
        .Q(ram_empty_fb_i),
        .S(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(c0_n_0),
        .Q(ram_empty_i),
        .S(SR));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module system_rp_oscilloscope_0_rd_status_flags_as__parameterized0_56
   (out,
    v1_reg,
    ram_empty_fb_i_reg_0,
    v1_reg_0,
    ram_empty_fb_i_reg_1,
    SR,
    rd_clk,
    rd_en,
    ram_empty_fb_i_reg_2);
  output out;
  input [3:0]v1_reg;
  input ram_empty_fb_i_reg_0;
  input [3:0]v1_reg_0;
  input [0:0]ram_empty_fb_i_reg_1;
  input [0:0]SR;
  input rd_clk;
  input rd_en;
  input [1:0]ram_empty_fb_i_reg_2;

  wire [0:0]SR;
  wire c0_n_0;
  wire comp1;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  wire ram_empty_fb_i_reg_0;
  wire [0:0]ram_empty_fb_i_reg_1;
  wire [1:0]ram_empty_fb_i_reg_2;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [3:0]v1_reg;
  wire [3:0]v1_reg_0;

  assign out = ram_empty_fb_i;
  system_rp_oscilloscope_0_compare__parameterized0_58 c0
       (.comp1(comp1),
        .out(ram_empty_fb_i),
        .ram_empty_fb_i_reg(c0_n_0),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg_0),
        .ram_empty_fb_i_reg_1(ram_empty_fb_i_reg_2),
        .rd_en(rd_en),
        .v1_reg(v1_reg));
  system_rp_oscilloscope_0_compare__parameterized0_59 c1
       (.comp1(comp1),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg_1),
        .v1_reg_0(v1_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(c0_n_0),
        .Q(ram_empty_fb_i),
        .S(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(c0_n_0),
        .Q(ram_empty_i),
        .S(SR));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module system_rp_oscilloscope_0_reset_blk_ramfifo
   (AR,
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ,
    out,
    \grstd1.grst_full.grst_f.rst_d3_reg_0 ,
    wr_rst_busy,
    rst,
    wr_clk,
    rd_clk);
  output [0:0]AR;
  output [0:0]\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ;
  output out;
  output \grstd1.grst_full.grst_f.rst_d3_reg_0 ;
  output wr_rst_busy;
  input rst;
  input wr_clk;
  input rd_clk;

  wire [0:0]AR;
  wire dest_out;
  wire \grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ;
  wire rd_clk;
  (* DONT_TOUCH *) wire [2:0]rd_rst_reg;
  wire [3:0]rd_rst_wr_ext;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d4;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d5;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d6;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d7;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire sckt_rd_rst_wr;
  wire wr_clk;
  wire wr_rst_busy;
  wire [1:0]wr_rst_rd_ext;
  (* DONT_TOUCH *) wire [2:0]wr_rst_reg;

  assign \grstd1.grst_full.grst_f.rst_d3_reg_0  = rst_d3;
  assign out = rst_d2;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_rst_busy),
        .PRE(rst_wr_reg2),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(rst_wr_reg2),
        .Q(rst_d2));
  LUT2 #(
    .INIT(4'hE)) 
    \grstd1.grst_full.grst_f.rst_d3_i_1 
       (.I0(rst_d2),
        .I1(AR),
        .O(\grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(rst_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d4_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d3),
        .PRE(rst_wr_reg2),
        .Q(rst_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(wr_rst_reg[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b1),
        .O(wr_rst_reg[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b1),
        .O(rst_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b1),
        .O(wr_rst_reg[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b1),
        .O(rd_rst_reg[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b1),
        .O(rd_rst_reg[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b1),
        .O(rd_rst_reg[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(rst_wr_reg1));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(rst_rd_reg1));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b1),
        .O(rst_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b1),
        .O(rst_d6));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(sckt_rd_rst_wr),
        .Q(rd_rst_wr_ext[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[0]),
        .Q(rd_rst_wr_ext[1]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[1]),
        .Q(rd_rst_wr_ext[2]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[2]),
        .Q(rd_rst_wr_ext[3]));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* RST_ACTIVE_HIGH = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_async_rst \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rst_rd_reg2_inst 
       (.dest_arst(rst_rd_reg2),
        .dest_clk(rd_clk),
        .src_arst(rst));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1 
       (.I0(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ),
        .I1(wr_rst_rd_ext[1]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ),
        .PRE(rst_rd_reg2),
        .Q(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ));
  LUT3 #(
    .INIT(8'h8A)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1 
       (.I0(AR),
        .I1(rd_rst_wr_ext[0]),
        .I2(rd_rst_wr_ext[1]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(AR));
  LUT5 #(
    .INIT(32'hAAAA08AA)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1 
       (.I0(wr_rst_busy),
        .I1(rd_rst_wr_ext[1]),
        .I2(rd_rst_wr_ext[0]),
        .I3(rd_rst_wr_ext[3]),
        .I4(rd_rst_wr_ext[2]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_busy));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_rd_ext_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(rst_rd_reg2),
        .D(dest_out),
        .Q(wr_rst_rd_ext[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_rd_ext_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(rst_rd_reg2),
        .D(wr_rst_rd_ext[0]),
        .Q(wr_rst_rd_ext[1]));
  (* DEST_SYNC_FF = "4" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_single \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr 
       (.dest_clk(wr_clk),
        .dest_out(sckt_rd_rst_wr),
        .src_clk(rd_clk),
        .src_in(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ));
  (* DEST_SYNC_FF = "4" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_single__14 \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd 
       (.dest_clk(rd_clk),
        .dest_out(dest_out),
        .src_clk(wr_clk),
        .src_in(AR));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* RST_ACTIVE_HIGH = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_async_rst__10 \ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst 
       (.dest_arst(rst_wr_reg2),
        .dest_clk(wr_clk),
        .src_arst(rst));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module system_rp_oscilloscope_0_reset_blk_ramfifo__parameterized0
   (\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ,
    SR,
    wr_rst_busy,
    out,
    ram_rstram_b,
    rst,
    wr_clk,
    rd_clk,
    POR_B);
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ;
  output [0:0]SR;
  output wr_rst_busy;
  output out;
  output ram_rstram_b;
  input rst;
  input wr_clk;
  input rd_clk;
  input POR_B;

  wire POR_B;
  wire [0:0]SR;
  wire arst_sync_rd_rst;
  wire dest_out;
  wire dest_rst;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ;
  wire ram_rstram_b;
  wire rd_clk;
  (* DONT_TOUCH *) wire [2:0]rd_rst_reg;
  wire [3:0]rd_rst_wr_ext;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d4;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d5;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d6;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d7;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire sckt_rd_rst_wr;
  wire wr_clk;
  wire wr_rst_busy_i;
  wire [1:0]wr_rst_rd_ext;
  (* DONT_TOUCH *) wire [2:0]wr_rst_reg;

  assign out = rst_d3;
  assign wr_rst_busy = wr_rst_busy_i;
  LUT2 #(
    .INIT(4'hE)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_3 
       (.I0(SR),
        .I1(POR_B),
        .O(ram_rstram_b));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_rst_busy_i),
        .Q(rst_d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .Q(rst_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDSE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d2),
        .Q(rst_d3),
        .S(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d4_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d3),
        .Q(rst_d4),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(rst_wr_reg2));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b1),
        .O(wr_rst_reg[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b1),
        .O(rst_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b1),
        .O(rst_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b1),
        .O(rst_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b1),
        .O(wr_rst_reg[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b1),
        .O(wr_rst_reg[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b1),
        .O(rd_rst_reg[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b1),
        .O(rd_rst_reg[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b1),
        .O(rd_rst_reg[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(rst_wr_reg1));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(rst_rd_reg1));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(rst_rd_reg2));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(sckt_rd_rst_wr),
        .Q(rd_rst_wr_ext[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[0]),
        .Q(rd_rst_wr_ext[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[1]),
        .Q(rd_rst_wr_ext[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[2]),
        .Q(rd_rst_wr_ext[3]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1 
       (.I0(wr_rst_rd_ext[1]),
        .I1(SR),
        .I2(arst_sync_rd_rst),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ),
        .Q(SR),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFF8A)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1 
       (.I0(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ),
        .I1(rd_rst_wr_ext[0]),
        .I2(rd_rst_wr_ext[1]),
        .I3(dest_rst),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ),
        .Q(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFD0F0D0D0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1 
       (.I0(rd_rst_wr_ext[3]),
        .I1(rd_rst_wr_ext[2]),
        .I2(wr_rst_busy_i),
        .I3(rd_rst_wr_ext[0]),
        .I4(rd_rst_wr_ext[1]),
        .I5(dest_rst),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ),
        .Q(wr_rst_busy_i),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_rd_ext_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(dest_out),
        .Q(wr_rst_rd_ext[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_rd_ext_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_rst_rd_ext[0]),
        .Q(wr_rst_rd_ext[1]),
        .R(1'b0));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_single__parameterized2 \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr 
       (.dest_clk(wr_clk),
        .dest_out(sckt_rd_rst_wr),
        .src_clk(rd_clk),
        .src_in(SR));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_single__parameterized2__6 \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd 
       (.dest_clk(rd_clk),
        .dest_out(dest_out),
        .src_clk(wr_clk),
        .src_in(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "5" *) 
  (* INIT = "1" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_sync_rst \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_sync_rst_inst_wrst 
       (.dest_clk(rd_clk),
        .dest_rst(arst_sync_rd_rst),
        .src_rst(rst));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "5" *) 
  (* INIT = "1" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_sync_rst__6 \ngwrdrst.grst.g7serrst.gsckt_wrst.xpm_cdc_sync_rst_inst_wrst 
       (.dest_clk(wr_clk),
        .dest_rst(dest_rst),
        .src_rst(rst));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module system_rp_oscilloscope_0_reset_blk_ramfifo__parameterized0__xdcDup__1
   (\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ,
    SR,
    wr_rst_busy,
    out,
    ram_rstram_b,
    rst,
    wr_clk,
    rd_clk,
    POR_B);
  output \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ;
  output [0:0]SR;
  output wr_rst_busy;
  output out;
  output ram_rstram_b;
  input rst;
  input wr_clk;
  input rd_clk;
  input POR_B;

  wire POR_B;
  wire [0:0]SR;
  wire arst_sync_rd_rst;
  wire dest_out;
  wire dest_rst;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ;
  wire \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ;
  wire ram_rstram_b;
  wire rd_clk;
  (* DONT_TOUCH *) wire [2:0]rd_rst_reg;
  wire [3:0]rd_rst_wr_ext;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d4;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d5;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d6;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d7;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire sckt_rd_rst_wr;
  wire wr_clk;
  wire wr_rst_busy_i;
  wire [1:0]wr_rst_rd_ext;
  (* DONT_TOUCH *) wire [2:0]wr_rst_reg;

  assign out = rst_d3;
  assign wr_rst_busy = wr_rst_busy_i;
  LUT2 #(
    .INIT(4'hE)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_3 
       (.I0(SR),
        .I1(POR_B),
        .O(ram_rstram_b));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_rst_busy_i),
        .Q(rst_d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .Q(rst_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDSE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d2),
        .Q(rst_d3),
        .S(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d4_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d3),
        .Q(rst_d4),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(rst_wr_reg2));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b1),
        .O(wr_rst_reg[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b1),
        .O(rst_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b1),
        .O(rst_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b1),
        .O(rst_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b1),
        .O(wr_rst_reg[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b1),
        .O(wr_rst_reg[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b1),
        .O(rd_rst_reg[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b1),
        .O(rd_rst_reg[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b1),
        .O(rd_rst_reg[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(rst_wr_reg1));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(rst_rd_reg1));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(rst_rd_reg2));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(sckt_rd_rst_wr),
        .Q(rd_rst_wr_ext[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[0]),
        .Q(rd_rst_wr_ext[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[1]),
        .Q(rd_rst_wr_ext[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.rd_rst_wr_ext_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_rst_wr_ext[2]),
        .Q(rd_rst_wr_ext[3]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1 
       (.I0(wr_rst_rd_ext[1]),
        .I1(SR),
        .I2(arst_sync_rd_rst),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ),
        .Q(SR),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFF8A)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1 
       (.I0(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ),
        .I1(rd_rst_wr_ext[0]),
        .I2(rd_rst_wr_ext[1]),
        .I3(dest_rst),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ),
        .Q(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFD0F0D0D0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1 
       (.I0(rd_rst_wr_ext[3]),
        .I1(rd_rst_wr_ext[2]),
        .I2(wr_rst_busy_i),
        .I3(rd_rst_wr_ext[0]),
        .I4(rd_rst_wr_ext[1]),
        .I5(dest_rst),
        .O(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ),
        .Q(wr_rst_busy_i),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_rd_ext_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(dest_out),
        .Q(wr_rst_rd_ext[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.wr_rst_rd_ext_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_rst_rd_ext[0]),
        .Q(wr_rst_rd_ext[1]),
        .R(1'b0));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_single__parameterized2__5 \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr 
       (.dest_clk(wr_clk),
        .dest_out(sckt_rd_rst_wr),
        .src_clk(rd_clk),
        .src_in(SR));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_single__parameterized2__4 \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd 
       (.dest_clk(rd_clk),
        .dest_out(dest_out),
        .src_clk(wr_clk),
        .src_in(\ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.sckt_wr_rst_ic_reg_0 ));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "5" *) 
  (* INIT = "1" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_sync_rst__5 \ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_sync_rst_inst_wrst 
       (.dest_clk(rd_clk),
        .dest_rst(arst_sync_rd_rst),
        .src_rst(rst));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "5" *) 
  (* INIT = "1" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_sync_rst__4 \ngwrdrst.grst.g7serrst.gsckt_wrst.xpm_cdc_sync_rst_inst_wrst 
       (.dest_clk(wr_clk),
        .dest_rst(dest_rst),
        .src_rst(rst));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module system_rp_oscilloscope_0_reset_blk_ramfifo__xdcDup__1
   (AR,
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ,
    out,
    \grstd1.grst_full.grst_f.rst_d3_reg_0 ,
    wr_rst_busy,
    rst,
    wr_clk,
    rd_clk);
  output [0:0]AR;
  output [0:0]\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ;
  output out;
  output \grstd1.grst_full.grst_f.rst_d3_reg_0 ;
  output wr_rst_busy;
  input rst;
  input wr_clk;
  input rd_clk;

  wire [0:0]AR;
  wire dest_out;
  wire \grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ;
  wire rd_clk;
  (* DONT_TOUCH *) wire [2:0]rd_rst_reg;
  wire [3:0]rd_rst_wr_ext;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d4;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d5;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d6;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d7;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire sckt_rd_rst_wr;
  wire wr_clk;
  wire wr_rst_busy;
  wire [1:0]wr_rst_rd_ext;
  (* DONT_TOUCH *) wire [2:0]wr_rst_reg;

  assign \grstd1.grst_full.grst_f.rst_d3_reg_0  = rst_d3;
  assign out = rst_d2;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_rst_busy),
        .PRE(rst_wr_reg2),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(rst_wr_reg2),
        .Q(rst_d2));
  LUT2 #(
    .INIT(4'hE)) 
    \grstd1.grst_full.grst_f.rst_d3_i_1 
       (.I0(rst_d2),
        .I1(AR),
        .O(\grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(rst_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d4_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d3),
        .PRE(rst_wr_reg2),
        .Q(rst_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(wr_rst_reg[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b1),
        .O(wr_rst_reg[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b1),
        .O(rst_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b1),
        .O(wr_rst_reg[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b1),
        .O(rd_rst_reg[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b1),
        .O(rd_rst_reg[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b1),
        .O(rd_rst_reg[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(rst_wr_reg1));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(rst_rd_reg1));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b1),
        .O(rst_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b1),
        .O(rst_d6));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(sckt_rd_rst_wr),
        .Q(rd_rst_wr_ext[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[0]),
        .Q(rd_rst_wr_ext[1]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[1]),
        .Q(rd_rst_wr_ext[2]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[2]),
        .Q(rd_rst_wr_ext[3]));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* RST_ACTIVE_HIGH = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_async_rst__5 \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rst_rd_reg2_inst 
       (.dest_arst(rst_rd_reg2),
        .dest_clk(rd_clk),
        .src_arst(rst));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1 
       (.I0(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ),
        .I1(wr_rst_rd_ext[1]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ),
        .PRE(rst_rd_reg2),
        .Q(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ));
  LUT3 #(
    .INIT(8'h8A)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1 
       (.I0(AR),
        .I1(rd_rst_wr_ext[0]),
        .I2(rd_rst_wr_ext[1]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(AR));
  LUT5 #(
    .INIT(32'hAAAA08AA)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1 
       (.I0(wr_rst_busy),
        .I1(rd_rst_wr_ext[1]),
        .I2(rd_rst_wr_ext[0]),
        .I3(rd_rst_wr_ext[3]),
        .I4(rd_rst_wr_ext[2]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_busy));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_rd_ext_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(rst_rd_reg2),
        .D(dest_out),
        .Q(wr_rst_rd_ext[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_rd_ext_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(rst_rd_reg2),
        .D(wr_rst_rd_ext[0]),
        .Q(wr_rst_rd_ext[1]));
  (* DEST_SYNC_FF = "4" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_single__9 \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr 
       (.dest_clk(wr_clk),
        .dest_out(sckt_rd_rst_wr),
        .src_clk(rd_clk),
        .src_in(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ));
  (* DEST_SYNC_FF = "4" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_single__8 \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd 
       (.dest_clk(rd_clk),
        .dest_out(dest_out),
        .src_clk(wr_clk),
        .src_in(AR));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* RST_ACTIVE_HIGH = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_async_rst__4 \ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst 
       (.dest_arst(rst_wr_reg2),
        .dest_clk(wr_clk),
        .src_arst(rst));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module system_rp_oscilloscope_0_reset_blk_ramfifo__xdcDup__2
   (AR,
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ,
    out,
    \grstd1.grst_full.grst_f.rst_d3_reg_0 ,
    wr_rst_busy,
    rst,
    wr_clk,
    rd_clk);
  output [0:0]AR;
  output [0:0]\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ;
  output out;
  output \grstd1.grst_full.grst_f.rst_d3_reg_0 ;
  output wr_rst_busy;
  input rst;
  input wr_clk;
  input rd_clk;

  wire [0:0]AR;
  wire dest_out;
  wire \grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ;
  wire rd_clk;
  (* DONT_TOUCH *) wire [2:0]rd_rst_reg;
  wire [3:0]rd_rst_wr_ext;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d4;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d5;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d6;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d7;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire sckt_rd_rst_wr;
  wire wr_clk;
  wire wr_rst_busy;
  wire [1:0]wr_rst_rd_ext;
  (* DONT_TOUCH *) wire [2:0]wr_rst_reg;

  assign \grstd1.grst_full.grst_f.rst_d3_reg_0  = rst_d3;
  assign out = rst_d2;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_rst_busy),
        .PRE(rst_wr_reg2),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(rst_wr_reg2),
        .Q(rst_d2));
  LUT2 #(
    .INIT(4'hE)) 
    \grstd1.grst_full.grst_f.rst_d3_i_1 
       (.I0(rst_d2),
        .I1(AR),
        .O(\grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(rst_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d4_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d3),
        .PRE(rst_wr_reg2),
        .Q(rst_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(wr_rst_reg[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b1),
        .O(wr_rst_reg[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b1),
        .O(rst_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b1),
        .O(wr_rst_reg[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b1),
        .O(rd_rst_reg[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b1),
        .O(rd_rst_reg[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b1),
        .O(rd_rst_reg[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(rst_wr_reg1));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(rst_rd_reg1));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b1),
        .O(rst_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b1),
        .O(rst_d6));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(sckt_rd_rst_wr),
        .Q(rd_rst_wr_ext[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[0]),
        .Q(rd_rst_wr_ext[1]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[1]),
        .Q(rd_rst_wr_ext[2]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[2]),
        .Q(rd_rst_wr_ext[3]));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* RST_ACTIVE_HIGH = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_async_rst__7 \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rst_rd_reg2_inst 
       (.dest_arst(rst_rd_reg2),
        .dest_clk(rd_clk),
        .src_arst(rst));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1 
       (.I0(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ),
        .I1(wr_rst_rd_ext[1]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ),
        .PRE(rst_rd_reg2),
        .Q(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ));
  LUT3 #(
    .INIT(8'h8A)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1 
       (.I0(AR),
        .I1(rd_rst_wr_ext[0]),
        .I2(rd_rst_wr_ext[1]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(AR));
  LUT5 #(
    .INIT(32'hAAAA08AA)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1 
       (.I0(wr_rst_busy),
        .I1(rd_rst_wr_ext[1]),
        .I2(rd_rst_wr_ext[0]),
        .I3(rd_rst_wr_ext[3]),
        .I4(rd_rst_wr_ext[2]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_busy));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_rd_ext_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(rst_rd_reg2),
        .D(dest_out),
        .Q(wr_rst_rd_ext[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_rd_ext_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(rst_rd_reg2),
        .D(wr_rst_rd_ext[0]),
        .Q(wr_rst_rd_ext[1]));
  (* DEST_SYNC_FF = "4" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_single__11 \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr 
       (.dest_clk(wr_clk),
        .dest_out(sckt_rd_rst_wr),
        .src_clk(rd_clk),
        .src_in(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ));
  (* DEST_SYNC_FF = "4" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_single__10 \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd 
       (.dest_clk(rd_clk),
        .dest_out(dest_out),
        .src_clk(wr_clk),
        .src_in(AR));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* RST_ACTIVE_HIGH = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_async_rst__6 \ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst 
       (.dest_arst(rst_wr_reg2),
        .dest_clk(wr_clk),
        .src_arst(rst));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module system_rp_oscilloscope_0_reset_blk_ramfifo__xdcDup__3
   (AR,
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ,
    out,
    \grstd1.grst_full.grst_f.rst_d3_reg_0 ,
    wr_rst_busy,
    rst,
    wr_clk,
    rd_clk);
  output [0:0]AR;
  output [0:0]\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ;
  output out;
  output \grstd1.grst_full.grst_f.rst_d3_reg_0 ;
  output wr_rst_busy;
  input rst;
  input wr_clk;
  input rd_clk;

  wire [0:0]AR;
  wire dest_out;
  wire \grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ;
  wire rd_clk;
  (* DONT_TOUCH *) wire [2:0]rd_rst_reg;
  wire [3:0]rd_rst_wr_ext;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d4;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d5;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d6;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d7;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire sckt_rd_rst_wr;
  wire wr_clk;
  wire wr_rst_busy;
  wire [1:0]wr_rst_rd_ext;
  (* DONT_TOUCH *) wire [2:0]wr_rst_reg;

  assign \grstd1.grst_full.grst_f.rst_d3_reg_0  = rst_d3;
  assign out = rst_d2;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_rst_busy),
        .PRE(rst_wr_reg2),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(rst_wr_reg2),
        .Q(rst_d2));
  LUT2 #(
    .INIT(4'hE)) 
    \grstd1.grst_full.grst_f.rst_d3_i_1 
       (.I0(rst_d2),
        .I1(AR),
        .O(\grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(rst_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d4_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d3),
        .PRE(rst_wr_reg2),
        .Q(rst_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(wr_rst_reg[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b1),
        .O(wr_rst_reg[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b1),
        .O(rst_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b1),
        .O(wr_rst_reg[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b1),
        .O(rd_rst_reg[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b1),
        .O(rd_rst_reg[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b1),
        .O(rd_rst_reg[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(rst_wr_reg1));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(rst_rd_reg1));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b1),
        .O(rst_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b1),
        .O(rst_d6));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(sckt_rd_rst_wr),
        .Q(rd_rst_wr_ext[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[0]),
        .Q(rd_rst_wr_ext[1]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[1]),
        .Q(rd_rst_wr_ext[2]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[2]),
        .Q(rd_rst_wr_ext[3]));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* RST_ACTIVE_HIGH = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_async_rst__9 \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rst_rd_reg2_inst 
       (.dest_arst(rst_rd_reg2),
        .dest_clk(rd_clk),
        .src_arst(rst));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1 
       (.I0(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ),
        .I1(wr_rst_rd_ext[1]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ),
        .PRE(rst_rd_reg2),
        .Q(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ));
  LUT3 #(
    .INIT(8'h8A)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1 
       (.I0(AR),
        .I1(rd_rst_wr_ext[0]),
        .I2(rd_rst_wr_ext[1]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(AR));
  LUT5 #(
    .INIT(32'hAAAA08AA)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1 
       (.I0(wr_rst_busy),
        .I1(rd_rst_wr_ext[1]),
        .I2(rd_rst_wr_ext[0]),
        .I3(rd_rst_wr_ext[3]),
        .I4(rd_rst_wr_ext[2]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_busy));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_rd_ext_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(rst_rd_reg2),
        .D(dest_out),
        .Q(wr_rst_rd_ext[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_rd_ext_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(rst_rd_reg2),
        .D(wr_rst_rd_ext[0]),
        .Q(wr_rst_rd_ext[1]));
  (* DEST_SYNC_FF = "4" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_single__13 \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr 
       (.dest_clk(wr_clk),
        .dest_out(sckt_rd_rst_wr),
        .src_clk(rd_clk),
        .src_in(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg_0 ));
  (* DEST_SYNC_FF = "4" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_single__12 \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd 
       (.dest_clk(rd_clk),
        .dest_out(dest_out),
        .src_clk(wr_clk),
        .src_in(AR));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* RST_ACTIVE_HIGH = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  system_rp_oscilloscope_0_xpm_cdc_async_rst__8 \ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst 
       (.dest_arst(rst_wr_reg2),
        .dest_clk(wr_clk),
        .src_arst(rst));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module system_rp_oscilloscope_0_wr_bin_cntr
   (\dest_out_bin_ff_reg[3] ,
    Q,
    \gic0.gc0.count_d2_reg[3]_0 ,
    ram_full_i_reg,
    ram_full_i_reg_0,
    RD_PNTR_WR,
    ram_full_i_reg_1,
    E,
    wr_clk,
    AR);
  output \dest_out_bin_ff_reg[3] ;
  output [3:0]Q;
  output [3:0]\gic0.gc0.count_d2_reg[3]_0 ;
  input ram_full_i_reg;
  input ram_full_i_reg_0;
  input [3:0]RD_PNTR_WR;
  input ram_full_i_reg_1;
  input [0:0]E;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [3:0]Q;
  wire [3:0]RD_PNTR_WR;
  wire \dest_out_bin_ff_reg[3] ;
  wire [3:0]\gic0.gc0.count_d2_reg[3]_0 ;
  wire [3:0]plusOp;
  wire ram_full_i_i_4_n_0;
  wire ram_full_i_reg;
  wire ram_full_i_reg_0;
  wire ram_full_i_reg_1;
  wire wr_clk;
  wire [3:0]wr_pntr_plus1;

  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(plusOp[3]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(Q[0]),
        .PRE(AR),
        .Q(wr_pntr_plus1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[1]),
        .Q(wr_pntr_plus1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[2]),
        .Q(wr_pntr_plus1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[3]),
        .Q(wr_pntr_plus1[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[0]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[1]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[2]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[3]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[0]),
        .Q(Q[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp[1]),
        .PRE(AR),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[3]),
        .Q(Q[3]));
  LUT6 #(
    .INIT(64'h0000F88F00008888)) 
    ram_full_i_i_1
       (.I0(ram_full_i_reg),
        .I1(ram_full_i_reg_0),
        .I2(RD_PNTR_WR[3]),
        .I3(wr_pntr_plus1[3]),
        .I4(ram_full_i_reg_1),
        .I5(ram_full_i_i_4_n_0),
        .O(\dest_out_bin_ff_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_full_i_i_4
       (.I0(wr_pntr_plus1[2]),
        .I1(RD_PNTR_WR[2]),
        .I2(wr_pntr_plus1[1]),
        .I3(RD_PNTR_WR[1]),
        .I4(RD_PNTR_WR[0]),
        .I5(wr_pntr_plus1[0]),
        .O(ram_full_i_i_4_n_0));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module system_rp_oscilloscope_0_wr_bin_cntr_27
   (\dest_out_bin_ff_reg[3] ,
    Q,
    \gic0.gc0.count_d2_reg[3]_0 ,
    ram_full_i_reg,
    ram_full_i_reg_0,
    RD_PNTR_WR,
    ram_full_i_reg_1,
    E,
    wr_clk,
    AR);
  output \dest_out_bin_ff_reg[3] ;
  output [3:0]Q;
  output [3:0]\gic0.gc0.count_d2_reg[3]_0 ;
  input ram_full_i_reg;
  input ram_full_i_reg_0;
  input [3:0]RD_PNTR_WR;
  input ram_full_i_reg_1;
  input [0:0]E;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [3:0]Q;
  wire [3:0]RD_PNTR_WR;
  wire \dest_out_bin_ff_reg[3] ;
  wire [3:0]\gic0.gc0.count_d2_reg[3]_0 ;
  wire [3:0]plusOp;
  wire ram_full_i_i_4_n_0;
  wire ram_full_i_reg;
  wire ram_full_i_reg_0;
  wire ram_full_i_reg_1;
  wire wr_clk;
  wire [3:0]wr_pntr_plus1;

  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(plusOp[3]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(Q[0]),
        .PRE(AR),
        .Q(wr_pntr_plus1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[1]),
        .Q(wr_pntr_plus1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[2]),
        .Q(wr_pntr_plus1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[3]),
        .Q(wr_pntr_plus1[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[0]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[1]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[2]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[3]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[0]),
        .Q(Q[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp[1]),
        .PRE(AR),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[3]),
        .Q(Q[3]));
  LUT6 #(
    .INIT(64'h0000F88F00008888)) 
    ram_full_i_i_1
       (.I0(ram_full_i_reg),
        .I1(ram_full_i_reg_0),
        .I2(RD_PNTR_WR[3]),
        .I3(wr_pntr_plus1[3]),
        .I4(ram_full_i_reg_1),
        .I5(ram_full_i_i_4_n_0),
        .O(\dest_out_bin_ff_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_full_i_i_4
       (.I0(wr_pntr_plus1[2]),
        .I1(RD_PNTR_WR[2]),
        .I2(wr_pntr_plus1[1]),
        .I3(RD_PNTR_WR[1]),
        .I4(RD_PNTR_WR[0]),
        .I5(wr_pntr_plus1[0]),
        .O(ram_full_i_i_4_n_0));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module system_rp_oscilloscope_0_wr_bin_cntr_36
   (\dest_out_bin_ff_reg[3] ,
    Q,
    \gic0.gc0.count_d2_reg[3]_0 ,
    ram_full_i_reg,
    ram_full_i_reg_0,
    RD_PNTR_WR,
    ram_full_i_reg_1,
    E,
    wr_clk,
    AR);
  output \dest_out_bin_ff_reg[3] ;
  output [3:0]Q;
  output [3:0]\gic0.gc0.count_d2_reg[3]_0 ;
  input ram_full_i_reg;
  input ram_full_i_reg_0;
  input [3:0]RD_PNTR_WR;
  input ram_full_i_reg_1;
  input [0:0]E;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [3:0]Q;
  wire [3:0]RD_PNTR_WR;
  wire \dest_out_bin_ff_reg[3] ;
  wire [3:0]\gic0.gc0.count_d2_reg[3]_0 ;
  wire [3:0]plusOp;
  wire ram_full_i_i_4_n_0;
  wire ram_full_i_reg;
  wire ram_full_i_reg_0;
  wire ram_full_i_reg_1;
  wire wr_clk;
  wire [3:0]wr_pntr_plus1;

  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(plusOp[3]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(Q[0]),
        .PRE(AR),
        .Q(wr_pntr_plus1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[1]),
        .Q(wr_pntr_plus1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[2]),
        .Q(wr_pntr_plus1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[3]),
        .Q(wr_pntr_plus1[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[0]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[1]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[2]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[3]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[0]),
        .Q(Q[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp[1]),
        .PRE(AR),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[3]),
        .Q(Q[3]));
  LUT6 #(
    .INIT(64'h0000F88F00008888)) 
    ram_full_i_i_1
       (.I0(ram_full_i_reg),
        .I1(ram_full_i_reg_0),
        .I2(RD_PNTR_WR[3]),
        .I3(wr_pntr_plus1[3]),
        .I4(ram_full_i_reg_1),
        .I5(ram_full_i_i_4_n_0),
        .O(\dest_out_bin_ff_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_full_i_i_4
       (.I0(wr_pntr_plus1[2]),
        .I1(RD_PNTR_WR[2]),
        .I2(wr_pntr_plus1[1]),
        .I3(RD_PNTR_WR[1]),
        .I4(RD_PNTR_WR[0]),
        .I5(wr_pntr_plus1[0]),
        .O(ram_full_i_i_4_n_0));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module system_rp_oscilloscope_0_wr_bin_cntr_6
   (\dest_out_bin_ff_reg[3] ,
    Q,
    \gic0.gc0.count_d2_reg[3]_0 ,
    ram_full_i_reg,
    ram_full_i_reg_0,
    RD_PNTR_WR,
    ram_full_i_reg_1,
    E,
    wr_clk,
    AR);
  output \dest_out_bin_ff_reg[3] ;
  output [3:0]Q;
  output [3:0]\gic0.gc0.count_d2_reg[3]_0 ;
  input ram_full_i_reg;
  input ram_full_i_reg_0;
  input [3:0]RD_PNTR_WR;
  input ram_full_i_reg_1;
  input [0:0]E;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [3:0]Q;
  wire [3:0]RD_PNTR_WR;
  wire \dest_out_bin_ff_reg[3] ;
  wire [3:0]\gic0.gc0.count_d2_reg[3]_0 ;
  wire [3:0]plusOp;
  wire ram_full_i_i_4_n_0;
  wire ram_full_i_reg;
  wire ram_full_i_reg_0;
  wire ram_full_i_reg_1;
  wire wr_clk;
  wire [3:0]wr_pntr_plus1;

  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(plusOp[3]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(Q[0]),
        .PRE(AR),
        .Q(wr_pntr_plus1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[1]),
        .Q(wr_pntr_plus1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[2]),
        .Q(wr_pntr_plus1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[3]),
        .Q(wr_pntr_plus1[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[0]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[1]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[2]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus1[3]),
        .Q(\gic0.gc0.count_d2_reg[3]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[0]),
        .Q(Q[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp[1]),
        .PRE(AR),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[3]),
        .Q(Q[3]));
  LUT6 #(
    .INIT(64'h0000F88F00008888)) 
    ram_full_i_i_1
       (.I0(ram_full_i_reg),
        .I1(ram_full_i_reg_0),
        .I2(RD_PNTR_WR[3]),
        .I3(wr_pntr_plus1[3]),
        .I4(ram_full_i_reg_1),
        .I5(ram_full_i_i_4_n_0),
        .O(\dest_out_bin_ff_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_full_i_i_4
       (.I0(wr_pntr_plus1[2]),
        .I1(RD_PNTR_WR[2]),
        .I2(wr_pntr_plus1[1]),
        .I3(RD_PNTR_WR[1]),
        .I4(RD_PNTR_WR[0]),
        .I5(wr_pntr_plus1[0]),
        .O(ram_full_i_i_4_n_0));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module system_rp_oscilloscope_0_wr_bin_cntr__parameterized0
   (S,
    Q,
    \gic0.gc0.count_d2_reg[7]_0 ,
    \gic0.gc0.count_d2_reg[8]_0 ,
    \gic0.gc0.count_reg[7]_0 ,
    v1_reg,
    v1_reg_0,
    \gic0.gc0.count_d1_reg[7]_0 ,
    RD_PNTR_WR,
    \gic0.gc0.count_d1_reg[1]_0 ,
    E,
    wr_clk);
  output [3:0]S;
  output [8:0]Q;
  output [3:0]\gic0.gc0.count_d2_reg[7]_0 ;
  output [0:0]\gic0.gc0.count_d2_reg[8]_0 ;
  output [7:0]\gic0.gc0.count_reg[7]_0 ;
  output [0:0]v1_reg;
  output [0:0]v1_reg_0;
  output [7:0]\gic0.gc0.count_d1_reg[7]_0 ;
  input [8:0]RD_PNTR_WR;
  input \gic0.gc0.count_d1_reg[1]_0 ;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire [3:0]S;
  wire \gic0.gc0.count[8]_i_2_n_0 ;
  wire \gic0.gc0.count_d1_reg[1]_0 ;
  wire [7:0]\gic0.gc0.count_d1_reg[7]_0 ;
  wire [3:0]\gic0.gc0.count_d2_reg[7]_0 ;
  wire [0:0]\gic0.gc0.count_d2_reg[8]_0 ;
  wire [7:0]\gic0.gc0.count_reg[7]_0 ;
  wire [8:0]plusOp__0;
  wire [0:0]v1_reg;
  wire [0:0]v1_reg_0;
  wire wr_clk;
  wire [8:8]wr_pntr_plus1;
  wire [8:8]wr_pntr_plus2;

  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [0]),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [0]),
        .I1(\gic0.gc0.count_reg[7]_0 [1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [0]),
        .I1(\gic0.gc0.count_reg[7]_0 [1]),
        .I2(\gic0.gc0.count_reg[7]_0 [2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [1]),
        .I1(\gic0.gc0.count_reg[7]_0 [0]),
        .I2(\gic0.gc0.count_reg[7]_0 [2]),
        .I3(\gic0.gc0.count_reg[7]_0 [3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc0.count[4]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [2]),
        .I1(\gic0.gc0.count_reg[7]_0 [0]),
        .I2(\gic0.gc0.count_reg[7]_0 [1]),
        .I3(\gic0.gc0.count_reg[7]_0 [3]),
        .I4(\gic0.gc0.count_reg[7]_0 [4]),
        .O(plusOp__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc0.count[5]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [3]),
        .I1(\gic0.gc0.count_reg[7]_0 [1]),
        .I2(\gic0.gc0.count_reg[7]_0 [0]),
        .I3(\gic0.gc0.count_reg[7]_0 [2]),
        .I4(\gic0.gc0.count_reg[7]_0 [4]),
        .I5(\gic0.gc0.count_reg[7]_0 [5]),
        .O(plusOp__0[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[6]_i_1 
       (.I0(\gic0.gc0.count[8]_i_2_n_0 ),
        .I1(\gic0.gc0.count_reg[7]_0 [6]),
        .O(plusOp__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[7]_i_1 
       (.I0(\gic0.gc0.count[8]_i_2_n_0 ),
        .I1(\gic0.gc0.count_reg[7]_0 [6]),
        .I2(\gic0.gc0.count_reg[7]_0 [7]),
        .O(plusOp__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[8]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [6]),
        .I1(\gic0.gc0.count[8]_i_2_n_0 ),
        .I2(\gic0.gc0.count_reg[7]_0 [7]),
        .I3(wr_pntr_plus2),
        .O(plusOp__0[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gic0.gc0.count[8]_i_2 
       (.I0(\gic0.gc0.count_reg[7]_0 [5]),
        .I1(\gic0.gc0.count_reg[7]_0 [3]),
        .I2(\gic0.gc0.count_reg[7]_0 [1]),
        .I3(\gic0.gc0.count_reg[7]_0 [0]),
        .I4(\gic0.gc0.count_reg[7]_0 [2]),
        .I5(\gic0.gc0.count_reg[7]_0 [4]),
        .O(\gic0.gc0.count[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [0]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [0]),
        .S(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [1]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [1]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [2]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [2]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [3]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [3]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [4]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [4]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [5]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [5]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [6]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [6]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [7]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [7]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .D(wr_pntr_plus2),
        .Q(wr_pntr_plus1),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [0]),
        .Q(Q[0]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [1]),
        .Q(Q[1]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [2]),
        .Q(Q[2]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [3]),
        .Q(Q[3]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [4]),
        .Q(Q[4]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [5]),
        .Q(Q[5]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [6]),
        .Q(Q[6]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [7]),
        .Q(Q[7]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .D(wr_pntr_plus1),
        .Q(Q[8]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[0]),
        .Q(\gic0.gc0.count_reg[7]_0 [0]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[1]),
        .Q(\gic0.gc0.count_reg[7]_0 [1]),
        .S(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[2]),
        .Q(\gic0.gc0.count_reg[7]_0 [2]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[3]),
        .Q(\gic0.gc0.count_reg[7]_0 [3]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[4]),
        .Q(\gic0.gc0.count_reg[7]_0 [4]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[5]),
        .Q(\gic0.gc0.count_reg[7]_0 [5]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[6]),
        .Q(\gic0.gc0.count_reg[7]_0 [6]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[7]),
        .Q(\gic0.gc0.count_reg[7]_0 [7]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[8]),
        .Q(wr_pntr_plus2),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(wr_pntr_plus1),
        .I1(RD_PNTR_WR[8]),
        .O(v1_reg));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__0 
       (.I0(wr_pntr_plus2),
        .I1(RD_PNTR_WR[8]),
        .O(v1_reg_0));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_1
       (.I0(Q[7]),
        .I1(RD_PNTR_WR[7]),
        .O(\gic0.gc0.count_d2_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_2
       (.I0(Q[6]),
        .I1(RD_PNTR_WR[6]),
        .O(\gic0.gc0.count_d2_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_3
       (.I0(Q[5]),
        .I1(RD_PNTR_WR[5]),
        .O(\gic0.gc0.count_d2_reg[7]_0 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_4
       (.I0(Q[4]),
        .I1(RD_PNTR_WR[4]),
        .O(\gic0.gc0.count_d2_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__1_i_1
       (.I0(Q[8]),
        .I1(RD_PNTR_WR[8]),
        .O(\gic0.gc0.count_d2_reg[8]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_1
       (.I0(Q[3]),
        .I1(RD_PNTR_WR[3]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_2
       (.I0(Q[2]),
        .I1(RD_PNTR_WR[2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_3
       (.I0(Q[1]),
        .I1(RD_PNTR_WR[1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_4
       (.I0(Q[0]),
        .I1(RD_PNTR_WR[0]),
        .O(S[0]));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module system_rp_oscilloscope_0_wr_bin_cntr__parameterized0_51
   (S,
    Q,
    \gic0.gc0.count_d2_reg[7]_0 ,
    \gic0.gc0.count_d2_reg[8]_0 ,
    \gic0.gc0.count_reg[7]_0 ,
    v1_reg,
    v1_reg_0,
    \gic0.gc0.count_d1_reg[7]_0 ,
    RD_PNTR_WR,
    \gic0.gc0.count_d1_reg[1]_0 ,
    E,
    wr_clk);
  output [3:0]S;
  output [8:0]Q;
  output [3:0]\gic0.gc0.count_d2_reg[7]_0 ;
  output [0:0]\gic0.gc0.count_d2_reg[8]_0 ;
  output [7:0]\gic0.gc0.count_reg[7]_0 ;
  output [0:0]v1_reg;
  output [0:0]v1_reg_0;
  output [7:0]\gic0.gc0.count_d1_reg[7]_0 ;
  input [8:0]RD_PNTR_WR;
  input \gic0.gc0.count_d1_reg[1]_0 ;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire [3:0]S;
  wire \gic0.gc0.count[8]_i_2_n_0 ;
  wire \gic0.gc0.count_d1_reg[1]_0 ;
  wire [7:0]\gic0.gc0.count_d1_reg[7]_0 ;
  wire [3:0]\gic0.gc0.count_d2_reg[7]_0 ;
  wire [0:0]\gic0.gc0.count_d2_reg[8]_0 ;
  wire [7:0]\gic0.gc0.count_reg[7]_0 ;
  wire [8:0]plusOp__0;
  wire [0:0]v1_reg;
  wire [0:0]v1_reg_0;
  wire wr_clk;
  wire [8:8]wr_pntr_plus1;
  wire [8:8]wr_pntr_plus2;

  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [0]),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [0]),
        .I1(\gic0.gc0.count_reg[7]_0 [1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [0]),
        .I1(\gic0.gc0.count_reg[7]_0 [1]),
        .I2(\gic0.gc0.count_reg[7]_0 [2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [1]),
        .I1(\gic0.gc0.count_reg[7]_0 [0]),
        .I2(\gic0.gc0.count_reg[7]_0 [2]),
        .I3(\gic0.gc0.count_reg[7]_0 [3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc0.count[4]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [2]),
        .I1(\gic0.gc0.count_reg[7]_0 [0]),
        .I2(\gic0.gc0.count_reg[7]_0 [1]),
        .I3(\gic0.gc0.count_reg[7]_0 [3]),
        .I4(\gic0.gc0.count_reg[7]_0 [4]),
        .O(plusOp__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc0.count[5]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [3]),
        .I1(\gic0.gc0.count_reg[7]_0 [1]),
        .I2(\gic0.gc0.count_reg[7]_0 [0]),
        .I3(\gic0.gc0.count_reg[7]_0 [2]),
        .I4(\gic0.gc0.count_reg[7]_0 [4]),
        .I5(\gic0.gc0.count_reg[7]_0 [5]),
        .O(plusOp__0[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[6]_i_1 
       (.I0(\gic0.gc0.count[8]_i_2_n_0 ),
        .I1(\gic0.gc0.count_reg[7]_0 [6]),
        .O(plusOp__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[7]_i_1 
       (.I0(\gic0.gc0.count[8]_i_2_n_0 ),
        .I1(\gic0.gc0.count_reg[7]_0 [6]),
        .I2(\gic0.gc0.count_reg[7]_0 [7]),
        .O(plusOp__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[8]_i_1 
       (.I0(\gic0.gc0.count_reg[7]_0 [6]),
        .I1(\gic0.gc0.count[8]_i_2_n_0 ),
        .I2(\gic0.gc0.count_reg[7]_0 [7]),
        .I3(wr_pntr_plus2),
        .O(plusOp__0[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gic0.gc0.count[8]_i_2 
       (.I0(\gic0.gc0.count_reg[7]_0 [5]),
        .I1(\gic0.gc0.count_reg[7]_0 [3]),
        .I2(\gic0.gc0.count_reg[7]_0 [1]),
        .I3(\gic0.gc0.count_reg[7]_0 [0]),
        .I4(\gic0.gc0.count_reg[7]_0 [2]),
        .I5(\gic0.gc0.count_reg[7]_0 [4]),
        .O(\gic0.gc0.count[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [0]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [0]),
        .S(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [1]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [1]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [2]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [2]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [3]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [3]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [4]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [4]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [5]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [5]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [6]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [6]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_reg[7]_0 [7]),
        .Q(\gic0.gc0.count_d1_reg[7]_0 [7]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .D(wr_pntr_plus2),
        .Q(wr_pntr_plus1),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [0]),
        .Q(Q[0]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [1]),
        .Q(Q[1]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [2]),
        .Q(Q[2]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [3]),
        .Q(Q[3]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [4]),
        .Q(Q[4]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [5]),
        .Q(Q[5]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [6]),
        .Q(Q[6]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc0.count_d1_reg[7]_0 [7]),
        .Q(Q[7]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .D(wr_pntr_plus1),
        .Q(Q[8]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[0]),
        .Q(\gic0.gc0.count_reg[7]_0 [0]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[1]),
        .Q(\gic0.gc0.count_reg[7]_0 [1]),
        .S(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[2]),
        .Q(\gic0.gc0.count_reg[7]_0 [2]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[3]),
        .Q(\gic0.gc0.count_reg[7]_0 [3]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[4]),
        .Q(\gic0.gc0.count_reg[7]_0 [4]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[5]),
        .Q(\gic0.gc0.count_reg[7]_0 [5]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[6]),
        .Q(\gic0.gc0.count_reg[7]_0 [6]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[7]),
        .Q(\gic0.gc0.count_reg[7]_0 [7]),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[8]),
        .Q(wr_pntr_plus2),
        .R(\gic0.gc0.count_d1_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(wr_pntr_plus1),
        .I1(RD_PNTR_WR[8]),
        .O(v1_reg));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__0 
       (.I0(wr_pntr_plus2),
        .I1(RD_PNTR_WR[8]),
        .O(v1_reg_0));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_1
       (.I0(Q[7]),
        .I1(RD_PNTR_WR[7]),
        .O(\gic0.gc0.count_d2_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_2
       (.I0(Q[6]),
        .I1(RD_PNTR_WR[6]),
        .O(\gic0.gc0.count_d2_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_3
       (.I0(Q[5]),
        .I1(RD_PNTR_WR[5]),
        .O(\gic0.gc0.count_d2_reg[7]_0 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_4
       (.I0(Q[4]),
        .I1(RD_PNTR_WR[4]),
        .O(\gic0.gc0.count_d2_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__1_i_1
       (.I0(Q[8]),
        .I1(RD_PNTR_WR[8]),
        .O(\gic0.gc0.count_d2_reg[8]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_1
       (.I0(Q[3]),
        .I1(RD_PNTR_WR[3]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_2
       (.I0(Q[2]),
        .I1(RD_PNTR_WR[2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_3
       (.I0(Q[1]),
        .I1(RD_PNTR_WR[1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_4
       (.I0(Q[0]),
        .I1(RD_PNTR_WR[0]),
        .O(S[0]));
endmodule

(* ORIG_REF_NAME = "wr_dc_fwft_ext_as" *) 
module system_rp_oscilloscope_0_wr_dc_fwft_ext_as
   (wr_data_count,
    Q,
    S,
    \wr_data_count_i_reg[7]_0 ,
    \wr_data_count_i_reg[8]_0 ,
    \wr_data_count_i_reg[0]_0 ,
    wr_clk);
  output [9:0]wr_data_count;
  input [7:0]Q;
  input [3:0]S;
  input [3:0]\wr_data_count_i_reg[7]_0 ;
  input [0:0]\wr_data_count_i_reg[8]_0 ;
  input \wr_data_count_i_reg[0]_0 ;
  input wr_clk;

  wire [7:0]Q;
  wire [3:0]S;
  wire minusOp_carry__0_n_0;
  wire minusOp_carry__0_n_1;
  wire minusOp_carry__0_n_2;
  wire minusOp_carry__0_n_3;
  wire minusOp_carry__0_n_4;
  wire minusOp_carry__0_n_5;
  wire minusOp_carry__0_n_6;
  wire minusOp_carry__0_n_7;
  wire minusOp_carry__1_n_7;
  wire minusOp_carry_n_0;
  wire minusOp_carry_n_1;
  wire minusOp_carry_n_2;
  wire minusOp_carry_n_3;
  wire minusOp_carry_n_4;
  wire minusOp_carry_n_5;
  wire minusOp_carry_n_6;
  wire minusOp_carry_n_7;
  wire wr_clk;
  wire [9:0]wr_data_count;
  wire \wr_data_count_i[1]_i_1_n_0 ;
  wire \wr_data_count_i[2]_i_1_n_0 ;
  wire \wr_data_count_i[3]_i_1_n_0 ;
  wire \wr_data_count_i[4]_i_1_n_0 ;
  wire \wr_data_count_i[5]_i_1_n_0 ;
  wire \wr_data_count_i[6]_i_1_n_0 ;
  wire \wr_data_count_i[7]_i_1_n_0 ;
  wire \wr_data_count_i[8]_i_1_n_0 ;
  wire \wr_data_count_i[9]_i_1_n_0 ;
  wire \wr_data_count_i[9]_i_2_n_0 ;
  wire \wr_data_count_i_reg[0]_0 ;
  wire [3:0]\wr_data_count_i_reg[7]_0 ;
  wire [0:0]\wr_data_count_i_reg[8]_0 ;
  wire [3:0]NLW_minusOp_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_minusOp_carry__1_O_UNCONNECTED;

  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 minusOp_carry
       (.CI(1'b0),
        .CO({minusOp_carry_n_0,minusOp_carry_n_1,minusOp_carry_n_2,minusOp_carry_n_3}),
        .CYINIT(1'b1),
        .DI(Q[3:0]),
        .O({minusOp_carry_n_4,minusOp_carry_n_5,minusOp_carry_n_6,minusOp_carry_n_7}),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CO({minusOp_carry__0_n_0,minusOp_carry__0_n_1,minusOp_carry__0_n_2,minusOp_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O({minusOp_carry__0_n_4,minusOp_carry__0_n_5,minusOp_carry__0_n_6,minusOp_carry__0_n_7}),
        .S(\wr_data_count_i_reg[7]_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 minusOp_carry__1
       (.CI(minusOp_carry__0_n_0),
        .CO(NLW_minusOp_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_minusOp_carry__1_O_UNCONNECTED[3:1],minusOp_carry__1_n_7}),
        .S({1'b0,1'b0,1'b0,\wr_data_count_i_reg[8]_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_data_count_i[1]_i_1 
       (.I0(minusOp_carry_n_6),
        .O(\wr_data_count_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_data_count_i[2]_i_1 
       (.I0(minusOp_carry_n_6),
        .I1(minusOp_carry_n_5),
        .O(\wr_data_count_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_data_count_i[3]_i_1 
       (.I0(minusOp_carry_n_6),
        .I1(minusOp_carry_n_5),
        .I2(minusOp_carry_n_4),
        .O(\wr_data_count_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_data_count_i[4]_i_1 
       (.I0(minusOp_carry_n_5),
        .I1(minusOp_carry_n_6),
        .I2(minusOp_carry_n_4),
        .I3(minusOp_carry__0_n_7),
        .O(\wr_data_count_i[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_data_count_i[5]_i_1 
       (.I0(minusOp_carry_n_4),
        .I1(minusOp_carry_n_6),
        .I2(minusOp_carry_n_5),
        .I3(minusOp_carry__0_n_7),
        .I4(minusOp_carry__0_n_6),
        .O(\wr_data_count_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wr_data_count_i[6]_i_1 
       (.I0(minusOp_carry__0_n_7),
        .I1(minusOp_carry_n_5),
        .I2(minusOp_carry_n_6),
        .I3(minusOp_carry_n_4),
        .I4(minusOp_carry__0_n_6),
        .I5(minusOp_carry__0_n_5),
        .O(\wr_data_count_i[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_data_count_i[7]_i_1 
       (.I0(\wr_data_count_i[9]_i_2_n_0 ),
        .I1(minusOp_carry__0_n_4),
        .O(\wr_data_count_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_data_count_i[8]_i_1 
       (.I0(\wr_data_count_i[9]_i_2_n_0 ),
        .I1(minusOp_carry__0_n_4),
        .I2(minusOp_carry__1_n_7),
        .O(\wr_data_count_i[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \wr_data_count_i[9]_i_1 
       (.I0(minusOp_carry__1_n_7),
        .I1(\wr_data_count_i[9]_i_2_n_0 ),
        .I2(minusOp_carry__0_n_4),
        .O(\wr_data_count_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \wr_data_count_i[9]_i_2 
       (.I0(minusOp_carry__0_n_5),
        .I1(minusOp_carry__0_n_7),
        .I2(minusOp_carry_n_5),
        .I3(minusOp_carry_n_6),
        .I4(minusOp_carry_n_4),
        .I5(minusOp_carry__0_n_6),
        .O(\wr_data_count_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(minusOp_carry_n_7),
        .Q(wr_data_count[0]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[1]_i_1_n_0 ),
        .Q(wr_data_count[1]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[2]_i_1_n_0 ),
        .Q(wr_data_count[2]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[3]_i_1_n_0 ),
        .Q(wr_data_count[3]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[4]_i_1_n_0 ),
        .Q(wr_data_count[4]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[5]_i_1_n_0 ),
        .Q(wr_data_count[5]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[6]_i_1_n_0 ),
        .Q(wr_data_count[6]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[7]_i_1_n_0 ),
        .Q(wr_data_count[7]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[8]_i_1_n_0 ),
        .Q(wr_data_count[8]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[9]_i_1_n_0 ),
        .Q(wr_data_count[9]),
        .R(\wr_data_count_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "wr_dc_fwft_ext_as" *) 
module system_rp_oscilloscope_0_wr_dc_fwft_ext_as_49
   (wr_data_count,
    Q,
    S,
    \wr_data_count_i_reg[7]_0 ,
    \wr_data_count_i_reg[8]_0 ,
    \wr_data_count_i_reg[0]_0 ,
    wr_clk);
  output [9:0]wr_data_count;
  input [7:0]Q;
  input [3:0]S;
  input [3:0]\wr_data_count_i_reg[7]_0 ;
  input [0:0]\wr_data_count_i_reg[8]_0 ;
  input \wr_data_count_i_reg[0]_0 ;
  input wr_clk;

  wire [7:0]Q;
  wire [3:0]S;
  wire minusOp_carry__0_n_0;
  wire minusOp_carry__0_n_1;
  wire minusOp_carry__0_n_2;
  wire minusOp_carry__0_n_3;
  wire minusOp_carry__0_n_4;
  wire minusOp_carry__0_n_5;
  wire minusOp_carry__0_n_6;
  wire minusOp_carry__0_n_7;
  wire minusOp_carry__1_n_7;
  wire minusOp_carry_n_0;
  wire minusOp_carry_n_1;
  wire minusOp_carry_n_2;
  wire minusOp_carry_n_3;
  wire minusOp_carry_n_4;
  wire minusOp_carry_n_5;
  wire minusOp_carry_n_6;
  wire minusOp_carry_n_7;
  wire wr_clk;
  wire [9:0]wr_data_count;
  wire \wr_data_count_i[1]_i_1_n_0 ;
  wire \wr_data_count_i[2]_i_1_n_0 ;
  wire \wr_data_count_i[3]_i_1_n_0 ;
  wire \wr_data_count_i[4]_i_1_n_0 ;
  wire \wr_data_count_i[5]_i_1_n_0 ;
  wire \wr_data_count_i[6]_i_1_n_0 ;
  wire \wr_data_count_i[7]_i_1_n_0 ;
  wire \wr_data_count_i[8]_i_1_n_0 ;
  wire \wr_data_count_i[9]_i_1_n_0 ;
  wire \wr_data_count_i[9]_i_2_n_0 ;
  wire \wr_data_count_i_reg[0]_0 ;
  wire [3:0]\wr_data_count_i_reg[7]_0 ;
  wire [0:0]\wr_data_count_i_reg[8]_0 ;
  wire [3:0]NLW_minusOp_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_minusOp_carry__1_O_UNCONNECTED;

  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 minusOp_carry
       (.CI(1'b0),
        .CO({minusOp_carry_n_0,minusOp_carry_n_1,minusOp_carry_n_2,minusOp_carry_n_3}),
        .CYINIT(1'b1),
        .DI(Q[3:0]),
        .O({minusOp_carry_n_4,minusOp_carry_n_5,minusOp_carry_n_6,minusOp_carry_n_7}),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CO({minusOp_carry__0_n_0,minusOp_carry__0_n_1,minusOp_carry__0_n_2,minusOp_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O({minusOp_carry__0_n_4,minusOp_carry__0_n_5,minusOp_carry__0_n_6,minusOp_carry__0_n_7}),
        .S(\wr_data_count_i_reg[7]_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 minusOp_carry__1
       (.CI(minusOp_carry__0_n_0),
        .CO(NLW_minusOp_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_minusOp_carry__1_O_UNCONNECTED[3:1],minusOp_carry__1_n_7}),
        .S({1'b0,1'b0,1'b0,\wr_data_count_i_reg[8]_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_data_count_i[1]_i_1 
       (.I0(minusOp_carry_n_6),
        .O(\wr_data_count_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_data_count_i[2]_i_1 
       (.I0(minusOp_carry_n_6),
        .I1(minusOp_carry_n_5),
        .O(\wr_data_count_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_data_count_i[3]_i_1 
       (.I0(minusOp_carry_n_6),
        .I1(minusOp_carry_n_5),
        .I2(minusOp_carry_n_4),
        .O(\wr_data_count_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_data_count_i[4]_i_1 
       (.I0(minusOp_carry_n_5),
        .I1(minusOp_carry_n_6),
        .I2(minusOp_carry_n_4),
        .I3(minusOp_carry__0_n_7),
        .O(\wr_data_count_i[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_data_count_i[5]_i_1 
       (.I0(minusOp_carry_n_4),
        .I1(minusOp_carry_n_6),
        .I2(minusOp_carry_n_5),
        .I3(minusOp_carry__0_n_7),
        .I4(minusOp_carry__0_n_6),
        .O(\wr_data_count_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wr_data_count_i[6]_i_1 
       (.I0(minusOp_carry__0_n_7),
        .I1(minusOp_carry_n_5),
        .I2(minusOp_carry_n_6),
        .I3(minusOp_carry_n_4),
        .I4(minusOp_carry__0_n_6),
        .I5(minusOp_carry__0_n_5),
        .O(\wr_data_count_i[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_data_count_i[7]_i_1 
       (.I0(\wr_data_count_i[9]_i_2_n_0 ),
        .I1(minusOp_carry__0_n_4),
        .O(\wr_data_count_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_data_count_i[8]_i_1 
       (.I0(\wr_data_count_i[9]_i_2_n_0 ),
        .I1(minusOp_carry__0_n_4),
        .I2(minusOp_carry__1_n_7),
        .O(\wr_data_count_i[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \wr_data_count_i[9]_i_1 
       (.I0(minusOp_carry__1_n_7),
        .I1(\wr_data_count_i[9]_i_2_n_0 ),
        .I2(minusOp_carry__0_n_4),
        .O(\wr_data_count_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \wr_data_count_i[9]_i_2 
       (.I0(minusOp_carry__0_n_5),
        .I1(minusOp_carry__0_n_7),
        .I2(minusOp_carry_n_5),
        .I3(minusOp_carry_n_6),
        .I4(minusOp_carry_n_4),
        .I5(minusOp_carry__0_n_6),
        .O(\wr_data_count_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(minusOp_carry_n_7),
        .Q(wr_data_count[0]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[1]_i_1_n_0 ),
        .Q(wr_data_count[1]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[2]_i_1_n_0 ),
        .Q(wr_data_count[2]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[3]_i_1_n_0 ),
        .Q(wr_data_count[3]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[4]_i_1_n_0 ),
        .Q(wr_data_count[4]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[5]_i_1_n_0 ),
        .Q(wr_data_count[5]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[6]_i_1_n_0 ),
        .Q(wr_data_count[6]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[7]_i_1_n_0 ),
        .Q(wr_data_count[7]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[8]_i_1_n_0 ),
        .Q(wr_data_count[8]),
        .R(\wr_data_count_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\wr_data_count_i[9]_i_1_n_0 ),
        .Q(wr_data_count[9]),
        .R(\wr_data_count_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module system_rp_oscilloscope_0_wr_logic
   (full,
    Q,
    E,
    \gic0.gc0.count_d2_reg[3] ,
    wr_clk,
    out,
    ram_full_i_reg,
    RD_PNTR_WR,
    ram_full_i_reg_0,
    wr_en,
    AR);
  output full;
  output [2:0]Q;
  output [0:0]E;
  output [3:0]\gic0.gc0.count_d2_reg[3] ;
  input wr_clk;
  input out;
  input ram_full_i_reg;
  input [3:0]RD_PNTR_WR;
  input ram_full_i_reg_0;
  input wr_en;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [2:0]Q;
  wire [3:0]RD_PNTR_WR;
  wire full;
  wire [3:0]\gic0.gc0.count_d2_reg[3] ;
  wire \gwas.wsts_n_1 ;
  wire out;
  wire ram_full_i_reg;
  wire ram_full_i_reg_0;
  wire wpntr_n_0;
  wire wr_clk;
  wire wr_en;
  wire [3:3]wr_pntr_plus2;

  system_rp_oscilloscope_0_wr_status_flags_as \gwas.wsts 
       (.E(E),
        .Q(wr_pntr_plus2),
        .RD_PNTR_WR(RD_PNTR_WR[3]),
        .full(full),
        .out(out),
        .ram_full_fb_i_reg_0(\gwas.wsts_n_1 ),
        .ram_full_i_reg_0(wpntr_n_0),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  system_rp_oscilloscope_0_wr_bin_cntr wpntr
       (.AR(AR),
        .E(E),
        .Q({wr_pntr_plus2,Q}),
        .RD_PNTR_WR(RD_PNTR_WR),
        .\dest_out_bin_ff_reg[3] (wpntr_n_0),
        .\gic0.gc0.count_d2_reg[3]_0 (\gic0.gc0.count_d2_reg[3] ),
        .ram_full_i_reg(ram_full_i_reg),
        .ram_full_i_reg_0(\gwas.wsts_n_1 ),
        .ram_full_i_reg_1(ram_full_i_reg_0),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module system_rp_oscilloscope_0_wr_logic_2
   (full,
    Q,
    E,
    \gic0.gc0.count_d2_reg[3] ,
    wr_clk,
    out,
    ram_full_i_reg,
    RD_PNTR_WR,
    ram_full_i_reg_0,
    wr_en,
    AR);
  output full;
  output [2:0]Q;
  output [0:0]E;
  output [3:0]\gic0.gc0.count_d2_reg[3] ;
  input wr_clk;
  input out;
  input ram_full_i_reg;
  input [3:0]RD_PNTR_WR;
  input ram_full_i_reg_0;
  input wr_en;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [2:0]Q;
  wire [3:0]RD_PNTR_WR;
  wire full;
  wire [3:0]\gic0.gc0.count_d2_reg[3] ;
  wire \gwas.wsts_n_1 ;
  wire out;
  wire ram_full_i_reg;
  wire ram_full_i_reg_0;
  wire wpntr_n_0;
  wire wr_clk;
  wire wr_en;
  wire [3:3]wr_pntr_plus2;

  system_rp_oscilloscope_0_wr_status_flags_as_5 \gwas.wsts 
       (.E(E),
        .Q(wr_pntr_plus2),
        .RD_PNTR_WR(RD_PNTR_WR[3]),
        .full(full),
        .out(out),
        .ram_full_fb_i_reg_0(\gwas.wsts_n_1 ),
        .ram_full_i_reg_0(wpntr_n_0),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  system_rp_oscilloscope_0_wr_bin_cntr_6 wpntr
       (.AR(AR),
        .E(E),
        .Q({wr_pntr_plus2,Q}),
        .RD_PNTR_WR(RD_PNTR_WR),
        .\dest_out_bin_ff_reg[3] (wpntr_n_0),
        .\gic0.gc0.count_d2_reg[3]_0 (\gic0.gc0.count_d2_reg[3] ),
        .ram_full_i_reg(ram_full_i_reg),
        .ram_full_i_reg_0(\gwas.wsts_n_1 ),
        .ram_full_i_reg_1(ram_full_i_reg_0),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module system_rp_oscilloscope_0_wr_logic_23
   (full,
    Q,
    E,
    \gic0.gc0.count_d2_reg[3] ,
    wr_clk,
    out,
    ram_full_i_reg,
    RD_PNTR_WR,
    ram_full_i_reg_0,
    wr_en,
    AR);
  output full;
  output [2:0]Q;
  output [0:0]E;
  output [3:0]\gic0.gc0.count_d2_reg[3] ;
  input wr_clk;
  input out;
  input ram_full_i_reg;
  input [3:0]RD_PNTR_WR;
  input ram_full_i_reg_0;
  input wr_en;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [2:0]Q;
  wire [3:0]RD_PNTR_WR;
  wire full;
  wire [3:0]\gic0.gc0.count_d2_reg[3] ;
  wire \gwas.wsts_n_1 ;
  wire out;
  wire ram_full_i_reg;
  wire ram_full_i_reg_0;
  wire wpntr_n_0;
  wire wr_clk;
  wire wr_en;
  wire [3:3]wr_pntr_plus2;

  system_rp_oscilloscope_0_wr_status_flags_as_26 \gwas.wsts 
       (.E(E),
        .Q(wr_pntr_plus2),
        .RD_PNTR_WR(RD_PNTR_WR[3]),
        .full(full),
        .out(out),
        .ram_full_fb_i_reg_0(\gwas.wsts_n_1 ),
        .ram_full_i_reg_0(wpntr_n_0),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  system_rp_oscilloscope_0_wr_bin_cntr_27 wpntr
       (.AR(AR),
        .E(E),
        .Q({wr_pntr_plus2,Q}),
        .RD_PNTR_WR(RD_PNTR_WR),
        .\dest_out_bin_ff_reg[3] (wpntr_n_0),
        .\gic0.gc0.count_d2_reg[3]_0 (\gic0.gc0.count_d2_reg[3] ),
        .ram_full_i_reg(ram_full_i_reg),
        .ram_full_i_reg_0(\gwas.wsts_n_1 ),
        .ram_full_i_reg_1(ram_full_i_reg_0),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module system_rp_oscilloscope_0_wr_logic_32
   (full,
    Q,
    E,
    \gic0.gc0.count_d2_reg[3] ,
    wr_clk,
    out,
    ram_full_i_reg,
    RD_PNTR_WR,
    ram_full_i_reg_0,
    wr_en,
    AR);
  output full;
  output [2:0]Q;
  output [0:0]E;
  output [3:0]\gic0.gc0.count_d2_reg[3] ;
  input wr_clk;
  input out;
  input ram_full_i_reg;
  input [3:0]RD_PNTR_WR;
  input ram_full_i_reg_0;
  input wr_en;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [2:0]Q;
  wire [3:0]RD_PNTR_WR;
  wire full;
  wire [3:0]\gic0.gc0.count_d2_reg[3] ;
  wire \gwas.wsts_n_1 ;
  wire out;
  wire ram_full_i_reg;
  wire ram_full_i_reg_0;
  wire wpntr_n_0;
  wire wr_clk;
  wire wr_en;
  wire [3:3]wr_pntr_plus2;

  system_rp_oscilloscope_0_wr_status_flags_as_35 \gwas.wsts 
       (.E(E),
        .Q(wr_pntr_plus2),
        .RD_PNTR_WR(RD_PNTR_WR[3]),
        .full(full),
        .out(out),
        .ram_full_fb_i_reg_0(\gwas.wsts_n_1 ),
        .ram_full_i_reg_0(wpntr_n_0),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  system_rp_oscilloscope_0_wr_bin_cntr_36 wpntr
       (.AR(AR),
        .E(E),
        .Q({wr_pntr_plus2,Q}),
        .RD_PNTR_WR(RD_PNTR_WR),
        .\dest_out_bin_ff_reg[3] (wpntr_n_0),
        .\gic0.gc0.count_d2_reg[3]_0 (\gic0.gc0.count_d2_reg[3] ),
        .ram_full_i_reg(ram_full_i_reg),
        .ram_full_i_reg_0(\gwas.wsts_n_1 ),
        .ram_full_i_reg_1(ram_full_i_reg_0),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module system_rp_oscilloscope_0_wr_logic__parameterized0
   (full,
    out,
    Q,
    E,
    \gic0.gc0.count_reg[7] ,
    \gic0.gc0.count_d1_reg[7] ,
    wr_data_count,
    \gmux.gm[4].gms.ms ,
    \gmux.gm[4].gms.ms_0 ,
    \gic0.gc0.count_d1_reg[1] ,
    wr_clk,
    RD_PNTR_WR,
    wr_en,
    ram_full_fb_i_reg);
  output full;
  output out;
  output [8:0]Q;
  output [0:0]E;
  output [7:0]\gic0.gc0.count_reg[7] ;
  output [7:0]\gic0.gc0.count_d1_reg[7] ;
  output [9:0]wr_data_count;
  input [3:0]\gmux.gm[4].gms.ms ;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input \gic0.gc0.count_d1_reg[1] ;
  input wr_clk;
  input [8:0]RD_PNTR_WR;
  input wr_en;
  input ram_full_fb_i_reg;

  wire [0:0]E;
  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire [4:4]\c1/v1_reg ;
  wire [4:4]\c2/v1_reg ;
  wire full;
  wire \gic0.gc0.count_d1_reg[1] ;
  wire [7:0]\gic0.gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_reg[7] ;
  wire [3:0]\gmux.gm[4].gms.ms ;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  wire out;
  wire ram_full_fb_i_reg;
  wire wpntr_n_0;
  wire wpntr_n_1;
  wire wpntr_n_13;
  wire wpntr_n_14;
  wire wpntr_n_15;
  wire wpntr_n_16;
  wire wpntr_n_17;
  wire wpntr_n_2;
  wire wpntr_n_3;
  wire wr_clk;
  wire [9:0]wr_data_count;
  wire wr_en;

  system_rp_oscilloscope_0_wr_dc_fwft_ext_as \gwas.gwdc1.wdcext 
       (.Q(Q[7:0]),
        .S({wpntr_n_0,wpntr_n_1,wpntr_n_2,wpntr_n_3}),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .\wr_data_count_i_reg[0]_0 (\gic0.gc0.count_d1_reg[1] ),
        .\wr_data_count_i_reg[7]_0 ({wpntr_n_13,wpntr_n_14,wpntr_n_15,wpntr_n_16}),
        .\wr_data_count_i_reg[8]_0 (wpntr_n_17));
  system_rp_oscilloscope_0_wr_status_flags_as__parameterized0 \gwas.wsts 
       (.E(E),
        .full(full),
        .\gmux.gm[4].gms.ms (\gmux.gm[4].gms.ms ),
        .\gmux.gm[4].gms.ms_0 (\gmux.gm[4].gms.ms_0 ),
        .out(out),
        .ram_full_fb_i_reg_0(\gic0.gc0.count_d1_reg[1] ),
        .ram_full_fb_i_reg_1(ram_full_fb_i_reg),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  system_rp_oscilloscope_0_wr_bin_cntr__parameterized0 wpntr
       (.E(E),
        .Q(Q),
        .RD_PNTR_WR(RD_PNTR_WR),
        .S({wpntr_n_0,wpntr_n_1,wpntr_n_2,wpntr_n_3}),
        .\gic0.gc0.count_d1_reg[1]_0 (\gic0.gc0.count_d1_reg[1] ),
        .\gic0.gc0.count_d1_reg[7]_0 (\gic0.gc0.count_d1_reg[7] ),
        .\gic0.gc0.count_d2_reg[7]_0 ({wpntr_n_13,wpntr_n_14,wpntr_n_15,wpntr_n_16}),
        .\gic0.gc0.count_d2_reg[8]_0 (wpntr_n_17),
        .\gic0.gc0.count_reg[7]_0 (\gic0.gc0.count_reg[7] ),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module system_rp_oscilloscope_0_wr_logic__parameterized0_41
   (full,
    out,
    Q,
    E,
    \gic0.gc0.count_reg[7] ,
    \gic0.gc0.count_d1_reg[7] ,
    wr_data_count,
    \gmux.gm[4].gms.ms ,
    \gmux.gm[4].gms.ms_0 ,
    \gic0.gc0.count_d1_reg[1] ,
    wr_clk,
    RD_PNTR_WR,
    wr_en,
    ram_full_fb_i_reg);
  output full;
  output out;
  output [8:0]Q;
  output [0:0]E;
  output [7:0]\gic0.gc0.count_reg[7] ;
  output [7:0]\gic0.gc0.count_d1_reg[7] ;
  output [9:0]wr_data_count;
  input [3:0]\gmux.gm[4].gms.ms ;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input \gic0.gc0.count_d1_reg[1] ;
  input wr_clk;
  input [8:0]RD_PNTR_WR;
  input wr_en;
  input ram_full_fb_i_reg;

  wire [0:0]E;
  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire [4:4]\c1/v1_reg ;
  wire [4:4]\c2/v1_reg ;
  wire full;
  wire \gic0.gc0.count_d1_reg[1] ;
  wire [7:0]\gic0.gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_reg[7] ;
  wire [3:0]\gmux.gm[4].gms.ms ;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  wire out;
  wire ram_full_fb_i_reg;
  wire wpntr_n_0;
  wire wpntr_n_1;
  wire wpntr_n_13;
  wire wpntr_n_14;
  wire wpntr_n_15;
  wire wpntr_n_16;
  wire wpntr_n_17;
  wire wpntr_n_2;
  wire wpntr_n_3;
  wire wr_clk;
  wire [9:0]wr_data_count;
  wire wr_en;

  system_rp_oscilloscope_0_wr_dc_fwft_ext_as_49 \gwas.gwdc1.wdcext 
       (.Q(Q[7:0]),
        .S({wpntr_n_0,wpntr_n_1,wpntr_n_2,wpntr_n_3}),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .\wr_data_count_i_reg[0]_0 (\gic0.gc0.count_d1_reg[1] ),
        .\wr_data_count_i_reg[7]_0 ({wpntr_n_13,wpntr_n_14,wpntr_n_15,wpntr_n_16}),
        .\wr_data_count_i_reg[8]_0 (wpntr_n_17));
  system_rp_oscilloscope_0_wr_status_flags_as__parameterized0_50 \gwas.wsts 
       (.E(E),
        .full(full),
        .\gmux.gm[4].gms.ms (\gmux.gm[4].gms.ms ),
        .\gmux.gm[4].gms.ms_0 (\gmux.gm[4].gms.ms_0 ),
        .out(out),
        .ram_full_fb_i_reg_0(\gic0.gc0.count_d1_reg[1] ),
        .ram_full_fb_i_reg_1(ram_full_fb_i_reg),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  system_rp_oscilloscope_0_wr_bin_cntr__parameterized0_51 wpntr
       (.E(E),
        .Q(Q),
        .RD_PNTR_WR(RD_PNTR_WR),
        .S({wpntr_n_0,wpntr_n_1,wpntr_n_2,wpntr_n_3}),
        .\gic0.gc0.count_d1_reg[1]_0 (\gic0.gc0.count_d1_reg[1] ),
        .\gic0.gc0.count_d1_reg[7]_0 (\gic0.gc0.count_d1_reg[7] ),
        .\gic0.gc0.count_d2_reg[7]_0 ({wpntr_n_13,wpntr_n_14,wpntr_n_15,wpntr_n_16}),
        .\gic0.gc0.count_d2_reg[8]_0 (wpntr_n_17),
        .\gic0.gc0.count_reg[7]_0 (\gic0.gc0.count_reg[7] ),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module system_rp_oscilloscope_0_wr_status_flags_as
   (full,
    ram_full_fb_i_reg_0,
    E,
    ram_full_i_reg_0,
    wr_clk,
    out,
    wr_en,
    Q,
    RD_PNTR_WR);
  output full;
  output ram_full_fb_i_reg_0;
  output [0:0]E;
  input ram_full_i_reg_0;
  input wr_clk;
  input out;
  input wr_en;
  input [0:0]Q;
  input [0:0]RD_PNTR_WR;

  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]RD_PNTR_WR;
  wire out;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  wire ram_full_fb_i_reg_0;
  (* DONT_TOUCH *) wire ram_full_i;
  wire ram_full_i_reg_0;
  wire wr_clk;
  wire wr_en;

  assign full = ram_full_i;
  LUT2 #(
    .INIT(4'h2)) 
    \gic0.gc0.count_d1[3]_i_1 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i_reg_0),
        .PRE(out),
        .Q(ram_full_fb_i));
  LUT4 #(
    .INIT(16'h4004)) 
    ram_full_i_i_3
       (.I0(ram_full_fb_i),
        .I1(wr_en),
        .I2(Q),
        .I3(RD_PNTR_WR),
        .O(ram_full_fb_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i_reg_0),
        .PRE(out),
        .Q(ram_full_i));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module system_rp_oscilloscope_0_wr_status_flags_as_26
   (full,
    ram_full_fb_i_reg_0,
    E,
    ram_full_i_reg_0,
    wr_clk,
    out,
    wr_en,
    Q,
    RD_PNTR_WR);
  output full;
  output ram_full_fb_i_reg_0;
  output [0:0]E;
  input ram_full_i_reg_0;
  input wr_clk;
  input out;
  input wr_en;
  input [0:0]Q;
  input [0:0]RD_PNTR_WR;

  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]RD_PNTR_WR;
  wire out;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  wire ram_full_fb_i_reg_0;
  (* DONT_TOUCH *) wire ram_full_i;
  wire ram_full_i_reg_0;
  wire wr_clk;
  wire wr_en;

  assign full = ram_full_i;
  LUT2 #(
    .INIT(4'h2)) 
    \gic0.gc0.count_d1[3]_i_1 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i_reg_0),
        .PRE(out),
        .Q(ram_full_fb_i));
  LUT4 #(
    .INIT(16'h4004)) 
    ram_full_i_i_3
       (.I0(ram_full_fb_i),
        .I1(wr_en),
        .I2(Q),
        .I3(RD_PNTR_WR),
        .O(ram_full_fb_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i_reg_0),
        .PRE(out),
        .Q(ram_full_i));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module system_rp_oscilloscope_0_wr_status_flags_as_35
   (full,
    ram_full_fb_i_reg_0,
    E,
    ram_full_i_reg_0,
    wr_clk,
    out,
    wr_en,
    Q,
    RD_PNTR_WR);
  output full;
  output ram_full_fb_i_reg_0;
  output [0:0]E;
  input ram_full_i_reg_0;
  input wr_clk;
  input out;
  input wr_en;
  input [0:0]Q;
  input [0:0]RD_PNTR_WR;

  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]RD_PNTR_WR;
  wire out;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  wire ram_full_fb_i_reg_0;
  (* DONT_TOUCH *) wire ram_full_i;
  wire ram_full_i_reg_0;
  wire wr_clk;
  wire wr_en;

  assign full = ram_full_i;
  LUT2 #(
    .INIT(4'h2)) 
    \gic0.gc0.count_d1[3]_i_1 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i_reg_0),
        .PRE(out),
        .Q(ram_full_fb_i));
  LUT4 #(
    .INIT(16'h4004)) 
    ram_full_i_i_3
       (.I0(ram_full_fb_i),
        .I1(wr_en),
        .I2(Q),
        .I3(RD_PNTR_WR),
        .O(ram_full_fb_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i_reg_0),
        .PRE(out),
        .Q(ram_full_i));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module system_rp_oscilloscope_0_wr_status_flags_as_5
   (full,
    ram_full_fb_i_reg_0,
    E,
    ram_full_i_reg_0,
    wr_clk,
    out,
    wr_en,
    Q,
    RD_PNTR_WR);
  output full;
  output ram_full_fb_i_reg_0;
  output [0:0]E;
  input ram_full_i_reg_0;
  input wr_clk;
  input out;
  input wr_en;
  input [0:0]Q;
  input [0:0]RD_PNTR_WR;

  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]RD_PNTR_WR;
  wire out;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  wire ram_full_fb_i_reg_0;
  (* DONT_TOUCH *) wire ram_full_i;
  wire ram_full_i_reg_0;
  wire wr_clk;
  wire wr_en;

  assign full = ram_full_i;
  LUT2 #(
    .INIT(4'h2)) 
    \gic0.gc0.count_d1[3]_i_1 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i_reg_0),
        .PRE(out),
        .Q(ram_full_fb_i));
  LUT4 #(
    .INIT(16'h4004)) 
    ram_full_i_i_3
       (.I0(ram_full_fb_i),
        .I1(wr_en),
        .I2(Q),
        .I3(RD_PNTR_WR),
        .O(ram_full_fb_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i_reg_0),
        .PRE(out),
        .Q(ram_full_i));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module system_rp_oscilloscope_0_wr_status_flags_as__parameterized0
   (full,
    out,
    E,
    \gmux.gm[4].gms.ms ,
    v1_reg,
    \gmux.gm[4].gms.ms_0 ,
    v1_reg_0,
    ram_full_fb_i_reg_0,
    wr_clk,
    wr_en,
    ram_full_fb_i_reg_1);
  output full;
  output out;
  output [0:0]E;
  input [3:0]\gmux.gm[4].gms.ms ;
  input [0:0]v1_reg;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input [0:0]v1_reg_0;
  input ram_full_fb_i_reg_0;
  input wr_clk;
  input wr_en;
  input ram_full_fb_i_reg_1;

  wire [0:0]E;
  wire c2_n_0;
  wire comp1;
  wire [3:0]\gmux.gm[4].gms.ms ;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  wire ram_full_fb_i_reg_0;
  wire ram_full_fb_i_reg_1;
  (* DONT_TOUCH *) wire ram_full_i;
  wire [0:0]v1_reg;
  wire [0:0]v1_reg_0;
  wire wr_clk;
  wire wr_en;

  assign full = ram_full_i;
  assign out = ram_full_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_4 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  system_rp_oscilloscope_0_compare__parameterized0 c1
       (.comp1(comp1),
        .\gmux.gm[4].gms.ms_0 (\gmux.gm[4].gms.ms ),
        .v1_reg(v1_reg));
  system_rp_oscilloscope_0_compare__parameterized0_10 c2
       (.comp1(comp1),
        .\gmux.gm[4].gms.ms_0 (\gmux.gm[4].gms.ms_0 ),
        .out(ram_full_fb_i),
        .ram_full_fb_i_reg(c2_n_0),
        .ram_full_fb_i_reg_0(ram_full_fb_i_reg_1),
        .v1_reg_0(v1_reg_0),
        .wr_en(wr_en));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b0)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(c2_n_0),
        .Q(ram_full_fb_i),
        .S(ram_full_fb_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b0)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(c2_n_0),
        .Q(ram_full_i),
        .S(ram_full_fb_i_reg_0));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module system_rp_oscilloscope_0_wr_status_flags_as__parameterized0_50
   (full,
    out,
    E,
    \gmux.gm[4].gms.ms ,
    v1_reg,
    \gmux.gm[4].gms.ms_0 ,
    v1_reg_0,
    ram_full_fb_i_reg_0,
    wr_clk,
    wr_en,
    ram_full_fb_i_reg_1);
  output full;
  output out;
  output [0:0]E;
  input [3:0]\gmux.gm[4].gms.ms ;
  input [0:0]v1_reg;
  input [3:0]\gmux.gm[4].gms.ms_0 ;
  input [0:0]v1_reg_0;
  input ram_full_fb_i_reg_0;
  input wr_clk;
  input wr_en;
  input ram_full_fb_i_reg_1;

  wire [0:0]E;
  wire c2_n_0;
  wire comp1;
  wire [3:0]\gmux.gm[4].gms.ms ;
  wire [3:0]\gmux.gm[4].gms.ms_0 ;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  wire ram_full_fb_i_reg_0;
  wire ram_full_fb_i_reg_1;
  (* DONT_TOUCH *) wire ram_full_i;
  wire [0:0]v1_reg;
  wire [0:0]v1_reg_0;
  wire wr_clk;
  wire wr_en;

  assign full = ram_full_i;
  assign out = ram_full_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_4 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  system_rp_oscilloscope_0_compare__parameterized0_52 c1
       (.comp1(comp1),
        .\gmux.gm[4].gms.ms_0 (\gmux.gm[4].gms.ms ),
        .v1_reg(v1_reg));
  system_rp_oscilloscope_0_compare__parameterized0_53 c2
       (.comp1(comp1),
        .\gmux.gm[4].gms.ms_0 (\gmux.gm[4].gms.ms_0 ),
        .out(ram_full_fb_i),
        .ram_full_fb_i_reg(c2_n_0),
        .ram_full_fb_i_reg_0(ram_full_fb_i_reg_1),
        .v1_reg_0(v1_reg_0),
        .wr_en(wr_en));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b0)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(c2_n_0),
        .Q(ram_full_fb_i),
        .S(ram_full_fb_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b0)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(c2_n_0),
        .Q(ram_full_i),
        .S(ram_full_fb_i_reg_0));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
